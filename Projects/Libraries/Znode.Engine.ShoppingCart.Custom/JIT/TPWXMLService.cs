//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9040
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 


/// <remarks/>
// CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
// CODEGEN: The optional WSDL extension element 'EndpointReference' from namespace 'http://www.w3.org/2005/08/addressing' was not handled.
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="WSHttpBinding_ITPWXMLService", Namespace="http://tempuri.org/")]
public partial class TPWXMLService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback ApproveOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateOperationCompleted;
    
    private System.Threading.SendOrPostCallback QuoteOperationCompleted;
    
    private System.Threading.SendOrPostCallback OrderStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetCatalogDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback Test1OperationCompleted;
    
    private System.Threading.SendOrPostCallback TestXmlElementOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
    
    /// <remarks/>
    public TPWXMLService() {
        this.Url = "https://qawebservices.packagingwholesalers.com/TPWXMLService.svc";
    }
    
    /// <remarks/>
    public event ApproveCompletedEventHandler ApproveCompleted;
    
    /// <remarks/>
    public event CreateCompletedEventHandler CreateCompleted;
    
    /// <remarks/>
    public event QuoteCompletedEventHandler QuoteCompleted;
    
    /// <remarks/>
    public event OrderStatusCompletedEventHandler OrderStatusCompleted;
    
    /// <remarks/>
    public event GetCatalogDataCompletedEventHandler GetCatalogDataCompleted;
    
    /// <remarks/>
    public event Test1CompletedEventHandler Test1Completed;
    
    /// <remarks/>
    public event TestXmlElementCompletedEventHandler TestXmlElementCompleted;
    
    /// <remarks/>
    public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/Approve", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Xml.XmlElement Approve([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Xml.XmlElement elemRequest) {
        object[] results = this.Invoke("Approve", new object[] {
                    elemRequest});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginApprove(System.Xml.XmlElement elemRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Approve", new object[] {
                    elemRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndApprove(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void ApproveAsync(System.Xml.XmlElement elemRequest) {
        this.ApproveAsync(elemRequest, null);
    }
    
    /// <remarks/>
    public void ApproveAsync(System.Xml.XmlElement elemRequest, object userState) {
        if ((this.ApproveOperationCompleted == null)) {
            this.ApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveOperationCompleted);
        }
        this.InvokeAsync("Approve", new object[] {
                    elemRequest}, this.ApproveOperationCompleted, userState);
    }
    
    private void OnApproveOperationCompleted(object arg) {
        if ((this.ApproveCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ApproveCompleted(this, new ApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/Create", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Xml.XmlElement Create([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Xml.XmlElement elemRequest) {
        object[] results = this.Invoke("Create", new object[] {
                    elemRequest});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreate(System.Xml.XmlElement elemRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Create", new object[] {
                    elemRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndCreate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void CreateAsync(System.Xml.XmlElement elemRequest) {
        this.CreateAsync(elemRequest, null);
    }
    
    /// <remarks/>
    public void CreateAsync(System.Xml.XmlElement elemRequest, object userState) {
        if ((this.CreateOperationCompleted == null)) {
            this.CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOperationCompleted);
        }
        this.InvokeAsync("Create", new object[] {
                    elemRequest}, this.CreateOperationCompleted, userState);
    }
    
    private void OnCreateOperationCompleted(object arg) {
        if ((this.CreateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/Quote", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Xml.XmlElement Quote([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Xml.XmlElement elemRequest) {
        object[] results = this.Invoke("Quote", new object[] {
                    elemRequest});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginQuote(System.Xml.XmlElement elemRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Quote", new object[] {
                    elemRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndQuote(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void QuoteAsync(System.Xml.XmlElement elemRequest) {
        this.QuoteAsync(elemRequest, null);
    }
    
    /// <remarks/>
    public void QuoteAsync(System.Xml.XmlElement elemRequest, object userState) {
        if ((this.QuoteOperationCompleted == null)) {
            this.QuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQuoteOperationCompleted);
        }
        this.InvokeAsync("Quote", new object[] {
                    elemRequest}, this.QuoteOperationCompleted, userState);
    }
    
    private void OnQuoteOperationCompleted(object arg) {
        if ((this.QuoteCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.QuoteCompleted(this, new QuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/OrderStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Xml.XmlElement OrderStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Xml.XmlElement elemRequest) {
        object[] results = this.Invoke("OrderStatus", new object[] {
                    elemRequest});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginOrderStatus(System.Xml.XmlElement elemRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("OrderStatus", new object[] {
                    elemRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndOrderStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void OrderStatusAsync(System.Xml.XmlElement elemRequest) {
        this.OrderStatusAsync(elemRequest, null);
    }
    
    /// <remarks/>
    public void OrderStatusAsync(System.Xml.XmlElement elemRequest, object userState) {
        if ((this.OrderStatusOperationCompleted == null)) {
            this.OrderStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderStatusOperationCompleted);
        }
        this.InvokeAsync("OrderStatus", new object[] {
                    elemRequest}, this.OrderStatusOperationCompleted, userState);
    }
    
    private void OnOrderStatusOperationCompleted(object arg) {
        if ((this.OrderStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.OrderStatusCompleted(this, new OrderStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/GetCatalogData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Xml.XmlElement GetCatalogData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Xml.XmlElement elemRequest) {
        object[] results = this.Invoke("GetCatalogData", new object[] {
                    elemRequest});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetCatalogData(System.Xml.XmlElement elemRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetCatalogData", new object[] {
                    elemRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndGetCatalogData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void GetCatalogDataAsync(System.Xml.XmlElement elemRequest) {
        this.GetCatalogDataAsync(elemRequest, null);
    }
    
    /// <remarks/>
    public void GetCatalogDataAsync(System.Xml.XmlElement elemRequest, object userState) {
        if ((this.GetCatalogDataOperationCompleted == null)) {
            this.GetCatalogDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogDataOperationCompleted);
        }
        this.InvokeAsync("GetCatalogData", new object[] {
                    elemRequest}, this.GetCatalogDataOperationCompleted, userState);
    }
    
    private void OnGetCatalogDataOperationCompleted(object arg) {
        if ((this.GetCatalogDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetCatalogDataCompleted(this, new GetCatalogDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/Test1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string Test1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string req) {
        object[] results = this.Invoke("Test1", new object[] {
                    req});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTest1(string req, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Test1", new object[] {
                    req}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndTest1(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void Test1Async(string req) {
        this.Test1Async(req, null);
    }
    
    /// <remarks/>
    public void Test1Async(string req, object userState) {
        if ((this.Test1OperationCompleted == null)) {
            this.Test1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTest1OperationCompleted);
        }
        this.InvokeAsync("Test1", new object[] {
                    req}, this.Test1OperationCompleted, userState);
    }
    
    private void OnTest1OperationCompleted(object arg) {
        if ((this.Test1Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.Test1Completed(this, new Test1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/TestXmlElement", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public System.Xml.XmlElement TestXmlElement([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Xml.XmlElement elemRequest) {
        object[] results = this.Invoke("TestXmlElement", new object[] {
                    elemRequest});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginTestXmlElement(System.Xml.XmlElement elemRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("TestXmlElement", new object[] {
                    elemRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndTestXmlElement(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void TestXmlElementAsync(System.Xml.XmlElement elemRequest) {
        this.TestXmlElementAsync(elemRequest, null);
    }
    
    /// <remarks/>
    public void TestXmlElementAsync(System.Xml.XmlElement elemRequest, object userState) {
        if ((this.TestXmlElementOperationCompleted == null)) {
            this.TestXmlElementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestXmlElementOperationCompleted);
        }
        this.InvokeAsync("TestXmlElement", new object[] {
                    elemRequest}, this.TestXmlElementOperationCompleted, userState);
    }
    
    private void OnTestXmlElementOperationCompleted(object arg) {
        if ((this.TestXmlElementCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.TestXmlElementCompleted(this, new TestXmlElementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ITPWXMLService/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
        object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                    composite});
        return ((CompositeType)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetDataUsingDataContract(CompositeType composite, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetDataUsingDataContract", new object[] {
                    composite}, callback, asyncState);
    }
    
    /// <remarks/>
    public CompositeType EndGetDataUsingDataContract(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((CompositeType)(results[0]));
    }
    
    /// <remarks/>
    public void GetDataUsingDataContractAsync(CompositeType composite) {
        this.GetDataUsingDataContractAsync(composite, null);
    }
    
    /// <remarks/>
    public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
        if ((this.GetDataUsingDataContractOperationCompleted == null)) {
            this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
        }
        this.InvokeAsync("GetDataUsingDataContract", new object[] {
                    composite}, this.GetDataUsingDataContractOperationCompleted, userState);
    }
    
    private void OnGetDataUsingDataContractOperationCompleted(object arg) {
        if ((this.GetDataUsingDataContractCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/wcfTPWXML")]
public partial class CompositeType {
    
    private bool boolValueField;
    
    private bool boolValueFieldSpecified;
    
    private string stringValueField;
    
    /// <remarks/>
    public bool BoolValue {
        get {
            return this.boolValueField;
        }
        set {
            this.boolValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool BoolValueSpecified {
        get {
            return this.boolValueFieldSpecified;
        }
        set {
            this.boolValueFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
    public string StringValue {
        get {
            return this.stringValueField;
        }
        set {
            this.stringValueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void ApproveCompletedEventHandler(object sender, ApproveCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void QuoteCompletedEventHandler(object sender, QuoteCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class QuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal QuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void OrderStatusCompletedEventHandler(object sender, OrderStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class OrderStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal OrderStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetCatalogDataCompletedEventHandler(object sender, GetCatalogDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetCatalogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetCatalogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void Test1CompletedEventHandler(object sender, Test1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class Test1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal Test1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void TestXmlElementCompletedEventHandler(object sender, TestXmlElementCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class TestXmlElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal TestXmlElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public CompositeType Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((CompositeType)(this.results[0]));
        }
    }
}
