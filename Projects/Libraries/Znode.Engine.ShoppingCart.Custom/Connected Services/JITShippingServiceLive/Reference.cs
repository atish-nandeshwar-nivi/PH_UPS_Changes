//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Znode.Engine.Shipping.Custom.JITShippingServiceLive {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/wcfTPWXML")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JITShippingServiceLive.ITPWXMLService")]
    public interface ITPWXMLService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Approve", ReplyAction="http://tempuri.org/ITPWXMLService/ApproveResponse")]
        System.Xml.Linq.XElement Approve(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Approve", ReplyAction="http://tempuri.org/ITPWXMLService/ApproveResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> ApproveAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Create", ReplyAction="http://tempuri.org/ITPWXMLService/CreateResponse")]
        System.Xml.Linq.XElement Create(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Create", ReplyAction="http://tempuri.org/ITPWXMLService/CreateResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> CreateAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Quote", ReplyAction="http://tempuri.org/ITPWXMLService/QuoteResponse")]
        System.Xml.Linq.XElement Quote(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Quote", ReplyAction="http://tempuri.org/ITPWXMLService/QuoteResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> QuoteAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/OrderStatus", ReplyAction="http://tempuri.org/ITPWXMLService/OrderStatusResponse")]
        System.Xml.Linq.XElement OrderStatus(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/OrderStatus", ReplyAction="http://tempuri.org/ITPWXMLService/OrderStatusResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> OrderStatusAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/GetCatalogData", ReplyAction="http://tempuri.org/ITPWXMLService/GetCatalogDataResponse")]
        System.Xml.Linq.XElement GetCatalogData(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/GetCatalogData", ReplyAction="http://tempuri.org/ITPWXMLService/GetCatalogDataResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetCatalogDataAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/GetQuote", ReplyAction="http://tempuri.org/ITPWXMLService/GetQuoteResponse")]
        System.Xml.Linq.XElement GetQuote(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/GetQuote", ReplyAction="http://tempuri.org/ITPWXMLService/GetQuoteResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetQuoteAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Test1", ReplyAction="http://tempuri.org/ITPWXMLService/Test1Response")]
        string Test1(string req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/Test1", ReplyAction="http://tempuri.org/ITPWXMLService/Test1Response")]
        System.Threading.Tasks.Task<string> Test1Async(string req);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/TestXmlElement", ReplyAction="http://tempuri.org/ITPWXMLService/TestXmlElementResponse")]
        System.Xml.Linq.XElement TestXmlElement(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/TestXmlElement", ReplyAction="http://tempuri.org/ITPWXMLService/TestXmlElementResponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> TestXmlElementAsync(System.Xml.Linq.XElement elemRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ITPWXMLService/GetDataUsingDataContractResponse")]
        Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType GetDataUsingDataContract(Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITPWXMLService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ITPWXMLService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType> GetDataUsingDataContractAsync(Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITPWXMLServiceChannel : Znode.Engine.Shipping.Custom.JITShippingServiceLive.ITPWXMLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TPWXMLServiceClient : System.ServiceModel.ClientBase<Znode.Engine.Shipping.Custom.JITShippingServiceLive.ITPWXMLService>, Znode.Engine.Shipping.Custom.JITShippingServiceLive.ITPWXMLService {
        
        public TPWXMLServiceClient() {
        }
        
        public TPWXMLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TPWXMLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TPWXMLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TPWXMLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.Linq.XElement Approve(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.Approve(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> ApproveAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.ApproveAsync(elemRequest);
        }
        
        public System.Xml.Linq.XElement Create(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.Create(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> CreateAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.CreateAsync(elemRequest);
        }
        
        public System.Xml.Linq.XElement Quote(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.Quote(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> QuoteAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.QuoteAsync(elemRequest);
        }
        
        public System.Xml.Linq.XElement OrderStatus(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.OrderStatus(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> OrderStatusAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.OrderStatusAsync(elemRequest);
        }
        
        public System.Xml.Linq.XElement GetCatalogData(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.GetCatalogData(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetCatalogDataAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.GetCatalogDataAsync(elemRequest);
        }
        
        public System.Xml.Linq.XElement GetQuote(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.GetQuote(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> GetQuoteAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.GetQuoteAsync(elemRequest);
        }
        
        public string Test1(string req) {
            return base.Channel.Test1(req);
        }
        
        public System.Threading.Tasks.Task<string> Test1Async(string req) {
            return base.Channel.Test1Async(req);
        }
        
        public System.Xml.Linq.XElement TestXmlElement(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.TestXmlElement(elemRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> TestXmlElementAsync(System.Xml.Linq.XElement elemRequest) {
            return base.Channel.TestXmlElementAsync(elemRequest);
        }
        
        public Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType GetDataUsingDataContract(Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType> GetDataUsingDataContractAsync(Znode.Engine.Shipping.Custom.JITShippingServiceLive.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
