IF EXISTS (SELECT TOP 1 1 FROM Sys.Tables WHERE Name = 'ZnodeMultifront')
BEGIN 
 IF EXISTS (SELECT TOP 1 1 FROM ZnodeMultifront Having Max(BuildVersion) =   90251 )
 BEGIN 
 PRINT 'Script is already executed....'
  SET NOEXEC ON 
 END 
END
ELSE 
BEGIN 
   SET NOEXEC ON
END 
INSERT INTO [dbo].[ZnodeMultifront] ( [VersionName], [Descriptions], [MajorVersion], [MinorVersion], [LowerVersion], [BuildVersion], [PatchIndex], [CreatedBy], 
[CreatedDate], [ModifiedBy], [ModifiedDate]) 
VALUES ( N'Znode_Multifront_9_0_2', N'Upgrade GA Realese by 902', 9, 0, 2, 90251, 0, 2, '20170729 11:20:23.167', 2, '20170729 11:20:23.167')
GO 
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO 
Alter table ZnodeCMSCustomerReview ADD [PortalId] INT NULL 
Alter table [dbo].[ZnodeOmsOrderAttribute] ADD  [AttributeValueCode]  NVARCHAR (600) NULL
Alter table [dbo].[ZnodeOmsOrderDetails] ADD [ShippingDifference]      NUMERIC (28, 6) NULL
alter table [dbo].[ZnodeOmsOrderLineItems] Alter column  [TrackingNumber] NVARCHAR (MAX)  NULL
alter table [dbo].[ZnodeOmsOrderLineItems] Alter column  [RecurringBillingPeriod]  NVARCHAR (50)  NULL
alter table [dbo].[ZnodeOmsOrderLineItems] Alter column  [RecurringBillingFrequency]  NVARCHAR (50)  NULL
alter table [dbo].[ZnodeOmsOrderLineItems] Alter column  [AppliedPromo]  NVARCHAR (MAX)  NULL
alter table [dbo].[ZnodeOmsOrderLineItems] Alter column  [CouponsApplied]  NVARCHAR (50)  NULL
Alter table [dbo].[ZnodeOmsOrderDetails] ADD [AutoAddonSKU] NVARCHAR (MAX)  NULL
GO
CREATE NONCLUSTERED INDEX [IND_ZnodePimAttributeValueLocale_localeId_PimAttributeValueId]
    ON [dbo].[ZnodePimAttributeValueLocale]([LocaleId] ASC)
    INCLUDE([ZnodePimAttributeValueLocaleId], [PimAttributeValueId]);
GO

CREATE UNIQUE NONCLUSTERED INDEX [NonClusteredIndex-20170609-175425]
    ON [dbo].[ZnodePimCatalogCategory]([PimCatalogId] ASC, [PimCategoryId] ASC, [PimProductId] ASC);
GO

CREATE NONCLUSTERED INDEX [Ind_ZnodePimCategoryProduct_CateProductId]
    ON [dbo].[ZnodePimCategoryProduct]([PimCategoryId] ASC, [PimProductId] ASC);
GO
alter TABLE [dbo].[ZnodePortalPixelTracking] ADD [CodePixel1]            NVARCHAR (50)  NULL
alter TABLE [dbo].[ZnodePortalPixelTracking] ADD [CodePixel2]            NVARCHAR (50)  NULL
alter TABLE [dbo].[ZnodePortalPixelTracking] ADD [CodePixel3]            NVARCHAR (50)  NULL
alter TABLE [dbo].[ZnodePortalPixelTracking] ADD [CodePixel4]            NVARCHAR (50)  NULL
alter TABLE [dbo].[ZnodePortalPixelTracking] ADD [CodePixel5]            NVARCHAR (50)  NULL

GO 
Alter TABLE [dbo].[ZnodePortalSmtpSetting] ADD [FromDisplayName]     VARCHAR (200)  NULL
Alter TABLE [dbo].[ZnodePortalSmtpSetting] ADD [FromEmailAddress]    VARCHAR (200)  NULL
Alter TABLE [dbo].[ZnodePortalSmtpSetting] ADD [BccEmailAddress]     NVARCHAR (MAX) NULL
    
GO
ALter TABLE  [ZnodeTaxPortal] ADD  [FreightTaxGroupCode] NVARCHAR (50) NULL
ALter TABLE  [ZnodeTaxPortal] ADD  [FreightTaxItemCode]  NVARCHAR (50) NULL
GO
/*
Deployment script for Znode_Multifront_90_ga

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
PRINT N'Creating [dbo].[ZnodeBlogNews]...';


GO
CREATE TABLE [dbo].[ZnodeBlogNews] (
    [BlogNewsId]          INT           IDENTITY (1, 1) NOT NULL,
    [PortalId]            INT           NULL,
    [MediaId]             INT           NULL,
    [BlogNewsType]        VARCHAR (300) NULL,
    [IsBlogNewsActive]    BIT           NULL,
    [IsAllowGuestComment] BIT           NULL,
    [CreatedBy]           INT           NOT NULL,
    [CreatedDate]         DATETIME      NOT NULL,
    [ModifiedBy]          INT           NOT NULL,
    [ModifiedDate]        DATETIME      NOT NULL,
    [ActivationDate]      DATETIME      NULL,
    [ExpirationDate]      DATETIME      NULL,
    CONSTRAINT [PK_ZnodeBlogNews] PRIMARY KEY CLUSTERED ([BlogNewsId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeBlogNewsComment]...';


GO
CREATE TABLE [dbo].[ZnodeBlogNewsComment] (
    [BlogNewsCommentId] INT      IDENTITY (1, 1) NOT NULL,
    [BlogNewsId]        INT      NULL,
    [UserId]            INT      NULL,
    [IsApproved]        BIT      NULL,
    [CreatedBy]         INT      NOT NULL,
    [CreatedDate]       DATETIME NOT NULL,
    [ModifiedBy]        INT      NOT NULL,
    [ModifiedDate]      DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeBlogComment] PRIMARY KEY CLUSTERED ([BlogNewsCommentId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeBlogNewsCommentLocale]...';


GO
CREATE TABLE [dbo].[ZnodeBlogNewsCommentLocale] (
    [BlogNewsCommentLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [BlogNewsCommentId]       INT            NULL,
    [BlogComment]             NVARCHAR (MAX) NULL,
    [LocaleId]                INT            NULL,
    [CreatedBy]               INT            NOT NULL,
    [CreatedDate]             DATETIME       NOT NULL,
    [ModifiedBy]              INT            NOT NULL,
    [ModifiedDate]            DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeBlogCommentLocale] PRIMARY KEY CLUSTERED ([BlogNewsCommentLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeBlogNewsContent]...';


GO
CREATE TABLE [dbo].[ZnodeBlogNewsContent] (
    [BlogNewsContentId] INT            IDENTITY (1, 1) NOT NULL,
    [BlogNewsId]        INT            NULL,
    [LocaleId]          INT            NULL,
    [BlogNewsContent]   NVARCHAR (MAX) NULL,
    [CreatedBy]         INT            NOT NULL,
    [CreatedDate]       DATETIME       NOT NULL,
    [ModifiedBy]        INT            NOT NULL,
    [ModifiedDate]      DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeBlogNewsContent] PRIMARY KEY CLUSTERED ([BlogNewsContentId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeBlogNewsLocale]...';


GO
CREATE TABLE [dbo].[ZnodeBlogNewsLocale] (
    [BlogNewsLocaleId]  INT             IDENTITY (1, 1) NOT NULL,
    [BlogNewsId]        INT             NULL,
    [LocaleId]          INT             NULL,
    [BlogNewsTitle]     NVARCHAR (600)  NULL,
    [CMSContentPagesId] INT             NULL,
    [BodyOverview]      NVARCHAR (MAX)  NULL,
    [Tags]              NVARCHAR (1000) NULL,
    [CreatedBy]         INT             NOT NULL,
    [CreatedDate]       DATETIME        NOT NULL,
    [ModifiedBy]        INT             NOT NULL,
    [ModifiedDate]      DATETIME        NOT NULL,
    CONSTRAINT [PK_ZnodeBlogNewsLocale] PRIMARY KEY CLUSTERED ([BlogNewsLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeImportSSISFeed]...';


GO
CREATE TABLE [dbo].[ZnodeImportSSISFeed] (
    [ImportSSISFeedId] INT            IDENTITY (1, 1) NOT NULL,
    [ProcessDate]      DATETIME       NULL,
    [ProcessName]      NVARCHAR (200) NULL,
    [TableName]        NVARCHAR (200) NULL,
    [ProcessStatus]    NVARCHAR (50)  NULL,
    [CreatedBy]        INT            NULL,
    [CreatedDate]      DATETIME       NULL,
    [ModifiedBy]       INT            NULL,
    [ModifiedDate]     DATETIME       NULL,
    CONSTRAINT [PK_ZnodeImportSSISFeed] PRIMARY KEY CLUSTERED ([ImportSSISFeedId] ASC)
);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogNews_ZnodeMedia]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNews] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogNews_ZnodeMedia] FOREIGN KEY ([MediaId]) REFERENCES [dbo].[ZnodeMedia] ([MediaId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogNews_ZnodePortal]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNews] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogNews_ZnodePortal] FOREIGN KEY ([PortalId]) REFERENCES [dbo].[ZnodePortal] ([PortalId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogComment_ZnodeBlogNews]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNewsComment] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogComment_ZnodeBlogNews] FOREIGN KEY ([BlogNewsId]) REFERENCES [dbo].[ZnodeBlogNews] ([BlogNewsId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogComment_ZnodeUser]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNewsComment] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogComment_ZnodeUser] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ZnodeUser] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogCommentLocale_ZnodeBlogComment]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNewsCommentLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogCommentLocale_ZnodeBlogComment] FOREIGN KEY ([BlogNewsCommentId]) REFERENCES [dbo].[ZnodeBlogNewsComment] ([BlogNewsCommentId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogNewsContent_ZnodeBlogNews]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNewsContent] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogNewsContent_ZnodeBlogNews] FOREIGN KEY ([BlogNewsId]) REFERENCES [dbo].[ZnodeBlogNews] ([BlogNewsId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogNewsLocale_ZnodeBlogNews]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNewsLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogNewsLocale_ZnodeBlogNews] FOREIGN KEY ([BlogNewsId]) REFERENCES [dbo].[ZnodeBlogNews] ([BlogNewsId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeBlogNewsLocale_ZnodeCMSContentPages]...';


GO
ALTER TABLE [dbo].[ZnodeBlogNewsLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeBlogNewsLocale_ZnodeCMSContentPages] FOREIGN KEY ([CMSContentPagesId]) REFERENCES [dbo].[ZnodeCMSContentPages] ([CMSContentPagesId]);


GO
PRINT N'Altering [dbo].[View_CustomerUserDetail]...';


GO




ALTER VIEW [dbo].[View_CustomerUserDetail]
AS
     SELECT a.userId,
            a.AspNetuserId,
            azu.UserName,
            a.FirstName,
            a.MiddleName,
            a.LastName,
            a.PhoneNumber,
            a.Email,
            a.EmailOptIn,
            a.CreatedBy,
            CONVERT( DATE, a.CreatedDate) CreatedDate,
            A.ModifiedBy,
            CONVERT( DATE, a.ModifiedDate) ModifiedDate,
            ur.RoleId,
            r.Name RoleName,
            CASE
                WHEN B.LockoutEndDateUtc IS NULL
                THEN CAST(1 AS    BIT)
                ELSE CAST(0 AS BIT)
            END IsActive,
            CAST(CASE WHEN ISNULL(LockoutEndDateUtc, 0) = 0 THEN  0 ELSE  1 END  AS    BIT) AS IsLock,
            (ISNULL(RTRIM(LTRIM(a.FirstName)), '')+' '+ISNULL(RTRIM(LTRIM(a.MiddleName)), '')+CASE
                                                                                                  WHEN ISNULL(RTRIM(LTRIM(a.MiddleName)), '') = ''
                                                                                                  THEN ''
                                                                                                  ELSE ' '
                                                                                              END+ISNULL(RTRIM(LTRIM(a.LastName)), '')) FullName,
            e.Name AccountName,
            h.PermissionsName,
            j.DepartmentName,
            i.DepartmentId,
            a.AccountId,
            f.AccountPermissionAccessId,
            a.ExternalId,
            CASE
                WHEN a.AccountId IS NULL
                THEN 0
                ELSE 1
            END IsAccountCustomer,
            a.BudgetAmount,
            ZAUOA.AccountUserOrderApprovalId,
            (ISNULL(RTRIM(LTRIM(ZU.FirstName)), '')+' '+ISNULL(RTRIM(LTRIM(ZU.MiddleName)), '')+CASE
                                                                                                    WHEN ISNULL(RTRIM(LTRIM(ZU.MiddleName)), '') = ''
                                                                                                    THEN ''
                                                                                                    ELSE ' '
                                                                                                END+ISNULL(RTRIM(LTRIM(ZU.LastName)), '')) ApprovalName,
            ZAUOA.ApprovalUserId,
            h.PermissionCode,
            CASE
                WHEN a.AccountId IS NULL
                THEN up.PortalId
                ELSE ZPA.PortalId
            END PortalId
			,r.TypeOfRole,CASE WHEN a.AspNetuserId IS NULL THEN 1 ELSE 0 END IsGuestUser
			,a.CustomerPaymentGUID
			,CASE WHEN zp.StoreName IS NULL THEN 'ALL' ELSE zp.StoreName END StoreName
     FROM ZnodeUser a
          left JOIN ASPNetUsers B ON(a.AspNetuserId = b.Id)
          LEFT JOIN ZnodeAccount e ON(e.AccountId = a.AccountId)
          LEFT JOIN AspNetUserRoles ur ON(ur.UserId = a.AspNetUserId)
          LEFT JOIN AspNetRoles r ON(r.Id = ur.RoleId)
          LEFT JOIN ZnodeDepartmentUser i ON(i.UserId = a.UserId)
          LEFT JOIN ZnodeDepartment j ON(j.DepartmentId = i.DepartmentId)
          LEFT JOIN ZnodeAccountUserPermission f ON(f.UserId = a.UserId)
          LEFT JOIN ZnodeAccountPermissionAccess g ON(g.AccountPermissionAccessId = f.AccountPermissionAccessId)
          LEFT JOIN ZnodeAccessPermission h ON(h.AccessPermissionId = g.AccessPermissionId)
          LEFT JOIN ZnodeAccountUserOrderApproval ZAUOA ON a.UserId = ZAUOA.UserID
          LEFT JOIN ZnodeUser ZU ON(ZU.UserId = ZAUOA.ApprovalUserId)
          LEFT JOIN ZnodeUserPortal up ON(up.UserId = a.UserId)
                                          
          LEFT JOIN ZnodePortalAccount ZPA ON(ZPA.AccountId = a.AccountId)
                                            
          LEFT JOIN AspNetZnodeUser azu ON(azu.AspNetZnodeUserId = b.UserName)
	      LEFT JOIN ZnodePortal zp ON (up.PortalId = zp.PortalId)
	  WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeUSer ZUQ WHERE ZUQ.UserId = a.UserId AND ZUQ.EmailOptIn = 1 AND ZUQ.AspNetUserId IS NULL )
	
		  ;
GO
PRINT N'Altering [dbo].[Znode_AdminUsers]...';


GO
ALTER PROCEDURE [dbo].[Znode_AdminUsers]
(	@RoleName		VARCHAR(200),
    @UserName		VARCHAR(200),
    @WhereClause	VARCHAR(MAX)  = '',
    @Rows			INT           = 100,
    @PageNo			INT           = 1,
    @Order_By		VARCHAR(1000) = '',
    @RowCount		INT        = 0 OUT,
	@IsCallOnSite   BIT = 0 ,
	@PortalId		VARCHAR(1000) = 0 )
AS
   /* 
      Summary: List of users with detsils and shows link with ASPNet tables 
      This procedure is used for finding both users and admin users 
      here use three view "View_RoleUsers" for check  @UserName is present or not 
      "View_AdminUserDetail"  this view use for admin users 
      "View_CustomerUserDetail" Use for customer users 
      Unit Testing   
	  SELECT * FROM ZnodeUser 
      DECLARE @EDE INT=0  EXEC Znode_AdminUsers '','admin@znode.com',@WhereClause='',@Order_By='',@PageNo= 1 ,@Rows= 214,@IsCallOnSite='false',@PortalId=0,@RowCount=@EDE OUT  SELECT @EDE
   */
     BEGIN
         BEGIN TRY
            SET NOCOUNT ON;


            DECLARE @SQL NVARCHAR(MAX)= '', @PaginationWhereClause VARCHAR(300)= dbo.Fn_GetRowsForPagination(@PageNo, @Rows, ' WHERE RowId');
             
			IF @PortalId  <> '0' 
			BEGIN 
			    SET @WhereClause = CASE WHEN  @WhereClause = '' THEN ' (PortalId IN ('+@PortalId+') OR PortalId IS NULL) ' ELSE @WhereClause+' AND (PortalId IN ('+@PortalId+') OR PortalId IS NULL) ' END 
			END 

			IF EXISTS
            (
            SELECT TOP 1 1
            FROM View_RoleUsers
            WHERE Username = @UserName
            )
			-- this check for admin user
            AND @RoleName <> ''  

			BEGIN
				SET @SQL = ' 
				;with Cte_AdminUserDetail AS 
				(
					 
				SELECT DISTINCT A.UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,A.CreatedBy,A.CreatedDate,A.ModifiedBy,A.ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId ,CustomerPaymentGUID
				FROM View_AdminUserDetail A
				'+CASE WHEN @PortalId  <> '0' THEN ' INNER JOIN ZnodeUserPortal ZUP ON (ZUP.UserId = A.UserId) 'ELSE '' END  +'	 
				'+dbo.Fn_GetWhereClause(@WhereClause, ' WHERE ')+'
				), Cte_AdminUserDetailRowId AS 
				(
				SELECT UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId,CustomerPaymentGUID ,RANK()Over('+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC')+',UserId DESC) RowId
				FROM Cte_AdminUserDetail
				)
					 
				SELECT UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId,CustomerPaymentGUID ,RowId 
				INTO #AccountDetails
				FROM Cte_AdminUserDetailRowId 
					 
				SET @Count= ISNULL((SELECT  Count(1) FROM #AccountDetails ),0)
					 
				SELECT UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId ,CustomerPaymentGUID
				FROM #AccountDetails '+@PaginationWhereClause+' '+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC' );
			    PRINT @SQL
				EXEC SP_executesql
				@SQL,
				N'@Count INT OUT',
				@Count = @RowCount OUT;
			END;
			-- For Customer user
            ELSE   
      BEGIN
				IF @roleName = ''
				BEGIN
						  						                             
				SET @SQL = '
				;With Cte_CustomerUserDetail  AS 
				(
				SELECT DISTINCT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode,CustomerPaymentGUID ,StoreName,PortalId
				FROM View_CustomerUserDetail a
				WHERE 
				(EXISTS   -- this will check for customer 
				(
				SELECT TOP 1 1
				FROM AspNetUserRoles AS b
				WHERE a.AspNetUserId = b.userid
				AND EXISTS
				(
				SELECT TOP 1 1
				FROM AspNetRoles AS d
				WHERE(d.Name IN(''Customer'')
				OR d.TypeOfRole = ''B2B''
				)
				AND d.Id = b.RoleId
				)  
				) OR AspNetuserId IS NULL OR '+CAST(CAST(@IsCallOnSite AS INT ) AS VARCHAR(50))+'= ''1'' ) 
				'+dbo.Fn_GetWhereClause(@WhereClause, ' AND ')+'
				),
				Cte_CustomerUserDetailRowId  AS 
				(
				SELECT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode,CustomerPaymentGUID ,RANK()Over('+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC')+',UserId DESC) RowId ,StoreName,PortalId
				FROM Cte_CustomerUserDetail -- genrate the unique rowid 
				)
					 			 
				SELECT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode,CustomerPaymentGUID ,RowId,StoreName,PortalId
				INTO #AccountDetail FROM Cte_CustomerUserDetailRowId  

				SET @Count= ISNULL((SELECT  Count(1) FROM #AccountDetail    ),0)

				
												  
				SELECT DISTINCT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode ,CustomerPaymentGUID,StoreName,PortalId
				FROM #AccountDetail '+@PaginationWhereClause+' '+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC');
                PRINT @SQL    					
				EXEC SP_executesql
				@SQL,
				N'@Count INT OUT',
				@Count = @RowCount OUT;
				END;
            ELSE
				BEGIN
					SELECT * FROM View_CustomerUserDetail AS VICUD WHERE 1 = 0;
					SET @RowCount = 0;
				END;
            END;			
         END TRY
         BEGIN CATCH
            DECLARE @ERROR_PROCEDURE VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_AdminUsers @RoleName = '+@RoleName+' ,@UserName='+@UserName+',@WhereClause='+@WhereClause+' ,@Rows= '+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_By='+@Order_By+',@RowCount='+CAST(@RowCount AS VARCHAR(50));
            EXEC Znode_InsertProcedureErrorLog
            @ProcedureName    = 'Znode_AdminUsers',
            @ErrorInProcedure = @ERROR_PROCEDURE,
            @ErrorMessage     = @ErrorMessage,
            @ErrorLine        = @ErrorLine,
            @ErrorCall        = @ErrorCall;
         END CATCH;


     END;
GO
PRINT N'Altering [dbo].[Znode_DeletePortalByPortalId]...';


GO

ALTER PROCEDURE [dbo].[Znode_DeletePortalByPortalId]
(
	 @PortalId	varchar(2000)
	,@Status	bit OUT)
AS
	/*
	 Summary : This Procedure Is Used to delete the all records of portal if order is not place against portal  
	 --Unit Testing   
	 BEGIN TRANSACTION 
	 DECLARE @Status    BIT = 0
	 EXEC Znode_DeletePortalByPortalId @PortalId = 36, @Status   = @Status   OUT
	 SELECT @Status   
	 ROLLBACK TRANSACTION
	*/
BEGIN
	BEGIN TRAN DeletePortalByPortalId;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @TBL_PortalIds TABLE
		( 
								 PortalId int
		);
		DECLARE @TBL_Promotion TABLE
		( 
								 PromotionId int
		);
		DECLARE @TBL_DeletedUsers TABLE (AspNetUserId NVARCHAR(1000))

		DECLARE @DeletedIds varchar(max)= '';
		-- inserting PortalIds which are not present in Order and Quote

		INSERT INTO @TBL_PortalIds 
		SELECT Item FROM dbo.Split( @PortalId, ',' ) AS SP 
		WHERE NOT EXISTS ( SELECT TOP 1 1 FROM ZnodeOmsOrderDetails AS ZOD WHERE ZOD.PortalId = Sp.Item) 
		AND  NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsQuote AS ZOQ WHERE ZOQ.PortalId = Sp.Item );


	     DELETE FROM  ZnodeCustomPortalDetail  WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCustomPortalDetail.PortalId);
	     DELETE FROM  ZnodeSupplier WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeSupplier.PortalId)

	     DELETE FROM  ZnodeOmsTemplateLineItem  WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodeOmsTemplate ZOT ON 
	     TBP.PortalId = ZOT.PortalId AND ZOT.OmsTemplateId = ZnodeOmsTemplateLineItem.OmsTemplateId);

	     DELETE FROM ZnodeOmsTemplate WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeOmsTemplate.PortalId);
	     DELETE FROM  ZnodeOmsUsersReferralUrl WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeOmsUsersReferralUrl.PortalId)

		DELETE FROM ZnodePortalShipping WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalShipping.PortalId);
		DELETE FROM ZnodePortalTaxClass WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalTaxClass.PortalId);
		DELETE FROM ZnodePortalPaymentSetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalPaymentSetting.PortalId);
		DELETE FROM ZnodeCMSPortalMessageKeyTag WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalMessageKeyTag.PortalId);
		DELETE FROM ZnodePortalProfile WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalProfile.PortalId);
		DELETE FROM ZnodePortalFeatureMapper WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalFeatureMapper.PortalId);
		DELETE FROM ZnodePortalShippingDetails WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalShippingDetails.PortalId);
		DELETE FROM ZnodePortalUnit WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalUnit.PortalId);
		DELETE FROM ZnodeDomain WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeDomain.PortalId);
		DELETE FROM ZnodePortalSmtpSetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalSmtpSetting.PortalId);
		DELETE FROM ZnodeActivityLog WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeActivityLog.PortalId);
		DELETE FROM ZnodePortalCatalog WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalCatalog.PortalId );
		DELETE FROM ZnodeCMSPortalMessage  WHERE EXISTS  ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalMessage.PortalId );
		DELETE FROM ZnodeTaxRule WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeTaxRule.PortalId);
		DELETE FROM ZnodeGoogleTagManager WHERE  EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeGoogleTagManager.PortalId);
		DELETE FROM ZnodeTaxRuleTypes WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeTaxRuleTypes.PortalId);
		DELETE FROM ZnodeCMSContentPagesProfile WHERE EXISTS (SELECT TOP 1 1 FROM  ZnodeCMSContentPages ZCCP  
																	WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZCCP.PortalId) AND ZCCP.CMSContentPagesId = ZnodeCMSContentPagesProfile.CMSContentPagesId )
		DELETE FROM ZnodeCMSContentPageGroupMapping WHERE EXISTS (SELECT TOP 1 1 FROM  ZnodeCMSContentPages ZCCP  
																	WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZCCP.PortalId) AND ZCCP.CMSContentPagesId = ZnodeCMSContentPageGroupMapping.CMSContentPagesId )
	     DELETE FROM ZnodeCMSContentPagesLocale WHERE EXISTS (SELECT TOP 1 1 FROM  ZnodeCMSContentPages ZCCP  
																	WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZCCP.PortalId) AND ZCCP.CMSContentPagesId = ZnodeCMSContentPagesLocale.CMSContentPagesId )
		DELETE FROM ZnodeCMSContentPages WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSContentPages.PortalId);
		DELETE FROM ZnodeCaseRequest WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCaseRequest.PortalId);
		DELETE FROM ZnodePortalLocale WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalLocale.PortalId);
		DELETE FROM ZnodeShippingPortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeShippingPortal.PortalId);
		DELETE FROM ZnodePortalDisplaySetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalDisplaySetting.PortalId);
		DELETE FROM ZnodeUserPortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeUserPortal.PortalId);
		DELETE FROM AspNetZnodeUser OUTPUT DELETED.AspNetZnodeUserId   INTO @TBL_DeletedUsers WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = AspNetZnodeUser.PortalId )
		
		DELETE FROM ZnodePortalAlternateWarehouse WHERE EXISTS ( SELECT TOP 1 1 FROM ZnodePortalWareHouse AS ZPWH WHERE EXISTS (
				SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZPWH.PortalId ) AND  ZPWH.PortalWarehouseId = ZnodePortalAlternateWarehouse.PortalWarehouseId);
		DELETE FROM ZnodePortalWareHouse WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalWareHouse.PortalId);
		DELETE ZnodePriceListPortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePriceListPortal.PortalId );
		
		DELETE FROM ZnodeEmailTemplateMapper WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeEmailTemplateMapper.PortalId);
		DELETE FROM ZnodeGiftCard WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeGiftCard.PortalId );
		DELETE FROM ZnodeCMSPortalProductPage WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalProductPage.PortalId);

		DELETE FROM ZnodeCMSPortalSEOSetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalSEOSetting.PortalId);

		DELETE FROM ZnodeCMSPortalTheme WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalTheme.PortalId);

		DELETE FROM ZnodeCMSSEODetailLocale WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodeCMSSEODetail AS zcsd ON TBP.PortalId = zcsd.PortalId WHERE zcsd.CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId);

		DELETE FROM ZnodeCMSSEODetail WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSSEODetail.PortalId);
		DELETE FROM ZnodePortalAccount WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalAccount.PortalId);

		DELETE FROM ZnodePortalAddress WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalAddress.PortalId);

		DELETE FROM ZnodeOmsCookieMapping WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeOmsCookieMapping.PortalId);

		DELETE FROM ZnodePortalCountry WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalCountry.PortalId);

		DELETE FROM ZnodeCMSUrlRedirect WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSUrlRedirect.PortalId);
		   
		/* Remove Search index */
		DELETE FROM ZnodeSearchIndexServerStatus WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodePortalIndex AS zpi ON TBP.PortalId = zpi.PortalId
				 INNER JOIN ZnodeSearchIndexMonitor AS zsim ON zpi.PortalIndexId = zsim.PortalIndexId WHERE zsim.SearchIndexMonitorId = ZnodeSearchIndexServerStatus.SearchIndexMonitorId);

		DELETE FROM ZnodeSearchIndexMonitor WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodePortalIndex AS zpi ON TBP.PortalId = zpi.PortalId WHERE zpi.PortalIndexId = ZnodeSearchIndexMonitor.PortalIndexId );


		DELETE FROM ZnodePortalIndex WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalIndex.PortalId);
		/* Remove Search index */
		DELETE FROM ZnodePromotion WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePromotion.PortalId);
		DELETE FROM ZnodeTaxPortaL  WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeTaxPortaL.PortalId);

		INSERT INTO @TBL_Promotion( PromotionId ) SELECT PromotionId FROM ZnodePromotion WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePromotion.PortalId);
		DELETE FROM ZnodePromotionProduct WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotionProduct.PromotionId);

		DELETE FROM ZnodePromotionCategory WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotionCategory.PromotionId);
		DELETE FROM ZnodePromotionCatalogs WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotionCatalogs.PromotionId);
		DELETE FROM ZnodePromotion WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotion.PromotionId);

		
		DELETE FROM ZnodeBlogNewsLocale where exists (select top 1 1 from ZnodeBlogNews ZBN
													where EXISTS (SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZBN.PortalId) AND ZBN.BlogNewsId = ZnodeBlogNewsLocale.BlogNewsId )



		DELETE FROM ZnodeBlogNewsCommentLocale where exists (select top 1 1 from ZnodeBlogNewsComment ZBC
													where exists (select top 1 1 from ZnodeBlogNews ZBN
														where exists (select top 1 1 from @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZBN.PortalId) AND ZBN.BlogNewsId = ZBC.BlogNewsId ) and ZBC.BlogNewsCommentId = ZnodeBlogNewsCommentLocale.BlogNewsCommentId)
													



		DELETE FROM ZnodeBlogNewsComment WHERE EXISTS (SELECT TOP 1 1 FROM ZnodeBlogNews ZBN
													WHERE EXISTS (select top 1 1 from @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZBN.PortalId) AND ZBN.BlogNewsId = ZnodeBlogNewsComment.BlogNewsId )



		DELETE FROM ZnodeBlogNews WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeBlogNews.PortalId)

		DELETE FROM ZnodePortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortal.PortalId);

		IF (SELECT Count(1) FROM @TBL_PortalIds) = (SELECT Count(1) FROM dbo.Split( @PortalId, ',' ) )
		BEGIN 
		SELECT 1 AS ID, CAST(1 AS bit) AS Status;
		SET @Status = 1;
		END 
		ELSE 
		BEGIN 
		SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		SET @Status = 0;

		END 
		COMMIT TRAN DeletePortalByPortalId;
	END TRY
	BEGIN CATCH
		 
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_DeletePortalByPortalId @PortalId = '+@PortalId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		     ROLLBACK TRAN DeletePortalByPortalId;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_DeletePortalByPortalId',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
	END CATCH;
END;


--GO

----Select * from ZnodeCMSPortalMessageKeyTag
 --Declare @Status Bit
	--Exec Znode_DeletePortalByPortalId @PortalId = 1 ,@Status =@Status 

--		select * from dbo.ZnodeCMSPortalMessageKeyTag

--		Msg 547, Level 16, State 0, Procedure Znode_DeletePortalByPortalId, Line 254
--The DELETE statement conflicted with the REFERENCE constraint "FK_ZnodeCMSPortalMessageKeyTag_ZnodePortal". The conflict occurred in database "Znode_Multifront_90_QA_03_05_2017", table "dbo.ZnodeCMSPortalMessageKeyTag", column 'PortalId'.

--Select * from Sysobjects where id in (select id from syscolumns where name  = 'OmsUsersReferralUrlId')
--Select * from ZnodePortal
--Select * from ZnodePortalTaxClass
GO
PRINT N'Altering [dbo].[Znode_DeletePublishCatalogProduct]...';


GO
ALTER PROCEDURE [dbo].[Znode_DeletePublishCatalogProduct]
(   
   	@PublishProductIds	Transferid READONLY 
	,@PublishCatalogId   INT = 0 
	
)
AS
   /*
    Summary:Delete the publish product from all related references 
    Unit Testing   
	begin tran
	SELECT * FROM ZnodePublishCatalog 
    EXEC Znode_DeletePublishCatalog @PublishCatalogIds =5 ,@IsDeleteCatalogId = 1 , @PublishCategoryIds = ''
	rollback tran
   */ 
     BEGIN
         BEGIN TRANSACTION A;
         BEGIN TRY
             SET NOCOUNT ON;
	
	         DECLARE @TBL_DeleteIds TABLE (PublishCatalogId INT ,PublishCategoryId INT ,PublishProductId INT )  
			 DECLARE @TBL_DeleteCategoryProduct TABLE (PublishCategoryProductId INT )			 
			 
			 INSERT INTO @TBL_DeleteIds (PublishCatalogId,PublishProductId,PublishCategoryId  )
			 SELECT ZPP.PublishCatalogId,ZPP.PublishProductId ,ZPCP.PublishCategoryId
			 FROM ZnodePublishProduct  ZPP 
			 INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = ZPP.PublishCatalogId) 
			 LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND ZPCP.PublishProductId = ZPP.PublishProductId )
			 LEFT JOIN ZnodePublishCategory  ZPPC ON (ZPPC.PublishCatalogId = ZPC.PublishCatalogId AND ZPPC.PublishCategoryId = ZPCP.PublishCategoryId)
			 WHERE EXISTS (SELECT TOP 1 1 FROM @PublishProductIds ZPCC WHERE ZPCC.Id = ZPP.PublishProductId )
			 
			 INSERT INTO @TBL_DeleteCategoryProduct 
			 SELECT PublishCategoryProductId 
			 FROM ZnodePublishCategoryProduct a 
			 INNER JOIN ZnodePublishProduct ZPP ON (ZPP.PublishProductId = a.PublishProductId AND ZPP.PublishCatalogId = a.PublishCatalogId)
			 INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = a.PublishCatalogId )
			 INNER JOIN ZnodePublishCategory ZPCC ON (ZPCC.PublishCategoryId = a.PublishCategoryId)
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ZPDF WHERE ZPDF.PimCatalogId = ZPC.PimCatalogId AND ZPDF.PimCategoryId = ZPCC.PimCategoryId AND ZPDF.PimProductId = ZPP.PimProductId  )
			 AND a.PublishCatalogId = @PublishCatalogId
					
						
		     UPDATE 	TBL 
			 SET PublishCategoryId = NULL 
			 FROM @TBL_DeleteIds TBL 
			 WHERE  EXISTS  (SELECT TOP 1 1 FROM ZnodePublishCategoryProduct ZPCC 
			 WHERE  TBL.PublishCatalogId = ZPCC.PublishCatalogId AND ZPCC.PublishCategoryId = TBL.PublishCategoryId   AND TBL.PublishProductId <> ZPCC.PublishProductId ) 			 

			 DELETE FROM [ZnodeCMSWidgetCategory]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodeCMSWidgetCategory].[PublishCategoryId]
             )
			
			 ;
         
             DELETE FROM [ZnodeCMSWidgetProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSWidgetProduct].[PublishProductId]
             );
             DELETE FROM [ZnodeCMSCustomerReview]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSCustomerReview].[PublishProductId]
             );
             DELETE FROM ZnodeUserWishList
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM ZnodePublishProductDetail ZPPD
                     WHERE ZPPD.SKU = ZnodeUserWishList.SKU
                           AND qw.[PublishProductId] = ZPPD.[PublishProductId]
                 )
             );
            

             DELETE FROM [ZnodePromotionProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePromotionProduct].[PublishProductId]
             );
             DELETE FROM [ZnodePromotionCategory]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePromotionCategory].[PublishCategoryId]
             );
             DELETE FROM [ZnodePublishCategoryDetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePublishCategoryDetail].[PublishCategoryId]
             );	
            
             DELETE FROM ZnodeCMSSEODetailLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM [ZnodeCMSSEODetail]
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_DeleteIds AS qw
                     WHERE qw.[PublishProductId] = [ZnodeCMSSEODetail].[SEOId]
                 )
                       AND EXISTS
                 (
                     SELECT TOP 1 1
                     FROM [ZnodeCMSSEOType] AS we
                     WHERE we.[CMSSEOTypeId] = [ZnodeCMSSEODetail].[CMSSEODetailId]
                           AND [Name] = 'Product'
                 )
                       AND [ZnodeCMSSEODetail].CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId
             );
             DELETE FROM [ZnodeCMSSEODetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSSEODetail].[SEOId]
             )
                   AND EXISTS
             (
                 SELECT TOP 1 1
                 FROM [ZnodeCMSSEOType] AS we
                 WHERE we.[CMSSEOTypeId] = [ZnodeCMSSEODetail].[CMSSEODetailId]
                       AND [Name] = 'Product'
             );
            
             DELETE FROM [ZnodePublishCategoryProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePublishCategoryProduct].[PublishProductId]
             )
			 OR 
			 EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteCategoryProduct AS qw
                 WHERE qw.PublishCategoryProductId = [ZnodePublishCategoryProduct].PublishCategoryProductId
             )
			 ;
             DELETE FROM [ZnodePublishCategoryProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePublishCategoryProduct].[PublishCategoryId]
             );
			  DELETE FROM dbo.ZnodeSearchGlobalProductBoost WHERE 
			 EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = ZnodeSearchGlobalProductBoost.[PublishProductId]
              );
             DELETE FROM [ZnodePublishProductDetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePublishProductDetail].[PublishProductId]
             );
             DELETE FROM [ZNodePublishProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZNodePublishProduct].[PublishProductId]
             
			 );
			 		

			 DELETE FROM ZnodePublishCategoryDetail 
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodePublishCategoryDetail.[PublishCategoryId]
              );
			
			 DELETE FROM ZnodePublishCategory
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodePublishCategory.[PublishCategoryId]
             
			 );

			 			 				
             COMMIT TRANSACTION A;
			 
         END TRY
         BEGIN CATCH
		      SELECT ERROR_MESSAGE() 
			 
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_InsertPublishProductIds]...';


GO
ALTER PROCEDURE [dbo].[Znode_InsertPublishProductIds]
(
	@PublishCatalogId  INT            = NULL,
     @UserId            INT				 ,
	 @PimProductId      VARCHAR(2000) = 0   ,
	 @IsDebug           BIT           = 0   

	)
AS
    
/*
  Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

     Unit Testing
    
     SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
     SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
     SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
	 SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
     select * from znodepublishcatalog
	 SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
     SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
	 SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
     EXEC Znode_GetPublishProducts  @PublishCatalogId = 9 ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 117,@IsDebug= 1 
     EXEC Znode_InsertPublishProductIds  @PublishCatalogId = 0,@UserId= 2  ,@PimProductId = 134 ,@NotReturnXML= NULL,@IsDebug= 1 
     EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
	 SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
	 SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
    */ 

     BEGIN
      --  BEGIN TRAN InsertPublishProductIds;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate(); 
			 DECLARE @PimCatalogId int= ISNULL((SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId), 0);  --- this variable is used to carry y pim catalog id by using published catalog id
             DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
			,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
			,@ProductTypeAttributeId INT = dbo.Fn_GetProductTypeAttributeId()
			DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1

			 -- This variable used to carry the locale in loop 
			 -- This variable is used to carry the default locale which is globaly set
             DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 
			 DECLARE @DeletePublishProductId VARCHAR(MAX)= '', @PimProductIds VARCHAR(MAX)= '', @PimAttributeId VARCHAR(MAX)= '';
             
			 -- This table will used to hold the all currently active locale ids  
			 


		     -- This table hold the complete xml of product with other information like category and catalog
            
			 DECLARE @TBL_PimProductIds TABLE(PimProductId INT  ,PimCategoryId INT,PimCatalogId INT,PublishCatalogId INT,IsParentProducts BIT
									,DisplayOrder INT,ProductName NVARCHAR(MAX),SKU  NVARCHAR(MAX),IsActive NVARCHAR(MAX),PimAttributeFamilyId INT
									,ProfileId   VARCHAR(MAX),CategoryDisplayOrder INT ,ProductIndex INT,PRIMARY KEY (PimCatalogId,PimCategoryId,PimProductId) );  
		
			  -- This table is used to hold the product which publish in current process 
             DECLARE @TBL_PublishProductIds TABLE(PublishProductId  INT  ,PimProductId INT,PublishCatalogId  INT
													,PublishCategoryId VARCHAR(MAX),CategoryProfileIds VARCHAR(max),VersionId INT , PRIMARY KEY (PimProductId,PublishProductId,PublishCatalogId)); 
	 
			-- this check is used when this procedure is call by internal procedure to publish only product and no need to return publish xml;    
			   
			--Collected list of products for  publish 
   
			 INSERT INTO @TBL_PimProductIds ( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId,CategoryDisplayOrder,PublishCatalogId )
				SELECT ZPCC.PimProductId, ZPCC.PimCategoryId, 1 AS IsParentProducts, NULL AS DisplayOrder, ZPCC.PimCatalogId,ZPCC.DisplayOrder ,ZPC.PublishCatalogId
				FROM ZnodePimCatalogCategory AS ZPCC
				INNER JOIN ZnodePublishCatalog ZPC ON ZPC.PimCatalogId = ZPCC.PimCatalogId
		    	WHERE  (ZPCC.PimCatalogId = @PimCatalogId OR 
				EXISTS( SELECT TOP 1 1 FROM dbo.split(@PimProductId,',') SP WHERE SP.Item = ZPCC.PimProductId) ) AND ZPCC.PimProductId IS NOT NULL

				
             --Collected list of link products for  publish
			 INSERT INTO @TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId , PublishCatalogId)
				 SELECT ZPLPD.PimProductId, ZPCC.PimCategoryId, 0 AS IsParentProducts, NULL AS DisplayOrder, CTPP.PimCatalogId,CTPP.PublishCatalogId 
				 FROM ZnodePimLinkProductDetail AS ZPLPD
				 INNER JOIN @TBL_PimProductIds AS CTPP ON ZPLPD.PimParentProductId = CTPP.PimProductId AND  IsParentProducts = 1 
				 INNER JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPLPD.PimProductId AND ZPCC.PimCatalogId = CTPP.PimCatalogId
				 WHERE NOT EXISTS ( SELECT TOP 1 1 FROM @TBL_PimProductIds AS CTPPI WHERE CTPPI.PimProductId = ZPLPD.PimProductId) 
				-- AND EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPLPD.PimProductId ) 
				 AND ZPCC.PimProductId IS NOT NULL
				 GROUP BY ZPLPD.PimProductId, ZPCC.PimCategoryId,CTPP.PimCatalogId,CTPP.PublishCatalogId 
             --Collected list of Addon products for  publish
        
		     INSERT INTO @TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId,PublishCatalogId)
					 SELECT ZPAPD.PimChildProductId, ISNULL(ZPCC.PimCategoryId,0) AS PublishCategoryId, 0 AS IsParentProducts, null AS DisplayOrder,CTALP.PimCatalogId,CTALP.PublishCatalogId
					 FROM ZnodePimAddOnProductDetail AS ZPAPD 
					 INNER JOIN ZnodePimAddOnProduct AS ZPAP ON ZPAP.PimAddOnProductId = ZPAPD.PimAddOnProductId
					 INNER JOIN @TBL_PimProductIds AS CTALP ON CTALP.PimProductId = ZPAP.PimProductId AND  IsParentProducts = 1
					 LEFT JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPAPD.PimChildProductId AND ZPCC.PimCatalogId = CTALP.PimCatalogId
					 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PimProductIds AS CTALPI WHERE CTALPI.PimProductId = ZPAPD.PimChildProductId) 
				---	 AND EXISTS(SELECT TOP 1 1FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPAPD.PimChildProductId)  
					 GROUP BY ZPAPD.PimChildProductId, ZPCC.PimCategoryId , CTALP.PimCatalogId,CTALP.PublishCatalogId

					 		 	

             --Collected list of Bundle / Group / Config products for  publish
             INSERT INTO @TBL_PimProductIds(PimProductId,PimCategoryId,IsParentProducts,DisplayOrder,PimCatalogId,PublishCatalogId)
                    SELECT ZPTA.PimProductId,ISNULL(ZPCC.PimCategoryId,0),0 AS IsParentProducts,NULL DisplayOrder,CTAAP.PimCatalogId,CTAAP.PublishCatalogId
                    FROM ZnodePimProductTypeAssociation AS ZPTA INNER JOIN @TBL_PimProductIds AS CTAAP ON CTAAP.PimProductId = ZPTA.PimParentProductId AND IsParentProducts = 1
                    LEFT JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPTA.PimProductId AND ZPCC.PimCatalogId = CTAAP.PimCatalogId
                    WHERE NOT EXISTS( SELECT TOP 1 1 FROM @TBL_PimProductIds AS CTAAPI WHERE CTAAPI.PimProductId = ZPTA.PimProductId)
					--AND EXISTS(SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPTA.PimProductId)
					GROUP BY ZPTA.PimProductId,ZPCC.PimCategoryId,CTAAP.PimCatalogId,CTAAP.PublishCatalogId
        				  

			   UPDATE TBPP
               SET PublishCatalogId = ZPC.PublishCatalogId 
			   FROM @TBL_PimProductIds TBPP 
			   INNER JOIN ZnodePublishCatalog ZPC ON ZpC.PimCatalogId = TBPP.PimCatalogId;
        
		DECLARE @PublishProductId TRANSFERId 


		IF @PublishCatalogId IS NOT NULL AND @PublishCatalogId <> 0 
			  BEGIN 
			  -- SELECT * FROM @TBL_PimProductIds AS TBP
			
			  INSERT INTO @PublishProductId
			    SELECT ZPP.PublishProductId 
				FROM ZnodePublishProduct AS ZPP 
				INNER JOIN ZnodePublishCategoryProduct ZPPC ON (ZPPC.PublishProductId = ZPP.PublishProductId AND ZPPC.PublishCatalogId = ZPP.PublishCatalogId)
				--INNER JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCategoryId = ZPPC.PublishCategoryId)
				WHERE NOT EXISTS(SELECT TOP 1 1 FROM @TBL_PimProductIds AS TBP WHERE ZPP.PimProductId = TBP.PimProductId AND TBP.PublishCatalogId = ZPP.PublishCatalogId)
				AND ZPP.PublishCatalogId = @PublishCatalogId
					--Remove extra products from catalog
				
		END
		ELSE 
		BEGIN 
		DECLARE @TBL_ProductIdscollect TABLE(PublishProductId INT , PimproductId INT , PublishcatalogId  INT  , ProductType NVARCHAr(max))

	
		INSERT INTO @TBL_ProductIdscollect (PublishProductId,PimproductId,PublishcatalogId,ProductType)
		SELECT PublishProductId,ZPAV.PimproductId,TBPOCI.PublishcatalogId,ZPATF.AttributeDefaultValueCode
		FROM ZnodePimAttributeValue ZPAV 
		INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId )
		INNER JOIN @TBL_PimProductIds TBLIDF ON (TBLIDF.PimProductId = ZPAV.PimProductId )
		INNER JOIN ZnodePublishProduct TBPOCI ON (TBPOCI.PimProductId = TBLIDF.PimProductId AND TBPOCI.PublishCatalogId = TBLIDF.PublishCatalogId 	)
		INNER JOIN ZnodePimAttributeDefaultValue ZPATF ON (ZPATF.PimAttributeId =  @ProductTypeAttributeId 
						AND ZPADV.PimAttributeDefaultValueId = ZPATF.PimAttributeDefaultValueId )
         WHERE  IsParentProducts = 1	
		 AND LocaleId =@DefaultLocaleId
    

        IF EXISTS (SELECT TOP 1 1 FROM @TBL_ProductIdscollect WHERE ProductType IN ('GroupedProduct','BundleProduct','ConfigurableProduct','SimpleProduct') )
		     
		BEGIN 
	
		   DECLARE @TBL_DeleteTrackProduct TABLE (PublishProductId INT,AssociatedZnodeProductId INT  ,PublishCatalogId INT,PublishCatalogLogId INT ,IsDelete BIT  )

		   ;With Cte_PublishProduct AS
		   (
		     SELECT TBL.PublishProductId,PimproductId,TBL.PublishcatalogId,ProductType ,MAx(PublishCatalogLogId) PublishCatalogLogId
			 FROM  @TBL_ProductIdscollect TBL 
			 INNER JOIN ZnodePublishCatalogLog TBLG ON (TBLG.PublishCatalogId = TBL.PublishcatalogId)
			 WHERE IsCatalogPublished = 1 
		     GROUP BY TBL.PublishProductId,PimproductId,TBL.PublishcatalogId,ProductType
		   
		   )
		   , Cte_ConfigData AS 
			 (
			 SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ConfigurableProductEntity') t(p)
			 WHERE  IsConfigProductXML = 1
			 AND LocaleId = @DefaultLocaleId 
			 AND ProductType = 'ConfigurableProduct'
			 UNION ALL 
			  SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/GroupProductEntity') t(p)
			 WHERE  IsGroupProductXML = 1
			  AND LocaleId = @DefaultLocaleId 
			 AND ProductType = 'GroupedProduct'
			 UNION ALL 
			  SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/BundleProductEntity') t(p)
			 WHERE  IsBundleProductXML = 1
			  AND LocaleId = @DefaultLocaleId 
			 AND ProductType = 'BundleProduct'
			 UNION ALL 
			 SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/AddonEntity') t(p)
			 WHERE  IsAddOnXML = 1
			 AND LocaleId = @DefaultLocaleId 
			
			 )

		--	 SELECT * FROM ZnodePublishCatalogLog WHERE PublishCatalogId = 8 

		INSERT INTO @TBL_DeleteTrackProduct (PublishProductId,AssociatedZnodeProductId,PublishcatalogId,PublishCatalogLogId)
		SELECT ZPP.PublishProductId,AssociatedZnodeProductId,PublishcatalogId,PublishCatalogLogId
		FROM Cte_ConfigData ZPP	
		WHERE NOT EXISTS (SELECT TOP 1 1 FROM  @TBL_PublishProductIds TBLP WHERE TBLP.PublishProductId = ZPP.AssociatedZnodeProductId)
		
	

		;With Cte_updateStatus AS
		(
		 
		     SELECT PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ConfigurableProductEntity') t(p)
			 WHERE  IsConfigProductXML = 1
			  AND LocaleId = @DefaultLocaleId 
			 AND CTR.AssociatedZnodeProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
			 AND CTR.PublishProductId <> ZPXML.PublishedId
			-- AND ProductType = 'ConfigurableProduct'
			 UNION ALL 
			  SELECT PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/GroupProductEntity') t(p)
			 WHERE  IsGroupProductXML = 1
			  AND LocaleId = @DefaultLocaleId 
			 AND CTR.AssociatedZnodeProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
			 AND CTR.PublishProductId <> ZPXML.PublishedId
			 UNION ALL 
			  SELECT  PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/BundleProductEntity') t(p)
			 WHERE  IsBundleProductXML = 1
			  AND LocaleId = @DefaultLocaleId 
			 AND CTR.AssociatedZnodeProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
			 AND CTR.PublishProductId <> ZPXML.PublishedId
			 UNION ALL 
			 SELECT PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/AddonEntity') t(p)
			 WHERE  IsAddOnXML = 1 
			  AND LocaleId = @DefaultLocaleId 
		     AND CTR.PublishProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
		     AND CTR.PublishProductId <> ZPXML.PublishedId
		
		)

		UPDATE a 
		SET IsDelete = CASE WHEN TYR.PublishProductId IS NULL THEN 1 ELSE 0 END 
		FROM @TBL_DeleteTrackProduct a 
		LEFT JOIN Cte_updateStatus TYR ON (TYR.PublishProductId = a.PublishProductId AND TYR.PublishCatalogId = a.PublishCatalogId)

		
		INSERT INTO @PublishProductId 
		SELECT DISTINCT AssociatedZnodeProductId 
		FROM @TBL_DeleteTrackProduct
		WHERE IsDelete =1  
		

		END 

	
		INSERT INTO @PublishProductId
		SELECT PublishProductid
		FROM ZnodePublishProduct ZPP
		INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId =  ZPP.PublishCatalogId )
        WHERE Not EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ZPPP WHERE (ZPPP.PimCatalogid = ZPc.PimCatalogId AND ZPPP.PimProductId = ZPP.PimProductId))  
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_PimProductIds TYR WHERE TYR.PimProductId = ZPP.PimProductId )
		AND NOT EXISTS (SELECT TOP 1 1 FROM @PublishProductId THJ WHERE THJ.Id = ZPP.PublishProductid)	
		END  

		EXEC dbo.Znode_DeletePublishCatalogProduct  @PublishProductIds = @PublishProductId,@PublishCatalogId = @PublishCatalogId ;

			 -- This merge statement is used for crude oprtaion with publisgh product table
			MERGE INTO ZnodePublishProduct TARGET USING  (
				SELECT PimProductId, PublishCatalogId
				FROM @TBL_PimProductIds AS TBP
				GROUP BY PimProductId, PublishCatalogId
			 )  SOURCE
				ON --check for if already exists then just update otherwise insert the product  
				TARGET.PimProductId = SOURCE.PimProductId AND  TARGET.PublishCatalogId = SOURCE.PublishCataLogId 
				WHEN MATCHED      THEN UPDATE SET TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate	
				WHEN NOT MATCHED  THEN INSERT(PimProductId, PublishCatalogId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
									   VALUES( SOURCE.PimProductId, SOURCE.PublishCatalogId, @UserId, @GetDate, @UserId, @GetDate )
				OUTPUT INSERTED.PublishProductId, INSERTED.PimProductId, INSERTED.PublishCatalogId
				INTO @TBL_PublishProductIds(PublishProductId, PimProductId, PublishCatalogId); 
			
			-- Here used the ouput clause to catch what data inserted or updated into variable table
	    	
		 --   SELECT a.PublishCatalogId,a.PublishCategoryId,b.PimProductId
			--FROM @TBL_PublishProductIds a 
			--INNER JOIN @TBL_PimProductIds b ON (a.PimProductId = b.PimCategoryId)
			----INNER JOIN ZnodePublishProduct ZPP  ON (ZPP.PimProductId = b.PimProductId AND ZPP.PublishCatalogId =  a.PublishCatalogId)
			--WHERE PimCategoryId = 2 
				
			
			-- This merge staetment is used for crude opration with  ZnodePublishCategoryProduct table
			 MERGE INTO ZnodePublishCategoryProduct TARGET USING  (
				 SELECT PublishProductId,
				 ISNULL(ZPC.PublishCategoryId,0)PublishCategoryId,
				 TBP.PublishCatalogId
				 FROM @TBL_PimProductIds AS TBP 
				 LEFT JOIN ZnodePublishCategory AS ZPC ON (ISNULL(TBP.PimCategoryId, 0) = ISNULL(ZPC.PimCategoryId, -1) AND ZPC.PublishCatalogId = TBP.PublishCatalogId)
				 INNER JOIN @TBL_PublishProductIds AS TBPP ON TBP.PimProductId = TBPP.PimProductId
				 AND TBP.PublishCatalogId = TBPP.PublishCatalogId
				 GROUP BY PublishProductId, ZPC.PublishCategoryId, TBP.PublishCatalogId
			  ) SOURCE
					ON  TARGET.PublishCatalogId = SOURCE.PublishCatalogId AND ISNULL(TARGET.PublishCategoryId, 0) = ISNULL(SOURCE.PublishCategoryId, 0) AND TARGET.PublishProductId = SOURCE.PublishProductId
					
					WHEN MATCHED THEN UPDATE SET TARGET.PublishCategoryId = CASE WHEN SOURCE.PublishCategoryId = 0 THEN NULL ELSE SOURCE.PublishCategoryId END 
												 ,TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate					
					WHEN NOT MATCHED THEN INSERT(PublishProductId,PublishCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
										  VALUES(SOURCE.PublishProductId,CASE WHEN SOURCE.PublishCategoryId =0 THEN NULL ELSE SOURCE.PublishCategoryId  END , SOURCE.PublishCatalogId,@UserId,@GetDate,@userId,@GetDate);
   
    
   WHILE @Counter <= @maxCountId
   BEGIN 
    SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
   
     
	 SELECT VIR.PimProductId,PimAttributeId,AttributeValue,ZnodePimAttributeValueLocaleId,VIR.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishProductIds ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	 AND (PimAttributeId = @ProductNamePimAttributeId  OR PimAttributeId = @SKUPimAttributeId OR PimAttributeId = @IsActivePimAttributeId  )
  
   

		
	          MERGE INTO ZnodePublishProductDetail   TARGET
			  USING  (SELECT   ZPP.PublishProductId ,TBLA.AttributeValue PRoductName,TBLAI.AttributeValue SKU ,ISNULL(TBLAII.AttributeValue,'0') IsActive --,TBLAIII.AttributeValue ProductType
						FROM  @TBL_PublishProductIds zpp
						INNER JOIN #TBL_AttributeVAlue TBLA ON (TBLA.PimAttributeId = @ProductNamePimAttributeId AND TBLA.PimProductId = ZPP.PimProductId AND TBLA.LocaleId  = CASE WHEN TBLA.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLA ON (TBLA.PimProductId = ZPP.PimProductId AND TBLA.PimAttributeId = @ProductNamePimAttributeId)
					    INNER JOIN #TBL_AttributeVAlue TBLAI ON (TBLAI.PimAttributeId = @SKUPimAttributeId AND TBLAI.PimProductId = ZPP.PimProductId AND TBLAI.LocaleId  = CASE WHEN TBLAI.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLAI ON (TBLAI.PimProductId = ZPP.PimProductId AND TBLAI.PimAttributeId = @SKUPimAttributeId)
					    INNER JOIN #TBL_AttributeVAlue TBLAII ON (TBLAII.PimAttributeId = @IsActivePimAttributeId AND TBLAII.PimProductId = ZPP.PimProductId AND TBLAII.LocaleId  = CASE WHEN TBLAII.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
						--INNER JOIN #TBL_AttributeVAlue TBLAIII ON (TBLAIII.PimAttributeId = @ProductTypePimAttributeId AND TBLAIII.PimProductId = ZPP.PimProductId AND TBLAIII.LocaleId  = CASE WHEN TBLAIII.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLAIII ON (TBLAII.PimProductId = ZPP.PimProductId AND TBLAII.PimAttributeId = @ProductTypeAttributeId)
						GROUP BY ZPP.PublishProductId,TBLA.AttributeValue,TBLAI.AttributeValue,TBLAII.AttributeValue --,TBLAIII.AttributeValue
						)   SOURCE
			ON (TARGET.PublishProductId = SOURCE.PublishProductId
				 AND TARGET.LocaleId = @LocaleId 
			) 
			WHEN MATCHED THEN 
			UPDATE 
			SET TARGET.ProductName   = SOURCE.ProductName
				,TARGET.SKU			 = SOURCE.SKU
				,TARGET.IsActive	= SOURCE.IsActive
				,TARGET.ModifiedBy	 = @userid
				,TARGET.ModifiedDate  = @GetDate
			WHEN NOT MATCHED THEN 
			INSERT (PublishProductId
					,ProductName
					,SKU
					,IsActive
					,LocaleId
					,CreatedBy
					,CreatedDate
					,ModifiedBy
					,ModifiedDate)
			VALUES ( SOURCE.PublishProductId
					,SOURCE.ProductName
					,SOURCE.SKU
					,SOURCE.IsActive
					,@LocaleId
					,@userId
					,@GetDate
					,@userId
					,@GetDate);

		 
         DROP TABLE #TBL_AttributeVAlue 
		
		 SET @Counter = @counter + 1 
			  END 

			  IF @PublishCatalogId IS NULL OR @PublishCatalogId =0 
			  BEGIN 
			  SELECT PublishProductId, PimProductId, PublishCatalogId 
			  FROM @TBL_PublishProductIds
			  END 

		--COMMIT TRAN InsertPublishProductIds;
		END TRY 
		BEGIN CATCH 
		 SELECT ERROR_MESSAGE()
	--	 ROLLBACK TRAN InsertPublishProductIds;
		END CATCH 
	END
GO
PRINT N'Altering [dbo].[Znode_GetPublishAssociatedAddons]...';


GO
ALTER  PROCEDURE [dbo].[Znode_GetPublishAssociatedAddons](@PublishCatalogId NVARCHAR(MAX) = '',
                                                         @PimProductId     NVARCHAR(MAX) = '',
                                                         @VersionId        INT           = 0,
                                                         @UserId           INT)
AS 
   
/*
    Summary : If PimcatalogId is provided get all products with Addons and provide above mentioned data
              If PimProductId is provided get all Addons if associated with given product id and provide above mentioned data
    			Input: @PublishCatalogId or @PimProductId
    		    output should be in XML format
              sample xml5
              <AddonEntity>
              <ZnodeProductId></ZnodeProductId>
              <ZnodeCatalogId></ZnodeCatalogId>
              <AddonGroupName></AddonGroupName>
              <TempAsscociadedZnodeProductIds></TempAsscociadedZnodeProductIds>
              </AddonEntity>
    <AddonEntity>
      <ZnodeProductId>6</ZnodeProductId>
      <ZnodeCatalogId>2</ZnodeCatalogId>
      <AddonGroupName>RadioButton</AddonGroupName>
      <TempAsscociadedZnodeProductIds>53,54,55,56,57,82</TempAsscociadedZnodeProductIds>
      <ZnodeProductId>14</ZnodeProductId>
      <ZnodeCatalogId>2</ZnodeCatalogId>
      <AddonGroupName>RadioButton</AddonGroupName>
      <TempAsscociadedZnodeProductIds>6,7</TempAsscociadedZnodeProductIds>
      <ZnodeProductId>16</ZnodeProductId>
      <ZnodeCatalogId>2</ZnodeCatalogId>
      <AddonGroupName>RadioButton</AddonGroupName>
      <TempAsscociadedZnodeProductIds>7,14,54,6</TempAsscociadedZnodeProductIds>
    </AddonEntity>
    Unit Testing 
     SELECT * FROM ZnodePublishcatalog
	begin tran
     EXEC [dbo].[Znode_GetPublishAssociatedAddons] @PublishCatalogId = '8' ,@PimProductId=  '' ,@UserId=2
	rollback tran
     EXEC [dbo].[Znode_GetPublishAssociatedAddons] @PublishCatalogId = 3 ,@PimProductId=  '' ,@UserId=2
     EXEC [dbo].[Znode_GetPublishAssociatedAddons] @PublishCatalogId =null ,@PimProductId=  6   
   
	*/

     BEGIN
        -- BEGIN TRANSACTION GetPublishAssociatedAddons;
         BEGIN TRY
          SET NOCOUNT ON 
			 DECLARE @GetDate DATETIME= dbo.Fn_GetDate();
             DECLARE @LocaleId INT, @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId()
			 , @Counter INT= 1
			 , @MaxRowId INT= 0;

            -- DECLARE @PimAddOnGroupId VARCHAR(MAX);

			 DECLARE @TBL_PublisshIds TABLE (PublishProductId INT , PimProductId INT , PublishCatalogId INT)

             DECLARE @TBL_LocaleId TABLE
             (RowId    INT IDENTITY(1, 1),
              LocaleId INT
             );


			 IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			 BEGIN 
			 		 
			   INSERT INTO @TBL_PublisshIds 
			   EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId
			   
			  -- SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			  -- SELECT 	@PimProductId	
			 END 
			
			
           
              DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT , VersionId INT  );

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @VersionId = 0 OR @VersionId IS NULL THEN  MAX(PublishCatalogLogId) ELSE @VersionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNEr JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_PublisshIds SP WHERE SP.PublishProductId = ZPP.PublishProductId  AND  @PublishCatalogId = '' ) 
			 OR (ZPP.PublishCatalogId =  @PublishCatalogId ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId

             DECLARE @TBL_AddonGroupLocale TABLE
             (PimAddonGroupId INT,
              DisplayType     NVARCHAR(400),
              AddonGroupName  NVARCHAR(MAX),
			  LocaleId INT 
             );
           
             INSERT INTO @TBL_LocaleId(LocaleId)
                    SELECT LocaleId
                    FROM ZnodeLocale
                    WHERE IsActive = 1;

          
             SET @MaxRowId = ISNULL(
                                   (
                                       SELECT MAX(RowId)
                                       FROM @TBL_LocaleId
                                   ), 0);
    
             WHILE @Counter <= @MaxRowId
                 BEGIN
                     SET @LocaleId =
                     (
                         SELECT LocaleId
                         FROM @TBL_LocaleId
                         WHERE RowId = @Counter
                     );
                     INSERT INTO @TBL_AddonGroupLocale
                     (PimAddonGroupId,
                      DisplayType,
                      AddonGroupName					  
                     )
                     EXEC Znode_GetAddOnGroupLocale
                          '',
                          @LocaleId;

					UPDATE @TBL_AddonGroupLocale SET LocaleId = @LocaleId WHERE LocaleId IS NULL 

                    SET @Counter = @Counter + 1;
                 END;
				     
					  IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			           BEGIN 
			 		 
			         DELETE FROM ZnodePublishedXML WHERE IsAddOnXML =1  
					 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLV WHERE ZnodePublishedXML.PublishedId = TBLV.PublishProductId   AND ZnodePublishedXML.PublishCatalogLogId = TBLV.VersionId )
			    
			  
					 END 
					 ELSE 
					 BEGIN 

					 SET @versionid  =(SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId TBLV )

					 DELETE FROM ZnodePublishedXML WHERE IsAddOnXML =1 
					 AND PublishCatalogLogId  = @versionid 
					 END 
			
					
					 MERGE INTO ZnodePublishedXML TARGET 
					 USING (
					 SELECT   ZPPP.PublishProductId,ZPPP.PublishCatalogId,ZPPD.LocaleId,ZPPP.VersionId,'<AddonEntity><VersionId>'+CAST(ZPPP.VersionId AS VARCHAR(50))+'</VersionId><ZnodeProductId>'+CAST(ZPPP.[PublishProductId] AS VARCHAR(50))+'</ZnodeProductId><ZnodeCatalogId>'
				     +CAST(ZPPP.[PublishCatalogId] AS VARCHAR(50))+'</ZnodeCatalogId><AssociatedZnodeProductId>'+CAST(ZPP.PublishProductId  AS VARCHAR(50))
					 +'</AssociatedZnodeProductId><DisplayOrder>'+CAST( ISNULL(ZPOPD.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder><AssociatedProductDisplayOrder>'
					 +CAST(ISNULL(ZPAOP.DisplayOrder,'') AS VARCHAR(50))+'</AssociatedProductDisplayOrder><RequiredType>'+ISNULL(RequiredType,'')+'</RequiredType><DisplayType>'
					 + ISNULL(DisplayType,'')+'</DisplayType><GroupName>'+ISNULL(AddonGroupName,'')+'</GroupName><LocaleId>'+CAST(ZPPD.LocaleId AS VARCHAR(50))+'</LocaleId><IsDefault>'+CAST(ISNULL(IsDefault,0) AS VARCHAR(50))+'</IsDefault></AddonEntity>'  ReturnXML		   
				 
                      FROM [ZnodePimAddOnProductDetail] AS ZPOPD
                           INNER JOIN [ZnodePimAddOnProduct] AS ZPAOP ON ZPOPD.[PimAddOnProductId] = ZPAOP.[PimAddOnProductId]
						    INNER JOIN @TBL_PublishCatalogId ZPPP ON (ZPPP.PimProductId = ZPAOP.PimProductId )
                           INNER JOIN @TBL_PublishCatalogId ZPP ON(ZPP.PimProductId = ZPOPD.[PimChildProductId] AND ZPP.PublishCatalogId = ZPPP.PublishCatalogId )
						   INNER JOIN ZnodePublishProductDetail ZPPD ON (ZPPD.PublishProductId = ZPPP.PublishProductId)
						   INNER JOIN @TBL_AddonGroupLocale TBAG ON (TBAG.PimAddonGroupId   = ZPAOP.PimAddonGroupId AND TBAG.LocaleId = ZPPD.LocaleId )
						   
					) SOURCE 
					ON (
						 TARGET.PublishCatalogLogId = SOURCE.VersionId 
						 AND TARGET.PublishedId = SOURCE.PublishProductId
						 AND TARGET.IsAddonXML = 1 
						 AND TARGET.LocaleId = SOURCE.LocaleId 
					)
					WHEN MATCHED THEN 
					UPDATE 
					SET  PublishedXML = ReturnXML
					   , ModifiedBy = @userId 
					   ,ModifiedDate = @GetDate
					WHEN NOT MATCHED THEN 
					INSERT (PublishCatalogLogId
					,PublishedId
					,PublishedXML
					,IsAddonXML
					,LocaleId
					,CreatedBy
					,CreatedDate
					,ModifiedBy
					,ModifiedDate)
					
					VALUES (Source.VersionId , Source.publishProductid,Source.ReturnXML,1,SOURCE.localeid,@userId,@getDate,@userId,@getDate);
					
					
					SELECT PublishedXML ReturnXML
					FROM @TBL_PublishCatalogId TBLPP 
					INNER JOIN ZnodePublishedXML ZPX ON (ZPX.PublishCatalogLogId = TBLPP.VersionId AND ZPX.PublishedId = TBLPP.publishProductid )
					WHERE ZPX.IsAddonXML = 1
             --SELECT ReturnXML
             --FROM @TBL_AddonXML;
		
           --  COMMIT TRANSACTION GetPublishAssociatedAddons;
         END TRY
         BEGIN CATCH
		     SELECT ERROR_MESSAGE(),ERROR_PROCEDURE()
             DECLARE @Status BIT;
             SET @Status = 0;
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishAssociatedAddons @PublishCatalogId = '+@PublishCatalogId+',@PimProductId='+@PimProductId+',@VersionId='+CAST(@VersionId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
             SELECT 0 AS ID,
                    CAST(0 AS BIT) AS Status;
           --  ROLLBACK TRANSACTION GetPublishAssociatedAddons;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishAssociatedAddons',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetAccountListWithAddress]...';


GO


ALTER PROCEDURE [dbo].[Znode_GetAccountListWithAddress]
(   @WhereClause VARCHAR(1000),
	@Rows        INT           = 100,
	@PageNo      INT           = 1,
	@Order_BY    VARCHAR(100)  = '',
	@RowsCount   INT OUT,
	@LocaleId    INT           = 0)
AS
    
/*
     Summary : This procedure is used to find the Account and related address list 
			   1. ZNodePortalAddress          
			   2. ZnodeAddress	
    Unit Testing
	begin tran	 
    Declare @Status int 
    Exec [Znode_GetAccountListWithAddress] @WhereClause = ' name = ''suchita acc'' ' ,@Rows = 10 ,@PageNo = 1 , @Order_BY = ' AccountId DESC ',@RowsCount = 1   
    rollback tran
    Select @Status
    select * from ZNodePortalAddress where PortalAddressId = 8 
    select * from ZNodeAddress where AddressId in (select AddressId from ZNodePortalAddress where PortalAddressId = 8 )
    addressid : 57
*/
  


     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX), @Rows_start VARCHAR(1000), @Rows_end VARCHAR(1000);
             SET @Rows_start = CASE WHEN @Rows >= 1000000 THEN 0 ELSE(@Rows * (@PageNo - 1)) + 1 END;
             SET @Rows_end = CASE WHEN @Rows >= 1000000THEN @Rows ELSE @Rows * (@PageNo) END;
             SET @SQL = ' 
			 DECLARE @TBL_AccountsDetails TABLE (AccountId INT ,ExternalId NVARCHAR(200),Name NVARCHAR(200),ParentAccountId INT,ParentAccountName  NVARCHAR(200),PortalId INT ,StoreName nvarchar(MAX),ShippingPostalCode nvarchar(MAX),BillingPostalCode nvarchar(MAX),RowId INT )
			 DECLARE @TBL_AddressDetails TABLE (AccountId INT ,Address NVARCHAR(max),IsDefaultBilling BIT ,IsDefaultShipping BIT,RowId INT  )
			 DECLARE @TBL_AddressDetailsFinal TABLE (AccountId INT ,Address NVARCHAR(max))
			   
			 ;with AccountListAis AS 
			 (
			 SELECT  a.AccountId, a.ExternalId, a.Name,a.ParentAccountId, b.Name AS ParentAccountName ,ZPA.PortalId,ZP.StoreName,
			 (select top 1 PostalCode from ZnodeAddress where AddressId in  (select AddressId from ZnodeAccountAddress where AccountId = a.AccountId AND IsDefaultShipping = 1)) AS ShippingPostalCode,
			 (select top 1 PostalCode from ZnodeAddress where AddressId in  (select AddressId from ZnodeAccountAddress where AccountId = a.AccountId AND IsDefaultBilling = 1)) AS BillingPostalCode
			 FROM dbo.ZnodeAccount AS a 
			 LEFT OUTER JOIN dbo.ZnodeAccount AS b ON a.ParentAccountId = b.AccountId
			 LEFT JOIN ZnodePortalAccount ZPA  ON (ZPA.AccountId = a.AccountId)
			 LEFT JOIN ZnodePortal ZP ON (ZP.PortalId = ZPA.PortalId)
			 )

			  
			  
			 INSERT INTO @TBL_AccountsDetails
			 SELECT *,RANK()OVER(ORDER BY '+CASE
                                                    WHEN @Order_BY = ''
                                                    THEN ' AccountId ,'
                                                    ELSE @Order_BY+' , '
                                                END+' AccountId ) RowId 
			 FROM AccountListAis
			   '+CASE
                        WHEN @WhereClause IS NOT NULL
                             AND @WhereClause <> ''
                        THEN ' WHERE '+@WhereClause
                        ELSE ''
                    END+'
			   '+CASE
                        WHEN @Order_BY = ''
                        THEN ''
                        ELSE ' ORDER BY '+@Order_BY
                    END+'
			    
			  
			   
			 SELECT @COUNT= COUNT(1) FROM @TBL_AccountsDetails


			 INSERT INTO @TBL_AddressDetails (AccountId,Address,IsDefaultBilling,IsDefaultShipping,RowId)
			 SELECT c.AccountId , CASE WHEN D.FirstName IS NULL THEN '''' ELSE D.FirstName END + CASE WHEN D.LastName IS NULL  THEN '''' ELSE '' ''+D.LastName END  
			                    + CASE WHEN D.Address1 IS NULL  THEN  ''''  ELSE '', '' + D.Address1 END 	
								+ CASE WHEN D.Address2 IS NULL THEN ''''  ELSE '', '' + D.Address2 END 
								+ CASE WHEN D.Address3 IS NULL THEN '''' ELSE  '', '' + D.Address3 END 
								+ CASE WHEN D.CityName IS NULL THEN  ''''  ELSE  '', '' + D.CityName  END 
								+ CASE WHEN D.StateName IS NULL THEN ''''  ELSE  '', '' + D.StateName  END 
								+ CASE WHEN D.PostalCode IS NULL THEN  '''' ELSE '', '' + D.PostalCode  END 
								+ CASE WHEN D.CountryName IS NULL THEN '''' ELSE  '', '' + D.CountryName END  									
								+ CASE WHEN D.PhoneNumber IS NULL THEN ''''  ELSE '', PH NO. ''+  D.PhoneNumber END  AS AccountAddress ,ISNULL(d.IsDefaultBilling,0) IsDefaultBilling ,ISNULL(d.IsDefaultShipping,0)IsDefaultShipping
						,ROW_NUMBER()OVER(PARTITION BY c.AccountId ORDER BY  c.AddressId) RowId
			 FROM dbo.ZnodeAccountAddress AS c 
			 LEFT JOIN dbo.ZnodeAddress AS D ON D.AddressId = c.AddressId
			 WHERE EXISTS ( SELECT TOP 1 1 FROM  @TBL_AccountsDetails a  WHERE a.AccountId = c.AccountId AND a.RowId BETWEEN '+@Rows_start+' AND '+@Rows_end+')  
			    
			 ;With AccountAddressShipping AS 
			 (
			 SELECT * FROM @TBL_AddressDetails mn WHERE IsDefaultShipping = 1 
			 )
			 ,  AccountAddressBilling AS 
			 (
			 SELECT * 
			 FROM AccountAddressShipping 
			 UNION ALL 
			 SELECT * 
			 FROM @TBL_AddressDetails mn 
			 WHERE IsDefaultBilling = 1 
			 AND NOT EXISTS (SELECT TOP 1 1 FROM AccountAddressShipping sw WHERE sw.AccountId = mn.AccountId )
			 )


			 INSERT INTO @TBL_AddressDetailsFinal 

			 SELECT AccountId ,Address 
			 FROM AccountAddressBilling 

			    
			 INSERT INTO @TBL_AddressDetailsFinal 
			 SELECT AccountId , Address 
			 FROM @TBL_AddressDetails  q
			 WHERE NOT EXISTS (SELECT  TOP 1 1 FROM @TBL_AddressDetailsFinal  fg WHERE fg.AccountId = q.AccountId )
			 AND RowId = 1 



			 SELECT a.AccountId, a.ExternalId, a.Name,a.ParentAccountId, a.ParentAccountName ,b.[Address] AccountAddress,a.PortalId,a.StoreName,ShippingPostalCode,BillingPostalCode
			 FROM @TBL_AccountsDetails a 
			 INNER JOIN @TBL_AddressDetailsFinal  b ON (a.AccountId = b.AccountId )
			 WHERE a.RowId BETWEEN '+@Rows_start+' AND '+@Rows_end+'  
			   '+CASE
                        WHEN @Order_BY = ''
                        THEN ''
                        ELSE ' ORDER BY '+@Order_BY
                 END;
           
		   PRINT(@SQL);
             EXEC SP_executesql
                  @SQL,
                  N'@Count INT OUT',
                  @Count = @RowsCount OUT;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetAccountListWithAddress @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetAccountListWithAddress',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetCategoryIdForPaging]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetCategoryIdForPaging]
( @WhereClauseXML XML           = '',
  @Rows           INT           = 10,
  @PageNo         INT           = 1,
  @Order_BY       VARCHAR(1000) = '',
  @RowsCount      INT,
  @LocaleId       INT           = 1,
  @AttributeCode  VARCHAR(MAX)  = '',
  @PimCategoryId  VARCHAR(2000) = 0,
  @IsAssociated   BIT           = 0,
  @IsDebug    int  = 0)
AS 
/*
     Summary:- This Procedure is used to get CategoryDetails With paging from XML
     Unit Testing 
	 begin tran
	 -- SELECT * FROM ZnodePimCategoryAttributeValueLocale WHERE CategoryValue LIKE '%test%'
     EXEC Znode_GetCategoryIdForPaging '' ,10,1,'',0,1,'','29,26,28',1
	rollback tran
	*/

     BEGIN
         BEGIN TRY
             DECLARE @WhereClause TABLE
             (Id          INT IDENTITY(1, 1),
              WhereClause NVARCHAR(MAX)
             );
             DECLARE @SQL NVARCHAR(MAX)= '', @OrderClause NVARCHAR(MAX), @JoinWhereClause NVARCHAR(MAX)= '', @DefaultLocaleId VARCHAR(20)= dbo.Fn_GetDefaultLocaleId(), @LocaleIds VARCHAR(20)= @LocaleId;
             DECLARE @ValueId INT= 1, @MaxValueId INT= 0;
             DECLARE @TBL_PimCategoryId TABLE (PimCategoryId INT ,RowId INT , CountNo INT )
				
			 IF @PimCategoryId <> '0' AND @PimCategoryId <> ''
                
                 BEGIN
                     SET @SQL = ' 
					     DECLARE @TBL_PimCategoryId TABLE (PimCategoryId INT )
						INSERT INTO @TBL_PimCategoryId
						SELECT Item FROM dbo.Split('''+@PimCategoryId+''','','') SP ';
                     IF @IsAssociated = 0
                         BEGIN
                             SET @JoinWhereClause = ' AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PimCategoryId TBPC WHERE TBPC.PimCategoryid = ZPCAV.PimCategoryId )';
                         END;
                     ELSE
                         BEGIN
                             SET @JoinWhereClause = ' AND EXISTS (SELECT TOP 1 1 FROM @TBL_PimCategoryId TBPC WHERE TBPC.PimCategoryid = ZPCAV.PimCategoryId )';
                         END;
                 END;
             IF @Order_BY LIKE '%CategoryId%'
                 BEGIN
                     SET @OrderClause = REPLACE(@Order_BY, 'PimCategoryId', 'CTCDL.PimCategoryId');
                 END;
             ELSE
             IF @Order_BY = '%Family%'
                 BEGIN
                     SET @OrderClause = REPLACE(@Order_BY, 'PimCategoryId', 'CTCDL.PimCategoryId');
                 END;
             ELSE
             IF @Order_BY = ''
                 BEGIN
                     SET @OrderClause = 'CTCDL.PimCategoryId DESC';
                 END;;
             SET @SQL = @SQL+'  
			 ;WITH Cte_AttributeFamilyLocale
                  AS (SELECT ZPAF.PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,ZPFL.AttributeFamilyName,ZPFL.LocaleId
                      FROM ZnodePimAttributeFamily ZPAF
                      INNER JOIN ZnodePimFamilyLocale ZPFL ON(ZPFL.PimAttributeFamilyId = ZPAF.PimAttributeFamilyId)
                      WHERE LocaleId IN('+CAST(@LocaleId AS VARCHAR(50))+', '+CAST(@DefaultLocaleId AS VARCHAR(50))+')
                       ),

                  Cte_AttributeFirstLocale
                  AS (SELECT PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName
                      FROM Cte_AttributeFamilyLocale
                      WHERE LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+'),

                  Cte_AttributeBothLocale
                  AS (
                  SELECT PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName
                  FROM Cte_AttributeFirstLocale
                  UNION ALL
                  SELECT PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName
                  FROM Cte_AttributeFamilyLocale CTAFL
                  WHERE LocaleId = '+CAST(@DefaultLocaleId AS VARCHAR(50))+'
                        AND NOT EXISTS
                  (
                      SELECT TOP 1 1
                      FROM Cte_AttributeFirstLocale CTAFL
                      WHERE CTAFL.PimAttributeFamilyId = CTAFL.PimAttributeFamilyId
                  ))
                
			 		 
			,Cte_CategoryAttributeValue AS  
		(
		  SELECT PimCategoryId,ZPA.AttributeCode ,ZPCAVL.CategoryValue AttributeValue , ZPCAVL.LocaleId
		  FROM ZnodePimCategoryAttributeValueLocale ZPCAVL  
		  LEFT JOIN ZnodePimCategoryAttributeValue ZPCAV ON (ZPCAV.PimCategoryAttributeValueId = ZPCAVL.PimCategoryAttributeValueId)
		  LEFT JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPCAV.PimAttributeId )  
		  WHERE LocaleId  IN ('+@LocaleIds+' , '+@DefaultLocaleId+')
		  AND EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetCategoryGridAttributeDetails]() FNGCGDA WHERE FNGCGDA.PimAttributeId = ZPA.PimAttributeId )
		  '+@JoinWhereClause+'
		 )
		 , Cte_CategoryAttributeValueFirstLocale AS 
		 (
		   SELECT PimCategoryId,AttributeCode ,AttributeValue  
		   FROM Cte_CategoryAttributeValue  CTCAV 
		   WHERE LocaleId = '+@LocaleIds+'
		 )
		 , Cte_CategoryDefaultLocale AS 
		 (
		   SELECT PimCategoryId,AttributeCode ,AttributeValue 
		   FROM Cte_CategoryAttributeValueFirstLocale 
		   UNION ALL 
		   SELECT PimCategoryId,AttributeCode ,AttributeValue 
		   FROM Cte_CategoryAttributeValue CTCAV 
		   WHERE LocaleId = '+@DefaultLocaleId+'
		   AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_CategoryAttributeValueFirstLocale CTCAVFL WHERE CTCAVFL.PimCategoryId = CTCAV.PimCategoryId AND CTCAVFL.AttributeCode = CTCAV.AttributeCode)
		   UNION ALL 
		   SELECT ZPCAV.PimCategoryId , ''attributefamily'' , AttributeFamilyName AttributeValue
		   FROM ZnodePimCategory ZPCAV 
		   LEFT JOIN Cte_AttributeBothLocale		TBLF ON (TBLF.PimAttributeFamilyId = ZPCAV.PimAttributeFamilyId AND TBLF.IScategory = 1 )  
		   WHERE 1=1 '+@JoinWhereClause+'
		 ) ';
             INSERT INTO @WhereClause(WhereClause)
                    SELECT WhereClause
                    FROM dbo.Fn_GetWhereClauseXML(@WhereClauseXML);

					If @IsDebug =1 
					Begin 
						Select * from @WhereClause
					End 
             SET @MaxValueId =
             (
                 SELECT MAX(Id)
                 FROM @WhereClause
             );
             WHILE @ValueId <= @MaxValueId
                 BEGIN
                     SET @SQL = @SQL+' , Cte_CategoryDetails_'+CAST(@ValueId AS VARCHAR(10))+' AS  
		   ( 
						SELECT CTCDL.PimCategoryId 
					    FROM '+CASE
                                        WHEN @ValueId = 1
                                        THEN 'Cte_CategoryDefaultLocale CTCDL'
                                        ELSE 'Cte_CategoryDetails_'+CAST(@ValueId - 1 AS VARCHAR(10))+' CTCDN '
                                    END+' 
						'+CASE
                                    WHEN @ValueId = 1
                                    THEN ''
                                    ELSE ' INNER JOIN  Cte_CategoryDefaultLocale CTCDL ON (CTCDL.PimCategoryId = CTCDN.PimCategoryId ) '
                                END+'
						WHERE '+
                     (
                         SELECT TOP 1 WhereClause
                         FROM @WhereClause
                         WHERE id = @ValueId
                     )+'		             
		   )
		   ';
                     SET @ValueId = @ValueId + 1;
                 END;
             SET @JoinWhereClause = CASE
                                        WHEN @OrderClause IS NULL
                                        THEN 'AND CTCDLD.AttributeCode = '''+dbo.Fn_Trim(REPLACE(REPLACE(@Order_BY, 'DESC', ''), 'ASC', ''))+''''
                                        ELSE ''
                                    END;
             SET @OrderClause = ISNULL(@OrderClause, 'CTCDLD.AttributeValue'+CASE
                                                                                 WHEN @Order_BY LIKE '% DESC%'
                                                                                 THEN ' DESC'
                                                                                 ELSE ' ASC '
                                                                             END);
             SET @SQL = @SQL+' ,Cte_finalCategoryDetails AS 
		(
			SELECT CTCDL.PimCategoryId ,'+[dbo].[Fn_GetPagingRowId](@OrderClause, 'CTCDL.PimCategoryId')+',Count(*)Over() CountId  
			FROM '+CASE
                          WHEN NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM @WhereClause
             )
                          THEN 'Cte_CategoryDefaultLocale CTCDL'
                          ELSE 'Cte_CategoryDetails_'+CAST((@ValueId - 1) AS VARCHAR(10))+' CTCDL '
                      END+'
			'+CASE
                     WHEN NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM @WhereClause
             )
                          AND @Order_BY = ''
                     THEN ''
                     ELSE ' LEFT JOIN  Cte_CategoryDefaultLocale CTCDLD ON (CTCDL.PimCategoryId = CTCDLD.PimCategoryId '+@JoinWhereClause+') '
                 END+'  
			GROUP BY CTCDL.PimCategoryId'+','+REPLACE(REPLACE(ISNULL(@OrderClause, 'CTCDLD.AttributeValue'), 'DESC', ''), 'ASC', '')+'				   
		) 
		
		SELECT PimCategoryId , CountId ,RowId
		FROM Cte_finalCategoryDetails		'+[dbo].[Fn_GetPaginationWhereClause](@PageNo, @Rows);
         
		 
		     PRINT @SQL
			 EXEC (@SQL);

          
		 END TRY
         BEGIN CATCH
    --         DECLARE @Status BIT ;
		  --   SET @Status = 0;
		  --   DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCategoryIdForPaging @WhereClause = '+CAST(@WhereClause AS NVARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
    --         SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
    --         EXEC Znode_InsertProcedureErrorLog
				--@ProcedureName = 'Znode_GetCategoryIdForPaging',
				--@ErrorInProcedure = @Error_procedure,
				--@ErrorMessage = @ErrorMessage,
				--@ErrorLine = @ErrorLine,
				--@ErrorCall = @ErrorCall;
				select Error_message();
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageCategoryList_XML]...';


GO
--
ALTER PROCEDURE [dbo].[Znode_ManageCategoryList_XML](
      @WhereClause      XML ,
      @Rows             INT            = 100 ,
      @PageNo           INT            = 1 ,
      @Order_BY         NVARCHAR(1000) = '' ,
      @LocaleId         INT            = 1 ,
      @ProfileCatalogId INT            = 0)
AS
    /*
	   Summary: This Procedure is used to get all category list 
				The Result displays CategortName with PimCategoryId where CategoryName and CategoryImage are pivoted values
	   Unit Testing 	  
	   EXEC Znode_ManageCategoryList_XML '' ,@LocaleId= 1
	
    */
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @TBL_PimcategoryDetails TABLE (PimCategoryId INT,CountId INT,RowId INT);
             DECLARE @TBL_CategoryIds TABLE (PimCategoryId INT ,ParentPimcategoryId INT);
             DECLARE @TBL_AttributeValue TABLE (PimCategoryAttributeValueId INT,PimCategoryId INT,CategoryValue NVARCHAR(MAX), AttributeCode VARCHAR(300), PimAttributeId  INT);
             DECLARE @TBL_FamilyDetails TABLE (PimCategoryId INT , PimAttributeFamilyId INT , AttributeFamilyName  NVARCHAR(MAX));
             DECLARE @TBL_DefaultAttributeValue TABLE (PimAttributeId INT ,AttributeDefaultValueCode VARCHAR(600) , IsEditable BIT ,AttributeDefaultValue NVARCHAR(MAX),DisplayOrder int);
			 DECLARE @TBL_MediaAttribute TABLE (Id INT ,PimAttributeId INT ,AttributeCode VARCHAR(600) )
             DECLARE @TBL_ProfileCatalogCategory TABLE (ProfileCatalogId INT ,PimCategoryId INT);
             DECLARE @PimCategoryIds VARCHAR(MAX)= '' , @PimAttributeIds VARCHAR(MAX),@CategoryXML NVARCHAr(max);
			 DECLARE @RowsCount INT 

		 IF @ProfileCatalogId > 0
			 BEGIN
			 INSERT INTO @TBL_ProfileCatalogCategory (ProfileCatalogId , PimCategoryId)
			 SELECT ZPC.ProfileCatalogId , PimCategoryId
			 FROM ZnodePimCatalogCategory AS ZCC INNER JOIN ZnodeProfileCatalog AS ZPC ON ( ZPC.PimCatalogId = ZCC.PimCatalogId )
			 WHERE ZPC.ProfileCatalogId = @ProfileCatalogId AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodeProfileCatalogCategory AS ZPCC WHERE ZPCC.PimCatalogCategoryId = ZCC.PimCatalogCategoryId);
                     
			 SET @PimCategoryIds = SUBSTRING( ( SELECT DISTINCT ','+CAST(PimCategoryId AS VARCHAR(20)) FROM @TBL_ProfileCatalogCategory FOR XML PATH('') ) , 2 , 4000);
			 END;

			 
			 --SELECT * FROM @TBL_PimcategoryDetails

              INSERT INTO @TBL_PimcategoryDetails ( PimCategoryId , CountId , RowId)
             EXEC Znode_GetCategoryIdForPaging @WhereClause , @Rows , @PageNo , @Order_BY , @RowsCount  , @LocaleId , '' , @PimCategoryIds , 1; 


             SET @PimCategoryIds =  SUBSTRING( ( SELECT ','+ CAST(PimCategoryId AS VARCHAR(100)) FROM @TBL_PimcategoryDetails FOR XML PATH('')) , 2 , 4000);
             SET @PimAttributeIds = SUBSTRING( ( SELECT ','+ CAST(PimAttributeId AS VARCHAR(100)) FROM [dbo].[Fn_GetCategoryGridAttributeDetails]() FOR XML PATH('')) , 2 , 4000);

			 INSERT INTO @TBL_AttributeValue ( PimCategoryAttributeValueId , PimCategoryId , CategoryValue , AttributeCode , PimAttributeId)
             EXEC [dbo].[Znode_GetCategoryAttributeValue] @PimCategoryIds , @PimAttributeIds , @LocaleId;

             INSERT INTO @TBL_FamilyDetails ( PimAttributeFamilyId , AttributeFamilyName , PimCategoryId)
             EXEC Znode_GetCategoryFamilyDetails @PimCategoryIds , @LocaleId;
             
		     INSERT INTO @TBL_DefaultAttributeValue ( PimAttributeId , AttributeDefaultValueCode , IsEditable , AttributeDefaultValue,DisplayOrder)
             EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @PimAttributeIds , @LocaleId;
             
			 SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM @TBL_PimcategoryDetails ),0)
			 
			 INSERT INTO @TBL_MediaAttribute (Id,PimAttributeId,AttributeCode )
			 SELECT Id,PimAttributeId,AttributeCode 
			 FROM [dbo].[Fn_GetProductMediaAttributeId]()
			 		
		     ;WITH Cte_DefaultCategoryValue
              AS (SELECT PimCategoryId , PimAttributeId ,SUBSTRING( ( SELECT ','+AttributeDefaultValue FROM @TBL_DefaultAttributeValue AS TBDAV WHERE TBDAV.PimAttributeId = TBAV.PimAttributeId 
			     AND EXISTS ( SELECT TOP 1 1 FROM dbo.Split ( TBAV.CategoryValue , ',') AS SP WHERE sp.Item = TBDAV.AttributeDefaultValueCode)
                 FOR XML PATH('')) , 2 , 4000) AS AttributeValue FROM @TBL_AttributeValue AS TBAV							 
				 WHERE EXISTS ( SELECT TOP 1 1 FROM [dbo].[Fn_GetCategoryDefaultValueAttribute]() AS SP WHERE SP.PimAttributeId = TBAV.PimAttributeId))

             UPDATE TBAV SET TBAV.CategoryValue = CTDCV.AttributeValue
             FROM @TBL_AttributeValue TBAV 
			 INNER JOIN Cte_DefaultCategoryValue CTDCV ON ( CTDCV.PimCategoryId = TBAV.PimCategoryId AND CTDCV.PimAttributeId = TBAV.PimAttributeId );
                   
		    UPDATE  TBAV
			SET CategoryValue  = SUBSTRING ((SELECT ','+[dbo].FN_GetMediaThumbnailMediaPath(zm.Path) FROM ZnodeMedia ZM  WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split(TBAV.CategoryValue ,',') SP  WHERE SP.Item = CAST(ZM.MediaId AS VARCHAR(50)) ) FOR XML PATH('')),2,4000)
			FROM @TBL_AttributeValue TBAV 
			INNER JOIN @TBL_MediaAttribute TBMA ON (TBMA.PimAttributeId = TBAV.PimAttributeId)	   
			
			INSERT INTO @TBL_AttributeValue ( PimCategoryId , CategoryValue , AttributeCode )

            SELECT PimCategoryId,AttributeFamilyName , 'AttributeFamily'
			FROM @TBL_FamilyDetails 				                           
		    
			SET @CategoryXML =  '<MainCategory>'+ STUFF( (  SELECT '<Category>'+'<PimCategoryId>'+CAST(TBAD.PimCategoryId AS VARCHAR(50))+'</PimCategoryId>'+ STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST((SELECT ''+TBADI.CategoryValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeValue TBADI      
															 WHERE TBADI.PimCategoryId = TBAD.PimCategoryId 
															 ORDER BY TBADI.PimCategoryId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Category>'	   

			FROM @TBL_AttributeValue TBAD
			INNER JOIN @TBL_PimcategoryDetails TBPI ON (TBAD.PimCategoryId = TBPI.PimCategoryId )
			GROUP BY TBAD.PimCategoryId,TBPI.RowId 
			ORDER BY TBPI.RowId 
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainCategory>'


			SELECT  @CategoryXML  CategoryXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1 
			 AND IsCategory = 1  
			 AND ZPA.IsShowOnGrid = 1  

		    SELECT ISNULL(@RowsCount,0) AS RowsCount;



			
			 --SELECT  PIV.PimCategoryId , PIV.CategoryName , ZPC.IsActive AS [Status] , dbo.FN_GetMediaThumbnailMediaPath ( Zm.Path ) AS CategoryImage , @LocaleId AS LocaleId , ISNULL(TBFD.AttributeFamilyName , '') AS AttributeFamilyName
             
			 --FROM @TBL_PimcategoryDetails AS TBCD 
			 --INNER JOIN ( SELECT PimCategoryId , CategoryValue , AttributeCode  FROM @TBL_AttributeValue) AS TBAV PIVOT(MAX(CategoryValue)                                                             
			 --FOR AttributeCode IN([CategoryName] , [CategoryImage])) PIV ON ( PIV.PimCategoryId = TBCD.PimCategoryId )
			 --LEFT JOIN @TBL_FamilyDetails AS TBFD ON ( TBFD.PimCategoryId = PIV.PimCategoryId )
			 --LEFT JOIN ZnodeMedia AS ZM ON ( CAST(ZM.MediaId AS VARCHAR(50)) = PIV.[CategoryImage] )
			 --LEFT JOIN ZnodePimCategory AS ZPC ON ( ZPC.PimCategoryId = PIV.PimCategoryId ) 
			 --ORDER BY RowId;
             
             --SET @RowsCount = ISNULL( ( SELECT TOP 1 CountId FROM @TBL_PimcategoryDetails) , 0);
         END TRY
         BEGIN CATCH
                DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageCategoryList_XML @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@ProfileCatalogId='+CAST(@ProfileCatalogId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageCategoryList_XML',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetCMSCustomerReviewInformation]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetCMSCustomerReviewInformation]
( @WhereClause NVARCHAR(Max),
  @Rows        INT           = 100,
  @PageNo      INT           = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT,
  @LocaleId    INT           = 0,
  @PortalId    INT           = 0
  )
AS
/*
 Summary : Procedure is used to Get Customer Review Information.
 Unit Testing:
 exec Znode_GetCMSCustomerReviewInformation @WhereClause='Userid =2',@RowsCount=null,@Rows = 100,@PageNo=1,@Order_BY = '',@PortalId = 1,@LocaleId = 1
*/
 BEGIN
   BEGIN TRY
      SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
             IF @LocaleId = 0
                 BEGIN
                     SELECT @LocaleId = dbo.Fn_GetDefaultLocaleId();
                 END;
             DECLARE @TBL_CustomerReview TABLE (CMSCustomerReviewId INT ,PublishProductId INT ,UserId INT,Headline NVARCHAR(400) ,Comments NVARCHAR(1000),UserName NVARCHAR(600),StoreName NVARCHAR(600)
												,UserLocation NVARCHAR(2000),Rating INT,[Status] NVARCHAR(20),ProductName NVARCHAR(max),CreatedDate DATETIME,ModifiedDate DATETIME,CreatedBy INT,ModifiedBy INT,SEOUrl NVARCHAR(max),RowId INT,CountNo INT)
			 
		 SET @SQL = ' 
		  ;With Cte_CustomerReview AS 
		  (
		   SELECT CMSCustomerReviewId,a.PublishProductId,UserId,Headline,Comments,UserName,UserLocation,Rating,Status,ZPPD.ProductName,ZPPD.LocaleId,ZP.StoreName
					,a.CreatedDate
					,a.ModifiedDate,a.CreatedBy,a.ModifiedBy,ZCSD.SEOUrl,ZCSD.PortalId
			FROM ZNODECMSCUSTOMERREVIEW A 
			INNER JOIN ZnodePublishProductDetail ZPPD ON (A.PUBLISHPRODUCTID = ZPPD.PUBLISHPRODUCTID AND ZPPD.LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+')
			LEFT OUTER JOIN ZnodeCMSSEODetail ZCSD on (ZPPD.PublishProductId = ZCSD.SEOId AND  (ZCSD.PortalId = '+CAST(@PortalId AS VARCHAR(50))+' OR '+CAST(@PortalId AS VARCHAR(50))+' = 0 ) )
			LEFT OUTER JOIN ZnodeCMSSEOType ZCST ON (ZCSD.CMSSEOTypeId = ZCST.CMSSEOTypeId AND ZCST.NAME = ''Product'')
			INNER  JOIN ZnodePortal ZP ON (A.PortalId = ZP.PortalId)
			WHERE ZP.PortalId = '+CAST(@PortalId AS VARCHAR(50))+' OR '+CAST(@PortalId AS VARCHAR(50))+' = 0 
		  )
		  ,Cte_CustomerInfo AS 
		  (		  
		   SELECT CMSCustomerReviewId,PublishProductId,UserId,Headline,Comments,UserName,UserLocation,Rating,Status,ProductName,StoreName
					,CreatedDate,ModifiedDate,CreatedBy,ModifiedBy,SEOUrl ,'+dbo.Fn_GetPagingRowId(@Order_BY,'CMSCustomerReviewId')+',Count(*)Over() CountNo  
		   FROM Cte_CustomerReview 
		   WHERE 1=1
		   '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
		  )
		  SELECT CMSCustomerReviewId,PublishProductId,UserId,Headline,Comments,UserName,UserLocation,Rating,Status,ProductName,StoreName
					,CreatedDate,ModifiedDate,CreatedBy,ModifiedBy,SEOUrl,RowId,CountNo
		  FROM Cte_CustomerInfo 
		  '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)                                                                                                                                                                                                                                                                        
          
		 PRINT @SQL
		  INSERT INTO @TBL_CustomerReview (CMSCustomerReviewId,PublishProductId,UserId,Headline,Comments,UserName,UserLocation,Rating,[Status],ProductName,StoreName
					,CreatedDate,ModifiedDate,CreatedBy,ModifiedBy,SEOUrl,RowId,CountNo)                                                                                                                                                                                                                                        
          EXEC (@SQL)

		  SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_CustomerReview ),0)

		  SELECT CMSCustomerReviewId,PublishProductId,UserId,Headline,Comments,UserName,UserLocation,Rating,[Status],ProductName
					,CreatedDate,ModifiedDate,CreatedBy,ModifiedBy,SEOUrl,StoreName
		  FROM @TBL_CustomerReview

           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCMSCustomerReviewInformation @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCMSCustomerReviewInformation',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetCustomFieldDetail]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetCustomFieldDetail]
( @WhereClause VARCHAR(1000),
  @Rows        INT           = 100,
  @PageNo      INT           = 1,
  @Order_BY    VARCHAR(100)  = '',
  @RowsCount   INT OUT,
  @LocaleId    INT           = 1)
AS 
/*
    
    Summary : this procedure is used to Get the customised field 
    Unit Testing 	
     EXEC [Znode_GetCustomFieldDetail]  ' PimProductId = 84 ',@Order_BY = '' ,@RowsCount= 0  ,@Rows= 10, @PageNo = 2
     SELECT * FROM ZnodePublishProduct WHERE PimProductid  = 87
	 exec Znode_GetCustomFieldDetail 
   
*/

     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_ListOfCustomeFiled TABLE (PimCustomFieldId INT , PimProductId INT , CustomCode VARCHAR(300),CustomKey NVARCHAR(600) ,CustomValue NVARCHAR(600),RowId INT,CountNo INT)	

             DECLARE @DefaultLocaleId VARCHAR(100)=
             ( SELECT TOP 1 FeatureValues FROM ZnodeGlobalSetting WHERE FeatureName = 'Locale')

             SET @SQL = '
					
					;With ListOfCustomeFiled AS 
					(
					SELECT ZPCF.PimCustomFieldId ,PimProductId , CustomCode ,LocaleId ,CustomKey ,CustomKeyValue AS CustomValue 
					FROM ZnodePimCustomField ZPCF
					INNER JOIN ZnodePimCustomFieldLocale ZPCFL ON (ZPCFL.PimCustomFieldId =ZPCF.PimCustomFieldId) 
					WHERE ZPCFL.LocaleId IN ('+CAST(@LocaleId AS VARCHAR(100))+','+@DefaultLocaleId+')	
					)
					, ListOfCustomeFiledForFirstLoacel AS 
					(SELECT PimCustomFieldId,PimProductId , CustomCode  ,CustomKey ,CustomValue 
					 FROM ListOfCustomeFiled LCFL WHERE LCFL.localeId = '+CAST(@LocaleId AS VARCHAR(100))+'	)

					, ListOfCustomeFiledFoeLocale AS 
					( SELECT PimCustomFieldId,PimProductId , CustomCode  ,CustomKey ,CustomValue
					  FROM ListOfCustomeFiledForFirstLoacel LOCFL 
					  UNION ALL 
					  SELECT PimCustomFieldId,PimProductId , CustomCode ,CustomKey ,CustomValue 
					  FROM ListOfCustomeFiled LCF WHERE LCF.LocaleId = '+@DefaultLocaleId+'					  
					  AND NOT EXISTS (SELECT TOP 1 1 FROM ListOfCustomeFiledForFirstLoacel LOCFFL WHERE LOCFFL.CustomCode = LCF.CustomCode AND LOCFFL.PimProductId = LCF.PimProductId )
					)
					,
					 ListFilterAsPerRequired AS 
					 (SELECT PimCustomFieldId,PimProductId , CustomCode  ,CustomKey ,CustomValue,'+dbo.Fn_GetPagingRowId(@Order_BY,' PimProductId DESC,CustomCode')+',Count(*)Over() CountNo
					 FROM ListOfCustomeFiledFoeLocale
					 WHERE 1=1
			         '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
					 )

					 SELECT PimCustomFieldId,PimProductId , CustomCode  ,CustomKey ,CustomValue,RowId,CountNo 
					 FROM ListFilterAsPerRequired
					 '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			
			print @sql
			INSERT INTO @TBL_ListOfCustomeFiled (PimCustomFieldId,PimProductId , CustomCode  ,CustomKey ,CustomValue,RowId,CountNo )
			EXEC (@SQL)
									
			SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_ListOfCustomeFiled),0)
								
			SELECT PimCustomFieldId CustomFieldId,PimProductId ProductId , CustomCode  ,CustomKey , CustomValue FROM  @TBL_ListOfCustomeFiled
			
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCustomFieldDetail @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCustomFieldDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetImportProcessLog]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetImportProcessLog]
( @WhereClause VARCHAR(max),
  @Rows        INT           = 100,
  @PageNo      INT           = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT)
AS
  /*
    Summary : Get import process log details include rowwise errors in details.    	
	Unit Testing   
	begin tran 
	DECLARE @RowsCount INT;
    EXEC Znode_GetImportProcessLog @WhereClause = '',@Rows = 1000,@PageNo = 0,@Order_BY = '',@RowsCount = @RowsCount OUT;
	rollback tran
    SELECT @RowsCount;
    
  */
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX);
             DECLARE @TBL_ImportLog TABLE(ImportLogId INT,ImportProcessLogId INT,RowNumber BIgInt,ColumnName NVARCHAR(1000),ColumnValue NVARCHAR(max),ErrorDescription NVARCHAR(max)
										,RowId INt , CountNo Int )  ;
             SET @SQL = ' 
							;with Cte_ErrorLog AS 
							(
								SELECT zil.ImportLogId, zil.ImportProcessLogId, ISNULL(zil.RowNumber, 0) [RowNumber], ISNULL(zil.ColumnName, '''') [ColumnName],
								ISNULL(zil.Data, '''') [ColumnValue], zm.MessageName + 
								CASE 
								WHEN zm.MessageCode IN (17,4)	AND Name in (''Pricing'') AND ISNULL(zil.ColumnName, '''') NOT like ''%Quantity%'' THEN +''  ''+ dbo.Fn_GetDefaultPriceRoundOff(isnull(DefaultErrorValue,''0000000.00'') - 1)
								WHEN zm.MessageCode IN (17,4)	AND Name in (''Pricing'') AND ISNULL(zil.ColumnName, '''') like ''%Quantity%''  THEN +''  ''+ dbo.Fn_GetDefaultInventoryRoundOff(isnull(DefaultErrorValue,''0000000.00'') - 1) 
								WHEN zm.MessageCode IN (17,4)	AND Name in (''Inventory'')  THEN +''  ''+ dbo.Fn_GetDefaultInventoryRoundOff(isnull(DefaultErrorValue,''0000000.00'') - 1) 
								WHEN zm.MessageCode IN (16,41,4) AND Name in (''Pricing'') AND ISNULL(zil.ColumnName, '''') NOT like ''%Quantity%'' THEN +''  ''+ dbo.Fn_GetDefaultPriceRoundOff(isnull(DefaultErrorValue,''0000000.00'' ))
								WHEN zm.MessageCode IN (16,41,4) AND Name in (''Pricing'') AND ISNULL(zil.ColumnName, '''')  like ''%Quantity%'' THEN +''  ''+ dbo.Fn_GetDefaultInventoryRoundOff(isnull(DefaultErrorValue,''0000000.00'' ))
								WHEN zm.MessageCode IN (16,41,4) AND Name in (''Inventory'') THEN +''  ''+ dbo.Fn_GetDefaultInventoryRoundOff(isnull(DefaultErrorValue,''0000000.00'' ))
								WHEN zm.MessageCode IN (44) AND Name in (''Pricing'') THEN +''  ''+ isnull(DefaultErrorValue,''0000000.00'' )
								ELSE ''''END ''ErrorDescription'' ,zil.ModifiedDate,zil.GUID
								FROM ZnodeImportLog AS zil INNER JOIN ZnodeMessage AS zm ON zil.ErrorDescription = CONVERT(VARCHAR(50) , zm.MessageCode)
								INNER JOIN ZnodeImportProcessLog zipl ON zil.ImportProcessLogId = zipl.ImportProcessLogId
								Inner JOIN ZnodeImportTemplate zit  ON zipl.ImportTemplateId = zit.ImportTemplateId
								inner join ZnodeImportHead zih ON zit.ImportHeadId =zih.ImportHeadId 
								)
								,Cte_ErrorLogFilter As ( SELECT ImportLogId,ImportProcessLogId,[RowNumber],[ColumnName],[ColumnValue],[ErrorDescription],[ModifiedDate],GUID
												,'+dbo.Fn_GetPagingRowId(@Order_BY , 'ImportLogId')+',Count(*)Over() CountNo 
								 FROM Cte_ErrorLog
								 WHERE 1 = 1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+' 
							 )

							SELECT ImportLogId,ImportProcessLogId,RowNumber,ColumnName,ColumnValue,ErrorDescription,RowId, CountNo 
							FROM Cte_ErrorLogFilter '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			 INSERT INTO @TBL_ImportLog (ImportLogId,ImportProcessLogId,RowNumber,ColumnName,ColumnValue,ErrorDescription,RowId, CountNo)
			 EXEC (@SQL)
				 SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_ImportLog), 0);
             SELECT ImportLogId,ImportProcessLogId,RowNumber,ColumnName,ColumnValue,ErrorDescription
			 FROM @TBL_ImportLog
		 END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetImportProcessLog @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetImportProcessLog',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;                                    
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetOmsOrderDetail]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetOmsOrderDetail]
( @WhereClause NVARCHAR(MAx),
  @Rows        INT            = 100,
  @PageNo      INT            = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT			,
  @UserId	   INT = 0 ,
  @IsFromAdmin int=0
  )
AS 
    /*  
     Summary : This procedure is used to get the oms order detils                 
			   Records are fetched for those users who placed the order i.e UserId is Present in ZnodeUser and  ZnodeOmsOrderDetails tables			  	 
	 Unit Testing:
	
     EXEC Znode_GetOmsOrderDetail '',@Order_BY = '',@RowsCount= 0, @UserId = 0 ,@Rows = 80, @PageNo = 1
	 	        
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX), @ProcessType  varchar(50)='Order'

             DECLARE @TBL_OrderList TABLE (OmsOrderId INT,OrderNumber VARCHAR(200),PortalId INT,StoreName NVARCHAR(MAX),CurrencyCode VARCHAR(100),OrderState NVARCHAR(MAX),ShippingId INT ,
				PaymentTypeId INT,PaymentSettingId INT,PaymentStatus NVARCHAR(MAX),PaymentType VARCHAR(100),ShippingStatus BIT ,OrderDate DATETIME,UserId INT,UserName VARCHAR(300),PaymentTransactionToken NVARCHAR(600),Total NUMERIC(28,6),
				OrderItem NVARCHAR(1000),OmsOrderDetailsId INT, ItemCount INT,PODocumentPath NVARCHAR(600),IsInRMA BIT,CreatedByName NVARCHAr(max),ModifiedByName NVARCHAR(max),RowId INT,CountNo INT,Email NVARCHAR(MAX),PhoneNumber NVARCHAR(MAX),
				SubTotal NUMERIC(28,6),TaxCost NUMERIC(28,6),ShippingCost NUMERIC(28,6),BillingPostalCode NVARCHAR(200),ShippingPostalCode NVARCHAR(200),OrderModifiedDate datetime)
				
             SET @SQL = '
			   	 
			;WIth  OrderList AS ( 

			  SELECT Zoo.OmsOrderId,Zoo.OrderNumber, Zp.PortalId,Zp.StoreName ,ZODD.CurrencyCode,case when ZOS.IsShowToCustomer=0 and '+cast( @IsFromAdmin as varchar(50))+' = 0 then ZOSC.Description else  ZOS.Description end  OrderState,ZODD.ShippingId,ZODD.
PaymentTypeId,ZODD.PaymentSettingId
				,ZOPS.Name PaymentStatus,ZPS.Name PaymentType,CAST(1 AS BIT) ShippingStatus ,ZODD.OrderDate,ZODD.UserId,ISNULL(ZU.FirstName,'''')
						+'' ''+ISNULL(ZU.LastName,'''') UserName ,ZODD.PaymentTransactionToken ,ZODD.Total ,ZODD.OmsOrderDetailsId,ZODD.PoDocument,ZVGD.UserName CreatedBy , ZVGDI.UserName ModifiedBy
						,ZU.Email ,ZU.PhoneNumber ,ZODD.SubTotal ,ZODD.TaxCost ,ZODD.ShippingCost,ZODD.BillingPostalCode,
						(select top 1 ShipToPostalCode from ZnodeOmsOrderShipment where OmsOrderShipmentId in  (select OmsOrderShipmentId from ZnodeOmsOrderLineItems where OmsOrderDetailsId = ZODD.OmsOrderDetailsId)) AS ShippingPostalCode,
						ZODD.ModifiedDate AS OrderModifiedDate
			  FROM ZnodeOmsOrder ZOO 
			  INNER JOIN ZnodeOmsOrderDetails ZODD ON (ZODD.OmsOrderId = ZOO.OmsOrderId)
			  INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZODD.portalId ) 
			  LEFT JOIN ZnodePaymentType ZPS ON (ZPS.PaymentTypeId = ZODD.PaymentTypeId )
			  LEFT JOIN  ZnodeOmsOrderStateShowToCustomer ZOSC ON (ZOSC.OmsOrderStateId = ZODD.OmsOrderStateId)
			  LEFT JOIN ZnodeOmsOrderState ZOS ON (ZOS.OmsOrderStateId = ZODD.OmsOrderStateId) 
			  LEFT JOIN ZnodeOmsPaymentState ZOPS ON (ZOPS.OmsPaymentStateId = ZODD.OmsPaymentStateId)
			  LEFT JOIN ZnodeUser ZU ON (ZU.UserId = ZODD.UserId) 
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZODD.CreatedBy )
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZODD.ModifiedBy)
			  LEFT JOIN ZnodeShipping ZS ON (ZS.ShippingId = ZODD.ShippingId)
			  WHERE  ZODD.IsActive = 1 
		       AND (EXISTS (SELECT TOP 1 1 FROM dbo.Fn_GetRecurciveUserId ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''' ) FNRU WHERE FNRU.UserId = ZU.UserId ) OR '+CAST(@UserId AS VARCHAR(50))+' =0 ) 
		
			) 

		    , Cte_OrderLineItem AS 
		    (
     
			  SELECT ZOOLI.ProductName,ZOOLI.Price,Count(ZOOLI.OmsOrderLineItemsId)Over(PARTITION BY Ol.OmsOrderId Order by ZOOLI.OmsOrderDetailsId) CountId 
			  ,Row_Number()Over( PARTITION BY Ol.OmsOrderId Order BY ZOOLI.Price DESC, ZOOLI.ProductName) RowId,Ol.OmsOrderId
			  ,CAST(Case when ZRRLI.RmaRequestItemId IS NULL THEN 0 ELSE 1 END AS BIT )  IsInRMA  ,OL.CreatedBy ,OL.ModifiedBy
			  FROM ZnodeOmsOrderLineItems  ZOOLI 
			  LEFT JOIN OrderList OL ON ( OL.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId ) 
			  LEFT JOIN ZnodeRmaRequestItem ZRRLI ON (ZRRLI.OmsOrderLineItemsId = ZOOLI.OmsOrderLineItemsId ) 
			  WHERE ZOOLI.Quantity > 0
			--  AND ZOOLI.OrderLineItemRelationshipTypeId != 1 
			  
		    )
		    ,Cte_GetOrderData AS 
			(
			 
			SELECT distinct OL.*, CTOLI.ProductName,CountId ,IsInRMA 
			FROM OrderList OL 
			LEFT JOIN Cte_OrderLineItem CTOLI ON (CTOLI.OmsOrderId = OL.OmsOrderId AND CTOLI.RowId = 1 )
		
			
			)
			, Cte_OrderLineDescribe AS (
	
			SELECT distinct *,'+dbo.Fn_GetPagingRowId(@Order_BY,'OmsOrderId DESC,OmsOrderDetailsId DESC')+',Count(*)Over() CountNo
			FROM Cte_GetOrderData 
			WHERE 1= 1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
		    )
  		 
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			ProductName OrderItem,OmsOrderDetailsId,CountId ItemCount, PoDocument AS PODocumentPath,IsInRMA ,CreatedBy as CreatedByName ,ModifiedBy as ModifiedByName,RowId,CountNo,
			Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode, ShippingPostalCode,OrderModifiedDate
			FROM Cte_OrderLineDescribe 
			'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			
			PRINT @SQL 

			INSERT INTO @TBL_OrderList(OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,RowId,CountNo,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate  )           
		    EXEC(@SQL)

			SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_OrderList),0)
			
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate
			FROM @TBL_OrderList	
           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsOrderDetail @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetOmsOrderDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetOmsQuoteList]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetOmsQuoteList]
( 
  @WhereClause NVARCHAR(MAX),
  @Rows        INT            = 100,
  @PageNo      INT            = 1  ,
  @Order_BY    VARCHAR(1000)  = '' ,
  @RowsCount   INT OUT             ,
  @AccountId   INT,
  @UserId      INT            = 0, 
  @PortalId    NVARCHAR(500)  = '' 
  )
AS 
   /*
  Summary :- This procedure is used to get the Quote list of account and Users
			 Fn_GetRecurciveAccounts is used to fetch AccountId and Its recursive ParentId  
			 @InnerWhereClause contains AccountId fetched from the Function Fn_GetRecurciveAccounts 
			 OrderDetails are fetched from the tables filtered by AccountId Present in @InnerWhereClause
			 OrderDetails are fetched in Descending order of OmsQuoteId
     Unit Testing 
	
     EXEC Znode_GetOmsQuoteList '(PortalId in(''1'',''2'',''3'',''6'')) ' ,@RowsCount = 0 ,@AccountId = 0,@UserId = 0  
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX)= '', @InnerWhereClause VARCHAR(MAX)= '', @ProcessType  varchar(50)='Quote';

             DECLARE @TBL_QuoteDetails TABLE (OmsQuoteId INT,UserName NVARCHAR(300),AccountName NVARCHAR(400),QuoteOrderTotal NUMERIC(28, 6),[OrderStatus] VARCHAR(300),
             CreatedDate DATETIME,StoreName NVARCHAR(Max),CurrencyCode VARCHAR(100),RowId INT,CountNo INT,CreatedByName NVARCHAr(max) ,ModifiedByName NVARCHAR(max));

             IF @UserId <> 0 AND EXISTS
             (
                 SELECT TOP 1 1 FROM ZnodeUser ZU INNER JOIN AspNetUsers ANU ON (ANU.Id = ZU.AspNetUserId)
                 INNER JOIN AspNetUserRoles ASPR ON (ASPR.UserId = ANU.Id) INNER JOIN AspNetRoles ASR ON (ASR.Id = ASPR.RoleId)
				 INNER JOIN ZnodeUserPortal ZUP ON ZU.UserId = ZUP.USERID AND (ZUP.PortalId in  (Select Item FROM DBO.Split(@PortalId, ',')) OR ISNULL(@PortalId ,'') = '') 
                 WHERE ASR.Name IN('Manager', 'User') AND ASR.TypeOfRole = 'B2B' 
             )
                 BEGIN
                     SET @InnerWhereClause = ' AND  EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveUserId] ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''') SP WHERE SP.UserId = ZU.UserId )';
                     SET @AccountId = (SELECT TOP 1 AccountID FROM ZnodeUser WHERE UserId = @UserId);
                 END;
             ELSE
                 BEGIN
                     SET @InnerWhereClause = '';
                 END;
             SET @SQL = '	  
			 ;With Cte_GetQuoteDetail AS 
			 (
			 SELECT Zu.UserId ,ZOQ.OmsQuoteId,ZU.FirstName + CASE WHEN ZU.LastName IS NULL THEN '''' ELSE '' ''+Zu.LastName END UserName , QuoteOrderTotal , ZOOS.OrderStateName [OrderStatus]
			 ,ZOQ.CreatedDate,ZA.Name AccountName,ZP.PortalId,Zp.StoreName , ZC.CurrencyCode ,ZVGD.UserName CreatedByName , ZVGDI.UserName ModifiedByName
			 FROM ZnodeOmsQuote ZOQ
			 INNER JOIN ZnodeUser ZU ON (ZU.UserId = ZOQ.UserId)
			 LEFT JOIN ZnodeUserPortal ZUP ON ZU.UserId = ZUP.UserId
			 inner JOIN ZnodePortal ZP ON ZP.PortalId = Zoq.PortalId
			 LEFT JOIN ZnodePortalUnit ZPU ON (ZPU.PortalId = Zp.PortalId)
			 LEFT JOIN ZnodeCurrency ZC ON (ZPU.CurrencyId = ZC.CurrencyId)
			 LEFT JOIN ZnodeOmsOrderState ZOOS ON (ZOOS.OmsOrderStateId = ZOQ.OmsOrderStateId )
			 LEFT JOIN ZnodeAccount ZA ON (ZA.AccountId = ZU.AccountId )
			 LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZOQ.CreatedBy )
			 LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZOQ.ModifiedBy)
			 WHERE EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveAccounts]('+CAST(@AccountId AS VARCHAR(100))+') FNRA WHERE FNRA.AccountId= ZU.AccountId) 
			 '+@InnerWhereClause+'

			 UNION ALL 
			 SELECT Zu.UserId ,ZOQ.OmsOrderId,ZU.FirstName + CASE WHEN ZU.LastName IS NULL THEN '''' ELSE '' ''+Zu.LastName END UserName , Total , ''ORDERED'' [OrderStatus]
			 ,ZOQ.CreatedDate,ZA.Name AccountName  , ZP.PortalId,Zp.StoreName ,  ZC.CurrencyCode ,ZVGD.UserName CreatedByName , ZVGDI.UserName ModifiedByName
			 FROM ZnodeOmsOrder ZOO 
			 INNER JOIN ZnodeOmsOrderDetails ZOQ ON (Zoo.OmsOrderId = ZOQ.OmsOrderId AND ZOO.IsQuoteOrder = 1 AND ZOQ.IsActive = 1 )
			 INNER JOIN ZnodeUser ZU ON (ZU.UserId = ZOQ.UserId)
			 LEFT JOIN ZnodeUserPortal ZUP ON ZU.UserId = ZUP.UserId
			 LEFT JOIN ZnodePortal ZP ON ZP.PortalId = Zoq.PortalId
			  LEFT JOIN ZnodePortalUnit ZPU ON (ZPU.PortalId = Zp.PortalId)
			 LEFT JOIN ZnodeCurrency ZC ON (ZPU.CurrencyId = ZC.CurrencyId)
			 LEFT JOIN ZnodeOmsOrderState ZOOS ON (ZOOS.OmsOrderStateId = ZOQ.OmsOrderStateId )
			 LEFT JOIN ZnodeAccount ZA ON (ZA.AccountId = ZU.AccountId )
			 LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZOO.CreatedBy )
			 LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZOO.ModifiedBy)
			 WHERE EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveAccounts]('+CAST(@AccountId AS VARCHAR(100))+') FNRA WHERE FNRA.AccountId= ZU.AccountId) 
			 '+@InnerWhereClause+'
			 )
			 , Cte_GetQuote AS 
			 (
			 SELECT * ,'+dbo.Fn_GetPagingRowId(@Order_BY,'CreatedDate DESC,OmsQuoteId DESC')+',Count(*)Over() CountNo 
			 FROM Cte_GetQuoteDetail
			  WHERE 1=1 
				  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
			 )
			 SELECT OmsQuoteId,UserName ,AccountName , QuoteOrderTotal QuoteAmount, [OrderStatus]  ,CreatedDate ,StoreName,CurrencyCode,RowId,CountNo,CreatedByName , ModifiedByName
			 FROM Cte_GetQuote 
			'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
	         
			 PRINT 	@SQL
				  
             INSERT INTO @TBL_QuoteDetails (OmsQuoteId,	UserName,	AccountName,	QuoteOrderTotal	,OrderStatus,	CreatedDate,	StoreName,CurrencyCode,	RowId	,CountNo,CreatedByName , ModifiedByName)      
			 EXEC (@SQL);
             SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_QuoteDetails), 0);

             SELECT OmsQuoteId,UserName,AccountName,QuoteOrderTotal,[OrderStatus],CreatedDate,StoreName,CurrencyCode,CreatedByName , ModifiedByName
             FROM @TBL_QuoteDetails;
			 
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsQuoteList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@AccountId='+CAST(@AccountId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@PortalId='+@PortalId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetOmsQuoteList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END
GO
PRINT N'Altering [dbo].[Znode_GetOrderHistory]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetOrderHistory]
( @OrderId  INT )
AS 
   /*  
    Summary : This procedure is used to get the oms order history                 
  Records are fetched for those have history form Notes and History table	 	 
Unit Testing:

    EXEC [Znode_GetOrderHistory] 12
       
*/
    BEGIN

	   DECLARE @TBL_OrderDetails TABLE (OmsOrderDetailsId INT )

	   INSERT INTO @TBL_OrderDetails
	   SELECT OmsOrderDetailsId
	   FROM ZnodeOmsorderdetails
       WHERE OmsOrderId = @OrderId 

		;With Cte_GetHistory AS 
		(
		 SELECT  zhst.OmsOrderDetailsId,TransactionId, '' Notes,Message ,OrderAmount,zhst.CreatedBy,zhst.CreatedDate ,zhst.ModifiedBy,zhst.ModifiedDate
		 FROM ZnodeOmsHistory zhst
		 INNER JOIN @TBL_OrderDetails ZOD ON (ZOD.OmsOrderDetailsId = zhst.OmsOrderDetailsId)
		 WHERE zhst.OmsNotesId  IS NULL 
		 UNION ALL 
		 SELECT  zhst.OmsOrderDetailsId,TransactionId, zon.Notes Notes,Message ,OrderAmount,zhst.CreatedBy,zhst.CreatedDate ,zhst.ModifiedBy,zhst.ModifiedDate
		 FROM ZnodeOmsHistory zhst
		 INNER JOIN ZnodeOmsNotes zon  ON (ZON.OmsNotesId = ZHST.OmsNotesId)
		 INNER JOIN @TBL_OrderDetails ZOD ON (ZOD.OmsOrderDetailsId = zhst.OmsOrderDetailsId)
		 UNION ALL 
		 select  zon.OmsOrderDetailsId,null TransactionId,  Notes,'Order notes added successfully' Message ,null OrderAmount,CreatedBy ,createdDate, ModifiedBy,ModifiedDate
		 from ZnodeOmsNotes zon 
		 INNER JOIN @TBL_OrderDetails ZOD ON (ZOD.OmsOrderDetailsId = zon.OmsOrderDetailsId)
		 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsHistory zhst WHERE zhst.OmsNotesId= zon.OmsNotesId  )
		)

		SELECT  OmsOrderDetailsId,TransactionId,  Notes, Message , OrderAmount,tHst.CreatedBy ,tHst.createdDate, tHst.ModifiedBy,tHst.ModifiedDate,zusr.Email 'UpdatedBy'
		FROM Cte_GetHistory tHst
		left join ZnodeUser zusr on zusr.UserId =tHst.ModifiedBy
		order by tHst.CreatedDate desc
				

    END;
GO
PRINT N'Altering [dbo].[Znode_GetPimAddOnGroups]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPimAddOnGroups]
(@WhereClause VARCHAR(max),
 @Rows        INT           = 100,
 @PageNo      INT           = 0,
 @Order_BY    VARCHAR(1000) = '',
 @RowsCount   INT OUT,
 @LocaleId    INT           = 1)
AS
 /* 
  Summary : - This procedure is used to get the addon group details from all locale
			  Result is fetched filtered by PimAddonGroupId in descending order 
Unit Testing:
   EXEC Znode_GetPimAddOnGroups @WhereClause='',@RowsCount=null,@Rows = 10,@PageNo=1,@Order_BY = Null

 */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX);
             DECLARE @DefaultLocaleId INT =  dbo.Fn_GetDefaultLocaleId();
             DECLARE @TBL_AddonGroupDetail TABLE(PimAddonGroupId INT,AddOnGroupName NVARCHAR(MAX),DisplayType NVARCHAR(400),RowId INT,CountNo INT )
			
             SET @SQL = ' 
				 ;With Cte_AddonsWithBothLocale AS 
				 (
				 SELECT ag.PimAddonGroupId, ag.DisplayType, agl.AddonGroupName,agl.LocaleId
				 FROM  dbo.ZnodePimAddonGroup AS ag 
				 INNER JOIN dbo.ZnodePimAddonGroupLocale AS agl ON ag.PimAddonGroupId = agl.PimAddonGroupId
				 WHERE agl.LocaleId IN ('+CAST(@DefaultLocaleId AS VARCHAR(50))+','+CAST(@LocaleId AS VARCHAR(50))+')

				 )
				  , Cte_AddOnsWithFirstLocale 	 AS 
				 (
				 SELECT PimAddonGroupId, DisplayType, AddonGroupName
				 FROM Cte_AddonsWithBothLocale 
				 WHERE LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+'
				 ) 
				 , Cte_AddonsList AS 
				 (
				 SELECT PimAddonGroupId, DisplayType, AddonGroupName 
				 FROM Cte_AddOnsWithFirstLocale 
				 UNION ALL 
				 SELECT PimAddonGroupId, DisplayType, AddonGroupName
				 FROM Cte_AddonsWithBothLocale PQ
				 WHERE LocaleId = '+CAST(@DefaultLocaleId AS VARCHAR(50))+'
				 AND NOT EXISTS (SELECT * FROM   Cte_AddOnsWithFirstLocale SD WHERE SD.PimAddonGroupId = PQ.PimAddonGroupId )
				 )
				 ,Cte_GetFilterAddOngroup AS 
				 (
				 SELECT PimAddonGroupId,AddOnGroupName,DisplayType  ,'+dbo.Fn_GetPagingRowId(@Order_BY,'PimAddonGroupId DESC')+',Count(*)Over() CountNo
				 FROM '+' Cte_AddonsList '+'WHERE 1=1  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
				 ) 

				 SELECT PimAddonGroupId,AddOnGroupName,DisplayType,RowId,CountNo 
				 FROM Cte_GetFilterAddOngroup '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)

				 print @sql
				 INSERT INTO @TBL_AddonGroupDetail (PimAddonGroupId,AddOnGroupName,DisplayType,RowId,CountNo )
				 EXEC (@SQL)

				 SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_AddonGroupDetail ),0)

				 SELECT PimAddonGroupId,AddOnGroupName,DisplayType
				 FROM @TBL_AddonGroupDetail

         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimAddOnGroups @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPimAddOnGroups',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;                                  
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetProductDataForWebStore]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetProductDataForWebStore]
(   @SKU              VARCHAR(MAX) = '' ,
	@PublishCatalogId int = 0 ,
    @PublishProductId VARCHAR(MAX),
    @PortalId         INT,
    @LocaleId         INT)
AS 
  /*  
    Summary: WebStore: SP for getting products data 
    		 Get average rating of products 
    		 Get Price / Inventory / SEO details .
    Unit Testing
	begin tran   
    EXEC [Znode_GetProductDataForWebStore] 'SKBCA1112,SKWI122,SKFVR123,FVZK0237,SKPMAR123,SKLS232',0,'96,92,98,103,94,97',@PortalId=2 ,@LocaleId=1
	EXEC [Znode_GetProductDataForWebStore] '',3,'',@PortalId=1 ,@LocaleId=0
	rollback tran
   */
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
             SET NOCOUNT ON;

             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );
			If @SKU <> ''
				INSERT INTO @Tlb_SKU(SKU) SELECT Item FROM Dbo.split(@SKU, ',');
			Else if @PublishCatalogId > 0 
				INSERT INTO @Tlb_SKU(SKU) 
				select Distinct ZPPD.SKU  from ZnodePublishCategoryProduct ZPCP INNER JOIN ZnodePublishProductDetail ZPPD ON ZPCP.PublishProductId = ZPPD.PublishProductId 
				where  ZPCP.PublishCatalogId = @PublishCatalogId

             DECLARE @Tlb_PublishProduct TABLE
             (PublishProductId INT,
              SequenceNo       INT IDENTITY
             );

			 If @PublishProductId <> ''
			  INSERT INTO @Tlb_PublishProduct(PublishProductId)
             SELECT Item FROM Dbo.split(@PublishProductId, ',');	
			Else if @PublishCatalogId > 0 
				INSERT INTO @Tlb_PublishProduct(PublishProductId)
				select Distinct ZPCP.PublishProductId  from ZnodePublishCategoryProduct ZPCP where  ZPCP.PublishCatalogId = @PublishCatalogId

             DECLARE @Tlb_ProductData TABLE
             (PublishProductId INT,
              SKU              NVARCHAR(100),
              SEOTitle         NVARCHAR(200),
              SEODescription   NVARCHAR(MAX),
              SEOKeywords      NVARCHAR(MAX),
              SEOUrl           NVARCHAR(MAX),
              Rating           Numeric(28,6),
              TotalReviews     INT
             );

             INSERT INTO @Tlb_ProductData (PublishProductId,SKU)
             SELECT PP.PublishProductId,SK.SKU FROM @Tlb_PublishProduct AS PP INNER JOIN @Tlb_SKU AS SK ON PP.SequenceNo = SK.SequenceNo;

             DECLARE @Tlb_CustomerAverageRatings TABLE
             (PublishProductId INT,
              Rating           NUMERIC(28,6),
              TotalReviews     INT
             ); 
             -- Calculate Average rating 
             INSERT INTO @Tlb_CustomerAverageRatings(PublishProductId,Rating,TotalReviews)
             SELECT CCR.PublishProductId,SUM(CAST(CCR.Rating AS NUMERIC(28,6)) )/ COUNT(CCR.PublishProductId),COUNT(CCR.PublishProductId) 
			 FROM ZnodeCMSCustomerReview AS CCR
             INNER JOIN @Tlb_ProductData AS PD ON CCR.PublishProductId = PD.PublishProductId AND CCR.Status = 'A' 
			 AND  (CCR.PortalId  = @PortalId OR @PortalId = 0 )
			 GROUP BY CCR.PublishProductId    ;

             UPDATE PD SET PD.Rating = CAR.Rating,PD.TotalReviews = CAR.TotalReviews 
			 FROM @Tlb_CustomerAverageRatings CAR
             INNER JOIN @Tlb_ProductData PD ON CAR.PublishProductId = PD.PublishProductId;

             UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 FROM @Tlb_ProductData PD
             INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.PublishProductId = ZCSO.SEOId
             LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
             INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 WHERE ZCSO.PortalId = @PortalId
             
			 UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 FROM @Tlb_ProductData PD
             INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.PublishProductId = ZCSO.SEOId
             LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
             INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 WHERE ZCSO.PortalId = @PortalId

             UPDATE PD SET PD.SEOTitle = ZCPS.ProductTitle,PD.SEODescription = ZCPS.ProductDescription,PD.SEOKeywords = ZCPS.ProductKeyword FROM @Tlb_ProductData PD
             INNER JOIN ZnodeCMSPortalSEOSetting ZCPS ON ZCPS.PortalId = @PortalId WHERE PD.SEOTitle IS NULL AND PD.SEODescription IS NULL AND PD.SEOKeywords IS NULL AND PD.SEOUrl IS NULL
			  --AND ZCSO.PortalId = @PortalId
             SELECT PublishProductId,SKU,SEOTitle,SEODescription,SEOKeywords,SEOUrl,Rating,TotalReviews 
			 FROM @Tlb_ProductData;             
			 COMMIT TRAN A;
			
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductDataForWebStore @SKU = '+@SKU+',@PublishProductId='+@PublishProductId+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetProductDataForWebStore',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetProductFeedList]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetProductFeedList]
(   @PortalId   VARCHAR(2000) = NULL,
    @ProductIds VARCHAR(MAX)  = '',
    @LocaleId   INT,
    @FeedType   NVARCHAR(MAX) = NULL)
AS
/*
Summary: This Procedure is used to get effective keyword feeding of Product list
 SELECT * FROM ZnodePublishProductDetail
 SELECT * FROM ZnodePublishProduct WHERE PublishCatalogId = 3
 SELECT * FROM ZnodePortalCatalog 
 Unit Testing:
 EXEC Znode_GetProductFeedList @PortalId='0',@ProductIds = '116,117,118'
 ,@LocaleId=1,@FeedType='Bing' 

*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;      
         
		 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
         DECLARE @TBL_DomainName TABLE
         (PortalId   INT,
          DomainName NVARCHAR(300),
          RowId      INT
         );  	
       
         DECLARE @TBL_SEODetails TABLE
         (loc                   NVARCHAR(MAX),
          lastmod               DATETIME,
          [g:condition]         VARCHAR(100),
          [description]         NVARCHAR(MAX),
          [g:id]                INT,
          link                  VARCHAR(100),
          [g:identifier_exists] VARCHAR(200),
          DomainName            NVARCHAR(300),
          PortalId              INT
         );
         DECLARE @TBL_CompleteDetailes TABLE
         (loc                   NVARCHAR(MAX),
          lastmod               DATETIME,
          [g:condition]         VARCHAR(100),
          [description]         NVARCHAR(MAX),
          [g:id]                INT,
          link                  VARCHAR(100),
          [g:identifier_exists] VARCHAR(200),
          DomainName            NVARCHAR(300),
          PortalId              INT,
          [g:availability]      NVARCHAR(1000),
          SKU                   NVARCHAR(MAX)
         );
         DECLARE @DefaultLocaleId INT=dbo.Fn_GetDefaultLocaleId()  ;
         DECLARE @TBL_PortalIds TABLE(PortalId INT); 
	
         INSERT INTO @TBL_PortalIds
         SELECT Zp.PortalId 
		 FROM Znodeportal AS ZP 
		 INNER JOIN ZnodePortalCatalog AS ZPC ON(ZPC.PortalId = Zp.PortalId)
         INNER JOIN ZnodePublishCatalog AS ZPPC ON(ZPPC.PublishCatalogId = ZPC.PublishCatalogId) 
		 INNER JOIN ZNodePublishProduct AS ZPP ON(ZPP.PublishCatalogId = ZPPC.PublishCatalogId)
         WHERE EXISTS(SELECT TOP 1 1 FROM DBO.Split(@ProductIds, ',') AS Sp WHERE(CAST(sp.Item AS INT)) = ZPP.PublishProductId OR @ProductIds = '0')
		 AND EXISTS(SELECT TOP 1 1 FROM DBO.Split(@PortalId, ',') AS Sp
						WHERE(CAST(sp.Item AS INT)) = Zp.PortalId  OR @PortalId = '0')
		 AND EXISTS (SELECT TOP 1 1 FROM ZnodeDomain ZD WHERE ZP.PortalId = ZD.PortalId
		 AND IsActive = 1 AND ApplicationType = 'Webstore')
		 GROUP BY Zp.PortalId; 

         INSERT INTO @TBL_DomainName 
		 SELECT  PortalId,DomainName,ROW_NUMBER() OVER(PARTITION BY PortalId ORDER BY DomainName) 
		 FROM ZnodeDomain AS ZD 
         WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZD.PortalId)
		 AND IsActive = 1 AND ApplicationType = 'Webstore'
		


         ;WITH Cte_SeoDetailsWithLocale
         AS (
		 SELECT DISTINCT ZCSD.CMSSEODetailId,ZCSD.SEOURL AS loc,ZCSD.ModifiedDate AS lastmod,'new' AS [g:condition],ZCSDL.SEODescription AS [description],ZPCC.PublishProductId AS [g:id],
             '' AS link,'false' AS [g:identifier_exists],TBDN.DomainName,ZPC.PortalId,ISNULL(ZCSDL.LocaleId, @DefaultLocaleId) AS LocaleId 
			 FROM ZNodePublishProduct AS ZPCC 
			 INNER JOIN ZnodePortalCatalog AS ZPC ON(ZPC.PublishCatalogId = ZPCC.PublishCatalogId)
             -- INNER JOIN @TBL_PortalIds TBLP ON (TBLP.PortalId = ZPC.PortalId)
			 LEFT JOIN ZnodeCMSSEODetail AS ZCSD ON(ZPCC.PublishProductId = ZCSD.SEOId and ZCSD.PortalId = ZPC.PortalId)
             LEFT JOIN ZnodeCMSSEOType AS ZCST ON(ZCST.CMSSEOTypeId = ZCSD.CMSSEOTypeId AND ZCST.Name = 'Product')
             LEFT JOIN ZnodeCMSSEODetailLocale AS ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSD.CMSSEODetailId AND LocaleId IN(@LocaleId, @DefaultLocaleId))
             LEFT JOIN @TBL_DomainName AS TBDN ON(TBDN.RowId = 1 AND TBDN.PortalId = zpc.PortalId ) 
			 WHERE EXISTS(SELECT TOP 1 1 FROM DBO.Split(@ProductIds, ',') AS Sp
						WHERE(CAST(sp.Item AS INT)) = ZPCC.PublishProductId OR @ProductIds = '0')
			AND EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZPC.PortalId	)
			 )

         ,Cte_SeoDetailsWithFirstLocale
         AS (
			 SELECT CMSSEODetailId,loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,LocaleId
             FROM Cte_SeoDetailsWithLocale 
			 WHERE LocaleId = @LocaleId
			 )         
		,Cte_SeoDetailsWithDefaultLocale
         AS (
			 SELECT CMSSEODetailId,loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,LocaleId
             FROM Cte_SeoDetailsWithFirstLocale
             UNION ALL
             SELECT CMSSEODetailId,loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,LocaleId
             FROM Cte_SeoDetailsWithLocale AS CTSDWL
             WHERE LocaleId = @DefaultLocaleId 
			 AND NOT EXISTS(SELECT TOP 1 1 FROM Cte_SeoDetailsWithFirstLocale AS CTSDWDL WHERE CTSDWDL.CMSSEODetailId = CTSDWL.CMSSEODetailId))
              
		 INSERT INTO @TBL_SEODetails
         SELECT DISTINCT loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId 
		 FROM Cte_SeoDetailsWithDefaultLocale;

		

         INSERT INTO @TBL_CompleteDetailes
         SELECT TBSD.loc,TBSD.lastmod,TBSD.[g:condition],TBSD.[description],TBSD.[g:id],TBSD.link,TBSD.[g:identifier_exists],TBSD.DomainName,TBSD.PortalId,
         CASE WHEN SUM(ZI.Quantity) > 0 THEN 'In Stock' ELSE CASE WHEN @FeedType = 'Google' THEN 'Out Of Stock' ELSE 'Not In Stock' END
         END AS [g:availability],ZPPD.SKU 
		 FROM ZnodePublishProduct AS ZPP 
		 LEFT JOIN @TBL_SEODetails AS TBSD ON(ZPP.PublishProductId = TBSD.[g:id] )
         LEFT JOIN ZnodePublishProductDetail AS ZPPD ON(ZPPD.PublishProductId = ZPP.PublishProductId AND ZPPD.LocaleId = @LocaleId )
         LEFT JOIN ZnodePortalWarehouse AS ZPW ON(ZPW.PortalId = TBSD.PortalId)
         LEFT JOIN ZnodePortalAlternateWarehouse AS ZAPW ON(ZAPW.PortalWarehouseId = ZPW.PortalWarehouseId)
         LEFT JOIN ZnodeInventory AS ZI ON(ZI.SKU = ZPPD.SKU AND (ZI.WarehouseId = ZPW.WarehouseId OR ZI.WarehouseId = ZAPW.WarehouseId))
         WHERE EXISTS(SELECT TOP 1 1 FROM DBO.Split(@ProductIds, ',') AS Sp WHERE(CAST(sp.Item AS INT)) = ZPP.PublishProductId OR @ProductIds = '0')
		 AND EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = TBSD.PortalId	)
         GROUP BY loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,TBSD.PortalId,ZPPD.SKU,ZPPD.LocaleId;
		
         DECLARE @MediaConfiguration NVARCHAR(2000)=((SELECT TOP 1 URL FROM ZnodeMediaConfiguration WHERE IsActive = 1));
		       

         ;WITH Cte_PortalList
         AS (
		     SELECT zp.PortalId,dbo.Fn_GetDefaultPriceRoundOff(ZPS.RetailPrice)RetailPrice,Zps.SKU,ROW_NUMBER() OVER(PARTITION BY Zps.SKU,zp.PortalId ORDER BY ZPS.RetailPrice) AS RowId
             FROM ZnodePriceList AS ZPL 
			 LEFT JOIN ZnodePriceListPortal AS ZPLP ON ZPL.PriceListId = ZPLP.PriceListId
             LEFT JOIN dbo.ZnodeCurrency AS zc ON ZPL.CurrencyId = zc.CurrencyId 
			 LEFT JOIN dbo.ZnodePortal AS zp ON ZPLP.PortalId = zp.PortalId
             LEFT JOIN ZnodePrice AS Zps ON(Zps.PriceListId = ZPL.PriceListId) 
			 LEFT JOIN @TBL_CompleteDetailes AS TBCD ON(TBCD.PortalId = Zp.PortalId AND TBCD.SKU = Zps.Sku) 
			 WHERE CAST(@GetDate AS DATE) BETWEEN ZPL.ActivationDate AND ZPL.ExpirationDate 
			 AND EXISTS( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZPLP.PortalId) 
			 GROUP BY zp.PortalId,ZPS.RetailPrice,Zps.SKU 
			 )

         SELECT loc,lastmod,[g:condition],[description],[g:id],link,[g:availability],[g:identifier_exists],DomainName,TBCD.PortalId
		,CTPL.RetailPrice AS [g:price]
		 ,@MediaConfiguration AS MediaConfiguration
         FROM @TBL_CompleteDetailes AS TBCD 
		 LEFT JOIN Cte_PortalList AS CTPL ON(CTPL.PortalId = TBCD.PortalId AND CTPL.SKU = TBCD.SKU AND CTPL.RowID = 1)
		 WHERE  EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = TBCD.PortalId	)

	END TRY
	BEGIN CATCH
		DECLARE @Status BIT ;
		SET @Status = 0;
		DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductFeedList @PortalId = '+@PortalId+',@ProductIds='+@ProductIds+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@FeedType='+CAST(@FeedType AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
        SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
        EXEC Znode_InsertProcedureErrorLog
			@ProcedureName = 'Znode_GetProductFeedList',
			@ErrorInProcedure = @Error_procedure,
			@ErrorMessage = @ErrorMessage,
			@ErrorLine = @ErrorLine,
			@ErrorCall = @ErrorCall;
	END CATCH
	
	 END;
GO
PRINT N'Altering [dbo].[Znode_GetProductIdForPaging]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetProductIdForPaging]
(
	@WhereClauseXML  XML           = NULL,
	@Rows            INT           = 10,
	@PageNo          INT           = 1,
	@Order_BY        VARCHAR(1000) = '',
	@RowsCount       INT OUT,
	@LocaleId        INT           = 1,
	@AttributeCode   VARCHAR(MAX)  = '',
	@PimProductId    TransferId READONLY , 
	@IsProductNotIn  BIT           = 0,
	@OutProductId    VARCHAR(max)	= 0 OUT )
AS	
 /* Summary :- This procedure is used to find the product ids with paging 
     Unit Testing
	 begin tran
	 DECLARE @ttr NVARCHAR(max)
	 DECLARE @PimProductId TransferId 
	 INSERT INTO @PimProductId
	 SELECT -1
     EXEC Znode_GetProductIdForPaging   N'' ,  10 ,  2 ,'productname desc',0, 1, '',@PimProductId ,0 ,@ttr OUT SELECT @ttr
	 rollback tran

	 begin tran

	 DECLARE @ttr NVARCHAR(max)
	 DECLARE @PimProductId TransferId 
	 INSERT INTO @PimProductId
	 SELECT 1
	EXEC Znode_GetProductIdForPaging N'', 50,1,'productname desc',0,1,'',@PimProductId,0,@ttr OUT SELECT @ttr
  rollback tran





	Create Index ZnodePimAttributeValue_ForPaging_Include ON  ZnodePimAttributeValue(PimAttributeId) include (PimAttributeValueId  ,PimProductId,CreatedDate,ModifiedDate )
	Create Index ZnodePimProductAttributeDefaultValue_ForPaging_Include ON  ZnodePimProductAttributeDefaultValue(PimAttributeValueId) include (PimAttributeDefaultValueId)
	Create Index ZnodePimFamilyGroupMapper_PimAttributeFamilyId ON ZnodePimFamilyGroupMapper(PimAttributeFamilyId,PimAttributeId)

	create  index IDX_ZnodePimAttributeValue_PimAttributeId on ZnodePimAttributeValue(PimAttributeId)
*/
BEGIN
 BEGIN TRY 
  SET NOCOUNT ON 
       DECLARE @SQL NVARCHAR(max) = '',@InternalSQL NVARCHAR(max) = ''
	   DECLARE @UseCtePart VARCHAR(1000) = ''
	   DECLARE @InternalOrderby VARCHAR(1000) = ''
	   DECLARE @InternalWhereClause NVARCHAr(MAx) = '',@InternalProductWhereClause NVARCHAr(MAx) = '',@InternalUpperWhereClause NVARCHAr(max)=''
	           ,@InternaleProductJoin NVARCHAr(MAx) = ''
	   DECLARE @TBL_PimProductId  TABLE (PimProductId INT  , CountNo INT)
	   DECLARE @TBL_DefaultAttributeId TABLE (PimAttributeId INT PRIMARY KEY , AttributeCode VARCHAR(600))
	  
	   DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId()
	   DECLARE @PimProductIds TransferId 
	   INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
	   SELECT PimAttributeId,AttributeCode FROM  [dbo].[Fn_GetDefaultAttributeId] ()

	   DECLARE @TBL_Attributeids TABLE(PimAttributeId INT , AttributeCode VARCHAr(600))

	   INSERT INTO @TBL_Attributeids (PimAttributeId, AttributeCode )
	   SELECT PimAttributeId,AttributeCode
	   FROM [dbo].[Fn_GetProductGridAttributes]() FNGA  
	   WHERE EXISTS (SELECT Top 1 1 FROM dbo.split(@AttributeCode , ',') SP WHERE sp.Item = FNGA.AttributeCode OR @AttributeCode = '' OR  FNGA.AttributeCode = REPLACE(REPLACE(@Order_By,'DESC',''),'ASC','')  )

	    DECLARE @PimAttributeIds VARCHAR(max) = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) 
																		FROM @TBL_Attributeids FNGA  
																		FOR XML PATH ('') ) ,2,4000)

	   INSERT INTO @PimProductIds (id)
	   SELECT Id
	   FROM @PimProductId 


	   IF  EXISTS (SELECT TOP 1 1 FROM @PimProductId )  AND @IsProductNotIn = 1 
	   BEGIN 
	    	     SET @InternalWhereClause = ' WHERE NOT EXISTS ( SELECT TOP 1 1 FROM @TBL_ProductFilter TBLFP WHERE  TBLFP.PimProductId = ZPP.PimProductId )'
	   END 
	   ELSE IF @IsProductNotIn = 0 AND EXISTS (SELECT TOP 1 1 FROM @PimProductId )  
	   BEGIN 
		  SET @InternalWhereClause = ''
		  SET @InternalUpperWhereClause = ' A '
	   END 	  

	  -- if Not Exists (select top 1 1 from Sysobjects where name  = '@TBL_DefaultValue') 
	  -- Begin 
			--Create TABLE @TBL_DefaultValue  (PimAttributeId INT,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT 
		 --   Index Ind_PimAttributeDefaultValueId (PimAttributeDefaultValueId))
	  -- END
	 

	   SET @SQl = ' 
				DECLARE @TBL_ProductFilter TABLE (PimProductId INT PRIMARY KEY,RowId INT IDENTITY(1,1)  )
										   INSERT INTO @TBL_ProductFilter  (PimProductId )
											SELECT Id 
											FROM @TransferId

				DECLARE @TBL_PimProductId TABLE (PimProductId  INT PRIMARY KEY,RowId INT, CountNo INT)
				;With Cte_PimProductId AS
		               (  
							 SELECT ZPP.PimProductId , ZPP.PimAttributeFamilyId , '+CASE WHEN @InternalUpperWhereClause <> '' THEN ' TBPF.RowId ' ELSE ' 1 ' END+'  DisplayOrder 
							 FROM ZnodePimProduct ZPP 
							'+CASE WHEN @InternalUpperWhereClause <> '' AND @InternalWhereClause = '' THEN ' INNER JOIN @TBL_ProductFilter TBPF ON (TBPF.PimProductId = ZPP.PimProductId ) ' ELSE '' END +'
							 '+@InternalWhereClause+' 
					   ) '
	
	SET @InternalOrderby = dbo.FN_trim(REPLACE(REPLACE(@Order_By,'DESC',''),'ASC',''))
	
	IF EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetProductGridAttributes]() FN WHERE FN.AttributeCode = @InternalOrderby) OR @InternalOrderby = 'AttributeFamily'
	BEGIN
		--If @InternalOrderby = 'assortment'
		--Begin
		--	SET @InternalWhereClause = ' AttributeCode = ''SKU'' ' 
		--End
	 --   Else
		--Begin 
		
		SET @InternalWhereClause = 'AttributeCode = '''+@InternalOrderby+''''
		--END 
				SET @InternalOrderby = 'AttributeValue '+CASE WHEN @Order_By LIKE '% DESC' THEN 'DESC' ELSE 'ASC' END
				
	END
	ELSE IF  @InternalOrderby IN ('CreatedDate','ModifiedDate')
	
	BEGIN
	
	 SET @InternalOrderby = @Order_By
	 SET @InternalWhereClause = ' AttributeCode = ''SKU'' ' 
	END 
	ELSE 
	BEGIN 
	 SET @InternalOrderby = CASE WHEN @InternalOrderby = 'DisplayOrder' THEN @Order_By ELSE ' CTLA.PimProductId DESC ' END  
	 SET @InternalWhereClause = '' 
	END    
	  
    IF CAST(@WhereClauseXML AS NVARCHAR(max)) NOT LIKE '%AttributeCode%' AND @InternalWhereClause = '' 
	BEGIN 

	 SET @SQL = @SQL + ' , Cte_FilterData AS 
								( SELECT PimProductId ,'+[dbo].[Fn_GetPagingRowId](@InternalOrderby,'PimProductId DESC')+',Count(*)Over() CountNo
								   FROM Cte_PimProductId CTLA
								 )
								 INSERT INTO  @TBL_PimProductId  (PimProductId,RowId,CountNo )
								 SELECT DISTINCT PimProductId,RowId ,CountNo
								 FROM Cte_FilterData 
								 '+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)
	END 
	ELSE IF CAST(@WhereClauseXML AS NVARCHAR(max)) NOT LIKE '%AttributeCode%' AND @InternalWhereClause <> '' 
	BEGIN

						 
	   SET @InternalSQL = '
						   DECLARE @TBL_FamilyLocale  TABLE(PimAttributeFamilyId INT PRIMARY KEY ,FamilyCode NVARCHAR(600),IsSystemDefined BIT,IsDefaultFamily BIT,IsCategory BIT ,AttributeFamilyName NVARCHAR(max) ) 
						   DECLARE @TBL_DefaultValue  TABLE(PimAttributeId INT,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT 
						    )
						   
						   INSERT INTO @TBL_FamilyLocale(PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName)
						   EXEC [dbo].[Znode_GetFamilyValueLocale] '''','+CAST(@LocaleId AS VARCHAR(50))+'	
						   
						   INSERT INTO @TBL_DefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
						   EXEC [dbo].[Znode_GetAttributeDefaultValueLocaleNew] '''+@PimAttributeIds+''','+CAST(@LocaleId AS VARCHAR(50))+'	
							
							'

							SET @SQL = @SQL + ' ,Cte_getAttributeValue AS 
									(	
										SELECT CTP.PimProductId , ZPA.AttributeCode  ,ZPAV.PimAttributeValueId  ,ZPA.PimAttributeId
										,ZPAV.CreatedDate,ZPAV.ModifiedDate,CTP.DisplayOrder     
										FROM Cte_PimProductId CTP             
										INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimProductId = CTP.PimProductId)             
										INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)    
										INNER JOIN ZnodePimFamilyGroupMapper ZPFGM ON (ZPFGM.PimAttributeFamilyId = CTP.PimAttributeFamilyId                      
										AND ZPFGM.PimAttributeId = ZPA.PimAttributeId)   
									)
		                              , Cte_CollectData AS 
									( 
										SELECT ZPA.PimProductId , ZPA.AttributeCode  ,  ZPAVL.AttributeValue ,ZPA.CreatedDate,ZPA.ModifiedDate,ZPA.DisplayOrder             
										FROM Cte_getAttributeValue   ZPA INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPA.PimAttributeValueId = ZPAVL.PimAttributeValueId ) 
										WHERE  ZPA.PimAttributeId IN ('+@PimAttributeIds+') AND ZPAVL.LocaleId in  (' + CAST(@DefaultLocaleId AS VARCHAR(50)) +')
										
										UNION ALL 
										
										SELECT CTP.PimProductId , ''AttributeFamily'', TBFM.AttributeFamilyName AttributeValue,NULL,NULL,CTP.DisplayOrder
										FROM Cte_PimProductId CTP INNER JOIN @TBL_FamilyLocale  TBFM ON (TBFM.PimAttributeFamilyId = CTP.PimAttributeFamilyId)
										

										UNION ALL 
										
										SELECT DISTINCT PimProductId, AttributeCode , SUBSTRING((SELECT '',''+AttributeDefaultValue 
										FROM @TBL_DefaultValue TBDV WHERE (TBDV.PimAttributeDefaultValueId = ZPPADV.PimAttributeDefaultValueId )                            
										FOR XML PATH ('''')),2,4000) AttributeValue  , CTETY.CreatedDate,CTETY.ModifiedDate,DisplayOrder         
										FROM ZnodePimProductAttributeDefaultValue ZPPADV INNER JOIN Cte_getAttributeValue CTETY 
										ON (CTETY.PimAttributeValueId = ZPPADV.PimAttributeValueId)
										WHERE  CTETY.PimAttributeId IN ('+@PimAttributeIds+')
							 )
							  , Cte_GetAttributeValueI AS 
							  (
							    SELECT PimProductId,'+CASE WHEN @InternalOrderby LIKE '%DisplayOrder%' THEN 'DisplayOrder' ELSE   'AttributeValue'  END+'  , 1 DefaultOrderBy      
								FROM  Cte_CollectData CTCD
								WHERE '+@InternalWhereClause+'
								UNION ALL 
								SELECT CTP.PimProductId , NULL , 2 
								FROM Cte_PimProductId CTP 	
								where NOT EXISTS (SELECT TOP 1 1 FROM  Cte_CollectData CTCD
								WHERE '+@InternalWhereClause+' AND CTCD.PimProductId = CTP.PimProductId  )				  
							  )
							   , Cte_FilterData As 
								 (
								   SELECT DISTINCT PimProductId,'+[dbo].[Fn_GetPagingRowId](' DefaultOrderBy , '+@InternalOrderby+' ','PimProductId DESC')+'
								   FROM Cte_GetAttributeValueI CTCD
							 )
								  ,Cte_GetAllData AS 
								 (
								  SELECT PimProductId ,RowId ,Count(*)Over() CountNo
								  FROM Cte_FilterData
								  GROUP BY PimProductId ,RowId 
							
								  
								 )

								 INSERT INTO  @TBL_PimProductId  (PimProductId,RowId,CountNo )
								 SELECT  PimProductId,RowId ,CountNo
								 FROM  Cte_GetAllData
								 '+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)

		SET @SQL =  @InternalSQL + @SQL
			
	    END
		ELSE 
		BEGIN 
		  SET @InternalSQL = ''
		  DECLARE @AttachINDefault  VARCHAr(max) = ''
		  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeValueLocale AS CTAL'+CAST(ID AS VARCHAR(50))
							+' ON ( CTAL'+CAST(ID AS VARCHAR(50))+'.PimProductId = CTAL'+CASE WHEN ID-1= 0 THEN '' ELSE CAST(ID-1 AS VARCHAR(50)) END +'.PimProductId AND '+
							REPLACE(REPLACE(WhereClause,'AttributeCode ',' CTAL'+CAST(ID AS VARCHAR(50))+'.AttributeCode '),' AttributeValue ',' CTAL'+CAST(ID AS VARCHAR(50))+'.AttributeValue ')+' )'
							FROM dbo.Fn_GetWhereClauseXML(@WhereClauseXML)      
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')

          SET @SQL = @SQL + '   ,Cte_getAttributeValue AS 
										(	
											 SELECT CTP.PimProductId , ZPA.AttributeCode  ,ZPAV.PimAttributeValueId  ,ZPA.PimAttributeId
																,ZPAV.CreatedDate,ZPAV.ModifiedDate,CTP.DisplayOrder     
											 FROM Cte_PimProductId CTP             
											 INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimProductId = CTP.PimProductId)       
											 INNER JOIN ZnodePimAttribute ZPA ON (ZPAV.PimAttributeId = ZPA.PimAttributeId)    
											 INNER JOIN ZnodePimFamilyGroupMapper ZPFGM ON 
											 (CTP.PimAttributeFamilyId = ZPFGM.PimAttributeFamilyId AND ZPFGM.PimAttributeId = ZPA.PimAttributeId) 
											 WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split('''+@AttributeCode+''','','') SP WHERE Sp.Item = ZPA.AttributeCode  OR '''+@AttributeCode+''' = '''')
										)'
		  IF EXISTS (SELECT Top 1 1 FROM @TBL_Attributeids TBH WHERE NOT EXISTS (SELECT Top 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBH.PimAttributeId)
		  AND TBH.AttributeCode <> 'AttributeFamily' )
         BEGIN 
		    SET @SQL = @SQL+' , Cte_CollectData AS 
										( 
											SELECT ZPA.PimProductId , ZPA.AttributeCode  ,  ZPAVL.AttributeValue,ZPAVL.LocaleId ,
												   ZPA.PimAttributeId,ZPA.CreatedDate,ZPA.ModifiedDate,ZPA.DisplayOrder             
											FROM Cte_getAttributeValue ZPA          
											INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPA.PimAttributeValueId  = ZPAVL.PimAttributeValueId )
											where ZPA.PimAttributeId IN ('+@PimAttributeIds+')
											AND  ZPAVL.LocaleId IN ( '+CAST(@LocaleId AS VARCHAR(50))+','+CAST(@DefaultLocaleId AS VARCHAR(50))+')
										)
									, Cte_FilterDataLocale AS 
									(
										   SELECT PimProductId,AttributeCode,AttributeValue,PimAttributeId,CreatedDate,ModifiedDate,DisplayOrder
										   FROM Cte_CollectData
										   WHERE LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+'
										   UNION All 
										   SELECT M.PimProductId,M.AttributeCode,M.AttributeValue ,M.PimAttributeId,M.CreatedDate,M.ModifiedDate,M.DisplayOrder
										   FROM Cte_CollectData M 
										   WHERE LocaleId = '+CAST(@DefaultLocaleId AS VARCHAR(50))+'
										   AND NOT Exists (Select TOP 1 1  from Cte_CollectData X where  M.PimProductId = X.PimProductId AND M.AttributeCode = X.AttributeCode And X.localeId =  '+CAST(@LocaleId AS VARCHAR(50))+' )
									)'

						SET @AttachINDefault =			'SELECT PimProductId,AttributeCode,CTFD.AttributeValue ,CreatedDate,ModifiedDate,CTFD.DisplayOrder	 
										FROM Cte_FilterDataLocale CTFD'

		 END 
		 
		 IF EXISTS (SELECT Top 1 1 FROM @TBL_Attributeids TBH WHERE EXISTS (SELECT Top 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBH.PimAttributeId))
         BEGIN 
		 SET  @InternalSQL = 'DECLARE @TBL_DefaultValue  TABLE(PimAttributeId INT,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  ) 
		                     INSERT INTO @TBL_DefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
						     EXEC [dbo].[Znode_GetAttributeDefaultValueLocaleNew] '''+@PimAttributeIds+''','+CAST(@LocaleId AS VARCHAR(50))
	   
			  SET @AttachINDefault = CASE WHEN @AttachINDefault = '' THEN '' ELSE @AttachINDefault+' UNION ALL ' END + ' SELECT PimProductId, AttributeCode , 
										SUBSTRING(
											(SELECT '',''+AttributeDefaultValue FROM @TBL_DefaultValue TBDV 
											WHERE (TBDV.PimAttributeDefaultValueId = ZPPADV.PimAttributeDefaultValueId )                            
											FOR XML PATH (''''))
										,2,4000) 
										AttributeValue  , CTETY.CreatedDate,CTETY.ModifiedDate,DisplayOrder         
										FROM Cte_getAttributeValue CTETY
										INNER JOIN  ZnodePimProductAttributeDefaultValue ZPPADV ON (CTETY.PimAttributeValueId =ZPPADV.PimAttributeValueId  )
										WHERE  CTETY.PimAttributeId IN ('+@PimAttributeIds+') '

		 END
		 IF EXISTS (SELECT Top 1 1 FROM @TBL_Attributeids TBH WHERE AttributeCode = 'attributefamily')
         BEGIN 
		 SET  @InternalSQL = @InternalSQL +' DECLARE @TBL_FamilyLocale  TABLE(PimAttributeFamilyId INT PRIMARY KEY ,FamilyCode NVARCHAR(600),IsSystemDefined BIT,IsDefaultFamily BIT,IsCategory BIT ,AttributeFamilyName NVARCHAR(max) ) 
		                    INSERT INTO @TBL_FamilyLocale(PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName)
						   EXEC [dbo].[Znode_GetFamilyValueLocale] '''','+CAST(@LocaleId AS VARCHAR(50))
						   
			SET @AttachINDefault = CASE WHEN @AttachINDefault = '' THEN '' ELSE @AttachINDefault+' UNION ALL '	END + 'SELECT CTP.PimProductId , ''AttributeFamily'' AttributeCode, TBFM.AttributeFamilyName AttributeValue,NULL CreatedDate, NULL ModifiedDate,DisplayOrder	
										FROM Cte_PimProductId CTP 
										INNER JOIN @TBL_FamilyLocale  TBFM ON (TBFM.PimAttributeFamilyId = CTP.PimAttributeFamilyId)'
		 END
		

								--SET  @InternalProductWhereClause =' INNER JOIN Cte_AttributeValueLocale AS CTAL1 ON ( CTAL1.PimProductId = CTAL.PimProductId AND  CTAL1.AttributeCode = ''ProductType'' and CTAL1.AttributeValue  = ''Simple Product'' )'
								--Print '---------1--------'
								--Print @SQL
								--Print '---------2--------'
		  
									--Print @SQL
									--Print '---------3--------'
									SET @SQL = @SQL + ' 
									,Cte_AttributeValueLocale AS
									(
									 '+@AttachINDefault+'										
									)'
									--Print @SQL
									--Print '---------4--------'
									SET @SQL = @SQL + ' 

									, Cte_AttributeLocale AS
									(
										 SELECT CTAL.PimProductId 
										 FROM Cte_AttributeValueLocale  CTAL
										 '+@InternalProductWhereClause+'
										 GROUP BY CTAL.PimProductId 
									)
									, Cte_FinalProductData AS
									(
									   SELECT DISTINCT CTLA.PimProductId, 1 DefaultOrderBy  ,'+[dbo].[Fn_GetPagingRowId](@InternalOrderby,' CTLA.PimProductId DESC')+' 
									   FROM Cte_AttributeValueLocale  CTAVL
									   INNER JOIN Cte_AttributeLocale CTLA ON (CTLA.PimProductId = CTAVL.PimProductId)
							        	'+CASE WHEN @InternalWhereClause <> '' THEN  ' WHERE CTAVL.'+dbo.FN_Trim(@InternalWhereClause) ELSE '' END +'
									)
									,Cte_GEtSortingProduct AS 
									(
									  SELECT PimProductId, DefaultOrderBy,RowId
									  FROM Cte_FinalProductData 
									  UNION ALL 
									  SELECT PimProductId ,2 DefaultOrderBy,'+[dbo].[Fn_GetPagingRowId]( 'DERE.PimProductId',' DERE.PimProductId ')+'
									  FROM Cte_AttributeLocale DERE 
									  WHERE NOT EXISTS (SELECT TOP 1 1 FROM Cte_FinalProductData TTRR WHERE TTRR.PimProductId = DERE.PimProductId  ) 
									  
									 )
									 ,Cte_getPagingData 
									 AS 
									 (
									  SELECT PimProductId ,'+[dbo].[Fn_GetPagingRowId](' DefaultOrderBy ',' RowId ')+' ,Count(*)Over() CountNo
									  FROM Cte_GEtSortingProduct
									 )

									,Cte_GetAllData AS 
									(
									  SELECT PimProductId ,RowId ,CountNo
									  FROM Cte_getPagingData
									  GROUP BY PimProductId ,RowId ,CountNo
									)
									'
									--Print @SQL
									--Print '---------5--------'
									SET @SQL = @SQL + ' 

								 INSERT INTO  @TBL_PimProductId  (PimProductId,RowId,CountNo )
								 SELECT  PimProductId,RowId , CountNo
								 FROM Cte_GetAllData '
								 +[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)

			SET @SQl = @InternalSQL+@SQL
     		END
			SET @SQl = @SQl + ' 
								SET @OutProductId = ISNULL(SUBSTRING((SELECT '',''+CAST(PimProductid AS VARCHAR(50)) 
										FROM @TBL_PimProductId TBPP
										ORDER BY RowId
										FOR XML PATH ('''')   ),2,4000),'''')
								SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM  @TBL_PimProductId TBPP),0)
							 '
			
			--PRINT  @SQl
            --SELECT  @SQl
		
			EXEC SP_EXECUTESQl  @SQL ,N' @OutProductId VARCHAR(max) OUT ,@RowsCount INT OUT ,@TransferId TransferId READONLY  ',  @OutProductId = @OutProductId OUT, @RowsCount = @RowsCount OUT ,@TransferId  = @PimProductIds
		

	 -- SELECT  @OutProductId,@RowsCount

     END TRY 
    BEGIN CATCH
	 DECLARE @Status BIT ;
		     SET @Status = 0;
			 SELECT ERROR_MESSAGE()
		  --   DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductIdForPaging @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@AccountList='+CAST(@AccountList AS VARCHAR(50))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
    --         SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
    --         EXEC Znode_InsertProcedureErrorLog
				--@ProcedureName = 'Znode_GetProductIdForPaging',
				--@ErrorInProcedure = @Error_procedure,
				--@ErrorMessage = @ErrorMessage,
				--@ErrorLine = @ErrorLine,
				--@ErrorCall = @ErrorCall;
	 END CATCH 
     END
GO
PRINT N'Altering [dbo].[Znode_ManageLinkProductList]...';


GO
ALTER PROCEDURE [dbo].[Znode_ManageLinkProductList]
(   @WhereClause      XML,
    @Rows             INT          = 100,
    @PageNo           INT          = 1,
    @Order_BY         VARCHAR(100) = '',
    @RowsCount        INT OUT,
    @LocaleId         INT          = 1,
    @RelatedProductId INT          = 0,
    @PimAttributeId   INT          = 0)
AS
   /*  Summary :- This Procedure is used to find the link product Detail 
     Unit Testing 
     EXEC Znode_ManageLinkProductList '' , @RowsCount = 0 ,@RelatedProductId=128
   */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds VARCHAR(MAX), @PimAttributeIds VARCHAR(MAX),@OutPimProductIds VARCHAR(max);
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

		     DECLARE @TBL_LinkProductDetail TABLE
             (PimProductId           INT,
              PimLinkProductDetailId INT,
              RelatedProductId       INT,
              PimAttributeId         INT
             );
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @DefaultAttributeFamily INT=
             (
                 SELECT PimAttributeFamilyId
                 FROM ZnodePimAttributeFamily
                 WHERE IsCategory = 0
                       AND IsDefaultFamily = 1
             );
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
             INSERT INTO @TBL_LinkProductDetail
             (PimProductId,
              PimLinkProductDetailId,
              RelatedProductId,
              PimAttributeId
             )
                    SELECT PimProductId,
                           PimLinkProductDetailId,
                           PimParentProductId,
                           PimAttributeId
                    FROM ZnodePimLinkProductDetail
                    WHERE PimParentProductId = @RelatedProductId
                          AND PimAttributeId = @PimAttributeId;
                
				INSERT INTO @TransferPimProductId 
                SELECT PimProductId 
                FROM @TBL_LinkProductDetail
             
			 IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId) 
			 BEGIN 
			  INSERT INTO @TransferPimProductId 
			  SELECT '-1'
			                                  
             END 
			 EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = @Rows,
                  @PageNo = @PageNo,
                  @Order_BY = @Order_BY,
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = '',
                  @PimProductId = @TransferPimProductId,
                  @IsProductNotIn = 0,
				  @OutProductId = @OutPimProductIds OUT;

			
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 
			 
			 SET @PimProductIds = SUBSTRING(
                                           (
                                               SELECT ','+CAST(PimProductId AS VARCHAR(100))
                                               FROM @ProductIdTable
                                               FOR XML PATH('')
                                           ), 2, 4000);


             SET @PimAttributeIds = SUBSTRING( (SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000);
            
			 INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder 
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeIds,
                  @LocaleId;
             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue
                  @PimProductIds,
                  @PimAttributeIds,
                  @localeId;
             WITH Cte_UpdateDefaultAttributeValue
                  AS (SELECT PimProductId,
                             AttributeCode,
                             AttributeValue,
                             SUBSTRING(
                                      (
                                          SELECT ','+TBADV.AttributeDefaultValue
                                          FROM @TBL_AttributeDefaultValue TBADV
                                               INNER JOIN ZnodePimAttribute TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
                                          WHERE TBAC.AttributeCode = TBAD.AttributeCode
                                                AND EXISTS
                                          (
                                              SELECT TOP 1 1
                                              FROM dbo.split(TBAD.AttributeValue, ',') SP
                                              WHERE Sp.item = TBADV.AttributeDefaultValueCode
                                          )
                                          FOR XML PATH('')
                                      ), 2, 4000) AttributeDefaultValue
                      FROM @TBL_AttributeDetails TBAD)
                  UPDATE TBAD
                    SET AttributeValue = CTUDAV.AttributeDefaultValue
                  FROM @TBL_AttributeDetails TBAD
                       INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
                                                                            AND CTUDAV.AttributeCode = TBAD.AttributeCode)
                  WHERE AttributeDefaultValue IS NOT NULL;
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
            
			 ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;


				
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
				
				-- LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
             --- Update the  product families name locale wise   
        UPDATE  @TBL_AttributeDetails SET PimAttributeId = 0 WHERE PimAttributeId IS nULL 
	     DECLARE @ProductXML XML 

		--SELECT * FROM @TBL_AttributeDetails

	   	 SET @ProductXML =   '<MainProduct>'+ STUFF( (  SELECT '<Product>'
		                                                    +'<PimLinkProductDetailId>'+CAST(ISNULL(TBLPD.PimLinkProductDetailId,'') AS VARCHAR(50))+'</PimLinkProductDetailId>'
															+'<PimProductId>'+CAST(zpp.PimProductId AS VARCHAR(50))+'</PimProductId>'
															+'<RelatedProductId>'+CAST(ISNULL(TBLPD.RelatedProductId,'') AS VARCHAR(50))+'</RelatedProductId>'
		
		 + STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetails TBADI      
															 WHERE TBADI.PimProductId = zpp.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

			 FROM @ProductIdTable AS zpp
             LEFT JOIN @TBL_LinkProductDetail AS TBLPD ON(TBLPD.PimProductId = ZPP.PimProductId)
             ORDER BY zpp.RowId
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'


			SELECT @RowsCount AS RowsCount;

			
			
			
			
			
			
			
			
			
			
			
			
			 --SELECT zpp.PimProductid AS ProductId,
    --                [ProductName],
    --                ProductType,
    --                ISNULL(zf.FamilyName, '') AS AttributeFamily,
    --                [SKU],
    --                [Price],
    --                [Quantity],
    --                CASE
    --                    WHEN [IsActive] IS NULL
    --                    THEN CAST(0 AS BIT)
    --                    ELSE CAST([IsActive] AS BIT)
    --                END AS [IsActive],
    --                PimLinkProductDetailId,
    --                RelatedProductId,
    --                TBLPD.PimAttributeId,
    --                [dbo].FN_GetMediaThumbnailMediaPath(zm.Path) AS ImagePath,
    --                [Assortment],
    --                @LocaleId AS LocaleId,
    --                [DisplayOrder]
    --         FROM @ProductIdTable AS zpp
    --              INNER JOIN @TBL_LinkProductDetail AS TBLPD ON(TBLPD.PimProductId = ZPP.PimProductId)
    --              LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
    --              INNER JOIN
    --         (
    --             SELECT PimProductId,
    --                    AttributeValue,
    --                    AttributeCode
    --             FROM @TBL_AttributeDetails
    --         ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
    --                                                             [SKU],
    --                                                             [Price],
    --                                                             [Quantity],
    --                                                             [IsActive],
    --                                                             [ProductType],
    --                                                             [ProductImage],
    --                                                             [Assortment],
    --                                                             [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
    --              LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
    --         ORDER BY zpp.RowId;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageLinkProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@RelatedProductId='+CAST(@RelatedProductId AS VARCHAR(50))+',@PimAttributeId='+CAST(@PimAttributeId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageLinkProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;   


         --
GO
PRINT N'Altering [dbo].[Znode_ManageProductList]...';


GO
ALTER PROCEDURE [dbo].[Znode_ManageProductList]
(   @WhereClause		 XML,
	@Rows				 INT           = 10,
	@PageNo			     INT           = 1,
	@Order_BY			 VARCHAR(1000) = '',
	@RowsCount			 INT OUT,
	@LocaleId			 INT           = 1,
	@PimProductId		 VARCHAR(2000) = 0,
	@IsProductNotIn	     BIT           = 0,
	@IsCallForAttribute  BIT	       = 0,
	@AttributeCode       VARCHAR(max)  = ''
	)
AS
    
/*
 Summary:-  This Procedure is used for getting product List  
			Procedure will pivot verticle table(ZnodePimattributeValues) into horizontal table with columns 
			ProductId,ProductName,ProductType,AttributeFamily,SKU,Price,Quantity,IsActive,ImagePath,Assortment,LocaleId,DisplayOrder        
 Unit Testing
		  DECLARE @D INT= 1 
		  EXEC  [dbo].[Znode_ManageProductList]   @WhereClause = N'' , @Rows = 100 , @PageNo = 1 ,@Order_BY = '',@LocaleId= 1,@PimProductId = '',@IsProductNotIn = 1 , @RowsCount = @D OUT SELECT @D
    
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds VARCHAR(MAX), @PimAttributeId VARCHAR(MAX), @FirstWhereClause VARCHAR(MAX)= '', @SQL NVARCHAR(MAX)= '' ,@OutPimProductIds VARCHAR(max);
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

			 DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
             SET @FirstWhereClause =
             (SELECT WhereClause FROM dbo.Fn_GetWhereClauseXML(@WhereClause) WHERE id = 1);

             IF (@FirstWhereClause LIKE '%Brand%'
                OR @FirstWhereClause LIKE '%Vendor%'
                OR @FirstWhereClause LIKE '%ShippingCostRules%'
                OR @FirstWhereClause LIKE '%Highlights%') and @IsCallForAttribute=1
                 BEGIN

				 SET @SQL = ' DECLARE @TBL_ProductIds TABLE (PimProductId INT,ModifiedDate DATETIME  )
				            ;WIth Cte_DefaultValue AS (
						    SELECT AttributeDefaultValueCode , ZPDF.PimAttributeId ,FNPA.AttributeCode FROM ZnodePImAttributeDefaultValue ZPDF
						    INNER JOIN [dbo].[Fn_GetProductDefaultFilterAttributes] () FNPA ON ( FNPA.PimAttributeId = ZPDF.PimAttributeId))
							
							, Cte_productIds AS 
							(SELECT a.PimProductId, c.AttributeCode , CTDV.AttributeDefaultValueCode AttributeValue,b.ModifiedDate 
							FROM  ZnodePimAttributeValue a
							LEFT JOIN ZnodePimAttribute c ON(c.PimAttributeId = a.PimAttributeId)
							LEFT JOIN ZnodePimAttributeValueLocale b ON(b.PimAttributeValueId = a.PimAttributeValueId)  
							INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode AND EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,'','') SP WHERE SP.Item = CTDV.AttributeDefaultValueCode) )
 
						    )
							INSERT INTO @TBL_ProductIds (PimProductId ,ModifiedDate)
							SELECT PimProductId ,ModifiedDate
							FROM Cte_productIds WHERE   '+@FirstWhereClause+' GROUP BY PimProductId,ModifiedDate Order By ModifiedDate DESC 
										
							SELECT PimProductId FROM @TBL_ProductIds GROUP BY PimProductId,ModifiedDate ORDER BY ModifiedDate DESC';
					 
					 Print @sql
                     INSERT INTO @ProductIdTable(PimProductId)
                     EXEC (@SQL);

                     INSERT INTO @TransferPimProductId
					 SELECT PimProductId
                     FROM @ProductIdTable
                     UNION ALL 
					 SELECT 0
					 
					                                    
                     DELETE FROM @ProductIdTable;

                     SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(MAX)), '<WhereClauseModel><WhereClause>'+@FirstWhereClause+'</WhereClause></WhereClauseModel>', '') AS XML);
                 END
				 ELSE IF @PimProductId <> ''
			    BEGIN 
				 INSERT INTO @TransferPimProductId(id)
				 SELECT Item 
				 FROM dbo.split(@PimProductId,',')
			    END 
					                    
             EXEC Znode_GetProductIdForPaging @whereClauseXML = @WhereClause,@Rows = @Rows,@PageNo = @PageNo,@Order_BY = @Order_BY,@RowsCount = @RowsCount OUT,
             @LocaleId = @LocaleId,@AttributeCode = @AttributeCode,@PimProductId = @TransferPimProductId, @IsProductNotIn = @IsProductNotIn,@OutProductId = @OutPimProductIds OUT;
			
			 INSERT INTO @ProductIdTable (PimProductId)              
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 
				 
				            
             SET @PimProductIds = SUBSTRING((SELECT ','+CAST(PimProductId AS VARCHAR(100)) FROM @ProductIdTable FOR XML PATH('')), 2, 4000);
             SET @PimAttributeId = [dbo].[Fn_GetProductGridDefaultAttributeId]();
            
			 INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeId,
                  @LocaleId;

             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue
                  @PimProductIds,
                  @PimAttributeId,
                  @localeId;
     
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
            
			;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+ dbo.Fn_GetMediaThumbnailMediaPath(zm.PATH) 
			   FROM ZnodeMedia AS ZM
               INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;


			
			 SELECT zpp.PimProductid AS ProductId,
                    [ProductName],
                    ProductType,
                    ISNULL(zf.FamilyName, '') AS AttributeFamily,
                    [SKU],
                    [Price],
                    [Quantity],
                    CASE
                        WHEN [IsActive] IS NULL
                        THEN CAST(0 AS BIT)
                        ELSE CAST([IsActive] AS BIT)
                    END AS [IsActive],
                   piv.[ProductImage] AS ImagePath,
                    [Assortment],
                    @LocaleId AS LocaleId,
                    [DisplayOrder]
             FROM @ProductIdTable AS zpp
                  LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
                  INNER JOIN
             (
                 SELECT PimProductId,
                        AttributeValue,
                        AttributeCode
                 FROM @TBL_AttributeDetails
             ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
                                                                 [SKU],
                                                                 [Price],
                                                                 [Quantity],
                                                                 [IsActive],
                                                                 [ProductType],
                                                                 [ProductImage],
                                                                 [Assortment],
                                                                 [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
                --  LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
             ORDER BY zpp.RowId;
         
         END TRY
         BEGIN CATCH
               DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimProductId='+@PimProductId+',@IsProductNotIn='+CAST(@IsProductNotIn AS VARCHAR(50))+',@IsCallForAttribute='+CAST(@IsCallForAttribute AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageProductList_XML]...';


GO
ALTER PROCEDURE [dbo].[Znode_ManageProductList_XML]
(   @WhereClause		 XML,
    @Rows				 INT           = 100,
    @PageNo			 INT           = 1,
    @Order_BY			 VARCHAR(1000) = '',
    @LocaleId			 INT           = 1,
    @PimProductId		 VARCHAR(2000) = 0,
    @IsProductNotIn	 BIT           = 0,
	@IsCallForAttribute BIT		   = 0,
	@AttributeCode      VARCHAR(max ) = '' ,
	@IsDebug            Bit		   = 0 )
AS
    
/*
		  Summary:-   This Procedure is used for get product List  
				    Procedure will pivot verticle table(ZnodePimattributeValues) into horizontal table with columns 
				    ProductId,ProductName,ProductType,AttributeFamily,SKU,Price,Quantity,IsActive,ImagePath,Assortment,LocaleId,DisplayOrder
        
		  Unit Testing
		  DECLARE @D INT= 1  EXEC  [dbo].[Znode_ManageProductList_XML]   @WhereClause = N'' , @Rows = 100 , @PageNo = 1 ,@Order_BY = '',@LocaleId= 1,@PimProductId = '',@IsProductNotIn = 1  SELECT @D
          select * from ZnodeAttributeType  WHERE AttributeValue LIKE '%&%'
		  UPDATE VieW_lOADMANAGEpRODUCT SET  AttributeValue = 'A & B'  WHERE AttributeValue LIKE '% and %' AND PimProductId = 158
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds VARCHAR(MAX), @PimAttributeId VARCHAR(MAX), @FirstWhereClause VARCHAR(MAX)= ''
			 , @SQL NVARCHAR(MAX)= '' ,@OutPimProductIds VARCHAR(max),@ProductXML NVARCHAR(max) ;
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId()
					 ,@RowsCount INT =0 ;
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
			  ,PimAttributedefaultValueId INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
			   DECLARE @TBL_AttributeDetailsLocale AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
			 DECLARE @TBL_MultiSelectAttribute TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			-- DECLARE @TBL_AttributeValueFinale TABLE (PimProductId INT , AttributeValue NVARCHAR(max),AttributeCode VARCHAR(300),PimAttributeId INT)
			 --INSERT INTO @TBL_MultiSelectAttribute (PimAttributeId,AttributeCode)
			 --SELECT PimAttributeId,AttributeCode FROM dbo.Fn_GetProductMediaAttributeId() 
			 DECLARE @TBL_MediaAttribute TABLE (Id INT ,PimAttributeId INT ,AttributeCode VARCHAR(600) )
             DECLARE @FamilyDetails TABLE
             (
			  PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(Max)
             );
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
             SET @FirstWhereClause =
             (
                 SELECT WhereClause
                 FROM Fn_GetWhereClauseXML(@WhereClause)
                 WHERE id = 1
             );

             IF (@FirstWhereClause LIKE '%Brand%'
                OR @FirstWhereClause LIKE '%Vendor%'
                OR @FirstWhereClause LIKE '%ShippingCostRules%'
                OR @FirstWhereClause LIKE '%Highlights%') and @IsCallForAttribute=1
                 BEGIN

				SET @SQL = '  DECLARE @TBL_ProductIds TABLE (PimProductId INT,ModifiedDate DATETIME  )
				           ;WIth Cte_DefaultValue AS (
										  SELECT AttributeDefaultValueCode , ZPDF.PimAttributeId ,FNPA.AttributeCode
										  FROM ZnodePImAttributeDefaultValue ZPDF
										  INNER JOIN [dbo].[Fn_GetProductDefaultFilterAttributes] () FNPA ON ( FNPA.PimAttributeId = ZPDF.PimAttributeId) 

										)
										, Cte_productIds AS 
										(
										  SELECT a.PimProductId, c.AttributeCode , CTDV.AttributeDefaultValueCode AttributeValue,b.ModifiedDate 
										  FROM  ZnodePimAttributeValue a
										  LEFT JOIN ZnodePimAttribute c ON(c.PimAttributeId = a.PimAttributeId)
										  LEFT JOIN ZnodePimAttributeValueLocale b ON(b.PimAttributeValueId = a.PimAttributeValueId)  
										  INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode 
										  AND EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,'','') SP WHERE SP.Item = CTDV.AttributeDefaultValueCode) )
										  Union all 
										  
											SELECT a.PimProductId,c.AttributeCode,ZPADV.AttributeDefaultValueCode AttributeValue ,a.ModifiedDate 
											FROM ZnodePimProductAttributeDefaultValue ZPPADV
											INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
											LEFT JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
											LEFT JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )
											INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode )
										)
										INSERT INTO @TBL_ProductIds (PimProductId ,ModifiedDate)
										SELECT PimProductId ,ModifiedDate
										FROM Cte_productIds WHERE   '+@FirstWhereClause+' GROUP BY PimProductId,ModifiedDate Order By ModifiedDate DESC 
										
										SELECT PimProductId 
										FROM @TBL_ProductIds 
										GROUP BY PimProductId,ModifiedDate 
										ORDER BY ModifiedDate DESC
										
										';

			
                     INSERT INTO @ProductIdTable(PimProductId)
                     EXEC (@SQL);
                     INSERT INTO @TransferPimProductId
					 SELECT PimProductId
                     FROM @ProductIdTable
                     UNION ALL 
					 SELECT 0

                     DELETE FROM @ProductIdTable;
                     SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(MAX)), @FirstWhereClause, ' 1 = 1') AS XML);
                 END
	            ELSE IF @PimProductId <> ''
			    BEGIN 
				 INSERT INTO @TransferPimProductId(id)
				 SELECT Item 
				 FROM dbo.split(@PimProductId,',')
			    END 

				--SELECT id , @IsProductNotIn
				--FROM @TransferPimProductId 
 
             EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = @Rows,
                  @PageNo = @PageNo,
                  @Order_BY = @Order_BY,
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = @AttributeCode,
                  @PimProductId = @TransferPimProductId,
                  @IsProductNotIn = @IsProductNotIn,
				  @OutProductId = @OutPimProductIds OUT
				  ;
		
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 


			 --SELECT * FROM @ProductIdTable

			 INSERT INTO @TBL_MediaAttribute (Id,PimAttributeId,AttributeCode )
			 SELECT Id,PimAttributeId,AttributeCode 
			 FROM [dbo].[Fn_GetProductMediaAttributeId]()
           
             SET @PimProductIds = SUBSTRING(
                                           (
                                               SELECT ','+CAST(PimProductId AS VARCHAR(100))
                                               FROM @ProductIdTable
                                               FOR XML PATH('')
                                           ), 2, 4000);
             SET @PimAttributeId = SUBSTRING( (SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000)	 
			  SET @AttributeCode = SUBSTRING( (SELECT ','+AttributeCode  FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000)	;
           
			 INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder
			  ,PimAttributedefaultValueId
             )
             EXEC Znode_GetAttributeDefaultValueLocaleNew
                  @PimAttributeId,
                  @LocaleId;



             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue
                  @PimProductIds,
                  @PimAttributeId,
                  @localeId;
				        		
			 INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
           
		 	INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
            
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT a.PimProductId ,CASE WHEN IsProductPublish = 1 THEN   'Published' WHEN IsProductPublish = 0 THEN 'Draft'  ELSE 'Not Published' END, 'PublishStatus',NULL
			FROM @ProductIdTable a 
			INNER JOIN ZnodePimProduct b ON (b.PimProductId = a.PimProductId)


			INSERT INTO @TBL_AttributeDetailsLocale (PimProductId ,PimAttributeId,AttributeCode )
			SELECT  TBLAD.PimProductId ,TBLAD.PimAttributeId,TBLAD.AttributeCode 
			    --   CASE WHEN CTDD.AttributeValue IS NULL THEN TBLAD.AttributeValue ELSE CTDD.AttributeValue END AttributeValue
			FROM @TBL_AttributeDetails TBLAD 
			GROUP BY  TBLAD.PimProductId ,TBLAD.PimAttributeId,TBLAD.AttributeCode 
			
		



		--	;With Cte_DistinctData  AS 
		--	(
		--	   SELECT DISTINCT PimProductId ,TBLADI.PimAttributeId 
		--	                                             ,SUBSTRING((SELECT ','+ TBADV.AttributeDefaultValue 
		--																 FROM  @TBL_AttributeDefaultValue TBADV 
		--																WHERE (TBADV.AttributeDefaultValueCode  = TBLADI.AttributeValue AND TBADV.PimAttributeId = TBLADI.PimAttributeId )
		--												  FOR XML PATH('') ),2,4000 ) AttributeValue 
		--	   FROM @TBL_AttributeDetails  TBLADI
		--	   INNER JOIN   @TBL_AttributeDefaultValue TBLMSW ON (TBLMSW.PimAttributeId = TBLADI.PimAttributeId)
		--	)

		--UPDATE TBLPP 
		--SET AttributeValue = CTDD.AttributeValue 
		--FROM  Cte_DistinctData CTDD 
		--INNER JOIN @TBL_AttributeDetailsLocale TBLPP ON (TBLPP.PimProductId = CTDD.PimProductId AND TBLPP.PimAttributeId  = CTDD.PimAttributeid)
		--WHERE CTDD.AttributeValue IS NOT NULL  
				
	    UPDATE TBLPP 
		SET AttributeValue = CTDD.AttributeValue 
		FROM  @TBL_AttributeDetails CTDD 
		INNER JOIN @TBL_AttributeDetailsLocale TBLPP ON (TBLPP.PimProductId = CTDD.PimProductId AND TBLPP.AttributeCode  = CTDD.AttributeCode)
		WHERE TBLPP.AttributeValue IS NULL 

		;WITH Cte_ProductMedia
               AS (SELECT DISTINCT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+[dbo].[Fn_GetMediaThumbnailMediaPath]( zm.PATH )
			   FROM ZnodeMedia AS ZM
               INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_MediaAttribute AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_MediaAttribute AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVaLue
			  FROM @TBL_AttributeDetailsLocale TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;

			    

		
		   	 SET @ProductXML =  '<MainProduct>'+ STUFF( (  SELECT '<Product>'+'<PimProductId>'+CAST(TBAD.PimProductId AS VARCHAR(50))+'</PimProductId>'+ STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetailsLocale TBADI      
															 WHERE TBADI.PimProductId = TBAD.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

			FROM @TBL_AttributeDetailsLocale TBAD
			INNER JOIN @ProductIdTable TBPI ON (TBAD.PimProductid = TBPI.PimProductId )
			GROUP BY TBAD.pimProductid,TBPI.RowId 
			ORDER BY TBPI.RowId 
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'


			  SELECT @RowsCount AS RowsCount;

             -- find the all locale values 
         END TRY
         BEGIN CATCH
		    SELECT ERROR_MESSAGE()
                DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductList_XML @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimProductId='+@PimProductId+',@IsProductNotIn='+CAST(@IsProductNotIn AS VARCHAR(50))+',@IsCallForAttribute='+CAST(@IsCallForAttribute AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductList_XML',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageProductTypeAssociationList]...';


GO

ALTER PROCEDURE [dbo].[Znode_ManageProductTypeAssociationList]
(   @WhereClause      NVARCHAR(MAX) = '',
    @Rows             INT           = 10,
    @PageNo           INT           = 1,
    @Order_BY         VARCHAR(1000) = '',
    @RelatedProductId INT           = 0,
    @IsAssociated     BIT           = 0,
    @RowsCount        INT OUT,
    @LocaleId         INT           = 1)
AS
/*
Summary: This Procedure is used to manage Product association
Unit Testing :
 EXEC [Znode_ManageProductTypeAssociationList] '', @RowsCount = 0,@RelatedProductId = 44
*/
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX), @AlternetOrderBy NVARCHAR(2000),@OutPimProductIds VARCHAR(max);
             DECLARE @DefaultLocaleId INT= Dbo.Fn_GetDefaultValue('Locale');
             DECLARE @DefaultAttributeFamily INT= Dbo.Fn_GetDefaultValue('PimFamily');
			 DECLARE @ProductIdTable TABLE (  PimProductId int, CountId int, RowId int IDENTITY(1,1));
			 DECLARE @ProductAttributeDetials TABLE ( PimProductId int, AttributeCode nvarchar(600), AttributeValue nvarchar(max), LocaleId int);
			 DECLARE @OrderByDisplay INT= 0;
			 DECLARE @ProductFinalDetails TABLE( PimProductId int, ProductName nvarchar(max), SKU nvarchar(max));             
			 DECLARE @PimProductId VARCHAR(MAX)= '';
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

			 IF @Order_BY LIKE '%DisplayOrder%'
             BEGIN
                SET @OrderByDisplay = 1;
             END;

            INSERT INTO @TransferPimProductId 
			SELECT PimProductId
			FROM ZnodePimProductTypeAssociation 
			WHERE PimParentProductId = @RelatedProductId
            ORDER BY CASE WHEN @Order_By LIKE '% DESC%' THEN CASE WHEN @OrderByDisplay = 1 THEN DisplayOrder ELSE 1 END ELSE 1 END DESC,
                    CASE WHEN @Order_By LIKE '% ASC%'  THEN CASE WHEN @OrderByDisplay = 1 THEN DisplayOrder ELSE 1 END ELSE 1 END
					
					
								
			
            EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = @Rows,
                  @PageNo = @PageNo,
                  @Order_BY = @Order_BY,
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = '',
                  @PimProductId = @TransferPimProductId,
                  @IsProductNotIn = @IsAssociated,
				  @OutProductId = @OutPimProductIds OUT
				  ;
	
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP            
       


			 DECLARE @PimProductIds VARCHAR(MAX)= SUBSTRING((SELECT ','+CAST(PimProductId AS VARCHAR(100)) FROM @ProductIdTable FOR XML PATH('')), 2, 4000);
			 DECLARE @DefaultAttributeCode VARCHAR(MAX)= SUBSTRING( (SELECT ','+AttributeCode  FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000);
            
             
			 DECLARE @TBL_AttributeDetails AS TABLE (PimProductId int, AttributeValue nvarchar(max), AttributeCode varchar(600), PimAttributeId int);

			 DECLARE @TBL_AttributeCode TABLE (PimAttributeId int, AttributeCode varchar(300));

			 INSERT INTO @TBL_AttributeCode( PimAttributeId, AttributeCode )
			 SELECT PimAttributeId, AttributeCode FROM ZnodePimAttribute AS ZPA WHERE EXISTS ( SELECT TOP 1 1 FROM dbo.split( @DefaultAttributeCode, ',' ) AS SP WHERE Sp.Item = ZPA.AttributeCode );
             DECLARE @TBL_AttributeDefaultValue TABLE (PimAttributeId INT, AttributeDefaultValueCode VARCHAR(100), IsEditable BIT,AttributeDefaultValue NVARCHAR(MAX),DisplayOrder INT);
             DECLARE @PimAttributeId VARCHAR(MAX);
             SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(TBAC.PimAttributeId AS VARCHAR(50)) FROM @TBL_AttributeCode TBAC
                                                     INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON(ZPADV.PimAttributeId = TBAC.PimAttributeId)FOR XML PATH('')), 2, 4000);
			 
			 INSERT INTO @TBL_AttributeDetails( PimProductId, AttributeValue, AttributeCode, PimAttributeId )
			 EXEC Znode_GetProductsAttributeValue @PimProductIds, @DefaultAttributeCode, @LocaleId;  
			 

             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1; 
             -- find the product families  
			 ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;

			  

             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
			
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
				
				-- LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
             --- Update the  product families name locale wise   
        UPDATE  @TBL_AttributeDetails SET PimAttributeId = 0 WHERE PimAttributeId IS nULL 
	     DECLARE @ProductXML XML 

		-- SELECT * FROM @TBL_AttributeDetails

	   	 SET @ProductXML =   '<MainProduct>'+ STUFF( (  SELECT '<Product>'
		                                                    +'<PimProductTypeAssociationId>'+CAST(ISNULL(ZPTA.PimProductTypeAssociationId,'') AS VARCHAR(50))+'</PimProductTypeAssociationId>'
															+'<PimProductId>'+CAST(zpp.PimProductId AS VARCHAR(50))+'</PimProductId>'
															+'<RelatedProductId>'+CAST(ISNULL(ZPTA.PimParentProductId,'') AS VARCHAR(50))+'</RelatedProductId>'
															+'<DisplayOrder>'+CAST(ZPTA.[DisplayOrder] AS VARCHAR(50))+'</DisplayOrder>'

		 + STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetails TBADI      
															 WHERE TBADI.PimProductId = zpp.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

			 FROM @ProductIdTable AS zpp
             LEFT JOIN ZnodePimProductTypeAssociation ZPTA ON(ZPTA.PimProductId = Zpp.PimProductId
                                                                    AND ZPTA.PimParentProductId = @RelatedProductId)
             ORDER BY CASE
                          WHEN @Order_By LIKE '% DESC%'
                          THEN CASE
                                   WHEN @OrderByDisplay = 1
                                   THEN ZPTA.DisplayOrder
								   ELSE 1
                               END
                          ELSE 1
                      END DESC,
                      CASE
                          WHEN @Order_By LIKE '% ASC%'
                          THEN CASE
                                   WHEN @OrderByDisplay = 1
                                   THEN ZPTA.DisplayOrder
                                   ELSE 1
                               END
                          ELSE 1
                      END,RowId
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'


			  SELECT @RowsCount AS RowsCount;

			    
	  
	       --  SELECT PimProductTypeAssociationId,
        --            ZPTA.PimParentProductId RelatedProductId,
        --            zpp.PimProductId ProductId,
        --            [ProductName],
        --            ProductType,
        --            ISNULL(zf.FamilyName, '') AS AttributeFamily,
        --            [SKU],
        --            [Price],
        --            [Quantity],
        --            CASE
        --                WHEN [IsActive] IS NULL
        --                THEN CAST(0 AS BIT)
        --                ELSE CAST([IsActive] AS BIT)
        --            END AS [IsActive],
        --            [ProductImage] AS ImagePath,
        --            [Assortment],
        --            @LocaleId AS LocaleId,
        --            ZPTA.[DisplayOrder]
        --     FROM @ProductIdTable AS zpp
        --          LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
        --          INNER JOIN
        --     (
        --         SELECT PimProductId,
        --                AttributeValue,
        --                AttributeCode
        --         FROM @TBL_AttributeDetails
        --     ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN(
								--								 [ProductName],
        --                                                         [SKU],
        --                                                         [Price],
        --                                                         [Quantity],
        --                                                         [IsActive],
        --                                                         [ProductType],
        --                                                         [ProductImage],
        --                                                         [Assortment],
        --                                                         [DisplayOrder]
								--								 )) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
        --          INNER JOIN ZnodePimProductTypeAssociation ZPTA ON(ZPTA.PimProductId = Zpp.PimProductId
        --                                                            AND ZPTA.PimParentProductId = @RelatedProductId)
             

					   --ORDER BY CASE
        --                  WHEN @Order_By LIKE '% DESC%'
        --                  THEN CASE
        --                           WHEN @OrderByDisplay = 1
        --                           THEN ZPTA.DisplayOrder
								--   ELSE 1
        --                       END
        --                  ELSE 1
        --              END DESC,
        --              CASE
        --                  WHEN @Order_By LIKE '% ASC%'
        --                  THEN CASE
        --                           WHEN @OrderByDisplay = 1
        --                           THEN ZPTA.DisplayOrder
        --                           ELSE 1
        --                       END
        --                  ELSE 1
        --              END,

        --              RowId;

         END TRY
         BEGIN CATCH
               DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductTypeAssociationList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RelatedProductId='+CAST(@RelatedProductId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductTypeAssociationList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishCatalog]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPublishCatalog]
(   @PimCatalogId INT,
    @UserId       INT,
    @Status       BIT = 0 OUT
	,@PublishTimeoutSeconds INT = 0 )
AS
/*
     Summary:- This Procedure is used to get data of catalog for publish 
     Unit Testing
	 begin tran
	  DECLARE @rerer INT =0 
     EXEC Znode_GetPublishCatalog 3 ,2,@rerer OUT SELECT @rerer
	 UPDATE ZnodePublishCatalogLog SET IsCatalogPublished = 0 WHERE IsCatalogPublished IS NULL 

	 -- SELECT CASE WHEN DATEDIFF(s, LogDateTIme ,GETDATE()) > 1500 THEN 1 ELSE 0 END, DATEDIFF(s, LogDateTIme,GETUTCDATE() ) ,*  FROM ZnodePublishCatalogLog  WHERE publishCatalogId = 5  AND isCatalogPublished IS NULL 
	 rollback tran
	*/
     BEGIN
         BEGIN TRAN GetPublishCatalog;
         BEGIN TRY
	   DECLARE @StartPublishProcess BIT = 0 
	   DECLARE @GetDate  DATETIME = dbo.Fn_GetDate();
	   DECLARE @PublishCatalogId INT= ISNULL((SELECT TOP 1 PublishCatalogId FROM ZnodePublishCatalog ZPC WHERE ZPC.PimCatalogId = @PimCatalogId), 0), @PublishCataloglogId INT= 0;
	   DECLARE @TBL_DeletePublishCataLogLogId TABLE (PublishCatalogLogId INT )
	   DECLARE @MaxCatalogLog INT = ( SELECT max(PublishcataloglogId) FROM ZnodePublishCataloglog  WHERE PimCatalogId = @PimCatalogId)
	  
	   INSERT INTO   @TBL_DeletePublishCataLogLogId
	   SELECT PublishCatalogLogId FROM ZnodePublishCatalogLog ZPCC WHERE ZPCC.PublishCatalogLogId < (@MaxCatalogLog - 2 )
		AND ZPCC.PimCatalogId = @PimCatalogId

  --TRUNCATE TABLE ZnodePublishedXML

DECLARE @Deleted_Rows INT;
SET @Deleted_Rows = 1;


WHILE (@Deleted_Rows > 0)
  BEGIN
   -- Delete some small number of rows at a time
  

  DELETE TOP (10000) ZnodePublishedXML WHERE PublishCatalogLogId IN (SELECT PublishCatalogLogId FROM   @TBL_DeletePublishCataLogLogId) 

  SET @Deleted_Rows = @@ROWCOUNT;
END


	   

	 --  DELETE FROM ZnodePublishCatalogLog  
	 --   WHERE ZnodePublishCatalogLog.PublishCatalogLogId < (@MaxCatalogLog - 2 )
		--AND ZnodePublishCatalogLog.PimCatalogId = @PimCatalogId
		 
		-- SELECT PublishCatalogLogId FROM   @TBL_DeletePublishCataLogLogId

           DECLARE @CatalogProfileId VARCHAR(MAX)= '';
                                                   
           IF EXISTS (SELECT TOP 1 1 FROM ZnodePublishcatalogLog  WHERE  IsCatalogPublished  IS NULL   )
			 BEGIN
				IF EXISTS (SELECT TOP 1 1 FROM ZnodePublishCatalogLog  WHERE  IsCatalogPublished IS NULL AND DATEDIFF(s,LogDateTime,@GetDate) > CASE WHEN @PublishTimeoutSeconds = 0 THEN 1500 ELSE @PublishTimeoutSeconds END  ) 
				   BEGIN 
			  
					  UPDATE  ZnodePublishCatalogLog SET IsCatalogPublished = 0 WHERE  PublishCatalogId =@PublishCatalogId  AND IsCatalogPublished   IS NULL
					  SET @StartPublishProcess = 0
					  SET @Status = 1;
				   END 
			    ELSE 
				   BEGIN 
					  SET @StartPublishProcess =1
					  SET @Status = 0;
				   END 
			 END 
		   ELSE 
		     BEGIN
			    SET @StartPublishProcess = 0
			    SET @Status = 1;
		     END 	

		   IF @PublishCatalogId <> 0 AND @StartPublishProcess = 0 
                 BEGIN
					  UPDATE ZnodePublishCatalogLog SET  IsCatalogPublished = 0 WHERE PublishCatalogId = @PublishCatalogId AND IsCatalogPublished IS NULL

					  UPDATE ZPC SET CatalogName = ZC.CatalogName,ExternalId = ZC.ExternalId,PimCatalogId= @PimCatalogId,CreatedBy = @UserId,
					  CreatedDate = @GetDate,ModifiedBy = @UserId,ModifiedDate = @GetDate FROM ZnodePublishCatalog ZPC INNER JOIN ZnodePimCatalog ZC ON(ZC.PimCatalogId = ZPC.PimCatalogId)
					  WHERE ZPC.PimCatalogId = @PimCatalogId;
              
			  		  INSERT INTO ZnodePublishCatalogLog (PublishCatalogId,IsCatalogPublished,pimCatalogId,UserId,LogDateTime,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
					  SELECT @PublishCatalogId,NULL,@PimCatalogId,@UserId,@GetDate,@UserId,@GetDate,@UserId,@GetDate;

					  SET @PublishCataloglogId = SCOPE_IDENTITY();
				 END;
           ELSE IF @StartPublishProcess = 0 
                 BEGIN
					  INSERT INTO ZnodePublishCatalog (PimCatalogId,CatalogName,ExternalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
                      SELECT PimCatalogId,CatalogName,ExternalId,@UserId,@GetDate,@UserId,@GetDate FROM ZnodePimCatalog AS ZPC WHERE ZPC.PimCatalogId = @PimCatalogId;
                      
					  SET @PublishCatalogId = SCOPE_IDENTITY();
                     
					  INSERT INTO ZnodePublishCatalogLog (PublishCatalogId,IsCatalogPublished,PimcatalogId ,UserId,LogDateTime,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
                      SELECT @PublishCatalogId,NULL,@PimCatalogId,@UserId,@GetDate,@UserId,@GetDate,@UserId,@GetDate;

                      SET @PublishCataloglogId = SCOPE_IDENTITY();
                 END;

				 -- here find the profile attached to the catalog 
          SET @CatalogProfileId = SUBSTRING((SELECT ','+CAST(ProfileId AS VARCHAR(20)) FROM ZnodeProfileCatalog ZPC WHERE PimCatalogId = @PimCatalogId FOR XML PATH('')), 2, 4000);              

	      SELECT PublishCatalogId ZnodeCatalogId,CatalogName,@CatalogProfileId TempProfileIds,@PublishCataloglogId VersionId 
		  FROM ZnodePublishCatalog ZPC
          WHERE PublishCatalogId = @PublishCatalogId ;
  
		COMMIT TRAN GetPublishCatalog;
		
       END TRY
       BEGIN CATCH
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishCatalog @PimCatalogId = '+CAST(@PimCatalogId AS VARCHAR(50))+',@UserId ='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             ROLLBACK TRAN GetPublishCatalog;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishCatalog',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
       END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishCategory]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetPublishCategory]
(   @PublishCatalogId INT,
    @UserId           INT,
    @VersionId        INT,
    @Status           BIT = 0 OUT,
    @IsDebug          BIT = 0)
AS 
/*
       Summary:Publish category with their respective products and details 
	            The result is fetched in xml form   
       Unit Testing   
       Begin transaction 
       
       EXEC [Znode_GetPublishCategory] @PublishCatalogId = 3,@VersionId = 0 ,@UserId =2 ,@IsDebug = 1 
     
       Rollback Transaction 
	*/
     BEGIN
         BEGIN TRAN GetPublishCategory;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @LocaleId INT= 0, @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId(), @Counter INT= 1, @MaxId INT= 0, @CategoryIdCount INT;
             DECLARE @IsActive BIT= [dbo].[Fn_GetIsActiveTrue]();
             DECLARE @AttributeIds VARCHAR(MAX)= '', @PimCategoryIds VARCHAR(MAX)= '', @DeletedPublishCategoryIds VARCHAR(MAX)= '', @DeletedPublishProductIds VARCHAR(MAX);
             --get the pim catalog id 
			 DECLARE @PimCatalogId INT=(SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId); 

             DECLARE @TBL_AttributeIds TABLE
             (PimAttributeId       INT,
              ParentPimAttributeId INT,
              AttributeTypeId      INT,
              AttributeCode        VARCHAR(600),
              IsRequired           BIT,
              IsLocalizable        BIT,
              IsFilterable         BIT,
              IsSystemDefined      BIT,
              IsConfigurable       BIT,
              IsPersonalizable     BIT,
              DisplayOrder         INT,
              HelpDescription      VARCHAR(MAX),
              IsCategory           BIT,
              IsHidden             BIT,
              CreatedDate          DATETIME,
              ModifiedDate         DATETIME,
              AttributeName        NVARCHAR(MAX),
              AttributeTypeName    VARCHAR(300)
             );
             DECLARE @TBL_AttributeDefault TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder   INT
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             DECLARE @TBL_LocaleIds TABLE
             (RowId     INT IDENTITY(1, 1),
              LocaleId  INT,
              IsDefault BIT
             );
             DECLARE @TBL_PimCategoryIds TABLE
             (PimCategoryId       INT,
              PimParentCategoryId INT,
              DisplayOrder        INT,
              ActivationDate      DATETIME,
              ExpirationDate      DATETIME,
              CategoryName        NVARCHAR(MAX),
              ProfileId           VARCHAR(MAX),
              IsActive            BIT
             );
             DECLARE @TBL_PublishPimCategoryIds TABLE
             (PublishCategoryId       INT,
              PimCategoryId           INT,
              PublishProductId        varchar(max),
              PublishParentCategoryId INT
             );
             DECLARE @TBL_DeletedPublishCategoryIds TABLE
             (PublishCategoryId INT,
              PublishProductId  INT
             );
             DECLARE @TBL_CategoryXml TABLE
             (PublishCategoryId INT,
              CategoryXml       XML,
              LocaleId          INT
             );
             INSERT INTO @TBL_LocaleIds
             (LocaleId,
              IsDefault
             )
			  -- here collect all locale ids
             SELECT LocaleId,IsDefault FROM ZnodeLocale WHERE IsActive = @IsActive;

             INSERT INTO @TBL_PimCategoryIds(PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive)
             SELECT PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive FROM ZnodePimCategoryHierarchy AS ZPCH WHERE ZPCH.PimCatalogId = @PimCatalogId; 
             -- AND IsActive = @IsActive ; -- As discussed with @anup active flag maintain on demo site 23/12/2016

			 -- here is find the deleted publish category id on basis of publish catalog
             INSERT INTO @TBL_DeletedPublishCategoryIds(PublishCategoryId,PublishProductId)
             SELECT ZPC.PublishCategoryId,ZPCP.PublishProductId FROM ZnodePublishCategoryProduct ZPCP
             INNER JOIN ZnodePublishCategory AS ZPC ON(ZPCP.PublishCategoryId = ZPC.PublishCategoryId AND ZPCP.PublishCatalogId = ZPC.PublishCatalogId)                                                  
             INNER JOIN ZnodePublishProduct ZPP ON(zpp.PublishProductId = zpcp.PublishProductId AND zpp.PublishCatalogId = zpcp.PublishCatalogId)
             INNER JOIN ZnodePublishCatalog ZPCC ON(ZPCC.PublishCatalogId = ZPCP.PublishCatalogId)
             WHERE ZPC.PublishCatalogId = @PublishCataLogId AND NOT EXISTS(SELECT TOP 1 1 FROM ZnodePimCatalogCategory AS TBPC WHERE TBPC.PimCategoryId = ZPC.PimCategoryId
			 AND TBPC.PimProductId = ZPP.PimProductId AND TBPC.PimCatalogId = ZPCC.PimCatalogId);

			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishCategoryIds = ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) FROM @TBL_DeletedPublishCategoryIds AS ZPC
                                              GROUP BY ZPC.PublishProductId FOR XML PATH('') ), 2, 4000), '');
			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishProductIds = '';
			 -- Delete the publish category id 
	
             EXEC Znode_DeletePublishCatalog @PublishCatalogIds = @PublishCatalogId,@PublishCategoryIds = @DeletedPublishCategoryIds,@PublishProductIds = @DeletedPublishProductIds; 


			 		
             MERGE INTO ZnodePublishCategory TARGET USING @TBL_PimCategoryIds SOURCE ON(TARGET.PimCategoryId = SOURCE.PimCategoryId AND TARGET.PublishCatalogId = @PublishCataLogId)
			 WHEN MATCHED THEN UPDATE SET TARGET.PimParentCategoryId = SOURCE.PimParentCategoryId,TARGET.CreatedBy = @UserId,TARGET.CreatedDate = @GetDate,
             TARGET.ModifiedBy = @UserId,TARGET.ModifiedDate = @GetDate
             WHEN NOT MATCHED THEN INSERT(PimCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) VALUES(SOURCE.PimCategoryId,@PublishCatalogId,@UserId,@GetDate,@UserId,@GetDate)
             OUTPUT INSERTED.PublishCategoryId,INSERTED.PimCategoryId INTO @TBL_PublishPimCategoryIds(PublishCategoryId,PimCategoryId);

             UPDATE TBPC SET PublishParentCategoryId = TBPCS.PublishCategoryId FROM @TBL_PublishPimCategoryIds TBPC
             INNER JOIN @TBL_PimCategoryIds TBC ON(TBC.PimCategoryId = TBPC.PimCategoryId)
             INNER JOIN @TBL_PublishPimCategoryIds TBPCS ON(TBC.PimParentCategoryId = TBPCS.PimCategoryId) WHERE TBC.PimParentCategoryId IS NOT NULL;
           
		     -- here update the publish parent category id
             UPDATE ZPC SET [PublishParentCategoryId] = TBPC.[PublishParentCategoryId] FROM ZnodePublishCategory ZPC
             INNER JOIN @TBL_PublishPimCategoryIds TBPC ON(ZPC.PublishCategoryId = TBPC.PublishCategoryId) WHERE TBPC.[PublishParentCategoryId] IS NOT NULL;

			 -- product are published here 
            --  EXEC Znode_GetPublishProducts @PublishCatalogId,0,@UserId,1,0,0;

             SET @MaxId =(SELECT MAX(RowId)FROM @TBL_LocaleIds);
             SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(50)) FROM @TBL_PublishPimCategoryIds FOR XML PATH('')), 2, 4000);

             WHILE @Counter <= @MaxId -- Loop on Locale id 
                 BEGIN
                     SET @LocaleId =(SELECT LocaleId FROM @TBL_LocaleIds WHERE RowId = @Counter);
                     SET @AttributeIds = SUBSTRING((SELECT ','+CAST(ZPCAV.PimAttributeId AS VARCHAR(50)) FROM ZnodePimCategoryAttributeValue ZPCAV 
										 WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC WHERE TBPC.PimCategoryId = ZPCAV.PimCategoryId)FOR XML PATH('')), 2, 4000);
                     SET @CategoryIdCount =(SELECT COUNT(1) FROM @TBL_PimCategoryIds);

                     INSERT INTO @TBL_AttributeIds (PimAttributeId,ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined,
					 IsConfigurable,IsPersonalizable,DisplayOrder,HelpDescription,IsCategory,IsHidden,CreatedDate,ModifiedDate,AttributeName,AttributeTypeName)
                     EXEC [Znode_GetPimAttributesDetails] @AttributeIds,@LocaleId;

                     INSERT INTO @TBL_AttributeDefault (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
                     EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @AttributeIds,@LocaleId;

                     INSERT INTO @TBL_AttributeValue (PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
                     EXEC [dbo].[Znode_GetCategoryAttributeValue] @PimCategoryIds,@AttributeIds,@LocaleId;

                     WITH Cte_UpdateDefaultAttributeValue
                     AS (SELECT TBAV.PimCategoryId,TBAV.PimAttributeId,SUBSTRING((SELECT ','+AttributeDefaultValue FROM @TBL_AttributeDefault TBD WHERE TBAV.PimAttributeId = TBD.PimAttributeId
						AND EXISTS(SELECT TOP 1 1 FROM Split(TBAV.CategoryValue, ',') SP WHERE SP.Item = TBD.AttributeDefaultValueCode)FOR XML PATH('')), 2, 4000) DefaultCategoryAttributeValue
						FROM @TBL_AttributeValue TBAV WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_AttributeDefault TBAD WHERE TBAD.PimAttributeId = TBAV.PimAttributeId))
					 
					 -- update the default value with locale 
                     UPDATE TBAV SET CategoryValue = CTUDFAV.DefaultCategoryAttributeValue FROM @TBL_AttributeValue TBAV 
					 INNER JOIN Cte_UpdateDefaultAttributeValue CTUDFAV ON(CTUDFAV.PimCategoryId = TBAV.PimCategoryId AND CTUDFAV.PimAttributeId = TBAV.PimAttributeId);
					 
					 -- here is update the media path  
                     WITH Cte_productMedia
                     AS (SELECT TBA.PimCategoryId,TBA.PimAttributeId,[dbo].[FN_GetThumbnailMediaPathPublish](SUBSTRING((SELECT ','+zm.PATH FROM ZnodeMedia ZM WHERE EXISTS
					    (SELECT TOP 1 1 FROM dbo.split(TBA.CategoryValue, ',') SP WHERE SP.Item = CAST(Zm.MediaId AS VARCHAR(50)))FOR XML PATH('')), 2, 4000)) CategoryValue
						FROM @TBL_AttributeValue TBA WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetProductMediaAttributeId]() FNMA WHERE FNMA.PImAttributeId = TBA.PimATtributeId))
                         
					 UPDATE TBAV SET CategoryValue = CTCM.CategoryValue FROM @TBL_AttributeValue TBAV INNER JOIN Cte_productMedia CTCM ON(CTCM.PimCategoryId = TBAV.PimCategoryId
					 AND CTCM.PimAttributeId = TBAV.PimAttributeId);

                     WITH Cte_PublishProductIds
					 AS (SELECT TBPC.PublishcategoryId,SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) FROM ZnodePublishCategoryProduct ZPCP WHERE ZPCP.PublishCategoryId = TBPC.publishCategoryId
                        AND ZPCP.PublishCatalogId = @PublishCatalogId FOR XML PATH('')), 2, 8000) PublishProductId FROM @TBL_PublishPimCategoryIds TBPC)
                          
					 UPDATE TBPPC SET PublishProductId = CTPP.PublishProductId FROM @TBL_PublishPimCategoryIds TBPPC INNER JOIN Cte_PublishProductIds CTPP ON(TBPPC.PublishCategoryId = CTPP.PublishCategoryId);

                     WITH Cte_CategoryProfile
                     AS (SELECT PimCategoryId,SUBSTRING(( SELECT ','+CAST(ProfileId AS VARCHAR(50)) FROM ZnodeProfileCatalog ZPC INNER JOIN ZnodeProfileCategoryHierarchy ZPRCC ON(ZPRCC.PimCategoryHierarchyId = ZPCC.PimCategoryHierarchyId
                        AND ZPRCC.ProfileCatalogId = ZPC.ProfileCatalogId) WHERE ZPC.PimCatalogId = ZPCC.PimCatalogId FOR XML PATH('')), 2, 4000) ProfileIds
                        FROM ZnodePimCategoryHierarchy ZPCC WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC WHERE TBPC.PimCategoryId = ZPCC.PimCategoryId AND ZPCC.PimCatalogId = @PimCatalogId))
                          
				     UPDATE TBPC SET TBPC.ProfileId = CTCP.ProfileIds FROM @TBL_PimCategoryIds TBPC LEFT JOIN Cte_CategoryProfile CTCP ON(CTCP.PimCategoryId = TBPC.PimCategoryId);
                     
					 UPDATE TBPC SET TBPC.CategoryName = TBAV.CategoryValue FROM @TBL_PimCategoryIds TBPC INNER JOIN @TBL_AttributeValue TBAV ON(TBAV.PimCategoryId = TBPC.PimCategoryId
                     AND EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetCategoryNameAttribute]() FNGCNA WHERE FNGCNA.PimAttributeId = TBAV.PimAttributeId));

					 -- here update the publish category details 
                     WITH Cte_UpdateCategoryDetails
                     AS (SELECT TBC.PimCategoryId,PublishCategoryId,CategoryName FROM @TBL_PimCategoryIds TBC
                        INNER JOIN @TBL_PublishPimCategoryIds TBPPC ON(TBC.PimCategoryId = TBPPC.PimCategoryId))

                     MERGE INTO ZnodePublishCategoryDetail TARGET USING Cte_UpdateCategoryDetails SOURCE ON(TARGET.PublishCategoryId = SOURCE.PublishCategoryId
                     AND TARGET.LocaleId = @LocaleId)
                     WHEN MATCHED THEN UPDATE SET PublishCategoryId = SOURCE.PublishcategoryId,PublishCategoryName = SOURCE.CategoryName,LocaleId = @LocaleId,ModifiedBy = @userId,ModifiedDate = @GetDate
                     WHEN NOT MATCHED THEN INSERT(PublishCategoryId,PublishCategoryName,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) VALUES
                     (SOURCE.PublishCategoryId,SOURCE.CategoryName,@LocaleId,@userId,@GetDate,@userId,@GetDate);

                     WITH Cte_CategoryXML
                     AS (SELECT PublishcategoryId,PimCategoryId,(SELECT @VersionId VersionId,PublishCategoryId ZnodeCategoryId,@PublishCatalogId ZnodeCatalogId
																		,PublishParentCategoryId TempZnodeParentCategoryIds,ZPC.CatalogName ,
																		 ISNULL(DisplayOrder, '0') DisplayOrder,@LocaleId LocaleId,ActivationDate 
																		 ,ExpirationDate,TBC.IsActive,ISNULL(CategoryName, '') Name,ProfileId TempProfileIds,ISNULL(PublishProductId, '') TempProductIds
                        FROM @TBL_PublishPimCategoryIds TBPC 
						INNER JOIN ZnodePublishCatalog ZPC ON (PublishCatalogId= @PublishCatalogId)
						INNER JOIN @TBL_PimCategoryIds TBC ON(TBC.PimCategoryId = TBPC.PimCategoryId) WHERE TBPC.PublishCategoryId = TBPCO.PublishCategoryId 
						FOR XML PATH('')) CategoryXml FROM @TBL_PublishPimCategoryIds TBPCO),

                     Cte_CategoryAttributeXml
                     AS (SELECT CTCX.PublishCategoryId,'<CategoryEntity>'+ISNULL(CategoryXml, '')+ISNULL((SELECT(SELECT TBA.AttributeCode,TBA.AttributeName,ISNULL(IsUseInSearch, 0) IsUseInSearch,
                        ISNULL(IsHtmlTags, 0) IsHtmlTags,ISNULL(IsComparable, 0) IsComparable,TBAV.CategoryValue AttributeValues,TBA.AttributeTypeName FROM @TBL_AttributeValue TBAV
                        INNER JOIN @TBL_AttributeIds TBA ON(TBAV.PimAttributeId = TBA.PimAttributeId) LEFT JOIN ZnodePimFrontendProperties ZPFP ON(ZPFP.PimAttributeId = TBA.PimAttributeId)
                        WHERE CTCX.PimCategoryId = TBAV.PimCategoryId AND TBAO.PimAttributeId = TBA.PimAttributeId FOR XML PATH('AttributeEntity'), TYPE) FROM @TBL_AttributeIds TBAO
                        FOR XML PATH('Attributes')), '')+'</CategoryEntity>' CategoryXMl FROM Cte_CategoryXML CTCX)

                     INSERT INTO @TBL_CategoryXml(PublishCategoryId,CategoryXml,LocaleId)
                     SELECT PublishCategoryId,CategoryXml,@LocaleId LocaleId FROM Cte_CategoryAttributeXml;
                     DELETE FROM @TBL_AttributeIds;
                     DELETE FROM @TBL_AttributeDefault;
                     DELETE FROM @TBL_AttributeValue;
                     SET @Counter = @Counter + 1;
                 END;

             UPDATE ZnodePublishCatalogLog SET PublishCategoryId = SUBSTRING((SELECT ','+CAST(PublishCategoryId AS VARCHAR(50)) FROM @TBL_CategoryXml
			 GROUP BY PublishCategoryId																				
             FOR XML PATH('')), 2, 4000), IsCategoryPublished = 1 WHERE PublishCatalogLogId = @VersionId;

             DELETE FROM ZnodePublishedXml WHERE PublishCataloglogId = @VersionId;
            
             INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsCategoryXML,IsProductXML,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
             SELECT @VersionId PublishCataloglogId,PublishCategoryId,CategoryXml,1,0,LocaleId,@UserId,@GetDate,@UserId,@GetDate FROM @TBL_CategoryXml WHERE @VersionId <> 0;
             
			 SELECT CategoryXml  FROM @TBL_CategoryXml;
            
             COMMIT TRAN GetPublishCategory;
			 
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE();
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishCategory @PublishCatalogId = '+CAST(@PublishCatalogId AS VARCHAR(50))+',@UserId ='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             ROLLBACK TRAN GetPublishCategory;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishCategory',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishCMSWidgetTitle]...';


GO

ALTER PROCEDURE Znode_GetPublishCMSWidgetTitle
(
 @PortalId INT = 0  
)
AS 
/*
 This Procedure is used to get the record of content pages for publish  portal 
  EXEC 
*/
BEGIN 
 BEGIN TRY 
  SET NOCOUNT ON 
   
   DECLARE @TBL_LocaleId TABLE ( RowId INT IDENTITY(1,1) PRIMARY KEY , LocaleId INT )
   DECLARE @TBL_GetDATATable TABLE (WidgetTitleConfigurationId INT ,MappingId INT ,  PortalId INT 
			, LocaleId INT , MediaPath   VARCHAR(300) , Title nvarchar (600) ,TitleCode nvarchar(600) ,TypeOFMapping NVARCHAR(100) 
			,Url nvarchar(600)  , WidgetsKey  NVARCHAR(256))
   INSERT INTO @TBL_LocaleId (LocaleId )
   SELECT LocaleId 
   FROm ZnodeLocale 
   WHERE IsActive = 1 
    DECLARE @LocaleId INT  ,@DefaultLocaleId INT = dbo.FN_GEtDEFAULTLocaleID() 
   DECLARE @CounterId INT = 1 , @MaxRowId INT = (SELECT Max(RowId ) FROM @TBL_LocaleId)  

   WHILE @CounterId <= @MaxRowId
   BEGIN 
   SET @LocaleId = (SELECT TOP 1 LocaleID FROM @TBL_LocaleId WHERe RowId =@CounterId )  
  
   DECLARE @TBL_TitleWidgetsData TABLE (CMSWidgetTitleConfigurationId INT , CMSWidgetTitleConfigurationLocaleId INT )
  ;With Cte_GetContentPagesId AS 
   (
     SELECT ZCWTC.CMSWidgetTitleConfigurationId , ZCWTCL.CMSWidgetTitleConfigurationLocaleId ,LocaleId
	 FROM ZnodeCMSWidgetTitleConfiguration ZCWTC 
	 INNER JOIN ZnodeCMSWidgetTitleConfigurationLocale  ZCWTCL ON (ZCWTCL.CMSWidgetTitleConfigurationId = ZCWTC.CMSWidgetTitleConfigurationId )
     WHERE ZCWTCL.LocaleId   IN (@DefaultLocaleId,@LocaleId) 
   ) 
   , Cte_LocaleIdFiletr AS 
   (
    SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
    FROM Cte_GetContentPagesId CET1 
	WHERE LocaleId = @LocaleId
    )
	,Cte_CompleteRecords AS 
	(
	 SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	 FROM Cte_LocaleIdFiletr
	 UNION ALL 
	 SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	 FROM Cte_GetContentPagesId  CTE2
	 WHERE Cte2.localeId = @DefaultLocaleId
	 AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_LocaleIdFiletr CTE1 WHERE Cte1.CMSWidgetTitleConfigurationId = CTE2.CMSWidgetTitleConfigurationId )
	
	
	)

	INSERT INTO @TBL_TitleWidgetsData (CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId)
	SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	FROM Cte_CompleteRecords 
	 
	 INSERT INTO @TBL_GetDATATable (WidgetTitleConfigurationId  ,MappingId  ,  PortalId  , LocaleId  , MediaPath   , Title  ,TitleCode  ,TypeOFMapping  ,Url   , WidgetsKey )
	 SELECT ZCWTC.CMSWidgetTitleConfigurationId WidgetTitleConfigurationId,ZCWTC.CMSMappingId MappingId,ZCWTC.CMSMappingId  PortalId,@LocaleId LocaleId,ZM.[path]MediaPath,ZCWTCL.Title,ZCWTC.TitleCode,ZCWTC.TypeOFMapping,ZCWTCl.Url,ZCWTC.WidgetsKey
	 FROM ZnodeCMSWidgetTitleConfiguration ZCWTC 
	 INNER JOIN ZnodeCMSWidgetTitleConfigurationLocale  ZCWTCL ON (ZCWTCL.CMSWidgetTitleConfigurationId = ZCWTC.CMSWidgetTitleConfigurationId )
	 INNER JOIN @TBL_TitleWidgetsData TBLW ON (TBLW.CMSWidgetTitleConfigurationLocaleId  =  ZCWTCL.CMSWidgetTitleConfigurationLocaleId)
	 LEFT JOIN ZnodeMedia ZM ON (Zm.MediaId = ZCWTCL.MediaId)
	 WHERE ZCWTC.TypeOFMapping = 'PortalMapping'
	 AND ZCWTC.CMSMappingId  = @PortalId

	 SET @CounterId = @CounterId+1 
	 DELETE FROM @TBL_TitleWidgetsData
   END 

   SELECT WidgetTitleConfigurationId  ,MappingId  ,  PortalId  , LocaleId  , MediaPath   , Title  ,TitleCode  ,TypeOFMapping  ,Url   , WidgetsKey
   FROM @TBL_GetDATATable

   END TRY 
   BEGIN CATCH 
   SELECT ERROR_MESSAGE()
   END CATCH 
   
END
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductPricingBySku]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetPublishProductPricingBySku]
(   @SKU            VARCHAR(MAX),
    @PortalId       INT,
    @currentUtcDate VARCHAR(100), -- this date is required for the user date r
    @UserId         INT          = NULL, -- userid is optional 
    @PublishProductId TransferId READONLY,
	@IsDebug        BIT          = 0
	)
AS 
   /* 
    --Summary: Retrive Price of product from pricelist
    --Input Parameters:
    --UserId, SKU(Comma separated multiple), PortalId
    --Conditions :
    --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --2. If There is no any PriceList having given sku associated to profile  then check for  
    --PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --4. If There is no any PriceList having given sku associated to user  then check for  
    --PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --5. If There is no any PriceList having given sku associated to account  then check for  
    --PriceList associated Profile having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --6. If There is no any PriceList having given sku associated to Profile  then check for  
    --PriceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --7. If in each case Precedence is same then get PriceList according to higher PriceListId ActivationDate and ExpirationDate for PriceList and SKU also.
    --8. Also get the Tier Price, Tier Quantity of given sku.
    --Unit Testing   
    --Exec Znode_GetPublishProductPricingBySku  @SKU = 'Simple15',@PortalId = 1, @currentUtcDate = '2016-09-17 00:00:00.000'
	*/
    
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );

			  DECLARE @DefaultLocaleId INT = dbo.FN_GETDEFAULTLocaleId()

			 IF @SKU = '' 
			 BEGIN 
			  INSERT INTO @Tlb_SKU(SKU)
			  	SELECT SKU 
					FROM ZnodePublishProductDetail a
					INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId )
					WHERE LocaleId = @DefaultLocaleId

			 END 
			 ELSE 
			 BEGIN
			   INSERT INTO @Tlb_SKU(SKU)
                    SELECT Item
                    FROM Dbo.split(@SKU, ',');
			  

			 END 

           
             DECLARE @TLB_SKUPRICELIST TABLE
             (SKU          VARCHAR(100),
              RetailPrice  NUMERIC(28, 6),
              SalesPrice   NUMERIC(28, 6),
              PriceListId  INT,
              TierPrice    NUMERIC(28, 6),
              TierQuantity NUMERIC(28, 6)
             );
             DECLARE @PriceListId INT, @PriceRoundOff INT;
             SELECT @PriceRoundOff = CONVERT( INT, FeatureValues)
             FROM ZnodeGlobalSetting
             WHERE FeatureName = 'PriceRoundOff';
		
             --Retrive portal wise pricelist  
             DECLARE @Tbl_PortalWisePriceList TABLE
             (PriceListId    INT,
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              Precedence     INT,
			  SKU NVARCHAR(300)
             );
             --Retrive price for respective pricelist   
             DECLARE @Tbl_PriceListWisePrice TABLE
             (PriceListId    INT,
              SKU            VARCHAR(300),
              SalesPrice     NUMERIC(28, 6),
              RetailPrice    NUMERIC(28, 6),
              UomId          INT,
              UnitSize       NUMERIC(28, 6),
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              TierPrice      NUMERIC(28, 6),
              TierQuantity   NUMERIC(28, 6),
              TierUomId      INT,
              TierUnitSize   NUMERIC(28, 6)
			 
             );
			 DECLARE @Tbl_SKUWisePriceList TABLE (PriceListId INT, SKU NVARCHAR(300))

			 insert into @Tbl_SKUWisePriceList(PriceListId,SKU) 
			 SELECT  PriceListId,SKU from ZnodePrice where SKU in (Select SKU from @Tlb_SKU )
			 Union
			 SELECT PriceListId,SKU  from ZnodePriceTier where SKU in (Select SKU from @Tlb_SKU )
			 
			 --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
            IF @UserId = 0
                 BEGIN
					INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
					SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
					FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
						ON b.PortalProfileId = c.PortalProfileID AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
						inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
					WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId
					ORDER BY b.Precedence;
		
			 
                     --2. If There is no any PriceList having given sku associated to profile  then check for PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
			IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
							INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId 
							inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
							AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
							WHERE @CurrentUtcDate BETWEEN a.ActivationDate 
							AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							ORDER BY b.Precedence
							;
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						
                         END;
                 END;
                     --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
             ELSE
                 BEGIN
				 
                     INSERT INTO @Tbl_PortalWisePriceList (PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
                            SELECT a.PriceListId, ActivationDate,ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                            FROM ZnodePriceList AS a INNER JOIN ZnodePriceListUser AS b ON a.PriceListId = b.PriceListId
                                 INNER JOIN ZnodePortalunit zupu ON a.CurrencyId = zupu.CurrencyId AND zupu.PortalId = @PortalId
								 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                            WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.UserID = @UserId
							ORDER BY b.Precedence ;

                --4. If There is no any PriceList having given sku associated to user  then check for PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
						BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
								   SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), c.Precedence,tsw.SKU
								   FROM ZnodePriceList AS a INNER JOIN ZnodePriceListAccount AS c ON a.PriceListId = c.PriceListId
										INNER JOIN ZnodeUser AS d ON c.Accountid = d.Accountid INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId 
										AND zupu.PortalId = @PortalId
										inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								   WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND d.UserID = @UserId
									ORDER BY c.Precedence
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						 END;
                     -- 5. If There is no any PriceList having given sku associated to account  then check for PriceList associated Profile having PortalId and having higher   Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
				where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
                             INSERT INTO @Tbl_PortalWisePriceList(PriceListId,ActivationDate,ExpirationDate,Precedence,SKU)
                                    SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                                    FROM ZnodePriceList AS a
                                         INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId 
										 INNER JOIN ZnodePortalProfile AS c ON b.PortalProfileId = c.PortalProfileId  AND c.PortalId = @PortalId 
                                         INNER JOIN dbo.ZnodeUserProfile zup ON c.ProfileId = zup.ProfileId AND IsDefault = 1
                                         INNER JOIN ZnodePortalunit zupu ON a.CurrencyId = zupu.CurrencyId AND zupu.PortalId = @PortalId
										 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                                    WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND zup.UserId = @UserId;
									--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )

					     END;
                   

                     ---6. If There is no any PriceList having given sku associated to Profile  then check for priceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
                  				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
								where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
								INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId AND  zupu.PortalId = b.PortalId
								inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							    ORDER BY b.Precedence
								;
								--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
                         END;
						 
				--IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				--WHERE tspl.SKU = tpwl.SKU))
				--BEGIN
				
				--	INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
				--	SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
				--	FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
				--	ON b.ProfileId = c.ProfileId AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
				--	inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
				--	AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
				--	WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId;
				--END

                 END;
			
             SET @PriceListId = 0;
             -- Check Activation date and expiry date 
             IF EXISTS( SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList)
                 BEGIN
				
                     -- Declare  @d datetime
                     -- SET @d = @GetDate
                     -- Select ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ),b.Precedence,* from ZnodePriceList  a inner join ZnodePriceListPortal b on a.PriceListId = b.PriceListId where @d between ISNULL(ActivationDate,@d) 
                     -- and ISNULL(ExpirationDate,@GetDate ) --and a.PriceListId <>  80
                     -- Order by ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ) ,  b.Precedence DESC 
                     --	Retrive pricelist wise price
                   INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize )
				   SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize
				   FROM [ZnodePrice] AS ZP 
				   INNER JOIN @Tlb_SKU AS TSKU ON ZP.SKU = TSKU.SKU 
				   LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND ZP.PriceListId = ZPT.PriceListId
				   WHERE ZP.PriceListId IN
				   (
					   SELECT TOP 1 PriceListId
					   FROM @Tbl_PortalWisePriceList AS TBPWPL
					   WHERE  TBPWPL.SKU = ZP.SKU
					   ORDER BY Precedence 
				   );
				  


                     -- Check Activation date and expiry date 
                    INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					   SELECT DISTINCT  PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity
					   FROM @Tbl_PriceListWisePrice
					   WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					   
					  
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					   SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity
					   FROM @Tbl_PriceListWisePrice
					   WHERE SKU NOT IN(SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null 
				
                 END;
                     -- Retrive data as per precedance from ZnodePriceListPortal table  
					
             ELSE
                 BEGIN
                     SET @PriceListId =( SELECT TOP 1 PriceListId FROM @Tbl_PortalWisePriceList ORDER BY Precedence  );

                     --Retrive pricelist wise price  
                     INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize )
					 SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), 
							ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize
					 FROM [ZnodePrice] AS ZP INNER JOIN @Tlb_SKU AS TSKU ON ZP.SKU = TSKU.SKU LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND 
							   ZP.PriceListId = ZPT.PriceListId WHERE ZP.PriceListId = @PriceListId; 

                     -- Check Activation date and expiry date 
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity
					FROM @Tbl_PriceListWisePrice WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity FROM @Tbl_PriceListWisePrice
					WHERE SKU NOT IN ( SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null;

                 END;
             SELECT SKU,
                    ROUND(RetailPrice, @PriceRoundOff) AS RetailPrice,
                    ROUND(SalesPrice, @PriceRoundOff) AS SalesPrice,
                    ROUND(TierPrice, @PriceRoundOff) AS TierPrice,
                    ROUND(TierQuantity, @PriceRoundOff) AS TierQuantity,
                    ZC.CurrencyCode,
                    Zc.CurrencySuffix
             FROM @TLB_SKUPRICELIST AS TSPL
                  INNER JOIN ZnodePriceList AS ZPL ON TSPL.PriceListId = ZPL.PriceListId
                  INNER JOIN ZnodeCurrency AS ZC ON ZPL.CurrencyId = ZC.CurrencyId
				  ORDER BY TierQuantity ASC;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishProductPricingBySku @SKU = '+@SKU+',@PortalId = '+CAST(@PortalId AS VARCHAR(10))+',@currentUtcDate = '+@currentUtcDate+',@UserId='+CAST(@UserId AS VARCHAR(100))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPublishProductPricingBySku',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetSkuPricebyCatalog]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetSkuPricebyCatalog]
(   @WhereClause		NVARCHAR(max),
    @Rows				INT            = 100,
    @PageNo				INT            = 1,
    @Order_BY			VARCHAR(1000)  = '',
    @RowsCount			INT  out,
	@LocaleId			INT			   = 0,
	@Sku                VARCHAR(MAX),
	@PortalId		    INT = 0,
	@currentUtcDate     VARCHAR(200) = '',
	@PublishProductId   TransferId READONLY
		)		
AS 
/*
    Summary: This procedure is used to find the PriceList by catalog 
	Unit Testing: 
	
    

	 EXEC Znode_GetSkuPricebyCatalog @WhereClause='' ,@Order_BY='RetailPrice',@RowsCount= 0,@Sku = 'str324,pe3251,pe0978,kw001,lm001,li001,sf001,og002', @LocaleId = 1,@PortalId=1,@currentUtcDate='2017'
*/

     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_PricebyCatalog TABLE (SKU NVARCHAR(4000),RetailPrice numeric(28,6),RowId INT,CountNo INT,callforpricing int)
			 DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId()

			DECLARE  @tbl_PricingSku TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
						TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000))				
					
						INSERT INTO @tbl_PricingSku (sku,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix)	
						EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portaliD  ,@currentUtcDate,2,@PublishProductId
			
					  SELECT DISTINCT sku,RetailPrice
					  INTO #tbl_PricingSku
					  FROM   @tbl_PricingSku 
					  UNION  ALL 
					  SELECT item sku,NULL RetailPrice
					  FROM dbo.split(@Sku,',') SP 
					  WHERE NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = Sp.Item) 
					  AND @Sku <> ''
					  UNION ALL 
					  SELECT SKU , NULL RetailPrice
					  FROM ZnodePublishProductDetail  a 
					  INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId) 
					  WHERE LocaleId = @DefaultLocaleId
					  AND NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = a.SKU) 
					  AND @Sku = ''


					

	 SET @SQL = 
			       '
			DECLARE @tbl_ProductIDSKU Table(productid int,sku nvarchar(200))
					Insert into @tbl_ProductIDSKU (productid,sku)
					Select vw.PimProductId,vw.AttributeValue from View_PimProductAttributeValue vw where vw.AttributeCode = ''SKU'' and vw.AttributeValue in (select sku from #tbl_PricingSku);
					
			DECLARE @tbl_ProductIdCallForPricing Table(productid int,callforpricing nvarchar(200))
					Insert into @tbl_ProductIdCallForPricing (productid,callforpricing)
					select DISTINCT vw.PimProductId,vw.AttributeValue from View_PimProductAttributeValue vw where vw.AttributeCode = ''CallForPricing'' and vw.PimProductId in (Select PimProductid from View_PimProductAttributeValue where AttributeCode = ''SKU'' and AttributeValue in (select sku from #tbl_PricingSku))

            DECLARE @tbl_SKUCallForPricing Table(sku nvarchar(200),callforpricing int)
					Insert into @tbl_SKUCallForPricing (sku,callforpricing)
					select _ps.sku,Case when _pcp.callforpricing = ''true'' then 1 else 0 end callforpricing from @tbl_ProductIdCallForPricing _pcp join @tbl_ProductIDSKU _ps on _pcp.productid=_ps.productid where _ps.sku in (select sku from #tbl_PricingSku)

				
				   ;WITH CTE_GetFilteredList AS
					(
						SELECT DISTINCT A.sku,A.RetailPrice,B.callforpricing as CallForPricing, '+dbo.Fn_GetPagingRowId(@Order_BY,'A.SKU DESC ')+',Count(*)Over() CountNo
						FROM #tbl_PricingSku A 
						LEFT join @tbl_SKUCallForPricing B on A.sku = b.sku 
						WHERE 1=1
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'			
					)
				
	
					SELECT SKU,RetailPrice,CallForPricing,RowId,CountNo
					FROM CTE_GetFilteredList
				   '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)+
					' ORDER BY '+ @Order_BY

            PRINT @SQL
			INSERT INTO @TBL_PricebyCatalog(SKU,RetailPrice,CallForPricing,RowId,CountNo)
			EXEC sys.sp_sqlexec @SQL

		

			SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_PricebyCatalog ),0)
			
			SELECT SKU,RetailPrice,CallForPricing
			FROM @TBL_PricebyCatalog


		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSkuPricebyCatalog @WhereClause = '
			 +CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))
			 +',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(20))
			 +',@PortalId= '+cast(@PortalId as varchar(200))+',@currentUtcDate= '
			 +@currentUtcDate+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status,ERROR_MESSAGE();                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSkuPricebyCatalog',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

		END CATCH

	END
GO
PRINT N'Altering [dbo].[Znode_GetQuoteOrderTemplateDetail]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetQuoteOrderTemplateDetail]
(   @WhereClause NVARCHAR(MAX),
	@Rows        INT           = 100,
	@PageNo      INT           = 1,
	@Order_BY    VARCHAR(100)  = '',
	@UserId		 INT,										 
	@RowsCount   INT OUT)
AS 
    /*
		 Summary :- this procedure is used to find QuoteOrderTemplate details 
	     SELECT * FROM ZnodeUser  WHERE AspNeTUSerId = 'ae464cfc-95d3-40de-bf71-47993fabb41f'
		 SELECT * FROM AspNetUserRoles WHERE RoleID = 'A529A670-F446-45EC-BBCB-C00D64D7C964' Userid = '50fe1032-e810-4606-b522-ebf1559e81cf'
		 SELECT * FROM AspNetRoles WHERE ID = '8622E90D-7652-41E7-8563-5DED4CC671DE'

		 Unit Testing 
		 EXEC Znode_GetQuoteOrderTemplateDetail '',@RowsCount = 0, @Order_BY = '', @UserId = 85
	*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_QuoteOrderTemplate TABLE (OmsTemplateId INT,PortalId INT,UserId INT,TemplateName NVARCHAR(1000),CreatedBy INT,CreatedDate DATETIME
			  ,ModifiedBy INT,ModifiedDate DATETIME,Items INT,RowId INT,CountNo INT )
			 DECLARE @AccountId VARCHAR(2000) ,@UsersId VARCHAR(2000), @ProcessType  varchar(50)='Template'
			 -- SELECT * FROM aspnetRoles
			
			SET @UsersId = SUBSTRING (( SELECT ','+CAST(userId AS VARCHAr(50))  FROM Fn_GetRecurciveUserId(@UserId,@ProcessType) FOR XML PATH ('')),2,4000)
			
			 SET @SQL = '
						; WITH CTE_GetOrderTemplate
						  AS ( SELECT ZOT.OmsTemplateId,ZOT.PortalId,ZOT.UserId,ZOT.TemplateName,ZOT.CreatedBy,ZOT.CreatedDate,ZOT.ModifiedBy,ZOT.ModifiedDate,
                               SUM(ZOTL.Quantity) Items 
							   FROM ZnodeOmsTemplate ZOT
                               LEFT JOIN ZnodeOmsTemplateLineItem ZOTL ON(ZOTL.OmsTemplateId = ZOT.OmsTemplateId)
							   WHERE ZOT.userid IN ('+@UsersId+') 
							   AND OrderLineItemRelationshipTypeId IS NOT NULL 
                               GROUP BY ZOT.OmsTemplateId,ZOT.PortalId,ZOT.UserId,ZOT.TemplateName,ZOT.CreatedBy,ZOT.CreatedDate,ZOT.ModifiedBy,ZOT.ModifiedDate						  
						  
						     )
						, CTE_GetQuoteOrderDetails AS
						(
						  SELECT DISTINCT  OmsTemplateId,PortalId,UserId,TemplateName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,Items
						  ,'+dbo.Fn_GetPagingRowId(@Order_BY,'OmsTemplateId DESC')+',Count(*)Over() CountNo
						  FROM CTE_GetOrderTemplate
						   WHERE 1=1 
				          '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'					  
						
						)

						SELECT OmsTemplateId,PortalId,UserId,TemplateName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,Items,RowId,CountNo
						FROM CTE_GetQuoteOrderDetails
						'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)

						Print @sql
						INSERT INTO @TBL_QuoteOrderTemplate (OmsTemplateId,PortalId,UserId,TemplateName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,Items,RowId,CountNo)
						EXEC(@SQL)

						SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_QuoteOrderTemplate),0)
   
						SELECT OmsTemplateId,PortalId,UserId,TemplateName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,Items
						FROM @TBL_QuoteOrderTemplate 


	     END TRY
		 BEGIN CATCH
		 
		     DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetQuoteOrderTemplateDetail @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@UserId= '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetQuoteOrderTemplateDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		 END CATCH

   END
GO
PRINT N'Altering [dbo].[Znode_GetSKUInventoryList]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetSKUInventoryList]
(   @WhereClause VARCHAR(1000),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT,
    @LocaleId    INT           = 1)
AS 
    /*
    Summary : this procedure is used to Get the inventory list by sku 
    Unit Testing 
     EXEC Znode_GetSKUInventoryList  '' ,@RowsCount= 1,@PageNo= 1 ,@Rows = 100
     SELECT * FROM ZnodePublishProduct WHERE PimProductid  = 4
    */
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_InventoryList TABLE (InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300)
			 ,Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6),ProductName NVARCHAR(max),RowId INT,CountNo INT);

             DECLARE @DefaultLocaleId VARCHAR(100)= Dbo.Fn_GetDefaultValue('Locale');
             SET @SQL = '
						DECLARE @TBL_ZnodeInventoryList TABLE (InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300),Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6) )
						DECLARE @TBL_InventoryListFindProduct TABLE (InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300),Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6),ProductName NVARCHAR(max),LocaleId INT  )				
						DECLARE @TBL_InventorySKU TABLE (PimProductId INT ,InventoryId INT,SKU VARCHAR(600) )
						
						--INSERT INTO @TBL_ZnodeInventoryList
						--SELECT ZI.InventoryId,ZI.WarehouseId,ZW.WarehouseCode,ZW.WarehouseName,ZI.SKU,ZI.Quantity,ZI.ReOrderLevel
						--FROM ZnodeInventory ZI 
						--INNER JOIN ZnodeWarehouse ZW ON (ZW.WarehouseId = ZI.WarehouseId) 
				 								
						--INSERT INTO @TBL_InventorySKU 
						;With  Cte_getSKUDetails AS
						(
						SELECT PimProductId,AttributeCode,(SELECT ''''+ZAVL.AttributeValue FOR XML PATH('''')) AttributeValue,LocaleId
						FROM ZnodePimAttributeValue ZAV				 
						INNER JOIN  ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZAV.PimAttributeId )
						INNER JOIN ZnodePimAttributeValueLocale ZAVL ON (ZAVL.PimAttributeValueId = ZAV.PimAttributeValueId )
						WHERE ZPA.AttributeCode IN ( ''SKU'',''ProductName'')	
						--GROUP BY PimProductId	
						)	
						, CTE_InventoryListMain AS (				 
						SELECT  CTE.PimProductId , CTEI.AttributeValue ProductName,ZW.WarehouseCode,ZW.WarehouseName , CTEI.LocaleId,SKU,SPN.InventoryId,SPN.WarehouseId
						,SPN.Quantity,SPN.ReOrderLevel
						FROM Cte_getSKUDetails CTE
						INNER JOIN Cte_getSKUDetails CTEI ON (CTEI.PimProductId = CTE.Pimproductid AND CTEI.AttributeCode = ''ProductName'' )
						INNER JOIN ZnodeInventory  SPN ON (SPN.SKU = CTE.AttributeValue)
						INNER JOIN ZnodeWarehouse ZW ON (ZW.WarehouseId = SPN.WarehouseId) 
						WHERE CTE.AttributeCode = ''SKU''
						AND  CTEI.LocaleId  IN ('+@DefaultLocaleId+','+CAST(@LocaleId AS VARCHAR(100))+')) 
				
						, CTE_InventoryListProductNameWithLocale AS 
						(SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
						FROM CTE_InventoryListMain 
						WHERE LocaleId =  '+CAST(@LocaleId AS VARCHAR(100))+'	) 

						,CTE_InventoryListWithSKU AS 
						(SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName 
						FROM CTE_InventoryListProductNameWithLocale pl
						UNION ALL
						SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
						FROM CTE_InventoryListMain ZL
						WHERE LocaleId =  '+@DefaultLocaleId+'
						AND NOT EXISTS (SELECT TOP 1 1 FROM CTE_InventoryListProductNameWithLocale ZS WHERE ZS.SKU = ZL.SKU AND ZS.InventoryId = ZL.InventoryId)
						)
                
						,CTE_ListDetailForPaging AS 
						(SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
						,'+dbo.Fn_GetPagingRowId(@Order_BY,'InventoryId DESC')+',Count(*)Over() CountNo 
						FROM CTE_InventoryListWithSKU
						WHERE 1=1 
						 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+')
				
						SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,dbo.Fn_Trim(SKU)SKU,Quantity,ReOrderLevel,dbo.Fn_Trim(ProductName)ProductName,RowId,CountNo
						FROM CTE_ListDetailForPaging 
						'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			PRINT @SQL

				--SElect @SQL
				INSERT INTO @TBL_InventoryList(InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName,RowId,CountNo)
				EXEC (@SQL);

            SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_InventoryList), 0);

            SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
			FROM @TBL_InventoryList;
           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSKUInventoryList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSKUInventoryList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetTextWidgetConfiguration]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetTextWidgetConfiguration]
(
       @PortalId INT
	   ,@UserId INT =  0  	
)
AS
/*
Summary: This Procedure is used to get text widget configuration
Unit Testing :
 EXEC Znode_GetTextWidgetConfiguration 1,2
*/
     BEGIN
         BEGIN TRY
             DECLARE @LocaleId INT= ( SELECT FeatureValues
                                      FROM ZnodeGlobalSetting
                                      WHERE FeatureName = 'Locale'
                                    ) , @IncrementValue INT= 1;
             DECLARE @LocaleAll TABLE (
                                      RowId    INT IDENTITY(1 , 1) ,
                                      LocaleId INT ,
                                      Code     VARCHAR(300)
                                      );
             INSERT INTO @LocaleAll ( LocaleId , Code
                                    )
                    SELECT LocaleId , Code
                    FROM ZnodeLocale AS a
                    WHERE a.IsActive = 1;
             DECLARE @ReturnXML TABLE (
                                      ReturnXMl XML
                                      );
             WHILE @IncrementValue <= ( SELECT MAX(RowId)
                                        FROM @LocaleAll
                                      )
                 BEGIN
                     DECLARE @CMSWidgetData TABLE (
                                                  CMSTextWidgetConfigurationId INT ,
                                                  LocaleId                     INT ,
                                                  CMSWidgetsId                 INT ,
                                                  WidgetsKey                   NVARCHAR(256) ,
                                                  CMSMappingId                 INT ,
                                                  TypeOFMapping                NVARCHAR(100) ,
                                                  [Text]                       NVARCHAR(MAX)
                                                  );
                     DECLARE @CMSWidgetDataFinal TABLE (
                                                       CMSTextWidgetConfigurationId INT ,
                                                       LocaleId                     INT ,
                                                       CMSWidgetsId                 INT ,
                                                       WidgetsKey                   NVARCHAR(256) ,
                                                       CMSMappingId                 INT ,
                                                       TypeOFMapping                NVARCHAR(100) ,
                                                       [Text]                       NVARCHAR(MAX)
                                                       );
                     INSERT INTO @CMSWidgetDataFinal
                            SELECT CMSTextWidgetConfigurationId , LocaleId , CMSWidgetsId , WidgetsKey , CMSMappingId , TypeOFMapping , [Text]
                            FROM ZnodeCMSTextWidgetConfiguration AS a
                            WHERE a.TypeOFMapping = 'ContentPageMapping'
                                  AND
                                  EXISTS ( SELECT TOP 1 1
                                           FROM ZnodeCMSContentPages
                                           WHERE a.CMSMappingId = CMSContentPagesId
                                                 AND PortalId = @PortalId
                                         )
                                  OR
                                  ( a.TypeOFMapping = 'PortalMapping'
                                    AND
                                    a.CMSMappingId = @PortalId )
                                  AND
                                  ( a.LocaleId IN ( ( SELECT LocaleId
                                                      FROM @LocaleAll
                                                      WHERE RowId = @IncrementValue
                                                    ) , @LocaleId
                                                  ) );
                     INSERT INTO @CMSWidgetData
                            SELECT CMSTextWidgetConfigurationId , ( SELECT LocaleId
                                                                    FROM @LocaleAll
                                                                    WHERE RowId = @IncrementValue
                                                                  ) AS LocaleId , CMSWidgetsId , WidgetsKey , CMSMappingId , TypeOFMapping , [Text]
                            FROM @CMSWidgetDataFinal
                            WHERE LocaleId = ( SELECT LocaleId
                                               FROM @LocaleAll
                                               WHERE RowId = @IncrementValue
                                             );
                     INSERT INTO @CMSWidgetData
                            SELECT CMSTextWidgetConfigurationId , ( SELECT LocaleId
                                                                    FROM @LocaleAll
                                                                    WHERE RowId = @IncrementValue
                                                                  ) AS LocaleId , CMSWidgetsId , WidgetsKey , CMSMappingId , TypeOFMapping , [Text]
                            FROM @CMSWidgetDataFinal AS p
                            WHERE p.LocaleId = @LocaleId
                                  AND
                                  NOT EXISTS ( SELECT TOP 1 1
                                               FROM @CMSWidgetData AS q
                                               WHERE q.CMSWidgetsId = p.CMSWidgetsId
                                                     AND
                                                     q.WidgetsKey = p.WidgetsKey
                                                     AND
                                                     q.TypeOFMapping = p.TypeOFMapping
                                                     AND
                                                     q.CMSMappingId = p.CMSMappingId
                                             );

										

                     INSERT INTO @ReturnXML ( ReturnXMl
                                            )
                            SELECT ( SELECT CMSTextWidgetConfigurationId AS TextWidgetConfigurationId , LocaleId , CMSWidgetsId AS WidgetsId , WidgetsKey , CMSMappingId AS MappingId , TypeOFMapping , [Text] , @PortalId AS PortalId
                                     FROM @CMSWidgetData AS a
                                     WHERE a.CMSTextWidgetConfigurationId = w.CMSTextWidgetConfigurationId
                                     FOR XML PATH('TextWidgetEntity')
                                   )
                            FROM @CMSWidgetData AS w
						
							;
                     SET @IncrementValue = @IncrementValue + 1;
                     DELETE FROM @CMSWidgetData;
                     DELETE FROM @CMSWidgetDataFinal;
                 END;
             SELECT *
             FROM @ReturnXML;
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetTextWidgetConfiguration @PortalId = '+CAST(@PortalId AS VARCHAR(max))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetTextWidgetConfiguration',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetTouchPointConfigurationList]...';


GO
  
ALTER PROCEDURE [dbo].[Znode_GetTouchPointConfigurationList]
(   @TouchPointConfigurationXML XML,
	@WhereClause                VARCHAR(1000) = NULL,
	@Rows                       INT           = 1000,
	@PageNo                     INT           = 1,
	@Order_BY                   VARCHAR(100)  = 'ConnectorTouchPoints',
	@IsAssigned					bit			  = 0,
	@RowsCount                  INT OUT)  

AS
/*
Summary: This Procedure is used to get
Unit Testing :
 EXEC [dbo].[Znode_GetTouchPointConfigurationList]
*/

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
		  DECLARE  @TBL_TouchPointConfiguration  TABLE  (ERPTaskSchedulerId INT ,ERPConfiguratorId int,Interface Nvarchar(200) ,SchedulerName Nvarchar(200), SchedulerType varchar(20),ConnectorTouchPoints nvarchar(500)
											   ,IsEnabled bit,Triggers VArchar(max),NextRunTime VArchar(50),SchedulerCreatedDate Varchar(50),EventID int,LastRunResult VArchar(200),LastRunTime VArchar(50),RowId INT  , CountId INT)
											 

		 IF @Order_BY LIKE '%ConnectorTouchPoints%'
		 BEGIN 
		   SET @Order_BY = @Order_BY+',Interface'
		 END 
		 ELSE IF @Order_BY LIKE '%Interface%' 
		 BEGIN 
		 SET @Order_BY = @Order_BY+',ConnectorTouchPoints' 
		 END 
		 ELSE IF @Order_BY LIKE '%schedulername%' 
		 BEGIN 
		 SET @Order_BY = +'a.'+@Order_BY+',ConnectorTouchPoints' 
		 END 
		 ELSE IF @Order_BY LIKE '%schedulertype%' 
		 BEGIN 
		 SET @Order_BY = +'a.'+@Order_BY+',ConnectorTouchPoints' 
		 END 
		 ELSE IF @Order_BY LIKE '%IsEnabled%' 
		 BEGIN 
		 SET @Order_BY = +'a.'+@Order_BY+',ConnectorTouchPoints' 
		 END 
		 ELSE IF @Order_BY = '' OR  @Order_BY IS NULL 
		 BEGIN 
		  SET @Order_BY ='IsEnabled desc,Interface,ConnectorTouchPoints' 
		 END 
		 ELSE 
		 BEGIN 
		  SET  @Order_BY = @Order_BY+',ConnectorTouchPoints,Interface' 
		 END 



             DECLARE @SQL NVARCHAR(MAX);
             SET @SQL = ' 
   
     DECLARE  @TBL_TouchPointConfiguration  TABLE  (ERPTaskSchedulerId INT ,ERPConfiguratorId int,Interface Nvarchar(200) ,SchedulerName Nvarchar(200),SchedulerType varchar(20),ConnectorTouchPoints nvarchar(500)
											   ,IsEnabled bit,Triggers VArchar(max),NextRunTime VArchar(50),SchedulerCreatedDate Varchar(50),EventID int,LastRunResult VArchar(200),LastRunTime VArchar(50)
											 )
   
    INSERT INTO @TBL_TouchPointConfiguration
		SELECT 
				 Tbl.Col.value(''ERPTaskSchedulerId[1]'', ''NVARCHAR(max)'') ERPTaskSchedulerId
				,Tbl.Col.value(''ERPConfiguratorId[1]'', ''NVARCHAR(max)'') ERPConfiguratorId
				,Tbl.Col.value(''Interface[1]'', ''NVARCHAR(max)'') Interface
				,Tbl.Col.value(''SchedulerName[1]'', ''NVARCHAR(max)'') SchedulerName
				,Tbl.Col.value(''SchedulerType[1]'', ''VARCHAR(max)'') SchedulerType
				,Tbl.Col.value(''ConnectorTouchPoints[1]'', ''NVARCHAR(max)'') ConnectorTouchPoints
				,Tbl.Col.value(''IsEnabled[1]'', ''NVARCHAR(max)'') IsEnabled
				,Tbl.Col.value(''Triggers[1]'', ''NVARCHAR(max)'') Triggers
				,Tbl.Col.value(''NextRunTime[1]'', ''NVARCHAR(max)'') NextRunTime
				,Tbl.Col.value(''SchedulerCreatedDate[1]'', ''NVARCHAR(max)'') SchedulerCreatedDate
				,Tbl.Col.value(''EventID[1]'', ''NVARCHAR(max)'') EventID
				,Tbl.Col.value(''LastRunResult[1]'', ''NVARCHAR(max)'') LastRunResult
				,Tbl.Col.value(''LastRunTime[1]'', ''NVARCHAR(max)'') LastRunTime
		 FROM   @TouchPointConfigurationXML.nodes(''//ArrayOfTouchPointConfigurationModel//TouchPointConfigurationModel'') Tbl(Col)




  ;With Cte_GetTouchPointList AS
   (
	   SELECT  a.ERPTaskSchedulerId ,a.ERPConfiguratorId,Interface ,ISNULL(a.SchedulerName,'''') as SchedulerName,ISNULL(a.SchedulerType,'''') as SchedulerType,ConnectorTouchPoints ,a.IsEnabled  ,ISNULL(Triggers,'''') as Triggers ,ISNULL(NextRunTime,'''') as NextRunTime
					,SchedulerCreatedDate ,EventID,ISNULL(LastRunResult,'''') as LastRunResult, ISNULL(LastRunTime,'''') as LastRunTime
	   FROM @TBL_TouchPointConfiguration a
	   left outer join ZnodeERPTaskScheduler b on(a.ERPConfiguratorId =b.ERPConfiguratorId and a.ConnectorTouchPoints = b.TouchPointName and '+cast(@IsAssigned as varchar(1))+' = 1 )
	   WHERE b.TouchPointName IS NULL
    ), 
   Cte_GetTouchPointListDetails as 
   (
   SELECT *,'+[dbo].[Fn_GetPagingRowId](@Order_BY,'IsEnabled desc,Interface,ConnectorTouchPoints')+' ,Count(*)Over() CountId
   FROM Cte_GetTouchPointList 
   where 1=1  '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)
   +'
   ) SELECT * 
   FROM Cte_GetTouchPointListDetails 
   '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)+'
   '  
             PRINT @SQL
         
			INSERT INTO @TBL_TouchPointConfiguration 
		
		     EXEC SP_executesql
                  @SQL,
                  N'@TouchPointConfigurationXML XML ',
                  @TouchPointConfigurationXML = @TouchPointConfigurationXML;
           SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM @TBL_TouchPointConfiguration ),0)

		   SELECT a.ERPTaskSchedulerId ,a.ERPConfiguratorId,Interface , a.SchedulerName,a.SchedulerType,ConnectorTouchPoints ,a.IsEnabled  , Triggers ,NextRunTime
				,SchedulerCreatedDate ,EventID, LastRunResult ,LastRunTime
		   FROM @TBL_TouchPointConfiguration  a
		
         END TRY
         BEGIN CATCH
            DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetTouchPointConfigurationList @TouchPointConfigurationXML='+CAST(@TouchPointConfigurationXML AS VARCHAR(max))+', @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetTouchPointConfigurationList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetUserPortalAndProfile]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetUserPortalAndProfile] 
(
 @UserId INT = 0 
 ,@PortalIds VARCHAR(2000) = ''  OUT 
 ,@ProfileIds VARCHAR(2000) = '' OUT     
)
AS 
/*
  Summary :- This procedure is used to get the user profile ids and user portal ids 
			 In case of @UserId -1 this mean the procedure call for guest user 
			 If @UserId <> -1 then first check the is account user after that find the portal and profile associated to the user      
  Unit Testing 
  DECLARE @weewew VARCHAR(500) = ''
  EXEC Znode_GetUserPortalAndProfile 1319 ,1,@weewew  OUT SELECT @weewew 

*/
BEGIN 
 BEGIN TRY
  SET NOCOUNT ON 
   DECLARE @TBL_ProfileId  TABLE (ProfileId INT )
   DECLARE @ProfileId VARCHAR(2000)
   DECLARE @AccountId INT = 0 

  IF @UserId = -1 
  BEGIN 
	INSERT INTO @TBL_ProfileId(ProfileId)
	SELECT ISNULL(ProfileId  ,-1)
	FROM ZnodePortalProfile 
	WHERE PortalId = @PortalIds  
	AND IsDefaultAnonymousProfile = 1 
  END 
  ELSE 
  BEGIN 
    SET @AccountId = ISNULL((SELECT TOP 1 AccountId FROM znodeUser WHERE Userid = @UserId ),-1)
  	DECLARE @AccountIds TABLE (AccountId INT )
	INSERT INTO @AccountIds (AccountId)
	SELECT AccountId
	FROM [dbo].[Fn_GetRecurciveAccounts] (@AccountId)

	INSERT INTO @TBL_ProfileId(ProfileId)
	SELECT ISNULL(ProfileId  ,-1)
	FROM ZnodePortalProfile 
	WHERE PortalId = @PortalIds  
	--AND IsDefaultRegistedProfile = 1  
	AND (EXISTS (SELECT TOP 1 1 FROM  ZnodeUSerProfile ZUP WHERE  ZUP.ProfileId = ZnodePortalProfile.ProfileId AND ZUP.UserId = @UserId  )
	  OR EXISTS (SELECT TOP 1 1 FROM ZnodeAccountProfile ZAP WHERE ZAP.ProfileId = ZnodePortalProfile.ProfileId  AND EXISTS (SELECT TOP 1 1 FROM @AccountIds TBL WHERE TBL.AccountId = ZAP.AccountId)
	    AND NOT EXISTS (SELECT TOP 1 1 FROM  ZnodeUSerProfile ZUP WHERE  ZUP.ProfileId = ZnodePortalProfile.ProfileId AND ZUP.UserId = @UserId  )
	  ))
  END
   SET  @ProfileIds = SUBSTRING((SELECT ','+CAST(ProfileId AS VARCHAR(50)) FROM  ZnodeProfile ZP  WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_ProfileId TBP WHERE ( TBP.ProfileId = ZP.ProfileId  OR  TBP.ProfileId = -1)  )
					     			 FOR XML PATH ('') ),2,4000) 

 END TRY 
 BEGIN CATCH 
  SELECT ERROR_MESSAGE()
 END CATCH
END
GO
PRINT N'Altering [dbo].[Znode_ImportCatalogCategory]...';


GO

ALTER PROCEDURE [dbo].[Znode_ImportCatalogCategory](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Catalog Category Product association
	
	-- Unit Testing : 
	--BEGIN TRANSACTION;
	--update ZnodeGlobalSetting set FeatureValues = '5' WHERE FeatureName = 'InventoryRoundOff' 
	--    DECLARE @status INT;
	--    EXEC [Znode_ImportInventory] @InventoryXML = '<ArrayOfImportInventoryModel>
	-- <ImportInventoryModel>
	--   <SKU>S1002</SKU>
	--   <Quantity>999998.33</Quantity>
	--   <ReOrderLevel>10</ReOrderLevel>
	--   <RowNumber>1</RowNumber>
	--   <ListCode>TestInventory</ListCode>
	--   <ListName>TestInventory</ListName>
	-- </ImportInventoryModel>
	--</ArrayOfImportInventoryModel>' , @status = @status OUT , @UserId = 2;
	--    SELECT @status;
	--    ROLLBACK TRANSACTION;
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertCatalogCategory TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300), CategoryName varchar(200), DisplayOrder int, IsActive bit, GUID nvarchar(400)
		);

		DECLARE @CategoryAttributId int;

		SET @CategoryAttributId =
		(
			SELECT TOP 1 PimAttributeId
			FROM ZnodePimAttribute AS ZPA
			WHERE ZPA.AttributeCode = 'CategoryName' AND 
				  ZPA.IsCategory = 1
		);

		DECLARE @InventoryListId int;

		SET @SSQL = 'Select RowNumber,SKU,CategoryName,DisplayOrder ,IsActive,GUID FROM '+@TableName;
		INSERT INTO @InsertCatalogCategory( RowNumber, SKU, CategoryName, DisplayOrder, IsActive, GUID )
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @SKU TABLE
		( 
		   SKU nvarchar(300), PimProductId int
		);
		INSERT INTO @SKU
			   SELECT b.AttributeValue, a.PimProductId
			   FROM ZnodePimAttributeValue AS a
					INNER JOIN
					ZnodePimAttributeValueLocale AS b
					ON a.PimAttributeId = dbo.Fn_GetProductSKUAttributeId() AND 
					   a.PimAttributeValueId = b.PimAttributeValueId;


		DECLARE @CategoryName TABLE
		( 
			CategoryName nvarchar(300), PimCategoryId int
		);
		INSERT INTO @CategoryName
			   SELECT ZPCAL.CategoryValue, ZPCA.PimCategoryId
			   FROM ZnodePimCategoryAttributeValue AS ZPCA
					INNER JOIN
					ZnodePimCategoryAttributeValueLocale AS ZPCAL
					ON ZPCA.PimAttributeId = 5 AND 
					ZPCA.PimCategoryAttributeValueId = ZPCAL.PimCategoryAttributeValueId;
					
		-- start Functional Validation 
		
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertCatalogCategory AS ii
			   WHERE ii.SKU NOT in 
			   (
				   SELECT SKU FROM @SKU  where SKU is not null 
			   );
		
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'CategoryName', CategoryName, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertCatalogCategory AS ii
			   WHERE ii.CategoryName NOT in 
			   (
				   SELECT CategoryName FROM @CategoryName  where CategoryName is not null 
			   );
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertCatalogCategory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

			
		IF(ISNULL(@PimCatalogId, 0) <> 0)
		BEGIN
			WITH Cte_CategorySKUAssociation
				 AS(SELECT SKU.PimProductId, 
				   (Select top 1 PimCategoryId from @CategoryName where ICC.CategoryName = CategoryName )  
				   PimCategoryId
				   , DisplayOrder, IsActive FROM @InsertCatalogCategory AS ICC INNER JOIN @SKU AS SKU ON ICC.SKU = SKU.SKU)
				 MERGE INTO ZnodePimCatalogCategory TARGET
				 USING Cte_CategorySKUAssociation SOURCE
				 ON( TARGET.PimCategoryId = SOURCE.PimCategoryId AND 
					 Target.PimCatalogId = @PimCatalogId
				   )
				 WHEN MATCHED
					   THEN UPDATE SET TARGET.PimProductId = SOURCE.PimProductId, TARGET.IsActive = SOURCE.IsActive, TARGET.DisplayOrder = SOURCE.DisplayOrder, TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate
				 WHEN NOT MATCHED
					   THEN INSERT(PimCatalogId, PimCategoryId, PimProductId, IsActive, DisplayOrder, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) VALUES( @PimCatalogId, SOURCE.PimCategoryId, SOURCE.PimProductId, SOURCE.IsActive, SOURCE.DisplayOrder, @UserId, @GetDate, @UserId, @GetDate );
		END;
		ELSE
		BEGIN
			
			  Declare @ZnodePimCategoryProduct TABLE (PimProductId int , PimCategoryId int , Status bit , DisplayOrder int) 
			  	
			  insert into @ZnodePimCategoryProduct (PimProductId , PimCategoryId , Status , DisplayOrder )
			  SELECT SKU.PimProductId, (Select top 1 PimCategoryId from @CategoryName where ICC.CategoryName = CategoryName )  PimCategoryId
				 , IsActive , DisplayOrder FROM @InsertCatalogCategory AS ICC INNER JOIN	 @SKU AS SKU ON ICC.SKU = SKU.SKU 
			
			  INSERT into ZnodePimCategoryProduct ( PimProductId, PimCategoryId, Status, DisplayOrder, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
			  Select TABL.PimProductId, TABL.PimCategoryId, TABL.Status, TABL.DisplayOrder,@UserId, @GetDate, @UserId, @GetDate   from @ZnodePimCategoryProduct TABL    
			  Where NOT EXISTS (Select top 1 1 from ZnodePimCategoryProduct ZPCP where ZPCP.PimProductId = TABL.PimProductId and  ZPCP.PimCategoryId = TABL.PimCategoryId)

		END;										 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportData]...';


GO

ALTER PROCEDURE [dbo].[Znode_ImportData](
	  @TableName varchar(200), @NewGUID nvarchar(max), @TemplateId nvarchar(200), @UserId int, @LocaleId int= 1, @DefaultFamilyId int= 0, @IsDebug bit= 0, @PriceListId int= 0,@CountryCode Nvarchar(100) = '',@PortalId int = 0 )
AS

/*
    Summary :  Import Process call respective import method from @TemplateId 
    Process :  
	EXEC Znode_ImportValidatePimProductData @TableName = 'tempdb..[##SEODetails_61bbcb4c-5b83-49a0-8bb6-48eaf07f9ce0]',@NewGUID = '61bbcb4c-5b83-49a0-8bb6-48eaf07f9ce0' ,@TemplateId = 9,@UserId = 2,@PortalId = 0,@LocaleId = 1,@IsCategory= 1 ,@DefaultFamilyId = 0 ,@ImportHeadName = 'SEODetails', @ImportProcessLogId = 11, @PriceListId = 0, @CountryCode = ''
*/

BEGIN
	DECLARE @ImportHeadName nvarchar(100), @SPScript nvarchar(max), @DatabaseName nvarchar(100), @ServerName nvarchar(100),
	 @ImportProcessLogId int= 0, @SPScript1 nvarchar(max),@UserName nvarchar(100);
	DECLARE @GetDate datetime= dbo.Fn_GetDate();
	SELECT TOP 1 @ImportHeadName = Name
	FROM ZnodeImportTemplate AS zit
		 INNER JOIN
		 ZnodeImportHead AS zih
		 ON zit.ImportHeadId = zih.ImportHeadId
	WHERE zit.ImportTemplateId = @TemplateId;
	SET @DatabaseName = DB_NAME();
	SET @ServerName = @@serverName;
	SET @UserName = SYSTEM_USER;
	--Generate new process for current import 
	INSERT INTO ZnodeImportProcessLog( ImportTemplateId, Status, ProcessStartedDate, ProcessCompletedDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
		   SELECT @TemplateId, dbo.Fn_GetImportStatus( 0 ), @GetDate, NULL, @UserId, @GetDate, @UserId, @GetDate;
	
	SET @ImportProcessLogId = @@IDENTITY;
	SET @SPScript1 = N' EXEC Znode_ImportValidatePimProductData @TableName = '''+@TableName+''',@NewGUID = '''+@NewGUID+''' ,@TemplateId = '
					+CONVERT(varchar(100), @TemplateId)+',@UserId = '+CONVERT(varchar(100), @UserId)
					+',@PortalId = '+CONVERT(varchar(100), @PortalId)+
					+',@LocaleId = '+CONVERT(varchar(100), @LocaleId)+',@IsCategory= '+CASE
					WHEN @ImportHeadName IN( 'Pricing', 'Product', 'Inventory' ) THEN '0'
					ELSE '1'
					END+' ,@DefaultFamilyId = '+CONVERT(varchar(100), @DefaultFamilyId)+' ,@ImportHeadName = '''+@ImportHeadName+''', @ImportProcessLogId = '
					+CONVERT(varchar(100), @ImportProcessLogId)+', @PriceListId = '+CONVERT(varchar(100), @PriceListId)
					+ ', @CountryCode = ''' + @CountryCode  + '''';




	IF @@VERSION LIKE '%Azure%' OR @@VERSION LIKE '%Express Edition%'
	BEGIN
	      EXEC sys.sp_sqlexec @SPScript1;
	END;
	ELSE
	BEGIN 
		
		--IF @IsDebug = 1
		--          BEGIN
		--              EXEC sys.sp_sqlexec
		--                   @SPScript1;
		--              RETURN 0;
		--          END;
		--DECLARE @jobId binary(16)
		--SELECT @jobId = job_id FROM msdb.dbo.sysjobs WHERE (name = N'Name of Your Job')
		--IF (@jobId IS NOT NULL)
		--BEGIN
		--EXEC msdb.dbo.sp_delete_job @jobId
		--END
		--Add a job

		SET @SPScript1 = N' EXEC Znode_ImportValidatePimProductData @TableName = '''''+@TableName+''''',@NewGUID = '''''+@NewGUID+''''' ,@TemplateId = '+CONVERT(varchar(100), @TemplateId)+',@UserId = '+CONVERT(varchar(100), @UserId)+',@PortalId = '+CONVERT(varchar(100), @PortalId)+',@LocaleId = '+CONVERT(varchar(100), @LocaleId)+',@IsCategory= '+CASE
																																																																										   WHEN @ImportHeadName IN( 'Pricing', 'Product', 'Inventory' ) THEN '0'
																																																																										   ELSE '1'
																																																																										   END+' ,@DefaultFamilyId = '+CONVERT(varchar(100), @DefaultFamilyId)+' ,@ImportHeadName = '''''+@ImportHeadName+''''', @ImportProcessLogId = '+CONVERT(varchar(100), @ImportProcessLogId)+', @PriceListId = '+CONVERT(varchar(100), @PriceListId)
																																																																										   + ', @CountryCode = ''''' + @CountryCode  +'''''';



		DECLARE @jobId binary(16);
		SET @NewGUID = 'Import_'+REPLACE(@NewGUID, '''', '');

		SET @SPScript = N'EXEC msdb.dbo.sp_add_job
              @job_name = '''+@NewGUID+''' ,
              @enabled = 1,
              @notify_level_eventlog = 0,
              @notify_level_email = 2,
              @notify_level_netsend = 2,
              @notify_level_page = 2,
              @delete_level = 3,
              @category_name = N''[Uncategorized (Local)]'',
              @owner_login_name = N'''+ @UserName +'''';
		--@job_id = '' + Convert(NVARCHAR(MAX),@jobId ) + '' OUTPUT; '

		EXEC sys.sp_sqlexec @SPScript;

		SET @SPScript = N' EXEC msdb.dbo.sp_add_jobserver
              @job_name = '''+@NewGUID+''',
              @server_name = '''+@ServerName+'''';

		EXEC sys.sp_sqlexec @SPScript;

		SET @SPScript = N' EXEC msdb.dbo.sp_add_jobstep
              @job_name = '''+@NewGUID+''',
              @step_name = N''Import'',
              @step_id = 1,
              @cmdexec_success_code = 0,
              @on_success_action = 1,
              @on_fail_action = 2,
              @retry_attempts = 0,
              @retry_interval = 0,
              @os_run_priority = 0,
              @subsystem = N''TSQL'',
              @command = N'''+@SPScript1+''',
              @database_name = '''+@DatabaseName+''',
              @flags = 0 ';
		EXEC sys.sp_sqlexec @SPScript;


		DECLARE @ReturnCode tinyint= 0; -- 0 (success) or 1 (failure)
		SET @SPScript = N'EXEC @ReturnCode = msdb.dbo.sp_start_job 
              @job_name = '''+@NewGUID+''',
              @server_name = '''+@ServerName+''',
              @step_name = N''Import''';

		EXEC sys.SP_EXECUTESQL @SPScript, N'@ReturnCode TINYINT OUT', @ReturnCode = @ReturnCode OUT;

		--      select 3  , @SPScript

		--RETURN (@ReturnCode)
		IF @ReturnCode = 1
		BEGIN
			UPDATE ZnodeImportProcessLog
			  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
			WHERE ImportProcessLogId = @ImportProcessLogId
		END;

		--EXEC msdb.dbo.sp_delete_job @job_id=N'4470113c-a592-41d8-951e-45d9982071da', @delete_unused_schedule=1
	END;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportInventory_Ver1]...';


GO

ALTER PROCEDURE [dbo].[Znode_ImportInventory_Ver1](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200))
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Inventory data 
	--		   Input data in XML format Validate data with all scenario 
	-- Unit Testing : 
	--BEGIN TRANSACTION;
	--update ZnodeGlobalSetting set FeatureValues = '5' WHERE FeatureName = 'InventoryRoundOff' 
	--    DECLARE @status INT;
	--    EXEC [Znode_ImportInventory] @InventoryXML = '<ArrayOfImportInventoryModel>
	-- <ImportInventoryModel>
	--   <SKU>S1002</SKU>
	--   <Quantity>999998.33</Quantity>
	--   <ReOrderLevel>10</ReOrderLevel>
	--   <RowNumber>1</RowNumber>
	--   <ListCode>TestInventory</ListCode>
	--   <ListName>TestInventory</ListName>
	-- </ImportInventoryModel>
	--</ArrayOfImportInventoryModel>' , @status = @status OUT , @UserId = 2;
	--    SELECT @status;
	--    ROLLBACK TRANSACTION;
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @RoundOffValue int, @MessageDisplay nvarchar(100), @MessageDisplayForFloat nvarchar(100);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 
		SELECT @RoundOffValue = FeatureValues
		FROM ZnodeGlobalSetting
		WHERE FeatureName = 'InventoryRoundOff';

		--@MessageDisplay will use to display validate message for input inventory value  

		DECLARE @sSql nvarchar(max);
		SET @sSql = ' Select @MessageDisplay_new = Convert(Numeric(28, '+CONVERT(nvarchar(200), @RoundOffValue)+'), 123.12345699 ) ';
		EXEC SP_EXecutesql @sSql, N'@MessageDisplay_new NVARCHAR(100) OUT', @MessageDisplay_new = @MessageDisplay OUT;
		SET @sSql = ' Select @MessageDisplay_new = Convert(Numeric(28, '+CONVERT(nvarchar(200), @RoundOffValue)+'), 0.999999 ) ';
		EXEC SP_EXecutesql @sSql, N'@MessageDisplay_new NVARCHAR(100) OUT', @MessageDisplay_new = @MessageDisplayForFloat OUT;
		DECLARE @InserInventoryForValidation TABLE
		( 
				RowNumber int, SKU varchar(max), Quantity varchar(max), ReOrderLevel varchar(max), WarehouseCode varchar(max), GUID nvarchar(400)
		);
		--DECLARE @InsertInventory TABLE
		--( 
		--		InsertInventoryId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300) INDEX Ix CLUSTERED (SKU), Quantity numeric(28, 6), ReOrderLevel numeric(28, 6), WarehouseCode varchar(200), GUID nvarchar(400) 
		--);
		DECLARE @InsertInventory TABLE
		( 
				InsertInventoryId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300) , Quantity numeric(28, 6), ReOrderLevel numeric(28, 6), WarehouseCode varchar(200), GUID nvarchar(400) 
		);

		DECLARE @ErrorLogForInsertInventory TABLE
		( 
				SKU varchar(max), Quantity varchar(max), ReOrderLevel varchar(max), WarehouseCode varchar(max), RowNumber bigint, ErrorDescription varchar(max), GUID nvarchar(400), ImportProcessLogId int, SourceColumnName varchar(max)
		);
		DECLARE @SKU TABLE
		( 
				SKU nvarchar(300)
		);
		INSERT INTO @SKU
			   SELECT b.AttributeValue
			   FROM ZnodePimAttributeValue AS a
					INNER JOIN
					ZnodePimAttributeValueLocale AS b
					ON a.PimAttributeId = dbo.Fn_GetProductSKUAttributeId() AND 
					   a.PimAttributeValueId = b.PimAttributeValueId;


		DECLARE @InventoryListId int;
		SET @SSQL = 'Select RowNumber,SKU,Quantity,ReOrderLevel,WarehouseCode ,GUID FROM '+@TableName;
		INSERT INTO @InserInventoryForValidation( RowNumber, SKU, Quantity, ReOrderLevel, WarehouseCode, GUID )
		EXEC sys.sp_sqlexec @SSQL;


		--Required Validation 
		--UomName should not be null 
		--Data for this Inventory list is already available  
		-- 
		-- 1)  Validation for SKU is pending Proper data not found and 
		--Discussion still open for Publish version where we create SKU and use thi SKU code for validation 
		--Select * from ZnodePimAttributeValue  where PimAttributeId =248
		--select * from View_ZnodePimAttributeValue Vzpa Inner join ZnodePimAttribute Zpa on Vzpa.PimAttributeId=Zpa.PimAttributeId where Zpa.AttributeCode = 'SKU'
		--Select * from ZnodePimAttribute where AttributeCode = 'SKU'
		--2)  Start Data Type Validation for XML Data  
		--SELECT * FROM ZnodeInventory
		--SELECT * FROM ZNodeInventoryList
		UPDATE @InserInventoryForValidation
		  SET ReOrderLevel = 0
		WHERE ReOrderLevel = '';

		DELETE FROM @InserInventoryForValidation
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId AND 
				  GUID = @NewGUID
		);

		INSERT INTO @InsertInventory( RowNumber, SKU, Quantity, ReOrderLevel, WarehouseCode )
			   SELECT RowNumber, SKU, Quantity, ReOrderLevel, WarehouseCode
			   FROM @InserInventoryForValidation;
					 
		-- start Functional Validation 
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertInventory AS ii
			   WHERE ii.SKU NOT IN
			   (
				   SELECT SKU
				   FROM @SKU
			   );
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'WarehouseCode', WarehouseCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertInventory AS ii
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM ZnodeWarehouse AS zw
				   WHERE zw.WarehouseCode = ii.WarehouseCode
			   );

		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertInventory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId AND 
				  GUID = @NewGUID
		);

		DECLARE @TBL_ReadyToInsertInventory TABLE
		( 
												  RowNumber int, SKU varchar(300), Quantity numeric(28, 6), ReOrderLevel numeric(28, 6), WarehouseId int
		);

		INSERT INTO @TBL_ReadyToInsertInventory( RowNumber, SKU, Quantity, ReOrderLevel, WarehouseId )
			   SELECT ii.RowNumber, ii.SKU, ii.Quantity, ISNULL(ii.ReOrderLevel, 0), zw.WarehouseId
			   FROM @InsertInventory AS ii
					INNER JOIN
					ZnodeWarehouse AS zw
					ON ii.WarehouseCode = zw.WarehouseCode AND 
					   ii.RowNumber IN
			   (
				   SELECT MAX(ii1.RowNumber)
				   FROM @InsertInventory AS ii1
				   WHERE ii1.WarehouseCode = ii.WarehouseCode AND 
						 ii1.SKU = ii.SKU
			   );
		--select 'update started'  
		UPDATE zi
		  SET Quantity = rtii.Quantity, ReOrderLevel = ISNULL(rtii.ReOrderLevel, 0), ModifiedBy = @UserId, ModifiedDate = @GetDate
		FROM ZNodeInventory zi
			 INNER JOIN
			 @TBL_ReadyToInsertInventory rtii
			 ON( zi.WarehouseId = rtii.WarehouseId AND 
				 zi.SKU = rtii.SKU
			   );
		--select 'update End'                
		INSERT INTO ZnodeInventory( WarehouseId, SKU, Quantity, ReOrderLevel, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
			   SELECT WarehouseId, SKU, Quantity, ISNULL(ReOrderLevel, 0), @UserId, @GetDate, @UserId, @GetDate
			   FROM @TBL_ReadyToInsertInventory AS rtii
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM ZnodeInventory AS zi
				   WHERE zi.WarehouseId = rtii.WarehouseId AND 
						 zi.SKU = rtii.SKU
			   ); 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportValidateNumber]...';


GO
ALTER PROCEDURE [dbo].[Znode_ImportValidateNumber]
(   @TableName        VARCHAR(200),
    @SourceColumnName NVARCHAR(600),
    @CreateDateString NVARCHAR(300),
    @ValidationName   VARCHAR(100),
    @ControlName      VARCHAR(300),
    @ValidationValue  VARCHAR(300),
    @NewGUID          NVARCHAR(200),
    @ImportHeadId     INT      = 0,
    @ImportProcessLogId int )
AS
/*
Summary: --First Validate numeric datatype then it check its functional validation such as Number ( MaxNo/ MinNo )  and Yes/No (-ve / Decimal Value )
             Number
             --------------------------------
              Control  Validation Rule
             --------------------------------
             1 Yes/No	AllowNegative
             2 Yes/No	AllowDecimals
             3 Number	MinNumber
             4 Number	MaxNumber

Unit Testing:
EXEC Znode_ImportValidateNumber
*/
     BEGIN
         BEGIN TRY 
            SET NOCOUNT ON
             DECLARE @SQLQuery NVARCHAR(MAX), @ImportHeadName NVARCHAR(100);
             SET @ImportHeadName = DBO.Fn_GetDefaultImportHead(@ImportHeadId);
             DECLARE @RoundOffValue INT,@IsNumeric bit = 0 ; 

             -- Retrive RoundOff Value from global setting 

			 IF @SourceColumnName in ('Quantity', 'ReOrderLevel','TierStartQuantity')
                 SELECT @RoundOffValue = dbo.[Fn_GetInventoryRoundOffValue]();
             ELSE
				 SELECT @RoundOffValue = dbo.[Fn_GetPriceRoundOffValue]();
             
		  -- IF Exists (Select TOP 1 1 from ZnodeImportLog where ImportProcessLogId= @ImportProcessLogId AND ErrorDescription = '2' AND ColumnName = @SourceColumnName)
		  -- BEGIN
			 --SET @IsNumeric  =1 
		  -- END

		   IF @IsNumeric  =0  
		   BEGIN
			  SET @SQLQuery = @TableName+' WHERE  Isnumeric('+@SourceColumnName+') = 0 and Isnull('+@SourceColumnName+','''') <> ''''
			  AND NOT EXISTS (Select TOP 1 1 from ZnodeImportLog where ImportProcessLogId= ' +  Convert(Varchar(100), @ImportProcessLogId  ) + ' AND ErrorDescription = ''2'' 
			  AND ColumnName = ''' + @SourceColumnName + ''') ';
             
			  EXEC Znode_ImportGenerateErrorLog
				  @ImportHeadName = @ImportHeadName,
				  @QueryCriteria = @SQLQuery,
				  @SourceColumnName = @SourceColumnName,
				  @CreateDateString = @CreateDateString,
				  @ErrorCode = '2'
		   END

		   IF @IsNumeric  = 0   
		   BEGIN
			  IF Exists (Select TOP 1 1 from ZnodeImportLog where ImportProcessLogId= @ImportProcessLogId AND ErrorDescription = '2' AND ColumnName = @SourceColumnName )
			  BEGIN
				SET @IsNumeric  =1 
			  END
		   END
             
		   IF @ControlName = 'Number'  AND @ValidationName IN('MaxNumber', 'MinNumber') AND ISNULL(@ValidationValue, '') <> '' AND @IsNumeric  = 0  
                 BEGIN
                     SET @SQLQuery = @TableName+'  WHERE Convert(money, '+@SourceColumnName+')'+CASE
                                                                                                    WHEN @ValidationName = 'MaxNumber'
                                                                                                    THEN '>'+@ValidationValue
                                                                                                    ELSE '<'+@ValidationValue
                                                                                                END+' AND Isnull('+@SourceColumnName+','''') <> ''''';
                     IF @ValidationName = 'MaxNumber'
                         EXEC Znode_ImportGenerateErrorLog
                              @ImportHeadName = @ImportHeadName,
                              @QueryCriteria = @SQLQuery,
                              @SourceColumnName = @SourceColumnName,
                              @CreateDateString = @CreateDateString,
                              @ErrorCode = '16',
                              @ValidationValue = @ValidationValue;
                     ELSE
					EXEC Znode_ImportGenerateErrorLog
						@ImportHeadName = @ImportHeadName,
						@QueryCriteria = @SQLQuery,
						@SourceColumnName = @SourceColumnName,
						@CreateDateString = @CreateDateString,
						@ErrorCode = '17',
						@ValidationValue = @ValidationValue;
		 
                     --Remove wrong data from table 
                     --SET @SQLQuery = 'DELETE FROM '+@TableName+'    WHERE Convert(money,'+@SourceColumnName+')'+CASE
                     --                                                                                               WHEN @ValidationName = 'MaxNumber'
                     --                                                                                               THEN '>'+@ValidationValue
                     --                                                                                               ELSE '<'+@ValidationValue
                     --                                                                                           END+' AND Isnull('+@SourceColumnName+','''') <> ''''';
                     --EXEC sys.sp_sqlexec
                     --     @SQLQuery;
                     -- END
                 END;
             -- 1
             IF @ControlName = 'Yes/No' AND @ValidationName IN('AllowNegative') AND @ValidationValue = 'false' AND @IsNumeric  = 0 
                 BEGIN
                     BEGIN
                         SET @SQLQuery = @TableName+' WHERE  Convert( Money,'+@SourceColumnName+' ) < 0  AND Isnull('+@SourceColumnName+', '''') <> ''''';
                         EXEC Znode_ImportGenerateErrorLog
                              @ImportHeadName = @ImportHeadName,
                              @QueryCriteria = @SQLQuery,
                              @SourceColumnName = @SourceColumnName,
                              @CreateDateString = @CreateDateString,
                              @ErrorCode = '4',
                              @ValidationValue = '' ;
			
                         --Remove wrong data from table 
                         --SET @SQLQuery = 'DELETE FROM '+@TableName+'    WHERE Convert( Money,'+@SourceColumnName+' ) < 0  AND Isnull('+@SourceColumnName+', '''') <> ''''';
                         --EXEC sys.sp_sqlexec  @SQLQuery;
                     END;
                 END;
             IF @ControlName = 'Number' AND @SourceColumnName <> 'RowNumber' AND @ImportHeadName in ( 'Inventory' ,'Pricing') AND @IsNumeric  = 0 
                 BEGIN
                     ---Validate roundoff value after decimal place should be between value which is define in global settings
                     SET @SQLQuery = @TableName+'  WHERE ( CASE WHEN '+@SourceColumnName+' LIKE ''%.%'' THEN LEN(SUBSTRING('+@SourceColumnName+' , CHARINDEX(''.'' , '+@SourceColumnName+')+1 , 4000)) ELSE 0 END > ( '+CONVERT(VARCHAR(100), @RoundOffValue)+') )'+'  AND Isnull('+@SourceColumnName+', '''') <> ''''';
                     EXEC Znode_ImportGenerateErrorLog
                          @ImportHeadName = @ImportHeadName,
                          @QueryCriteria = @SQLQuery,
                          @SourceColumnName = @SourceColumnName,
                          @CreateDateString = @CreateDateString,
                          @ErrorCode = '41',
                          @ValidationValue = '0.999999';
			
                     --Remove wrong data from table 
                     --SET @SQLQuery = 'DELETE FROM '+@TableName+'  WHERE ( CASE WHEN '+@SourceColumnName+' LIKE ''%.%'' THEN LEN(SUBSTRING('+@SourceColumnName+' , CHARINDEX(''.'' , '+@SourceColumnName+')+1 , 4000)) ELSE 0 END > ( '+CONVERT(VARCHAR(100), @RoundOffValue)+') )'+'  AND Isnull('+@SourceColumnName+', '''') <> ''''';
                     --EXEC sys.sp_sqlexec  @SQLQuery;
                 END;
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXECZnode_ImportValidateNumber @TableName = '+@TableName+',@SourceColumnName='+@SourceColumnName+',@CreateDateString='+@CreateDateString+',@ValidationName='+@ValidationName+',@ControlName = '+@ControlName+',@ValidationValue='+@ValidationValue+',@NewGUID='+@NewGUID+',@ImportHeadId='+CAST(@ImportHeadId AS VARCHAR(50))+',@ImportProcessLogId='+CAST(@ImportProcessLogId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportValidateNumber',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_InsertUpdateCustomeFieldXML]...';


GO
----DROP TABLE ZnodePimCustomeFieldXML

--CREATE TABLE ZnodePimCustomeFieldXML 
--(
--PimCustomeFieldXMLId INT IDENTITY(1,1) CONSTRAINT PK_ZnodePimCustomeFieldXML  PRIMARY KEY 
--,PimProductId INT 
--,CustomCode VARCHAR(300)
--,CustomeFiledXML NVARCHAR(max) 
--,LocaleId     INT 
--,CreatedBy    INT NOT NULL 
--,CreatedDate  DATETIME NOT NULL 
--,ModifiedBy   INT NOT NULL 
--,ModifiedDate DATETIME NOT NULL 
--)

-- EXEC Znode_InsertUpdtaeCustomeFieldXML 1

ALTER Procedure [dbo].[Znode_InsertUpdateCustomeFieldXML] 
(
 @PimProductId VARCHAR(2000)
)
AS
BEGIN 
  BEGIN TRY 
    
	;With Cte_CustomeAttributeValue AS
	(

	SELECT PimProductId ,ZPCF.CustomCode,'<AttributeCode>'+ISNULL((SELECT ''+ZPCF.CustomCode FOR XML PATH('')),'') +'</AttributeCode>'+'<AttributeName>'+ISNULL((SELECT ''+ZPCFL.CustomKey FOR XML PATH('')),'')+'</AttributeName>'
	                     +'<AttributeValues>'+ISNULL((SELECT ''+ZPCFL.CustomKeyValue FOR XML PATH('')),'')+'</AttributeValues>'+'<IsUseInSearch>0</IsUseInSearch>
<IsHtmlTags>0</IsHtmlTags>
<IsComparable>0</IsComparable>
<IsFacets>0</IsFacets>
<AttributeTypeName>Text Area</AttributeTypeName>
<IsPersonalizable>0</IsPersonalizable>
<IsCustomeField>1</IsCustomeField>
<IsConfigurable>0</IsConfigurable>
<IsSwatch>0</IsSwatch>
' AttributeValue,ZPCFL.LocaleId 
	FROM ZnodePimCustomField ZPCF
	INNER JOIN ZnodePimCustomFieldLocale ZPCFL ON (ZPCFL.PimCustomFieldId = ZPCF.PimCustomFieldId) 
	)

  MERGE INTO ZnodePimCustomeFieldXML TARGET
  USING Cte_CustomeAttributeValue SOURCE 
  ON (TARGET.PimProductId = SOURCE.PimProductId
    AND  TARGET.LocaleId = SOURCE.LocaleId
	AND TARGET.CustomCode = SOURCE.CustomCode
  )
  WHEN MATCHED THEN 
  UPDATE 
   SET TARGET.CustomeFiledXML = SOURCE.AttributeValue
       ,TARGET.ModifiedBy      = 2 
	   ,TARGET.ModifiedDAte   = GETDATE()

  WHEN NOT MATCHED THEN 
  INSERT (PimProductId
				,CustomCode
				,CustomeFiledXML
				,LocaleId
				,CreatedBy
				,CreatedDate
				,ModifiedBy
				,ModifiedDate)
				  VALUES (SOURCE.PimProductId
				  ,SOURCE.CustomCode
				,Source.AttributeValue
				,SOURCE.LocaleId
				,2
				,GETDATE()
				,2
				,GETDATE());

  END TRY 
  BEGIN CATCH 
  SELECT ERROR_MESSAGE()
  END CATCH 
END
GO
PRINT N'Altering [dbo].[Znode_ReturnOrderLineItem]...';


GO
ALTER PROCEDURE [dbo].[Znode_ReturnOrderLineItem]
(	@OrderLineItemIds nvarchar(500),
	@OmsOrderDetailsId int,
	@OrderStateName nvarchar(100) ,
	@ReasonForReturnId int,
	@Quantity [numeric](28, 6),
	@Status BIT OUT

)
AS

/*
begin tran
exec Znode_DeleteOrderById 6
rollback tran
*/
BEGIN
  SET NOCOUNT ON
   BEGIN  TRAN _TranReturnOrderLineItem
  BEGIN TRY 


			DECLARE @RETURNSTATEID INT, @ORDERSHIPMENTID INT
			
			select  top 1 @ORDERSHIPMENTID = OmsOrderShipmentId from ZNODEOMSORDERLINEITEMS where OmsOrderDetailsId = @OmsOrderDetailsId and IsActive = 1

			SELECT @RETURNSTATEID=OMSORDERSTATEID FROM ZNODEOMSORDERSTATE WHERE ORDERSTATENAME = @OrderStateName

			UPDATE ZNODEOMSORDERLINEITEMS
			SET ISACTIVE = 1 ,OMSORDERDETAILSID = @OmsOrderDetailsId ,
			ORDERLINEITEMSTATEID = @RETURNSTATEID , 
			RmaReasonForReturnId = @ReasonForReturnId,
			OmsOrderShipmentId= @ORDERSHIPMENTID,
			Quantity = CASE WHEN Quantity =0 THEN 0 ELSE @Quantity END 
			WHERE OMSORDERLINEITEMSID 
			IN(
			SELECT ITEM FROM DBO.SPLIT(@OrderLineItemIds,',')) OR 
			PARENTOMSORDERLINEITEMSID IN(SELECT ITEM FROM DBO.SPLIT(@OrderLineItemIds,',')
			) 
            
			
            SELECT 1 AS ID , CAST(1 AS BIT) AS Status;
        SET @Status = 1;    
		 COMMIT  TRAN _TranReturnOrderLineItem
	END TRY
	BEGIN CATCH
	   SELECT 0 AS ID , CAST(0 AS BIT) AS Status;
	    SET @Status = 0;
		ROLLBACK TRAN _TranReturnOrderLineItem
	SELECT ERROR_MESSAGE()
	END CATCH

END
GO
PRINT N'Altering [dbo].[ZnodeReport_GetOrderDetails]...';


GO
ALTER PROCEDURE [dbo].[ZnodeReport_GetOrderDetails]
(   @BeginDate      DATE          = NULL,
    @EndDate        DATE          = NULL,
    @PortalId       VARCHAR(MAX)  = '',
    @OrderStateId   VARCHAR(MAX)  = '',
    @PayemntTypeId  VARCHAR(MAX)  = '',
    @ShippingTypeId VARCHAR(MAX)  = '',
    @CustomerName   NVARCHAR(400) = '',
    @EmailId        NVARCHAR(100) = '')
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeReport_GetOrderDetails 
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;
         Declare @DateFormateId int 
	    Select @DateFormateId  = DBO.Fn_GetDateTimeFormat();
         SELECT DISTINCT
			 ZOO.OrderNumber,
                ZOO.[OmsOrderID],
                ZOOD.[PortalId],
                ZOOD.[UserId],
                ZOOD.[OmsOrderStateId],
                ZOOD.[ShippingID],
                ZOOD.[PaymentTypeId],
                ZOOD.[BillingFirstName],
                ZOOD.[BillingLastName],
                ZOOD.[BillingCompanyName],
                ZOOD.[BillingStreet1],
                ZOOD.[BillingStreet2],
                ZOOD.[BillingCity],
                ZOOD.[BillingStateCode],
                ZOOD.[BillingPostalCode],
                ZOOD.[BillingCountry],
                ZOOD.[BillingPhoneNumber],
                ZOOD.[BillingEmailId],
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[TaxCost]) TaxCost,
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[ShippingCost]) [ShippingCost],
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[SubTotal]) [SubTotal],
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[DiscountAmount]) [DiscountAmount],
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[Total]) [Total],
                CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
                ZOOD.[ShippingNumber],
                ZOOD.[TrackingNumber],
                ZOOD.[CouponCode],
                ZOOD.[PromoDescription],
                ZOOD.[ReferralUserId],
                ZOOD.[PurchaseOrderNumber],
                ZOOD.[OmsPaymentStateId],
                ZOOD.[WebServiceDownloadDate],
                ZOOD.[PaymentSettingID],
                ZOOD.[ShipDate],
                ZOOD.[ReturnDate],
                ZOTOD.[SalesTax],
                ZOTOD.[VAT],
                ZOTOD.[GST],
                ZOTOD.[PST],
                ZOTOD.[HST],
                P.[StoreName] AS 'StoreName',
                OS.[OrderStateName] AS 'OrderStatus',
                PT.[Name] AS 'PaymentTypeName',
                ST.[Name] AS 'ShippingTypeName',
			 ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
         FROM ZNodeOmsOrder ZOO
              INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId
                                                      AND IsActive = 1)
              INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
              LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
              LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                                    (
                                                        SELECT TOP 1 1
                                                        FROM ZnodeOmsOrderLineItems ZOOLI
                                                        WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId
                                                              AND ZOOLI.OmsOrderDetailsId = ZOO.OmsOrderId
                                                    ))
              LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOO.OmsOrderId)
              LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
              LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
              LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
			  LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )
         WHERE
	    ((EXISTS
               (
                   SELECT TOP 1 1
                   FROM dbo.split(@PortalId, ',') SP
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item
                         OR @PortalId = ''
               )))
              AND ((EXISTS
                   (
                       SELECT TOP 1 1
                       FROM dbo.split(@OrderStateId, ',') SP
                       WHERE CAST(ZOOD.[OmsOrderStateId] AS VARCHAR(100)) = SP.Item
                             OR @OrderStateId = ''
                   )))
		  AND ((EXISTS
				(
				    SELECT TOP 1 1
				    FROM dbo.split(@PayemntTypeId, ',') SP
				    WHERE CAST(ZOOD.[PaymentTypeId] AS VARCHAR(100)) = SP.Item
					   OR @PayemntTypeId = '' OR ZOOD.PaymentTypeId IS NULL
				)))
		  AND ((EXISTS
				(
				    SELECT TOP 1 1
				    FROM dbo.split(@ShippingTypeId, ',') SP
				    WHERE CAST(ST.ShippingTypeID AS VARCHAR(100)) = SP.Item
					   OR @ShippingTypeId = ''
				)))
		  AND (ZOOD.[BillingFirstName]+' '+ISNULL(ZOOD.[BillingLastName], '') LIKE '%'+@CustomerName+'%'
				OR @CustomerName = '')
		  AND (ZOOD.[BillingEmailId] LIKE '%'+@EmailId+'%'
				OR @EmailId = '')
		  AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE
												WHEN @BeginDate IS NULL
												THEN CAST(ZOOD.OrderDate AS DATE)
												ELSE @BeginDate
											 END AND CASE
													   WHEN @EndDate IS NULL
													   THEN CAST(ZOOD.OrderDate AS DATE)
													   ELSE @EndDate
												    END);

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@OrderStateId='+@OrderStateId+',@PayemntTypeId='+@PayemntTypeId+',@ShippingTypeId='+@ShippingTypeId+',@CustomerName='+@CustomerName+',@EmailId='+@EmailId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
GO
PRINT N'Altering [dbo].[ZnodeReport_GetOrderLineItemByOrderId]...';


GO
ALTER  PROCEDURE [dbo].[ZnodeReport_GetOrderLineItemByOrderId](@OmsOrderId INT)
AS 
    -- Summary :- This Procedure is Used to get the Order line item details 
    -- Unit Testing 
    -- EXEC  ZnodeReport_GetOrderLineItemByOrderId 5
  BEGIN
    SET NOCOUNT ON;
			SELECT OmsOrderLineItemsId,
					ParentOmsOrderLineItemsId,
					OrderLineItemRelationshipTypeId,
					ZOOD.OmsOrderId OmsOrderDetailsId,
					ZO.OrderNumber,
					OmsOrderShipmentId,
					Sku,
					ProductName,
					[Description],
					[dbo].[Fn_GetDefaultInventoryRoundOff](Quantity) Quantity,
					[dbo].[Fn_GetDefaultPriceRoundOff](Price) Price,
					[dbo].[Fn_GetDefaultInventoryRoundOff]([Weight]) [Weight],
					DownloadLink,
					[dbo].[Fn_GetDefaultPriceRoundOff](ZOLI.DiscountAmount) DiscountAmount,
					ShipSeparately,
					ZOLI.ShipDate,
					ZOLI.ReturnDate,
					[dbo].[Fn_GetDefaultPriceRoundOff](ZOLI.ShippingCost) ShippingCost,
					ZOLI.PromoDescription,
					TransactionNumber,
					PaymentStatusId,
					ZOLI.TrackingNumber,
					IsAutoGeneratedTracking,
					OrderLineItemStateId,
					IsRecurringBilling,
					RecurringBillingPeriod,
					RecurringBillingCycles,
					RecurringBillingFrequency,
					RecurringBillingAmount,
					AppliedPromo,
					CouponsApplied,
					ZOLI.ExternalId,
					ZOLI.IsActive,
					ZOLI.CreatedBy,
					ZOLI.CreatedDate,
					ZOLI.ModifiedBy,
					ZOLI.ModifiedDate,
					ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol,
					[dbo].[Fn_GetDefaultPriceRoundOff](	Quantity *Price)  SubTotal,
					[dbo].[Fn_GetDefaultPriceRoundOff](SUm(	Quantity *Price)OVER()) GrandTotal
			FROM ZnodeOmsorderLineItems ZOLI 
			LEFT JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderDetailsId = ZOLI.OmsOrderDetailsId)
			LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)
			LEFT JOIN ZnodeOmsOrder ZO ON ZOOD.OmsOrderId =ZO.OmsOrderId
			WHERE ZOOD.OmsOrderId = @OmsOrderId
			AND zood.IsActive = 1 
			and Quantity > 0 
			AND ZOLI.RmaReasonForReturnId  IS NULL ;
     END;
GO
PRINT N'Creating [dbo].[Znode_CouponExistInOrder]...';


GO
CREATE PROCEDURE [dbo].[Znode_CouponExistInOrder]
(@OrderId INT,
 @Couponcode varchar(100),
 @Status                     BIT OUT

)
AS


BEGIN
  SET NOCOUNT ON  


		select @Status = count(*) 
		from znodeomsorderdetails dtls inner join 
		ZnodeOmsOrderLineItems item on dtls.OmsOrderDetailsId = item.OmsOrderDetailsId 
		inner join [ZnodeOmsOrderDiscount] disc on (disc.OmsOrderLineItemId = item.OmsOrderLineItemsId or disc.OmsOrderDetailsId = dtls.OmsOrderDetailsId)
		inner join ZnodeOmsDiscountType typ on disc.OmsDiscountTypeId = typ.OmsDiscountTypeId
		where dtls.OmsOrderId = @OrderID and dtls.IsActive = 1 and typ.Name = 'COUPONCODE'
		and BINARY_CHECKSUM(disc.discountcode) = BINARY_CHECKSUM(@Couponcode)
            
	    SELECT 1 AS ID,
         CAST(@Status AS BIT) AS Status;

        


END
GO
PRINT N'Creating [dbo].[Znode_DeleteBlogNews]...';


GO
CREATE PROCEDURE [dbo].[Znode_DeleteBlogNews]
( 
@BlogNewsId VARCHAR(2000),
@Status           BIT OUT
  )
AS 
  /*  
     Summary : Remove blog/news details with their reference data 
			   Here complete delete the blog(s)/News and their references without any check  
			   If passed @BlogNewsIds are matched with deleted count then data set return true other wise false 
			   dbo.Split function use to make comma separeted data in table rows 
			   1 ZnodeBlogNews
			   2 ZnodeBlogNewsLocale
			   3 ZnodeCMSSEODetail
			   4 ZnodeCMSSEODetailLocale
			   5 ZnodeBlogNewsContent
    
       
    */
	 BEGIN
         BEGIN TRAN DeleteBlogNews;
         BEGIN TRY
             SET NOCOUNT ON;
             
			 DECLARE @TBL_DeleteBlogNews TABLE(BlogNewsId INT);  -- table holds the BlogNewsId id 
             INSERT INTO @TBL_DeleteBlogNews
                    SELECT a.BlogNewsId
                    FROM [dbo].[ZnodeBlogNews] AS a
                         INNER JOIN dbo.Split(@BlogNewsId, ',') AS b ON(a.BlogNewsId = b.Item); -- dbo.Split function use to make ',' separeted data in table rows 
           
             DELETE FROM ZnodeCMSSEODetailLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM ZnodeCMSSEODetail
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_DeleteBlogNews AS TBDCP
                     WHERE TBDCP.BlogNewsId = ZnodeCMSSEODetail.SEOId
                 )
                       AND ZnodeCMSSEODetail.CMSSEOTypeId IN
                 (
                     SELECT CMSSEOTypeId
                     FROM ZnodeCMSSEOType
                     WHERE NAME = 'BlogNews'
                 )
                       AND ZnodeCMSSEODetail.CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId
             );
             DELETE FROM ZnodeCMSSEODetail
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteBlogNews AS TBDCP
                 WHERE TBDCP.BlogNewsId = ZnodeCMSSEODetail.SEOId
             )
                   AND ZnodeCMSSEODetail.CMSSEOTypeId IN
             (
                 SELECT CMSSEOTypeId
                 FROM ZnodeCMSSEOType
                 WHERE NAME = 'BlogNews'
             );

			 DELETE FROM ZnodeBlogNewsCommentLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM ZnodeBlogNewsComment
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_DeleteBlogNews AS TBDCP
                     WHERE TBDCP.BlogNewsId = ZnodeBlogNewsComment.BlogNewsId
                 )
				   AND ZnodeBlogNewsComment.BlogNewsCommentId = ZnodeBlogNewsCommentLocale.BlogNewsCommentId
             );
          
			DELETE FROM ZnodeBlogNewsComment
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteBlogNews AS TBDCP
                 WHERE TBDCP.BlogNewsId = ZnodeBlogNewsComment.BlogNewsId
             );

			 DELETE FROM ZnodeBlogNewsContent
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteBlogNews AS TBDCP
                 WHERE TBDCP.BlogNewsId = ZnodeBlogNewsContent.BlogNewsId
             );

			 DELETE FROM ZnodeBlogNewsLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteBlogNews AS TBDCP
                 WHERE TBDCP.BlogNewsId = ZnodeBlogNewsLocale.BlogNewsId
             );

			 DELETE FROM ZnodeBlogNews
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteBlogNews AS TBDCP
                 WHERE TBDCP.BlogNewsId = ZnodeBlogNews.BlogNewsId
             );


             IF
             (
                 SELECT COUNT(1)
                 FROM @TBL_DeleteBlogNews
             ) =
             (   -- if count are equal then  dataset status are return true other wise false 
                 SELECT COUNT(1)
                 FROM dbo.Split(@BlogNewsId, ',')
             ) 
                 BEGIN
                     SELECT 1 AS ID,
                            CAST(1 AS BIT) AS [Status];
                     SET @Status = 1;
                 END;
             ELSE
                 BEGIN
                     SELECT 0 AS ID,
                            CAST(0 AS BIT) AS [Status];
                     SET @Status = 0;
                 END;
             COMMIT TRAN DeleteBlogNews;
         END TRY
         BEGIN CATCH
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_DeleteBlogNews @BlogNewsId = '+@BlogNewsId+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             SELECT 0 AS ID,
                    CAST(0 AS BIT) AS [Status];
             ROLLBACK TRAN DeleteBlogNews;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_DeleteBlogNews',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetBlogNewsList]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetBlogNewsList] 
(   @WhereClause NVarchar(Max) = '',
	@Rows        INT           = 100,
	@PageNo      INT           = 1,
	@Order_BY VARCHAR(1000)    = '',
	@RowsCount   INT OUT,
	@LocaleId    INT           = 0
)
AS 
/*
   Summary:- This proceudre is used to get the blog commets details 
    SELECT * FROM ZnodeCMSSeoType
	Title(BlogNewsTitle)  
 Type (BlogNewsType)
 View Comment (Show total count of comments against that blog/news)
 Start Date (ActivationDate)
 End date(ExpirationDate)
 Created On (CreatedDate)
 Store Name (StoreName)
 SEO Title (SEOTitle)
 SEO Description (SEODescription)
 SEO Keywords (SEOKeywords)
 SEO Friendly URL(SEOUrl)
 Is Active (IsBlogNewsActive)
 Is Allow Guest Comment (IsAllowGuestComment)
   
   EXEC Znode_GetBlogNewsList '' ,100,1,'',0,1
     
*/
BEGIN 
BEGIN TRY 
SET NOCOUNT ON 
 
 DECLARE @DefaultlocaleId INT = dbo.fn_GetDefaultLocaleId()
 DECLARE @TBL_GetBlogComments TABLE (BlogNewsId INT  ,BlogNewsTitle NVARCHAR(1200),BlogNewsType VARCHAR(300),CountComments INT 
    ,ActivationDate DATETIME ,ExpirationDate DATETIME , CreatedDate DATETIME
	,StoreName NVARCHAR(max) ,IsAllowGuestComment BIT,IsBlogNewsActive BIT
	--,SEOTitle NVARCHAR(max) ,SEODescription NVARCHAr(max), SEOKeywords NVARCHAR(max),SEOUrl NVARCHAR(max) 
	, RowID INT , CountNo INT )
DECLARE @SQL NVARCHAR(max) = '' 

SET @SQL = '
 ;With Cte_GetBlogComments AS 
 (
   SELECT ZBN.BlogNewsId,BlogNewsTitle ,BlogNewsType ,(SELECT COUNT(1) FROM ZnodeBlogNewsComment ZBC WHERE ZBC.BlogNewsId = ZBN.BlogNewsId)  CountComments
    ,ActivationDate,ExpirationDate ,ZBN.CreatedDate 
	,ZP.StoreName ,ZBCL.localeId ,'+CAST(@DefaultlocaleId AS VARCHAR(50))+' SeoLocaleId ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
   FROM  ZnodeBlogNews  ZBN
   LEFT JOIN ZnodeBlogNewsLocale ZBCL ON (ZBCL.BlogNewsId = ZBN.BlogNewsId)
   LEFT JOIN ZnodePortal ZP ON (Zp.PortalId = ZBN.PortalId )
   --LEFT JOIN ZnodeCMSSeoDetail ZSD ON ( ZSD.SEOId= ZBN.BlogNewsId AND EXISTS (SELECT TOP 1 1 FROM ZnodeCMSSeoType ZCST WHERE ZCST.CMSSEOTypeId= ZSD.CMSSEOTypeId AND ZCST.Name = ''BlogNews''))
   --LEFT JOIN ZnodeCmsSeoDetailLocale ZSDL ON (ZSDL.CMSSEODetailId = ZSD.CMSSEODetailId  AND ZSDL.localeId IN ('+CAST(@DefaultlocaleId AS VARCHAR(50))+','+CAST(@LocaleId AS VARCHAR(50))+'))
   WHERE ZBCL.localeId IN ('+CAST(@DefaultlocaleId AS VARCHAR(50))+','+CAST(@LocaleId AS VARCHAR(50))+' )
 )
 ,Cte_BlogNewForLocale AS 
 (
   SELECT BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , [CreatedDate]
	,StoreName ,localeId , SeoLocaleId ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
   FROM Cte_GetBlogComments 
   WHERE localeId = '+CAST(@LocaleId AS VARCHAR(50))+'
   AND (SeoLocaleId IS NULL OR SeoLocaleId = '+CAST(@LocaleId AS VARCHAR(50))+')
   '+[dbo].[Fn_GetFilterWhereClause](@whereClause)+'
 )
 ,Cte_DefaultLocaleData AS 
 (
   SELECT BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , [CreatedDate]
	,StoreName ,localeId , SeoLocaleId ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
   FROM Cte_BlogNewForLocale
   UNION ALL 
   SELECT BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , [CreatedDate]
	,StoreName ,localeId , SeoLocaleId ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
  FROM Cte_GetBlogComments CTED 
  WHERE NOT EXISTS (SELECT TOP 1 1 FROM Cte_BlogNewForLocale CteBN WHERE CteBN.BlogNewsId= CTED.BlogNewsId )
  AND localeId = '+CAST(@DefaultlocaleId AS VARCHAR(50))+'
  AND (SeoLocaleId IS NULL OR SeoLocaleId = '+CAST(@DefaultlocaleId AS VARCHAR(50))+')
   '+[dbo].[Fn_GetFilterWhereClause](@whereClause)+'
 )
 ,Cte_filterData AS 
 (
 SELECT BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , [CreatedDate]
	,StoreName ,localeId , SeoLocaleId ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
	, '+dbo.Fn_GetPagingRowId(@Order_BY,'BlogNewsId DESC')+',Count(*)Over() CountNo
 FROM Cte_DefaultLocaleData 
 ) 
  SELECT BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , [CreatedDate]
	,StoreName ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
	,RowId,CountNo
  FROM Cte_filterData
  '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows) 
  PRINT @SQL 

 INSERT INTO @TBL_GetBlogComments (BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , [CreatedDate]
	,StoreName  ,IsAllowGuestComment,IsBlogNewsActive
--	,SEOTitle,SEODescription, SEOKeywords,SEOUrl
	,RowId,CountNo)
 EXEC (@SQL)

 SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_GetBlogComments),0)

 SELECT BlogNewsId ,BlogNewsTitle,BlogNewsType ,CountComments
    ,ActivationDate,ExpirationDate , CreatedDate
	,StoreName  ,IsAllowGuestComment,IsBlogNewsActive
	--,SEOTitle,SEODescription, SEOKeywords,SEOUrl
 FROM @TBL_GetBlogComments
 END TRY 
 BEGIN CATCH 
  SELECT ERROR_MESSAGE ()
 END CATCH 
 END
GO
PRINT N'Creating [dbo].[Znode_GetPublishSingleProducts]...';


GO
CREATE PROCEDURE [dbo].[Znode_GetPublishSingleProducts]
(
	  @PublishCatalogId int= NULL
	  ,@PublishCategoryId varchar(2000)= NULL
	  ,@UserId int
	  ,@NotReturnXML int= NULL
	  ,@PimProductId varchar(2000)= 0, @VersionId int= 0, @IsDebug bit= 0, @TokenId nvarchar(max)= '')
AS
    
/*
    Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

    Unit Testing
    
    SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
    SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
    SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
    SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
    select * from znodepublishcatalog
    SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
    SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
    SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = NULL ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 117,@IsDebug= 1 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = 3,@UserId= 2 ,@NotReturnXML= NULL,@IsDebug= 1  ,@PimProductId = 12
    EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
    SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
    SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
 */

BEGIN
	
	BEGIN TRY
		--SET NOCOUNT ON;
		DECLARE @start_time datetime;

	
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		DECLARE @PimCatalogId int= ISNULL(
										 (
											 SELECT PimCatalogId
											 FROM ZnodePublishcatalog
											 WHERE PublishCatalogId = @PublishCatalogId
										 ), 0);  --- this variable is used to carry y pim catalog id by using published catalog id
		-- This variable used to carry the locale in loop 
		-- This variable is used to carry the default locale which is globaly set

		DECLARE @LocaleId int, @DefaultLocaleId int= Dbo.Fn_GetDefaultLocaleId(), @ProductNamePimAttributeId int= dbo.Fn_GetProductNameAttributeId(), @SkuPimAttributeId int= dbo.Fn_GetProductSKUAttributeId(), @IsActivePimAttributeId int= dbo.Fn_GetProductIsActiveAttributeId();
			 
		-- This variable is used in loop to increment the counter

		DECLARE @Counter int= 1, @MaxRowId int= 0, @DefaultPimAttributeFamilyId int= Dbo.Fn_GetDefaultPimProductFamilyId();
		DECLARE @DeletePublishProductId varchar(max)= '', @PimProductIds varchar(max)= '', @PimAttributeId varchar(max)= '';
             
		-- This table will used to hold the all currently active locale ids  

		DECLARE @TBL_LocaleIds TABLE
		( 
									 RowId int IDENTITY(1, 1), LocaleId int PRIMARY KEY
		);             
			 
		-- This table is used to hold the Product xml product wise
		DECLARE @TBL_ProductAttributeXml TABLE
		( 
											   PublishProductId int, ProductXml xml, LocaleId int
		);
			 
		-- This table hold the complete xml of product with other information like category and catalog

		DECLARE @TBL_PimProductIds TABLE
		( 
										 PimProductId int, PimCategoryId int, PimCatalogId int, PublishCatalogId int, IsParentProducts bit, DisplayOrder int, ProductName nvarchar(max), SKU nvarchar(max), IsActive nvarchar(max), PimAttributeFamilyId int, ProfileId varchar(max), CategoryDisplayOrder int, ProductIndex int, PRIMARY KEY(PimCatalogId, PimCategoryId, PimProductId)
		);
		DECLARE @TBL_PimProductIds_in TABLE
		( 
											PimProductId int, PimCategoryId int, PimCatalogId int, PublishCatalogId int, IsParentProducts bit, DisplayOrder int, ProductName nvarchar(max), SKU nvarchar(max), IsActive nvarchar(max), PimAttributeFamilyId int, ProfileId varchar(max), CategoryDisplayOrder int, ProductIndex int, PRIMARY KEY(PimCatalogId, PimCategoryId, PimProductId)
		);


		-- This table is used to hold the product which publish in current process 
		DECLARE @TBL_PublishProductIds TABLE
		( 
											 PublishProductId int, PimProductId int, PublishCatalogId int, PublishCategoryId varchar(max), CategoryProfileIds varchar(max), VersionId int, PRIMARY KEY(PimProductId, PublishProductId, PublishCatalogId)
		); 
			 
		 
		-- This table is used hold the published products for finding the attributes details 

		--DECLARE @TBL_AttributeValue TABLE
		--( 
		--								  PimProductId int, AttributeValue nvarchar(max), AttributeCode varchar(300), PimAttributeId int, DefaultValueXML nvarchar(max) PRIMARY KEY(PimProductId, AttributeCode), INDEX TBL_AttributeValue_1(PimProductId, PimAttributeId)
		--);


		
		DECLARE @TBL_PimAttributeIdsLocale TABLE
		( 
			PimAttributeId int, ParentPimAttributeId int, AttributeTypeId int, AttributeCode varchar(300), IsRequired bit, IsLocalizable bit, IsFilterable bit, IsSystemDefined bit, IsConfigurable bit, IsPersonalizable bit, DisplayOrder int, HelpDescription varchar(max), IsCategory bit, IsHidden bit, CreatedDate datetime, ModifiedDate datetime, AttributeName nvarchar(max), AttributeTypeName varchar(300), IsCustomeField bit, LocaleId int,IsSwatch BIT, PRIMARY KEY(PimAttributeId, LocaleId)
		);
		DECLARE @TBL_AttributesDetails TABLE
		( 
			Id Int Identity ,PimAttributeId int, AttributeCode varchar(300), IsUseInSearch bit, IsHtmlTags bit, IsComparable bit, IsFacets bit, AttributeValue varchar(max)
			, IsLinkAttribute bit, PimProductId int, IsSwatch Bit , PRIMARY KEY(Id)
		);
				
		DECLARE @TBL_PimAttributeValueId TABLE
		( 
				RowId int, PimAttributeId int, PimAttributeValueId int, PimProductId int, AttributeCode varchar(300) 

		);
		DECLARE @TBL_PimAttributeValueLocale TABLE
		( 
				 Id int Identity,  PimAttributeId int, AttributeValue nvarchar(max), PimProductId int, AttributeCode varchar(300), LocaleId int, PRIMARY KEY(Id)
		);
		DECLARE @TBL_PimAttributeDefaultValue TABLE
		( 
				ID int Identity , PimAttributeId int, AttributeValue nvarchar(max), PimProductId int, AttributeCode varchar(300), LocaleId int, DisplayOrder int, AttributeDefaultValueCode varchar(600),SwatchText VARCHAR(100),MediaPath VARCHAR(max),Primary Key (ID )
			
		);
		DECLARE @TBL_PimAttributeMediaValue TABLE
		( 
				Id int Identity ,PimAttributeId int, AttributeValue nvarchar(max), PimProductId int, AttributeCode varchar(300), LocaleId int, MediaConfigurationId int, MediaId int
				Primary Key (id )
		);
		DECLARE @TBL_ProductCustomeAttribute TABLE
		( 
			PimProductId int, CustomCode varchar(300), CustomKey nvarchar(600), CustomKeyValue nvarchar(600), LocaleId int, PRIMARY KEY(PimProductId, CustomCode, LocaleId)
		);
		INSERT INTO @Tbl_LocaleIds( LocaleId )
			   SELECT LocaleId
			   FROM ZnodeLocale
			   WHERE IsActive = 1 AND 
					 @NotReturnXML IS NULL ; 
		-- this check is used when this procedure is call by internal procedure to publish only product and no need to return publish xml;    
		--Collected list of products for  publish 
		INSERT INTO @TBL_PimProductIds_in( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId, CategoryDisplayOrder, PublishCatalogId )
			   SELECT ZPCC.PimProductId, ZPCC.PimCategoryId, 1 AS IsParentProducts, NULL AS DisplayOrder, ZPCC.PimCatalogId, ZPCC.DisplayOrder, ZPC.PublishCatalogId
			   FROM ZnodePimCatalogCategory AS ZPCC
					INNER JOIN
					ZnodePublishCatalog AS ZPC
					ON ZPC.PimCatalogId = ZPCC.PimCatalogId
			   WHERE( ZPCC.PimCatalogId = @PimCatalogId OR 
					  EXISTS
					(
						SELECT TOP 1 1
						FROM dbo.split( @PimProductId, ',' ) AS SP
						WHERE SP.Item = ZPCC.PimProductId
					)
					) AND 
					ZPCC.PimProductId IS NOT NULL;
			

		--Collected list of link products for  publish
		INSERT INTO @TBL_PimProductIds_in( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId, PublishCatalogId )
			   SELECT ZPLPD.PimProductId, ZPCC.PimCategoryId, 0 AS IsParentProducts, NULL AS DisplayOrder, CTPP.PimCatalogId, CTPP.PublishCatalogId
			   FROM ZnodePimLinkProductDetail AS ZPLPD
					INNER JOIN
					@TBL_PimProductIds_in AS CTPP
					ON ZPLPD.PimParentProductId = CTPP.PimProductId AND 
					   IsParentProducts = 1
					INNER JOIN
					ZnodePimCatalogCategory AS ZPCC
					ON ZPCC.PimProductId = ZPLPD.PimProductId AND 
					   ZPCC.PimCatalogId = CTPP.PimCatalogId
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_PimProductIds_in AS CTPPI
				   WHERE CTPPI.PimProductId = ZPLPD.PimProductId
			   ) 
					 -- AND EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPLPD.PimProductId ) 
					 AND 
					 ZPCC.PimProductId IS NOT NULL
			   GROUP BY ZPLPD.PimProductId, ZPCC.PimCategoryId, CTPP.PimCatalogId, CTPP.PublishCatalogId; 
		--Collected list of Addon products for  publish

		INSERT INTO @TBL_PimProductIds_in( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId, PublishCatalogId )
			   SELECT ZPAPD.PimChildProductId, ISNULL(ZPCC.PimCategoryId, 0) AS PublishCategoryId, 0 AS IsParentProducts, NULL AS DisplayOrder, CTALP.PimCatalogId, CTALP.PublishCatalogId
			   FROM ZnodePimAddOnProductDetail AS ZPAPD
					INNER JOIN
					ZnodePimAddOnProduct AS ZPAP
					ON ZPAP.PimAddOnProductId = ZPAPD.PimAddOnProductId
					INNER JOIN
					@TBL_PimProductIds_in AS CTALP
					ON CTALP.PimProductId = ZPAP.PimProductId AND 
					   IsParentProducts = 1
					LEFT JOIN
					ZnodePimCatalogCategory AS ZPCC
					ON ZPCC.PimProductId = ZPAPD.PimChildProductId AND 
					   ZPCC.PimCatalogId = CTALP.PimCatalogId
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_PimProductIds_in AS CTALPI
				   WHERE CTALPI.PimProductId = ZPAPD.PimChildProductId
			   ) 
			   ---	 AND EXISTS(SELECT TOP 1 1FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPAPD.PimChildProductId)  
			   GROUP BY ZPAPD.PimChildProductId, ZPCC.PimCategoryId, CTALP.PimCatalogId, CTALP.PublishCatalogId;

		--Collected list of Bundle / Group / Config products for  publish
		INSERT INTO @TBL_PimProductIds_in( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId, PublishCatalogId )
			   SELECT ZPTA.PimProductId, ISNULL(ZPCC.PimCategoryId, 0), 0 AS IsParentProducts, NULL AS DisplayOrder, CTAAP.PimCatalogId, CTAAP.PublishCatalogId
			   FROM ZnodePimProductTypeAssociation AS ZPTA
					INNER JOIN
					@TBL_PimProductIds_in AS CTAAP
					ON CTAAP.PimProductId = ZPTA.PimParentProductId AND 
					   IsParentProducts = 1
					LEFT JOIN
					ZnodePimCatalogCategory AS ZPCC
					ON ZPCC.PimProductId = ZPTA.PimProductId AND 
					   ZPCC.PimCatalogId = CTAAP.PimCatalogId
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_PimProductIds_in AS CTAAPI
				   WHERE CTAAPI.PimProductId = ZPTA.PimProductId
			   )
			   --AND EXISTS(SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPTA.PimProductId)
			   GROUP BY ZPTA.PimProductId, ZPCC.PimCategoryId, CTAAP.PimCatalogId, CTAAP.PublishCatalogId;
		INSERT INTO @TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId, PublishCatalogId, ProductIndex )
			   SELECT PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId, PublishCatalogId, ROW_NUMBER() OVER(PARTITION BY PimProductId ORDER BY ISNULL(PimCategoryId, 0)) AS ProductIndex
			   FROM @TBL_PimProductIds_in; 			  
			  
		   
		--UPDATE TBLP 
		--SET Productindex = 0 --CTEPI.ProductIndex 
		--FROM @TBL_PimProductIds TBLP
		--  INNER JOIN Cte_GetProductIndex CTEPI ON (CTEPI.PimProductId = TBLP.PimProductId AND CTEPI.PimCategoryId = TBLP.PimCategoryId)
		-- SELECT * FROM @TBL_PimProductIds

		UPDATE TBPP
		  SET PimAttributeFamilyId = ISNULL(ZP.PimAttributeFamilyId, @DefaultPimAttributeFamilyId)
		FROM @TBL_PimProductIds TBPP
			 INNER JOIN
			 ZnodePimProduct ZP
			 ON Zp.PimProductId = TBPP.PimProductId;
		UPDATE TBPP
		  SET PublishCatalogId = ZPC.PublishCatalogId
		FROM @TBL_PimProductIds TBPP
			 INNER JOIN
			 ZnodePublishCatalog ZPC
			 ON ZpC.PimCatalogId = TBPP.PimCatalogId;
		WHILE 1 = 1 AND 
			  @NotReturnXML IS NULL
		BEGIN
			SET @DeletePublishProductId = SUBSTRING(
												   (
													   SELECT TOP 100 ','+CAST(PublishProductId AS varchar(50))
													   FROM ZnodePublishProduct AS ZPP
													   WHERE NOT EXISTS
													   (
														   SELECT TOP 1 1
														   FROM @TBL_PimProductIds AS TBP
														   WHERE ZPP.PimProductId = TBP.PimProductId
													   ) AND 
															 ZPP.PublishCatalogId = @PublishCatalogId
													   FOR XML PATH('')
												   ), 2, 4000);

			--Remove extra products from catalog
			EXEC dbo.Znode_DeletePublishCatalog @PublishCatalogIds = @PublishCatalogId, @PublishProductIds = @DeletePublishProductId;
			IF ISNULL(@DeletePublishProductId, '') = ''
			BEGIN BREAK
			END;
		END;
		
		WITH Cte_UpdateProduct
			 AS (SELECT PimProductId, PublishCatalogId
				 FROM @TBL_PimProductIds AS TBP
				 GROUP BY PimProductId, PublishCatalogId) 
			
			 -- This merge statement is used for crude oprtaion with publisgh product table
			 MERGE INTO ZnodePublishProduct TARGET
			 USING Cte_UpdateProduct SOURCE
			 ON --check for if already exists then just update otherwise insert the product  
			 TARGET.PimProductId = SOURCE.PimProductId AND 
			 TARGET.PublishCatalogId = SOURCE.PublishCataLogId
			 WHEN MATCHED
				   THEN UPDATE SET TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate
			 WHEN NOT MATCHED
				   THEN INSERT(PimProductId, PublishCatalogId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) VALUES( SOURCE.PimProductId, SOURCE.PublishCatalogId, @UserId, @GetDate, @UserId, @GetDate )
			 OUTPUT INSERTED.PublishProductId, INSERTED.PimProductId, INSERTED.PublishCatalogId
					INTO @TBL_PublishProductIds(PublishProductId, PimProductId, PublishCatalogId); 
			
					
		-- Here used the ouput clause to catch what data inserted or updated into variable table
		WITH Cte_GetPublishCategory
			 AS (SELECT PublishProductId, ZPC.PublishCategoryId, ZPC.PublishCatalogId
				 FROM ZnodePublishCategory AS ZPC
					  INNER JOIN
					  @TBL_PimProductIds AS TBP
					  ON ISNULL(TBP.PimCategoryId, 0) = ISNULL(ZPC.PimCategoryId, -1)
					  INNER JOIN
					  @TBL_PublishProductIds AS TBPP
					  ON TBP.PimProductId = TBPP.PimProductId AND 
						 ZPC.PublishCatalogId = TBPP.PublishCatalogId)
			 -- This merge staetment is used for crude opration with  ZnodePublishCategoryProduct table
			 MERGE INTO ZnodePublishCategoryProduct TARGET
			 USING Cte_GetPublishCategory SOURCE
			 ON TARGET.PublishProductId = SOURCE.PublishProductId AND 
				ISNULL(TARGET.PublishCategoryId, 0) = ISNULL(SOURCE.PublishCategoryId, 0) AND 
				TARGET.PublishCatalogId = SOURCE.PublishCatalogId
			 WHEN NOT MATCHED
				   THEN INSERT(PublishProductId, PublishCategoryId, PublishCatalogId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) VALUES( SOURCE.PublishProductId, SOURCE.PublishCategoryId, SOURCE.PublishCatalogId, @UserId, @GetDate, @userId, @GetDate );
            
		-- Update the Version
		UPDATE TBAE
		  SET VersionId = ZPCL.PublishCatalogLogId
		FROM @TBL_PublishProductIds TBAE
			 INNER JOIN
			 ZnodePublishCatalogLog ZPCL
			 ON ZPCL.PublishCatalogLogId =
		(
			SELECT MAX(ZPCLI.PublishCatalogLogId)
			FROM ZnodePublishCatalogLog AS ZPCLI
			WHERE ZPCLI.PublishcatalogId = TBAE.PublishCatalogId
		)
		WHERE @PublishCatalogId IS NULL;
		-- Profile id updated here
		Declare @Cte_ProductProfile TABLE (Id int Identity , PimProductId int , PimCategoryId int , PimCatalogId int , ProfileIds nvarchar(max)
		Primary Key (Id))
		--WITH Cte_ProductProfile
		--	 AS 
		Insert into @Cte_ProductProfile (PimProductId, PimCategoryId, PimCatalogId, ProfileIds)
			 (SELECT ZPCC.PimProductId, ZPCC.PimCategoryId, ZPCC.PimCatalogId, SUBSTRING(
																						   (
																							   SELECT DISTINCT 
																									  ','+CAST(ProfileId AS varchar(50))
																							   FROM ZnodeProfileCatalog AS ZPC
																									INNER JOIN
																									ZnodeProfileCatalogCategory AS ZPRCC
																									ON ZPRCC.ProfileCatalogId = ZPC.ProfileCatalogId
																							   WHERE ZPC.PimCatalogId = ZPCC.PimCatalogId AND 
																									 ZPRCC.PimCatalogCategoryId = ZPCC.PimCatalogCategoryId
																							   FOR XML PATH('')
																						   ), 2, 4000) AS ProfileIds
				 FROM ZnodePimCatalogCategory AS ZPCC
					  INNER JOIN
					  @TBL_PimProductIds AS TBP
					  ON( TBP.PimCatalogId = ZPCC.PimCatalogId AND 
						  TBP.PimCategoryId = ZPCC.PimCategoryId AND 
						  TBP.PimProductId = ZPCC.PimProductId
						))


			 UPDATE TBP
			   SET ProfileId = CTCP.ProfileIds
			 FROM @TBL_PimProductIds TBP
				  INNER JOIN
				  @Cte_ProductProfile  CTCP
				  ON CTCP.PimProductId = TBP.PimProductId AND 
					 CTCP.PimCategoryId = TBP.PimCategoryId;
			
		-- SELECT * FROM @TBL_PimProductIds

			
		INSERT INTO @TBL_AttributesDetails( PimAttributeId, AttributeCode, IsComparable, IsUseInSearch, IsHtmlTags, IsFacets,IsSwatch, IsLinkAttribute, PimProductId )
			   SELECT ZPA.PimAttributeId, AttributeCode, IsComparable, IsUseInSearch, IsHtmlTags, IsFacets,IsSwatch, 0, 0
			   FROM ZnodePimAttribute AS ZPA
					LEFT JOIN
					ZnodePimFrontendProperties AS ZPFP
					ON ZPFP.PimAttributeId = ZPA.PimATtributeId
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM ZnodePimAttributeValue AS ZPAV
						INNER JOIN
						@TBL_PimProductIds AS TBP
						ON TBP.PimProductId = ZPAV.PimProductId
						INNER JOIN
						@TBL_PublishProductIds AS TBPP
						ON TBPP.PimProductId = TBP.PimProductId
				   WHERE ZPAV.PimAttributeId = ZPA.PimAttributeId AND 
						 ( EXISTS
						 (
							 SELECT TOP 1 1
							 FROM ZnodePimFamilyGroupMapper AS ZPFGM
							 WHERE ZPFGM.PimAttributeId = ZPA.PimAttributeId AND 
								   ZPFGM.PimAttributeFamilyId = TBP.PimAttributeFamilyId
						 ) OR 
						   EXISTS
						 (
							 SELECT TOP 1 1
							 FROM ZnodePimAttribute AS ZPAI
							 WHERE ZPAV.PimAttributeId = ZPAI.PimAttributeId AND 
								   ZPAI.IsPersonalizable = 1
						 )
						 )
			   ) AND 
				   IsCategory = 0
			   GROUP BY ZPA.PimAttributeId, AttributeCode, IsComparable, IsUseInSearch, IsHtmlTags, IsFacets,IsSwatch
			   UNION ALL
			   SELECT DISTINCT ZPLPD.PimAttributeId, ZPA.AttributeCode, IsComparable, IsUseInSearch, IsHtmlTags, IsFacets,IsSwatch, 1, PimParentProductId
			   FROM ZnodePIMAttribute AS ZPA
					INNER JOIN
					ZnodePimLinkProductDetail AS ZPLPD
					ON ZPLPD.pimAttributeId = ZPA.PimATtributeId
					LEFT JOIN
					ZnodePimFrontendProperties AS ZPFP
					ON ZPFP.PimAttributeId = ZPLPD.PimATtributeId
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_PublishProductIds AS TBPP
				   WHERE TBPP.PimProductId = ZPLPD.PimParentProductId
			   ) AND 
					 IsCategory = 0
			   GROUP BY ZPLPD.PimAttributeId, AttributeCode, IsComparable, IsUseInSearch, IsHtmlTags, IsFacets,IsSwatch, PimParentProductId;

		-- SELECT * FROM @TBL_AttributesDetails
		-- Begin the loop with while on active locale ids  

		INSERT INTO @TBL_PimAttributeValueId( RowId, PimAttributeId, PimAttributeValueId, PimProductId, AttributeCode )
			   SELECT DENSE_RANK() OVER(ORDER BY ZPAV.PimProductId) AS RowId, ZPAV.PimAttributeId, PimAttributeValueId, ZPAV.PimProductId, TBLA.AttributeCode
			   FROM ZnodePimAttributeValue AS ZPAV
					INNER JOIN
					@TBL_AttributesDetails AS TBLA
					ON(TBLA.PimAttributeId = ZPAV.PimAttributeId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_PimProductIds AS tbl
				   WHERE ZPAV.PimProductId = tbl.PimProductId
			   );



		INSERT INTO @TBL_PimAttributeValueLocale( PimProductId, PimAttributeId, AttributeValue, LocaleId, AttributeCode )
			   SELECT PimProductId, PimAttributeId, ZPAVL.AttributeValue, ZPAVL.LocaleId, AttributeCode
			   FROM ZnodePimAttributeValueLocale AS ZPAVL
					INNER JOIN
					@TBL_PimAttributeValueId AS TBLP
					ON(TBLP.PimAttributeValueId = ZPAVL.PimAttributeValueId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_LocaleIds AS TBLL
				   WHERE TBLL.LocaleId = ZPAVL.LocaleId
			   )
			   UNION ALL
			   SELECT PimProductId, PimAttributeId, ZPAVL.AttributeValue, ZPAVL.LocaleId, AttributeCode
			   FROM ZnodePimProductAttributeTextAreaValue AS ZPAVL
					INNER JOIN
					@TBL_PimAttributeValueId AS TBLP
					ON(TBLP.PimAttributeValueId = ZPAVL.PimAttributeValueId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_LocaleIds AS TBLL
				   WHERE TBLL.LocaleId = ZPAVL.LocaleId
			   );

		INSERT INTO @TBL_PimAttributeDefaultValue( PimProductId, PimAttributeId, AttributeValue, LocaleId, AttributeCode, DisplayOrder, AttributeDefaultValueCode,SwatchText,MediaPath )
			   SELECT TBLP.PimProductId, TBLP.PimAttributeId, ZPADVL.AttributeDefaultValue, ZPADVL.LocaleId, AttributeCode, ZPADV.DisplayOrder, ZPADV.AttributeDefaultValueCode,SwatchText,ZM.[Path]
			   FROM @TBL_PimAttributeValueId AS TBLP
					INNER JOIN
					ZnodePimProductAttributeDefaultValue AS ZPADVM
					ON(TBLP.PimAttributeValueId = ZPADVM.PimAttributeValueId)
					INNER JOIN
					ZnodePimAttributeDefaultValue AS ZPADV
					ON(ZPADVM.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
					INNER JOIN
					ZnodePimAttributeDefaultValueLocale AS ZPADVL
					ON(ZPADVM.PimAttributeDefaultValueId = ZPADVL.PimAttributeDefaultValueId)
					LEFT JOIN ZnodeMedia ZM ON (Zm.MediaId = ZPADV.MediaId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_LocaleIds AS TBLL
				   WHERE TBLL.LocaleId = ZPADVL.LocaleId
			   ) 
			 --AND 
			 --ZPADVM.LocaleId = ZPADVL.LocaleId;



		INSERT INTO @TBL_PimAttributeMediaValue( PimProductId, PimAttributeId, AttributeValue, LocaleId, AttributeCode, MediaConfigurationId, MediaId )
			   SELECT PimProductId, PimAttributeId, ZM.Path AS AttributeValue, LocaleId, AttributeCode, MediaConfigurationId, Zm.MediaId
			   FROM ZnodePimProductAttributeMedia AS ZPAM
					INNER JOIN
					@TBL_PimAttributeValueId AS TBLP
					ON(TBLP.PimAttributeValueId = ZPAM.PimAttributeValueId)
					INNER JOIN
					ZnodeMedia AS ZM
					ON(ZM.MediaId = ZPAM.MediaId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_LocaleIds AS TBLL
				   WHERE TBLL.LocaleId = ZPAM.LocaleId
			   );
		INSERT INTO @TBL_ProductCustomeAttribute( PimProductId, CustomCode, CustomKey, CustomKeyValue, LocaleId )
			   SELECT ZPCF.PimProductId, ZPCF.CustomCode, ZPCFL.CustomKey, CustomKeyValue, ZPCFL.LocaleId
			   FROM ZnodePimCustomField AS ZPCF
					INNER JOIN
					ZnodePimCustomFieldLocale AS ZPCFL
					ON(ZPCFL.PimCustomFieldId = ZPCF.PimCustomFieldId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_LocaleIds AS TBLL
				   WHERE TBLL.LocaleId = ZPCFL.LocaleId
			   ) AND 
					 EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_PimAttributeValueId AS TBLP
				   WHERE TBLP.PimProductId = ZPCF.PimProductId
			   );
		INSERT INTO @TBL_PimAttributeIdsLocale( PimAttributeId, ParentPimAttributeId, AttributeTypeId, AttributeCode, IsRequired, IsLocalizable, IsFilterable, IsSystemDefined, IsConfigurable, IsPersonalizable, DisplayOrder, HelpDescription, IsCategory, IsHidden, CreatedDate, ModifiedDate, AttributeName, AttributeTypeName, LocaleId,IsSwatch )
			   SELECT ZPA.PimAttributeId, ZPA.ParentPimAttributeId, ZPA.AttributeTypeId, ZPA.AttributeCode, ZPA.IsRequired, ZPA.IsLocalizable, ZPA.IsFilterable, ZPA.IsSystemDefined, ZPA.IsConfigurable, ZPA.IsPersonalizable, ZPA.DisplayOrder, ZPA.HelpDescription, ZPA.IsCategory, ZPA.IsHidden, ZPA.CreatedDate, ZPA.ModifiedDate, ZPAL.AttributeName, ZAT.AttributeTypeName, ZPAL.LocaleId,IsSwatch
			   FROM ZnodePimAttribute AS ZPA
					INNER JOIN
					ZnodePimAttributeLocale AS ZPAL
					ON(ZPAL.PimAttributeId = ZPA.PimAttributeId)
					INNER JOIN
					ZnodeAttributeType AS ZAT
					ON(ZAT.AttributeTypeId = ZPA.AttributeTypeId)
			   WHERE EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_LocaleIds AS TBLL
				   WHERE TBLL.LocaleId = ZPAL.LocaleId
			   ) AND 
					 ZPA.IsCategory = 0 AND 
					 EXISTS
			   (
				   SELECT TOP 1 1
				   FROM @TBL_AttributesDetails AS TBLA
				   WHERE(TBLA.PimAttributeId = ZPA.PimAttributeId)
			   );
		INSERT INTO @TBL_AttributesDetails( PimProductId, AttributeCode, AttributeValue, IsLinkAttribute )
			   SELECT DISTINCT 
					  PimProductId, CustomCode, '', 0
			   FROM @TBL_ProductCustomeAttribute;

		-- SELECT * FROM @TBL_PimAttributeValueId
		SET @MaxRowId = ISNULL(
							  (
								  SELECT MAX(RowId)
								  FROM @TBL_LocaleIds
							  ), 0);
		DECLARE @TBL_PimProductIdToCalculate TABLE
		( 
		PimProductId int PRIMARY KEY
		);
		DECLARE @ProductCount int=
		(
			SELECT COUNT(DISTINCT PimProductId)
			FROM @TBL_PimAttributeValueId
		), @ProductCounter int= 0;
		IF @ProductCount < 100
		BEGIN
			SET @ProductCount = 100;
		END; 
		--SELECT *,@MaxRowId,@ProductCount FROM @TBL_PimAttributeValueId  
		------------------START 
	   WHILE @ProductCounter < @ProductCount AND 
			  @NotReturnXML IS NULL
		BEGIN
			BEGIN TRAN GetPublishProducts;
			SET @start_time = GETDATE();
			IF @ProductCounter = 0
			BEGIN
				INSERT INTO @TBL_PimProductIdToCalculate( PimProductId )
					   SELECT PimProductId
					   FROM @TBL_PimAttributeValueId
					   WHERE RowId BETWEEN 1 AND @ProductCounter + 100
					   GROUP BY PimProductId;
			END;
			ELSE
			BEGIN
				INSERT INTO @TBL_PimProductIdToCalculate( PimProductId )
					   SELECT PimProductId
					   FROM @TBL_PimAttributeValueId
					   WHERE RowId BETWEEN @ProductCounter + 1 AND @ProductCounter + 100
					   GROUP BY PimProductId;
			END;

			WHILE @Counter <= @MaxRowId
			BEGIN -- Start Active Locale Loop 
				-- set the locale id
					--IF EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '@TBL_AttributeValue')
					--BEGIN
					--	Drop table @TBL_AttributeValue
					--END
					
					   Declare @TBL_AttributeValue TABLE 
					   (PimProductId    INT,
					   AttributeValue  NVARCHAR(MAX),
					   AttributeCode   VARCHAR(300),
					   PimAttributeId  INT,
					   DefaultValueXML NVARCHAR(MAX)
				        
					  );

				   
				   DECLARE @TBL_CollectPublishedDefaultXML TABLE
				   ( 
						ID int Identity , PimProductId int, PimAttributeId int, AttributeValue nvarchar(max), PRIMARY KEY(ID)
				   );
				   DECLARE @TBL_PimAttributeIds TABLE
				   ( 
						PimAttributeId int, ParentPimAttributeId int, AttributeTypeId int, AttributeCode varchar(300), IsRequired bit, IsLocalizable bit, IsFilterable bit, IsSystemDefined bit, IsConfigurable bit, IsPersonalizable bit, DisplayOrder int, HelpDescription varchar(max), IsCategory bit, IsHidden bit, CreatedDate datetime
						, ModifiedDate datetime, AttributeName nvarchar(max), AttributeTypeName varchar(300), IsCustomeField bit,IsSwatch BIT
						
				   );

				   DECLARE @TBL_CollectPublishedMediaXML TABLE
				   ( 
						PimProductId int, PimAttributeId int, AttributeValue nvarchar(max), PRIMARY KEY(PimProductId, PimAttributeId)
				   );
				   DECLARE @TBL_CustomeFiled TABLE
				   ( 
					   PimProductId int, CustomCode varchar(300), CustomKey nvarchar(max), CustomKeyValue nvarchar(max), PRIMARY KEY(PimProductId)
				   );
					DECLARE @TBL_ProductAttributeXMLInner TABLE
					( 
						Id int Identity,  PimProductId int, PublishProductId int, PimAttributeId int, AttributeValue nvarchar(max), PRIMARY KEY(Id)
					);
					DECLARE @TBL_ProductDetailsXML TABLE
					( 
						Id int Identity , PublishCatalogId int, PublishProductId int, PublishCategoryId int, AttributeValue nvarchar(max), PRIMARY KEY(ID)
					);
				SET @LocaleId =
				(
					SELECT LocaleId
					FROM @TBL_LocaleIds
					WHERE RowID = @Counter
				); 
				-- publish attribute collection

				WITH Cte_Attributedefaultlocale
					 AS (
							 SELECT a.PimProductId, AttributeValue, AttributeCode, PimAttributeId
							 FROM @TBL_PimAttributeValueLocale a 
							 INNER JOIN	 @TBL_PimProductIdToCalculate AS b ON(b.PimProductId = a.PimProductId)
							 WHERE LocaleId = @LocaleId
							 UNION ALL
							 SELECT TBLAV.PimProductId, AttributeValue, AttributeCode, PimAttributeId
							 FROM @TBL_PimAttributeValueLocale AS TBLAV
							 INNER JOIN	 @TBL_PimProductIdToCalculate AS b ON(b.PimProductId = TBLAV.PimProductId)
							 WHERE LocaleId = @DefaultLocaleId AND 
						     NOT EXISTS
							 (
								 SELECT TOP 1 1
								 FROM @TBL_PimAttributeValueLocale AS TBLPO
								 INNER JOIN	 @TBL_PimProductIdToCalculate AS b ON(b.PimProductId = TBLPO.PimProductId)
								 WHERE TBLPO.PimProductId = TBLAV.PimProductId AND 
									   TBLPO.AttributeCode = TBLAV.AttributeCode AND 
									   TBLPO.LocaleId = @LocaleId
							 )
					     )


					 INSERT INTO @TBL_AttributeValue( PimProductId, AttributeValue, AttributeCode, PimAttributeId )
							SELECT a.PimProductId, AttributeValue, AttributeCode, PimAttributeId
							FROM Cte_Attributedefaultlocale AS a
								 --INNER JOIN
								 --@TBL_PimProductIdToCalculate AS b
								 --ON(b.PimProductId = a.PimProductId);

	

				INSERT INTO @TBL_AttributeValue( PimProductId, AttributeCode, PimAttributeId )
					   SELECT DISTINCT 
							  a.PimProductId, a.AttributeCode, a.PimAttributeId
					   FROM @TBL_PimAttributeValueId AS a
							INNER JOIN
							@TBL_PimProductIdToCalculate AS b
							ON(b.PimProductId = a.PimProductId)
					   WHERE NOT EXISTS
					   (
						   SELECT TOP 1 1
						   FROM @TBL_AttributeValue AS b
						   WHERE a.PimProductId = b.PimProductId AND 
								 a.PimAttributeId = b.PimAttributeId
					   );
					INSERT INTO @TBL_PimAttributeIds( PimAttributeId, ParentPimAttributeId, AttributeTypeId, AttributeCode, IsRequired, IsLocalizable, IsFilterable, IsSystemDefined, IsConfigurable, IsPersonalizable, DisplayOrder, HelpDescription, IsCategory, IsHidden, CreatedDate, ModifiedDate, AttributeName, AttributeTypeName,IsSwatch )
					 SELECT PimAttributeId, ParentPimAttributeId, AttributeTypeId, AttributeCode, IsRequired, IsLocalizable, IsFilterable, IsSystemDefined, IsConfigurable
						, IsPersonalizable, DisplayOrder, HelpDescription, IsCategory, IsHidden, CreatedDate, ModifiedDate, AttributeName, AttributeTypeName,IsSwatch
					 FROM @TBL_PimAttributeIdsLocale
					 WHERE localeId = @localeId
					 AND  PimAttributeId IS NOT NULL
					 UNION ALL
					 SELECT PimAttributeId, ParentPimAttributeId, AttributeTypeId, AttributeCode, IsRequired, IsLocalizable
					 , IsFilterable, IsSystemDefined, IsConfigurable, IsPersonalizable, DisplayOrder
					 , HelpDescription, IsCategory, IsHidden, CreatedDate, ModifiedDate, AttributeName, AttributeTypeName,IsSwatch
					 FROM @TBL_PimAttributeIdsLocale AS TBLPA
					 WHERE localeId = @DefaultlocaleId AND 
						   NOT EXISTS
					 (
						 SELECT TOP 1 1
						 FROM @TBL_PimAttributeIdsLocale AS TBLPAS
						 WHERE TBLPAS.AttributeCode = TBLPA.AttributeCode AND 
							   TBLPAS.localeId = @localeId
					 )
					 AND  PimAttributeId IS NOT NULL
					
					 
							--SELECT PimAttributeId, ParentPimAttributeId, AttributeTypeId, AttributeCode, IsRequired, IsLocalizable, IsFilterable, IsSystemDefined, IsConfigurable, IsPersonalizable, DisplayOrder, HelpDescription, IsCategory, IsHidden, CreatedDate, ModifiedDate, AttributeName, AttributeTypeName,IsSwatch
							--FROM Cte_AttributeDetails AS a
							--WHERE PimAttributeId IS NOT NULL;
				--WITH Cte_CustomeValue
				--	 AS (

					  INSERT INTO @TBL_CustomeFiled( PimProductId, CustomCode, CustomKey, CustomKeyValue )
					 SELECT a.PimProductId, CustomCode, CustomKey, CustomKeyValue
					 FROM @TBL_ProductCustomeAttribute a 
					 INNER JOIN  @TBL_PimProductIdToCalculate AS b
								 ON(b.PimProductId = a.PimProductId)
					 WHERE LocaleId = @LocaleId
					 UNION
					 SELECT TBLPA.PimProductId, CustomCode, CustomKey, CustomKeyValue
					 FROM @TBL_ProductCustomeAttribute AS TBLPA
					 INNER JOIN  @TBL_PimProductIdToCalculate AS b
								 ON(b.PimProductId = TBLPA.PimProductId)

					 WHERE LocaleId = @DefaultLocaleId AND 
						   NOT EXISTS
					 (
						 SELECT TOP 1 1
						 FROM @TBL_ProductCustomeAttribute AS TBLPAI
						 INNER JOIN  @TBL_PimProductIdToCalculate AS b ON TBLPAI.PimProductId = b.PimProductId
						 WHERE TBLPAI.PimProductId = TBLPA.PimProductId AND
							   TBLPAI.CustomCode = TBLPA.CustomCode AND 
							   TBLPAI.LocaleId = @LocaleId
					 )
					 
					 
					
							--SELECT a.PimProductId, CustomCode, CustomKey, CustomKeyValue
							--FROM Cte_CustomeValue AS a;
								 --INNER JOIN  @TBL_PimProductIdToCalculate AS b
								 --ON(b.PimProductId = a.PimProductId);
					 
				
				-- get custome fields of products
				-- Get Link Product value
				-- Changes related to performance 
				--Declare @ChildLinkPublishProductId TABLE (PimProductId int, AttributeValue nvarchar(max))
				--select * from ZnodePimLinkProductDetail
	
				 Declare @Cte_UpdateDefaultValue TABLE (id int identity , PimProductId int , PimAttributeId int ,AttributeCode varchar(300),AttributeValue nvarchar(max),
Primary Key (Id))

				INSERT INTO @Cte_UpdateDefaultValue 
				
				SELECT TBAV.PimProductId, TBAV.PimAttributeId, TBAV.AttributeCode, SUBSTRING(
																									 (
																										 SELECT ','+CAST(PublishProductId AS Varchar(50))
																										 FROM ZnodePublishProduct AS ZPP
																											  INNER JOIN
																											  ZnodePimLinkProductDetail AS ZPLP
																											  ON(ZPLP.PimProductId = ZPP.PimProductId)
																										 WHERE ZPLP.PimParentProductId = TBAV.PimProductId AND 
																											   ZPLP.PimAttributeId = TBAV.PimAttributeId
																										 FOR XML PATH('')
																									 ), 2, 8000) AS AttributeValue
						 FROM @TBL_AttributesDetails AS TBAV
						 WHERE IsLinkAttribute = 1 and TBAV.PimProductId IN (SELECT PimProductId FROM  @TBL_PimProductIdToCalculate)

					 INSERT INTO @TBL_AttributeValue( PimProductId, AttributeValue, AttributeCode, PimAttributeId )
							SELECT a.PimProductId, AttributeValue, AttributeCode, PimAttributeId
							FROM @Cte_UpdateDefaultValue AS a
							--	 INNER JOIN
							--	 @TBL_PimProductIdToCalculate AS b
							--	 ON(b.PimProductId = a.PimProductId)
							WHERE a.PimProductId <> 0; 
				-- Get default value xml +


				
				Declare @Cte_AttributeDefault_0 TABLE (Id int Identity, AttributeValue Nvarchar(max), DisplayOrder int 
											, AttributeDefaultValueCode VARCHAR(300), PimProductId int , PimAttributeId int
											, SwatchText VARCHAR(100),MediaPath VARCHAR(max) 
				,Primary Key (Id)
				)

			

				--WITH Cte_AttributeDefault
				--	 AS (
					Insert into @Cte_AttributeDefault_0 (AttributeValue, DisplayOrder, AttributeDefaultValueCode, PimProductId, PimAttributeId,SwatchText,MediaPath)
					 SELECT AttributeValue, DisplayOrder, AttributeDefaultValueCode, TBADV.PimProductId, PimAttributeId,SwatchText,MediaPath
					 FROM @TBL_PimAttributeDefaultValue AS TBADV   
					
					  --where EXISTS (SELECT top 1 1 FROM @TBL_PimProductIdToCalculate WHERE PimProductId = TBADV.PimProductId)
					 
					 INNER JOIN  @TBL_PimProductIdToCalculate AS b  ON(b.PimProductId = TBADV.PimProductId)
					 WHERE TBADV.LocaleId = @LocaleId

					 Insert into @Cte_AttributeDefault_0 (AttributeValue, DisplayOrder, AttributeDefaultValueCode, PimProductId, PimAttributeId,SwatchText,MediaPath)
					 SELECT AttributeValue, DisplayOrder, AttributeDefaultValueCode, TBADV.PimProductId, PimAttributeId,SwatchText,MediaPath
					 FROM @TBL_PimAttributeDefaultValue AS TBADV 
					 -- where EXISTS (SELECT top 1 1 FROM @TBL_PimProductIdToCalculate WHERE PimProductId = TBADV.PimProductId)
					 INNER JOIN  @TBL_PimProductIdToCalculate AS b  ON(b.PimProductId = TBADV.PimProductId)
					  WHERE  TBADV.LocaleId = @DefaultLocaleId 
					 AND 
					 NOT EXISTS
					 (
						 SELECT TOP 1 1
						 FROM @Cte_AttributeDefault_0 AS TBADVI
						 WHERE TBADVI.AttributeDefaultValueCode = TBADV.AttributeDefaultValueCode AND 
							   TBADVI.PimProductId = TBADV.PimProductId 
					 );

					 ;With Cte_UpdateDefaultValue
					 AS (SELECT TBAV.PimProductId, TBAV.PimAttributeId, '<SelectValues>'+
						 (
							 SELECT DISTINCT AttributeValue AS Value, ISNULL(DisplayOrder, 0) AS DisplayOrder, AttributeDefaultValueCode AS Code
										,ISNULL(SwatchText,'')SwatchText,ISNULL(MediaPath,'') [Path]
							 FROM @Cte_AttributeDefault_0 AS TBADV
							 WHERE TBADV.PimProductId = TBAV.PimProductId 
							 AND TBADV.PimAttributeId = TBAV.PimAttributeId 
							 FOR XML PATH('SelectValuesEntity')
						 )+'</SelectValues>' AS AttributeValue
						 FROM @TBL_PimAttributeValueId AS TBAV --where EXISTS (SELECT top 1 1 FROM @TBL_PimProductIdToCalculate WHERE PimProductId = TBAV.PimProductId))
					 INNER JOIN @TBL_PimProductIdToCalculate AS b ON(b.PimProductId = TBAV.PimProductId))
										
					 INSERT INTO @TBL_CollectPublishedDefaultXML( pimproductid, PimAttributeId, AttributeValue )
							SELECT pimproductid, PimAttributeId, AttributeValue
							FROM Cte_UpdateDefaultValue
							WHERE AttributeValue <> '<SelectValue/>';

		
				--Declare @Cte_AttributeDefault_1 TABLE (Id int Identity, AttributeValue Nvarchar(max), DisplayOrder int , AttributeDefaultValueCode VARCHAR(300), PimProductId int , PimAttributeId int
				--Primary Key (Id), Index Index_401 (PimProductId,PimAttributeId)
				--)
				
				----WITH Cte_AttributeDefault
				----	 AS (
				--	 insert into @Cte_AttributeDefault_1 (AttributeValue, DisplayOrder, AttributeDefaultValueCode, TBADV.PimProductId, PimAttributeId)
				--	 SELECT AttributeValue, DisplayOrder, AttributeDefaultValueCode, TBADV.PimProductId, PimAttributeId
				--	 FROM @TBL_PimAttributeDefaultValue AS TBADV INNER JOIN @TBL_PimProductIdToCalculate AS b ON(b.PimProductId = TBADV.PimProductId)
				--	 WHERE TBADV.LocaleId = @LocaleId
				--	 UNION ALL
				--	 SELECT AttributeValue, DisplayOrder, AttributeDefaultValueCode, TBADV.PimProductId, PimAttributeId
				--	 FROM @TBL_PimAttributeDefaultValue AS TBADV INNER JOIN @TBL_PimProductIdToCalculate AS b  ON(TBADV.PimProductId = b.PimProductId) 
				--	 WHERE TBADV.LocaleId = @DefaultLocaleId 
						   
				--	 AND NOT EXISTS
				--	 (
				--		 SELECT TOP 1 1
				--		 FROM @TBL_PimAttributeDefaultValue AS TBADVI
				--		 WHERE TBADVI.AttributeCode = TBADV.AttributeCode AND 
				--			   TBADVI.PimProductId = TBADV.PimProductId AND 
				--			   TBADVI.LocaleId = @LocaleId
				--	 )--),

				--	 Declare @Cte_AttributeValueUpdate TABLE (Id int Identity,  PimProductId int ,PimAttributeId int,AttributeValue Nvarchar(max) Primary Key (Id),Index Index_401 (PimProductId,PimAttributeId))

				--	 --;With Cte_AttributeValueUpdate
				--	 --AS 
				--	 insert into @Cte_AttributeValueUpdate (PimProductId ,PimAttributeId ,AttributeValue)
				--	 (SELECT TBAV.PimProductId, TBAV.PimAttributeId, SUBSTRING(
				--																 (
				--																	 SELECT ','+ AttributeValue-- AttributeDefaultValueCode
				--																	 FROM @Cte_AttributeDefault_1 AS TBAVI
				--																	 WHERE TBAV.PimProductId = TBAVI.PimProductId and TBAV.PimAttributeId = TBAVI.PimAttributeId 
				--																	 FOR XML PATH('')
				--																 ), 2, 4000) AS AttributeValue
				--		 FROM @TBL_PimAttributeValueId AS TBAV  
				--		 INNER JOIN  @TBL_PimProductIdToCalculate AS b  ON(b.PimProductId = TBAV.PimProductId)
				--		 WHERE EXISTS
				--		 (
				--			 SELECT TOP 1 1
				--			 FROM @Cte_AttributeDefault_1 AS TRT
				--			 WHERE TRT.PimProductId = TBAV.PimProductId AND  TRT.PimAttributeId = TBAV.PimAttributeId ))

				--	 UPDATE TBAV
				--	   SET AttributeValue = CTAVD.AttributeValue
				--	 FROM @TBL_AttributeValue TBAV
				--		  INNER JOIN
				--		  @Cte_AttributeValueUpdate CTAVD
				--		  ON( TBAV.PimProductId = CTAVD.PimProductId AND TBAV.pimAttributeID = CTAVD.pimAttributeID );


				--- Code commented as per requirement change on 08-05-2017
		

				Declare @Cte_Attributemedia TABLE (Id int Identity, [Path] nvarchar(max) , PimProductId int , PimAttributeId int , MediaConfigurationId int 
				, AttributeCode Varchar(300) Primary Key (Id))
				--WITH Cte_Attributemedia 
				--	 AS 
				Insert into @Cte_Attributemedia ([Path], PimProductId , PimAttributeId , MediaConfigurationId , AttributeCode )
					 (
					 SELECT AttributeVAlue AS [Path], TBADV.PimProductId, PimAttributeId, MediaConfigurationId, AttributeCode
					 FROM @TBL_PimAttributeMediaValue AS TBADV
						  INNER JOIN
						  @TBL_PimProductIdToCalculate AS b
						  ON(b.PimProductId = TBADV.PimProductId)
					 WHERE LocaleId = @LocaleId
					 UNION
					 SELECT AttributeValue AS [Path], TBADV.PimProductId, PimAttributeId, MediaConfigurationId, AttributeCode
					 FROM @TBL_PimAttributeMediaValue AS TBADV
						  INNER JOIN
						  @TBL_PimProductIdToCalculate AS b
						  ON(b.PimProductId = TBADV.PimProductId)
					 WHERE LocaleId = @DefaultLocaleId AND 
						   NOT EXISTS
					 (
						 SELECT TOP 1 1
						 FROM @TBL_PimAttributeMediaValue AS TBADVI
						 WHERE TBADVI.AttributeCode = TBADV.AttributeCode AND 
							   TBADVI.PimProductId = TBADV.PimProductId AND 
							   TBADVI.LocaleId = @LocaleId
					 ));

					 Declare @Cte_MediaAttributeValueUpdate TABLE (Id int identity , PimProductId int , PimAttributeId int ,AttributeValue nvarchar(max),
					 Primary Key (Id))

					 --With Cte_AttributeValueUpdate
					 --AS
					  Insert into @Cte_MediaAttributeValueUpdate ( PimProductId  , PimAttributeId  ,AttributeValue )
					  (SELECT TBAV.PimProductId, TBAV.PimAttributeId, SUBSTRING(
																				 (
																					 SELECT ','+[Path]
																					 FROM @Cte_Attributemedia  AS TBAVI
																					 WHERE TBAV.PimProductId = TBAVI.PimProductId AND TBAV.PimAttributeId = TBAVI.PimAttributeId  
																					 FOR XML PATH('')
																				 ), 2, 4000) AS AttributeValue
						 FROM @TBL_PimAttributeValueId AS TBAV
							  INNER JOIN
							  @TBL_PimProductIdToCalculate AS b
							  ON(b.PimProductId = TBAV.PimProductId)
						 WHERE EXISTS
						 (
							 SELECT TOP 1 1
							 FROM @Cte_Attributemedia  AS TRT
							 WHERE TRT.PimProductId = TBAV.PimProductId AND 
								   TRT.PimAttributeId = TBAV.PimAttributeId
						 ))
					 UPDATE TBAV
					   SET AttributeValue = CTAVD.AttributeValue
					 FROM @TBL_AttributeValue TBAV
						  INNER JOIN
						  @Cte_MediaAttributeValueUpdate CTAVD
						  ON( TBAV.PimProductId  = CTAVD.PimProductId  AND 
							  TBAV.pimAttributeID = CTAVD.pimAttributeID 
							);

				--update the product name and sku -- 24/12/2016 added the isActive 
				UPDATE TBP
				  SET ProductName = TBAV.AttributeValue
				FROM @TBL_PimProductIds TBP
					 INNER JOIN
					 @TBL_AttributeValue TBAV
					 ON TBAV.PimProductId = TBP.PimProductId AND 
						TBAV.pimAttributeId = @ProductNamePimAttributeId;
				--AND TBAV.pimAttributeId  = ( SELECT TOP 1 PimAttributeId FROM ZnodePimAttribute ZPA  WHERE ZPA.AttributeCode = 'ProductName' AND ZPA.IsCategory = 0);
				UPDATE TBP
				  SET SKU = TBAVI.AttributeValue
				FROM @TBL_PimProductIds TBP
					 INNER JOIN
					 @TBL_AttributeValue TBAVI
					 ON TBAVI.PimProductId = TBP.PimProductId AND 
						TBAVI.pimAttributeId = @SKUPimAttributeId;
				--AND TBAVI.pimAttributeId  = ( SELECT TOP 1 PimAttributeId FROM ZnodePimAttribute ZPA  WHERE ZPA.AttributeCode = 'SKU' AND ZPA.IsCategory = 0);
				UPDATE TBP
				  SET IsActive = TBAVIO.AttributeValue
				FROM @TBL_PimProductIds TBP
					 INNER JOIN
					 @TBL_AttributeValue TBAVIO
					 ON TBAVIO.PimProductId = TBP.PimProductId AND 
						TBAVIO.pimAttributeId = @IsActivePimAttributeId;
				-- AND TBAVIO.pimAttributeId = (SELECT TOP 1 PimAttributeId FROM ZnodePimAttribute ZPA WHERE ZPA.AttributeCode = 'IsActive' AND ZPA.IsCategory = 0);


				WITH Cte_UpdateProductDetails
					 AS (SELECT PublishProductId, ProductName, SKU, IsActive, @LocaleId AS LocaleId, @UserId AS UserId, @GetDate AS CurrentDate
						 FROM @TBL_PimProductIds AS TBP
							  INNER JOIN
							  @TBL_PublishProductIds AS TBPP
							  ON TBPP.PimProductId = TBP.PimProductId
							  INNER JOIN
							  @TBL_PimProductIdToCalculate AS b
							  ON(b.PimProductId = TBP.PimProductId)
						 GROUP BY PublishProductId, ProductName, SKU, IsActive)


					 MERGE INTO ZnodePublishProductDetail TARGET  -- update the publish product details 
					 USING Cte_UpdateProductDetails SOURCE
					 ON TARGET.PublishProductId = Source.PublishProductId AND 
						Target.LocaleId = SOURCE.LocaleId
					 WHEN MATCHED
						   THEN UPDATE SET ProductName = SOURCE.ProductName, SKU = SOURCE.SKU, IsActive = SOurce.IsActive, ModifiedBy = SOURCE.UserId, ModifiedDate = SOURCE.CurrentDate
					 WHEN NOT MATCHED
						   THEN INSERT(PublishProductId, ProductName, SKU, IsActive, LocaleId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) VALUES( SOURCE.PublishProductId, SOURCE.ProductName, SOURCE.SKU, SOurce.IsActive, SOURCE.LocaleId, SOURCE.UserId, SOURCE.CurrentDate, SOURCE.UserId, SOURCE.CurrentDate );
                       
				    	
				-- Added the custome fileds 
				INSERT INTO @TBL_PimAttributeIds( AttributeCode, IsCustomeField, AttributeName )
					   SELECT CustomCode, 1, CustomKey
					   FROM @TBL_CustomeFiled AS a
							INNER JOIN
							@TBL_PimProductIdToCalculate AS b
							ON(b.PimProductId = a.PimProductId);
				INSERT INTO @TBL_AttributeValue( PimProductId, AttributeCode, AttributeValue )
					   SELECT a.PimProductId, CustomCode, CustomKeyValue
					   FROM @TBL_CustomeFiled AS a
							INNER JOIN
							@TBL_PimProductIdToCalculate AS b
							ON(b.PimProductId = a.PimProductId);

	
                 
				-- SELECT * FROM @TBL_PimProductIds
				--- create the basic xml tag of product
				INSERT INTO @TBL_ProductDetailsXML( PublishCatalogId, PublishProductId, PublishCategoryId, AttributeValue )
					   SELECT TBPPI.PublishCatalogId, TBPPI.PublishProductId, ISNULL(ZPC.PublishCategoryId, 0),
					   (
						   SELECT ISNULL(TBPP.VersionId, @VersionId) AS VersionId, TBPP.PublishProductId AS ZnodeProductId, ZPC.PublishCategoryId AS ZnodeCategoryIds, TBP.ProductName AS Name, TBP.SKU, TBP.IsActive, TBPP.PublishCatalogId AS ZnodeCatalogId, TBP.IsParentProducts, TBP.ProfileId AS TempProfileIds, ZPCD.PublishCategoryName AS CategoryName, ZPCA.CatalogName AS CatalogName, TBP.CategoryDisplayOrder AS DisplayOrder, @LocaleId AS LocaleId, TBP.ProductIndex
						   FROM @TBL_PublishProductIds AS TBPP
								INNER JOIN
								@TBL_PimProductIds AS TBP
								ON( TBP.PimProductId = TBPP.PimProductId AND 
									TBP.PublishCatalogId = TBPP.PublishCatalogId
								  )
								INNER JOIN
								@TBL_PimProductIdToCalculate AS b
								ON(b.PimProductId = TBP.PimProductId)
						   WHERE TBPP.PublishProductId = TBPPI.PublishProductId AND 
								 (TBP.PimCategoryId = ZPC.PimCategoryId) AND 
								 TBPP.PublishCatalogId = TBPPI.PublishCatalogId
						   GROUP BY TBPP.PublishProductId, TBP.ProductName, TBP.SKU, TBPP.PublishCatalogId, TBP.IsParentProducts, TBP.ProfileId, TBPP.VersionId, TBP.IsActive, TBP.CategoryDisplayOrder, TBP.ProductIndex
						   FOR XML PATH('')
					   ) AS ProductXml
					   FROM @TBL_PublishProductIds AS TBPPI
							INNER JOIN
							@TBL_PimProductIds AS TBPI
							ON TBPI.PimProductId = TBPPI.PimProductId AND 
							   TBPI.PublishCatalogId = TBPPI.PublishCatalogId
							INNER JOIN
							ZnodePublishCategory AS ZPC WITH (NOLOCK)
							ON( ZPC.PublishCatalogId = TBPPI.PublishCatalogId AND 
								(ZPC.PimCategoryId = TBPI.PimCategoryId)
							  )
							INNER JOIN
							ZnodePublishCategoryDetail AS ZPCD WITH (NOLOCK)
							ON( ZPCD.PublishCategoryId = ZPC.PublishCategoryId AND 
								ZPCD.LocaleId = @LocaleId
							  )
							INNER JOIN
							ZnodePublishCatalog AS ZPCA WITH (NOLOCK)
							ON(ZPCA.PublishCatalogId = TBPPI.PublishCatalogId)
							INNER JOIN
							@TBL_PimProductIdToCalculate AS b
							ON(b.PimProductId = TBPI.PimProductId);
                             
				--- this is for is parent product 0 condition 

				INSERT INTO @TBL_ProductDetailsXML( PublishCatalogId, PublishProductId, PublishCategoryId, AttributeValue )
					   SELECT TBPPI.PublishCatalogId, TBPPI.PublishProductId, 0,
					   (
						   SELECT ISNULL(TBPP.VersionId, @VersionId) AS VersionId, TBPP.PublishProductId AS ZnodeProductId, TBP.ProductName AS Name, TBP.SKU, TBP.IsActive, TBPP.PublishCatalogId AS ZnodeCatalogId, TBP.IsParentProducts, TBP.ProfileId AS TempProfileIds, ZPCA.CatalogName AS CatalogName, TBP.CategoryDisplayOrder AS DisplayOrder, @LocaleId AS LocaleId, TBP.ProductIndex
						   FROM @TBL_PublishProductIds AS TBPP
								INNER JOIN
								@TBL_PimProductIds AS TBP
								ON( TBP.PimProductId = TBPP.PimProductId AND 
									TBP.PublishCatalogId = TBPP.PublishCatalogId
								  )
								INNER JOIN
								@TBL_PimProductIdToCalculate AS b
								ON(b.PimProductId = TBP.PimProductId)
						   WHERE TBPP.PublishProductId = TBPPI.PublishProductId AND 
								 TBPP.PublishCatalogId = TBPPI.PublishCatalogId
						   GROUP BY TBPP.PublishProductId, TBP.ProductName, TBP.SKU, TBPP.PublishCatalogId, TBP.IsParentProducts, TBP.ProfileId, TBPP.VersionId, TBP.IsActive, TBP.CategoryDisplayOrder, TBP.ProductIndex
						   FOR XML PATH('')
					   ) AS ProductXml
					   FROM @TBL_PublishProductIds AS TBPPI
							INNER JOIN
							@TBL_PimProductIds AS TBPI
							ON TBPI.PimProductId = TBPPI.PimProductId AND 
							   TBPI.PublishCatalogId = TBPPI.PublishCatalogId
							INNER JOIN
							ZnodePublishCatalog AS ZPCA WITH (NOLOCK)
							ON(ZPCA.PublishCatalogId = TBPPI.PublishCatalogId)
							INNER JOIN
							@TBL_PimProductIdToCalculate AS b
							ON(b.PimProductId = TBPI.PimProductId)
					   WHERE TBPI.IsParentProducts = 0;



				INSERT INTO @TBL_ProductAttributeXMLInner( PimProductId, PublishProductId, PimAttributeId, AttributeValue )
					   SELECT DISTINCT 
							  TBADF.PimProductId, TBADF.PublishProductId, ISNULL(TBAVI.PimAttributeId, 0),
					   (
						   SELECT DISTINCT 
								  TBAV.AttributeCode, AttributeName, ISNULL(IsUseInSearch, 0) AS IsUseInSearch, ISNULL(IsHtmlTags, 0) AS IsHtmlTags, 
								  ISNULL(IsComparable, 0) AS IsComparable, ISNULL(IsFacets, 0) AS IsFacets, ISNULL(TBAV.AttributeValue, '') AS AttributeValues, 
								  AttributeTypeName, IsPersonalizable, ISNULL(TBA.IsCustomeField, 0) AS IsCustomeField, ISNULL(IsConfigurable, 0) AS IsConfigurable
								  ,ISNULL(TBAD.IsSwatch,0)IsSwatch
						   FROM @TBL_AttributeValue AS TBAV 
						   INNER JOIN @TBL_AttributesDetails AS TBAD
								ON ( TBAV.PimProductId = TBAD.PimProductId  OR TBAD.IsLinkAttribute = 0 ) AND TBAV.AttributeCode = TBAD.AttributeCode 
								INNER JOIN  @TBL_PimAttributeIds AS TBA	ON TBA.AttributeCode = TBAV.AttributeCode
						   WHERE TBAV.PimProductId = TBAVI.PimProductId AND 
								 TBA.AttributeCode = TBAVI.AttributeCode
						   FOR XML PATH('AttributeEntity')
					   )
					   FROM @TBL_AttributeValue AS TBAVI
							INNER JOIN
							@TBL_PublishProductIds AS TBADF
							ON TBADF.PimProductId = TBAVI.PimProductId;
					
				-- FOR XML PATH('Attributes') ) AttributeValue 

				UPDATE TBI
				  SET TBI.AttributeValue = REPLACE(TBI.AttributeValue, '</AttributeEntity>', ISNULL(TBC.AttributeValue, '')+'</AttributeEntity>')
				FROM @TBL_ProductAttributeXMLInner TBI
					 INNER JOIN
					 @TBL_CollectPublishedDefaultXML TBC
					 ON( TBI.PimProductid = TBC.PimProductId AND 
						 TBI.PimAttributeId = TBC.pimAttributeId
					   );
				UPDATE TBI
				  SET TBI.AttributeValue = REPLACE(TBI.AttributeValue, '</AttributeEntity>', ISNULL(TBC.AttributeValue, '')+'</AttributeEntity>')
				FROM @TBL_ProductAttributeXMLInner TBI
					 INNER JOIN
					 @TBL_CollectPublishedMediaXML TBC
					 ON( TBI.PimProductid  = TBC.PimProductId AND 
						 TBI.PimAttributeId = TBC.pimAttributeId
					   );
				UPDATE @TBL_ProductAttributeXMLInner
				  SET AttributeValue = '<Attributes>'+AttributeValue+'</Attributes>';

				INSERT INTO @TBL_ProductAttributeXml( PublishProductId, ProductXml, LocaleId )
					   SELECT PublishProductId, CAST('<ProductEntity>'+TBPDL.AttributeValue+STUFF(
																								 (
																									 SELECT AttributeValue
																									 FROM @TBL_ProductAttributeXMLInner AS TBPAX
																									 WHERE TBPAX.PublishProductId = TBPDL.PublishProductId
																									 FOR XML PATH(''), TYPE
																								 ).value( '.', ' Nvarchar(max)' ), 1, 0, '')+'</ProductEntity>' AS xml), @LocaleId
					   FROM @TBL_ProductDetailsXML AS TBPDL; 
			
				-- create the attribute xml of product 
				
				--DELETE FROM @Cte_AttributeDefault_1
				DELETE FROM @Cte_Attributemedia
				DELETE FROM @Cte_MediaAttributeValueUpdate
				DELETE FROM @Cte_UpdateDefaultValue
				DELETE FROM @Cte_AttributeDefault_0
				Delete from @TBL_AttributeValue;
				DELETE FROM @TBL_PimAttributeIds;
				DELETE FROM @TBL_CollectPublishedDefaultXML;
				DELETE FROM @TBL_CollectPublishedMediaXML;
				DELETE FROM @TBL_CustomeFiled;
				DELETE FROM @TBL_ProductAttributeXMLInner;
				DELETE FROM @TBL_ProductDetailsXML;
				SET @Counter = @Counter + 1; -- increment the counter 
			END; -- END Active Locale Loop 
			-- SELECT * FROM ZnodePublishCatalogLog  
		--	SELECT * FROM @TBL_ProductAttributeXMLInner
				--SELECT ProductXml
				--FROM @TBL_ProductAttributeXml;


			-- IF @IsDebug =1 
			--BEGIN 
			--SELECT * from @TBL_PimAttributeValueId 
			--END;	
			if @ProductCounter = 0
				DELETE FROM ZnodePublishedXml WHERE PublishCatalogLogId = @VersionId ;
			
			INSERT INTO ZnodePublishedXml( PublishCatalogLogId, PublishedId, PublishedXML, IsProductXML, LocaleId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
				   SELECT @VersionId, PublishProductId, ProductXml, 1, LocaleId, @UserId, @GetDate, @UserId, @GetDate
				   FROM @TBL_ProductAttributeXml
				   WHERE @VersionId <> 0;
			 
			-- return the XML 
			IF @PublishCatalogId IS NULL
			BEGIN
				SELECT ProductXml
				FROM @TBL_ProductAttributeXml;
				SELECT PublishProductId AS ProductXml
				FROM @TBL_PublishProductIds
				GROUP BY PublishProductId;
			END;
			SET @Counter = 1;
			DELETE FROM @TBL_ProductAttributeXml;
			DELETE FROM @TBL_PimProductIdToCalculate;
			SET @ProductCounter = @ProductCounter + 100;
			COMMIT TRAN GetPublishProducts
		

		END;
		-------------------END
		

		UPDATE ZnodePublishCatalogLog
		  SET PublishProductId = SUBSTRING(
										  (
											  SELECT ','+CAST(PublishedId AS Varchar(50))
											  FROM ZnodePublishedXml
											  WHERE PublishCatalogLogId = @VersionId AND 
													IsProductXML = 1
											  GROUP BY PublishedId
											  FOR XML PATH('')
										  ), 2, 4000), IsProductPublished = 1, Tokem = @TokenId
		WHERE PublishCatalogLogId = @VersionId AND 
			  @VersionId <> 0 AND 
			  @NotReturnXML IS NULL;
		UPDATE ZnodePimProduct
		  SET IsProductPublish = 1
		WHERE EXISTS
		(
			SELECT TOP 1 1
			FROM ZnodePublishProduct AS ZPP
			WHERE ZPp.PimProductId = ZnodePimProduct.PimProductId
		) AND 
			  @NotReturnXML IS NULL;
		SET @ProductCounter = 0;
		IF @ProductCount < 100
		BEGIN
			SET @ProductCount = 100;
		END; 
		--SELECT *,@MaxRowId,@ProductCount FROM @TBL_PimAttributeValueId  

		WHILE @ProductCounter < @ProductCount
		      AND @NotReturnXML IS NULL
		    BEGIN
		        INSERT INTO @TBL_PimProductIdToCalculate(PimProductId)
		               SELECT PimProductId
		               FROM @TBL_PimAttributeValueId
		               WHERE RowId BETWEEN CASE
		                                       WHEN @ProductCounter = 0
		                                       THEN 1
		                                       ELSE @ProductCounter + 1
		                                   END AND @ProductCounter + 100
		               GROUP BY PimProductId;
		        SET @PimProductids = SUBSTRING(
		                                      (
		                                          SELECT ','+CAST(PimProductId AS Varchar(50))
		                                          FROM @TBL_PimProductIdToCalculate
		                                          FOR XML PATH('')
		                                      ), 2, 4000);
		        --EXEC Znode_GetPublishAssociatedProductsInnerOut
		        --     @PublishCatalogId,
		        --     @PimProductids,
		        --     'BundleProduct',
		        --     @VersionId,
		        --     @UserId;
		        --EXEC Znode_GetPublishAssociatedProductsInnerOut
		        --     @PublishCatalogId,
		        --     @PimProductids,
		        --     'GroupedProduct',
		        --     @VersionId,
		        --     @UserId;
		        --EXEC Znode_GetPublishAssociatedProductsInnerOut
		        --     @PublishCatalogId,
		        --     @PimProductids,
		        --     'ConfigurableProduct',
		        --     @VersionId,
		        --     @UserId;
		        --EXEC Znode_GetPublishAssociatedAddonsInnerOut
		        --     @PublishCatalogId,
		        --     @PimProductids,
		        --     @VersionId,
		        --     @UserId;
		        SET @ProductCounter = @ProductCounter + 100;
				DELETE FROM @TBL_PimProductIdToCalculate;
		END;
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE();
		DECLARE @Status bit;
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PublishCatalogId = '+CAST(@PublishCatalogId AS varchar(max))+',@PublishCategoryId='+@PublishCategoryId+',@UserId='+CAST(@UserId AS Varchar(50))+',@NotReturnXML='+CAST(@NotReturnXML AS Varchar(50))+',@UserId = '+CAST(@UserId AS Varchar(50))+',@PimProductId='+CAST(@PimProductId AS Varchar(50))+',@VersionId='+CAST(@VersionId AS Varchar(50))+',@TokenId='+CAST(@TokenId AS varchar(max))+',@Status='+CAST(@Status AS varchar(10));
		SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		ROLLBACK TRAN GetPublishProducts;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_GetPublishProducts', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_ImportAttributes]...';


GO

CREATE PROCEDURE [dbo].[Znode_ImportAttributes](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Attribute Code Name and their default input validation rule other 
	--			  flag will be inserted as default we need to modify front end
	
	-- Unit Testing: 

	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate(), @LocaleId int  ;
		SELECT @LocaleId = DBO.Fn_GetDefaultLocaleId();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertPimAtrribute TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, AttributeName varchar(300), AttributeCode varchar(300), AttributeType varchar(300), DisplayOrder int, GUID nvarchar(400)
		);
		DECLARE @InsertedPimAttributeIds TABLE (PimAttributeId int ,AttributeTypeId int,AttributeCode nvarchar(300))
		
		SET @SSQL = 'Select RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID FROM '+@TableName;
		INSERT INTO @InsertPimAtrribute( RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID)
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @AttributeCode TABLE
		( 
		   AttributeCode nvarchar(300)
		);
		INSERT INTO @AttributeCode
			   SELECT AttributeCode
			   FROM ZnodePimAttribute 

		-- Start Functional Validation 
		
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeCode NOT in 
			   (
				   SELECT AttributeCode FROM @AttributeCode  where AttributeCode is not null 
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'AttributeType', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeType NOT in 
			   (
				   SELECT AttributeTypeName  FROM ZnodeAttributeType  where IsPimAttributeType = 1 
			   );
		-- End Function Validation 	
		-----------------------------------------------
		-- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertPimAtrribute
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
		);
		
		--- Insert data into base table ZnodePimatrribute with their validation 

		INSERT INTO ZnodePimAttribute (AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined
			,IsConfigurable,IsPersonalizable,IsShowOnGrid,DisplayOrder,HelpDescription,IsCategory,IsHidden,IsSwatch,
			CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
		OUTPUT Inserted.PimAttributeId,Inserted.AttributeTypeId,Inserted.AttributeCode INTO @InsertedPimAttributeIds  
		
		SELECT ZAT.AttributeTypeId,AttributeCode, 1 IsRequired , 1 IsLocalizable,1 IsFilterable, 0 IsSystemDefined, 0 IsConfigurable,
		0 IsPersonalizable,  1 IsShowOnGrid , DisplayOrder, 'Imported Data' HelpDescription ,0  IsCategory , 0 IsHidden , 0 IsSwatch,
		@UserId , @GetDate ,@UserId , @GetDate from @InsertPimAtrribute IPA INNER JOIN ZnodeAttributeType ZAT 
		ON IPA.AttributeType = ZAT.AttributeTypeName 
		
		
		INSERT INTO ZnodePimAttributeLocale (LocaleId,PimAttributeId,AttributeName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select @LocaleId ,IPAS.PimAttributeId, IPA.AttributeName, '', @UserId , @GetDate ,@UserId , @GetDate   
		 FROM @InsertedPimAttributeIds IPAS INNER JOIN @InsertPimAtrribute IPA ON IPAS.AttributeCode= IPA.AttributeCode 
		
		INSERT INTO ZnodePimAttributeValidation
		(PimAttributeId,InputValidationId,InputValidationRuleId,Name,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		SELECT IPA.PimAttributeId,ZAIV.InputValidationId,NULL,null , @UserId , @GetDate ,@UserId , @GetDate  
		FROM @InsertedPimAttributeIds IPA INNER JOIN ZnodeAttributeInputValidation ZAIV ON IPA.AttributeTypeId = ZAIV.AttributeTypeId

		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET STATUS = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;
		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_ImportCustomer]...';


GO

CREATE  PROCEDURE [dbo].[Znode_ImportCustomer](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @LocaleId int= 0,@PortalId int )
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import SEO Details
	
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max),@AspNetZnodeUserId nvarchar(256),@ASPNetUsersId nvarchar(256),
		@PasswordHash nvarchar(max),@SecurityStamp nvarchar(max),@RoleId nvarchar(256),@IsAllowGlobalLevelUserCreation nvarchar(10)

		SET @SecurityStamp = '9ae4c586-6847-4c69-9f9a-31e4491133f0'
		SET @PasswordHash = 'AMuVRa+gOeSF9Yq+TtvlEldekrxE3+pIoUAoxIgSx2O/kI91VsHP9g5GKFD6FiI0Bg==';
		SELECT  @RoleId  = Id from AspNetRoles where   NAME = 'Customer'  

		Select @IsAllowGlobalLevelUserCreation = FeatureValues from ZnodeGlobalsetting where FeatureName = 'AllowGlobalLevelUserCreation'

		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 

		-- Three type of import required three table varible for product , category and brand
		DECLARE @InsertCustomer TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, UserName nvarchar(512) ,FirstName	nvarchar(200),
			LastName nvarchar(200),	MiddleName	nvarchar(200),BudgetAmount	numeric,Email	nvarchar(100),PhoneNumber	nvarchar(100),
		    EmailOptIn	bit	,ReferralStatus	nvarchar(40),IsActive	bit	,ExternalId	nvarchar, GUID NVARCHAR(400)
		);
		
		SET @SSQL = 'SELECT RowNumber,UserName,FirstName,LastName,MiddleName,BudgetAmount,Email,PhoneNumber,EmailOptIn,ReferralStatus,IsActive,ExternalId,GUID FROM '+ @TableName;
		INSERT INTO @InsertCustomer( RowNumber,UserName,FirstName,LastName,MiddleName,BudgetAmount,Email,PhoneNumber,EmailOptIn,ReferralStatus,IsActive,ExternalId,GUID)
		EXEC sys.sp_sqlexec @SSQL;
	
	    -- start Functional Validation 

		-----------------------------------------------
		If @IsAllowGlobalLevelUserCreation = 'true'
				INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '10', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomer AS ii
					   WHERE ii.UserName in 
					   (
						   SELECT UserName FROM AspNetZnodeUser   where PortalId = @PortalId
					   );
		Else 
				INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '10', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomer AS ii
					   WHERE ii.UserName in 
					   (
						   SELECT UserName FROM AspNetZnodeUser   
					   );
		--Note : Content page import is not required 
		
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  

		DELETE FROM @InsertCustomer
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);
		-- Insert Product Data 
				

				DECLARE @InsertedAspNetZnodeUser TABLE (AspNetZnodeUserId nvarchar(256) ,UserName nvarchar(512),PortalId int )
				DECLARE @InsertedASPNetUsers TABLE (Id nvarchar(256) ,UserName nvarchar(512))
				DECLARE @InsertZnodeUser TABLE (UserId int)

				UPDATE ANU SET 
				ANU.PhoneNumber	= IC.PhoneNumber
				from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN @InsertCustomer IC ON ANZU.UserName = IC.UserName 
				where Isnull(ANZU.PortalId,0) = Isnull(@PortalId ,0)

				UPDATE ZU SET 
				ZU.FirstName	= IC.FirstName,
				ZU.LastName		= IC.LastName,
				ZU.MiddleName	= IC.MiddleName,
				ZU.BudgetAmount = IC.BudgetAmount,
				ZU.Email		= IC.Email,
				ZU.PhoneNumber	= IC.PhoneNumber,
				ZU.EmailOptIn	= IC.EmailOptIn,
				ZU.IsActive		= IC.IsActive
				--ZU.ExternalId = ExternalId
				from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN @InsertCustomer IC ON ANZU.UserName = IC.UserName 
				where Isnull(ANZU.PortalId,0) = Isnull(@PortalId ,0)

				
				Insert into AspNetZnodeUser (AspNetZnodeUserId, UserName, PortalId)		
				OUTPUT INSERTED.AspNetZnodeUserId, INSERTED.UserName, INSERTED.PortalId	INTO  @InsertedAspNetZnodeUser 			 
				Select NEWID(),IC.UserName, @PortalId FROM @InsertCustomer IC 
				where Not Exists (Select TOP 1 1  from AspNetZnodeUser ANZ where Isnull(ANZ.PortalId,0) = Isnull(@PortalId,0) AND ANZ.UserName = IC.UserName)

				INSERT INTO ASPNetUsers (Id,Email,EmailConfirmed,PasswordHash,SecurityStamp,PhoneNumber,PhoneNumberConfirmed,TwoFactorEnabled,
				LockoutEndDateUtc,LockOutEnabled,AccessFailedCount,PasswordChangedDate,UserName)
				output inserted.Id, inserted.UserName into @InsertedASPNetUsers
				SELECT NewId(), Email,0 ,@PasswordHash,@SecurityStamp,PhoneNumber,0,0,NULL LockoutEndDateUtc,1 LockoutEnabled,
				0,@GetDate,AspNetZnodeUserId from @InsertCustomer A INNER JOIN @InsertedAspNetZnodeUser  B 
				ON A.UserName = B.UserName

				INSERT INTO  ZnodeUser(AspNetUserId,FirstName,LastName,MiddleName,CustomerPaymentGUID,BudgetAmount,Email,PhoneNumber,EmailOptIn,
				IsActive,ExternalId, CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
				OUTPUT Inserted.UserId into @InsertZnodeUser
				SELECT IANU.Id,IC.FirstName,IC.LastName,IC.MiddleName,null CustomerPaymentGUID,IC.BudgetAmount,IC.Email,IC.PhoneNumber,IC.EmailOptIn,IC.IsActive,IC.ExternalId, @UserId,@Getdate,@UserId,@Getdate
				from @InsertCustomer IC Inner join @InsertedASPNetUsers IANU ON IC.UserName = IANU.UserName 
				  	     
				INSERT INTO AspNetUserRoles (UserId,RoleId)  Select UserId, @RoleID from @InsertZnodeUser

				INSERT INTO ZnodeUserPortal (UserId,PortalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
				SELECT UserId, @PortalId , @UserId,@Getdate,@UserId,@Getdate from @InsertZnodeUser


		-- 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_ImportInsertUpdatePimProduct_Ver2]...';


GO
create PROCEDURE [dbo].[Znode_ImportInsertUpdatePimProduct_Ver2]
(
    @PimProductDetail  PIMPRODUCTDETAIL READONLY,
    @UserId            INT       ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0,
	@CopyPimProductId  INT	  = 0 )
AS
   /*
     Summary : To Insert / Update single Product with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
			 DECLARE @PimProductId INT;
			 DECLARE @TBL_PimProductId TABLE(PimAttributeValueId INT,ZnodePimAttributeValueLocaleId INT );
			 DECLARE @TBL_CopyPimProductId TABLE(PimAttributeValueId INT,OldPimAttributeValueId INT);
			 DECLARE @PimDefaultFamily INT= dbo.Fn_GetDefaultPimProductFamilyId()
			 DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @TBL_DefaultAttributeId TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			 DECLARE @TBL_MediaAttributeId TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			 DECLARE @TBL_TextAreaAttributeId TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			 DECLARE @TBL_MediaAttributeValue TABLE (PimAttributeValueId INT ,LocaleId INT ,AttributeValue VARCHAr(300),MediaId INT)
			 DECLARE @TBL_DefaultAttributeValue TABLE (PimAttributeValueId INT , LocaleId INT , AttributeValue INT)
			 DECLARE @ZnodePimAttributeValue TABLE (PimAttributeValueId  INT, PimAttributeFamilyId INT,PimAttributeId INT);

			 DECLARE @AssociatedProduct VARCHAR(4000);
			 DECLARE @ConfigureAttributeId VARCHAR(4000);
			 DECLARE @ConfigureFamilyId VARCHAR(4000);
			 DECLARE @PimAttributeFamilyId INT;
			 DECLARE @LocaleId INT 
             
			 INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  [dbo].[Fn_GetDefaultAttributeId] ()
			 
			 INSERT INTO @TBL_MediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM [dbo].[Fn_GetProductMediaAttributeId]()

			 INSERT INTO @TBL_TextAreaAttributeId (PimAttributeId ,AttributeCode)
			 SELECT PimAttributeId, AttributeCode   FROM [dbo].[Fn_GetTextAreaAttributeId]()

			 
			 SELECT TOP 1 @PimAttributeFamilyId = PimAttributeFamilyId
                FROM @PimProductDetail;

			 SELECT TOP 1 @LocaleId = LocaleId
                FROM @PimProductDetail;

             -- Retrive input productId from @PimProductDetail table ( having multiple attribute values with common productId) 

             SELECT TOP 1 @PimProductId = PimProductId
             FROM @PimProductDetail;
			
             IF ISNULL(@PimProductId, 0) = 0
                 BEGIN
                     INSERT INTO ZnodePimProduct
                     (PimAttributeFamilyId,
                      CreatedBy,
                      CreatedDate,
                      ModifiedBy,
                      ModifiedDate
                     )
                            SELECT @PimAttributeFamilyId,
                                   @UserId,
                                   @GetDate,
                                   @UserId,
                                   @GetDate;
                     SET @PimProductId = SCOPE_IDENTITY();
                 END;
             ELSE 
                 BEGIN
                     UPDATE ZNodePimProduct
                       SET
                           PimAttributeFamilyId = @PimAttributeFamilyId,
                           ModifiedBy = @UserId,
                           ModifiedDate = @GetDate
                     WHERE PimProductId = @PimProductId;
                     
					 INSERT INTO @TBL_PimProductId(PimAttributeValueId)
					 SELECT ZPAV.PimAttributeValueId
                     FROM ZnodePimAttributeValue ZPAV
					 INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId AND ZPA.IsLocalizable = 1)
					 INNER JOIN ZnodePimFamilyGroupMapper ZPFGMI  ON (ZPFGMI.PimAttributeId = ZPAV.PimAttributeId AND ZPFGMI.PimAttributeFamilyId = @PimAttributeFamilyId)
					 WHERE ZPAV.PimProductId = @PimProductId
					 AND NOT EXISTS
                            (
                                SELECT TOP 1 1
                                FROM @PimProductDetail TBPDI
                                WHERE TBPDI.PimAttributeId = ZPAV.PimAttributeId
                                      AND TBPDI.PimProductId = ZPAV.PimProductId
							 )
                     
					-- SELECT * FROM @TBL_PimProductId


                     DELETE FROM ZnodePimAttributeValueLocale
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimAttributeValueLocale.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					 DELETE  ZnodePimProductAttributeDefaultValue 
					  WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					 DELETE FROM ZnodePimProductAttributeMedia 
					  WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeMedia.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					 DELETE FROM ZnodePimProductAttributeTextAreaValue
					   WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeTextAreaValue.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
                     DELETE FROM ZnodePimAttributeValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId
                     )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId )
					 
					 ;
                 END;
		
			 Insert into ZnodePimAttributeValue (PimAttributeFamilyId,PimProductId,PimAttributeId,PimAttributeDefaultValueId,--,AttributeValue
			 CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			 OUTPUT INSERTED.PimAttributeValueId,
			 INSERTED.PimAttributeFamilyId,
			 INSERTED.PimAttributeId
			 INTO @ZnodePimAttributeValue
			 Select  CASE WHEN PPD.PimAttributeFamilyId = 0 THEN @PimDefaultFamily ELSE PPD.PimAttributeFamilyId END,
			 @PimProductId, PPD.PimAttributeId, CASE WHEN PPD.ProductAttributeDefaultValueId = 0 THEN NULL ELSE PPD.ProductAttributeDefaultValueId END, 
			 @UserId,@GetDate,@UserId,@GetDate  from @pimProductDetail PPD
				
        		 


		  --------  MERGE INTO ZnodePimAttributeValue TARGET
    --------          USING @pimProductDetail SOURCE
    --------          ON(
				--------TARGET.PimProductId = @PimProductId
    --------                AND TARGET.PimAttributeId = SOURCE.PimAttributeId)
    --------                --AND ISNULL(TARGET.PimAttributeFamilyId, 0) = ISNULL(SOURCE.PimAttributeFamilyId, 0))
    --------                WHEN MATCHED
    --------                THEN UPDATE SET
    --------                             TARGET.PimAttributeFamilyId = CASE
    --------                                                               WHEN Source.PimAttributeFamilyId = 0
    --------                                                               THEN NULL
    --------                                                               ELSE Source.PimAttributeFamilyId
    --------                                                           END,
    --------                             TARGET.PimAttributeDefaultValueId = CASE
    --------                                                                     WHEN SOURCE.ProductAttributeDefaultValueId = 0
    --------                                                                     THEN NULL
    --------                                                                     ELSE SOURCE.ProductAttributeDefaultValueId
    --------                                                                 END, 
    --------                             -- ,TARGET.AttributeValue					= SOURCE.AttributeValue
    --------                             TARGET.CreatedBy = @UserId,
    --------                             TARGET.CreatedDate = @GetDate,
    --------                             TARGET.ModifiedBy = @UserId,
    --------                             TARGET.ModifiedDate = @GetDate
    --------             WHEN NOT MATCHED
    --------             THEN INSERT(PimAttributeFamilyId,
    --------                         PimProductId,
    --------                         PimAttributeId,
    --------                         PimAttributeDefaultValueId,
    --------                         --,AttributeValue
    --------                         CreatedBy,
    --------                         CreatedDate,
    --------                         ModifiedBy,
    --------                         ModifiedDate) VALUES
    --------         (CASE
    --------              WHEN Source.PimAttributeFamilyId = 0
    --------              THEN @PimDefaultFamily
    --------              ELSE Source.PimAttributeFamilyId
    --------          END,
    --------          @PimProductId,
    --------          SOURCE.PimAttributeId,
    --------          CASE
    --------              WHEN SOURCE.ProductAttributeDefaultValueId = 0
    --------              THEN NULL
    --------              ELSE SOURCE.ProductAttributeDefaultValueId
    --------          END, 
    --------          --,SOURCE.AttributeValue
    --------          @UserId,
    --------          @GetDate,
    --------          @UserId,
    --------          @GetDate
    --------         )
    --------         --WHEN NOT MATCHED BY SOURCE AND TARGET.PimProductId = @PimProductId
    --------         --                               AND Target.PimAttributeFamilyId IS NOT NULL
    --------         --THEN DELETE
    --------         OUTPUT INSERTED.PimAttributeValueId,
    --------                INSERTED.PimAttributeFamilyId,
    --------                INSERTED.PimAttributeId
    --------                INTO @ZnodePimAttributeValue;
        		 
		INSERT INTO @TBL_MediaAttributeValue (PimAttributeValueId,LocaleId , AttributeValue,MediaId)
		SELECT a.PimAttributeValueId,b.LocaleId,zm.Path AttributeValue ,ZM.MediaId FROM @ZnodePimAttributeValue AS a
		INNER JOIN @PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
		AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_MediaAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		INNER JOIN ZnodeMedia ZM ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue ,',') SP WHERE sp.Item = ZM.MediaId ))
		
		Insert into ZnodePimProductAttributeMedia (PimAttributeValueId,LocaleId,MediaPath,MediaId ,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select  MAV.PimAttributeValueId,MAV.LocaleId,MAV.AttributeValue,MAV.MediaId, @UserId, @GetDate,@UserId, @GetDate  from @TBL_MediaAttributeValue MAV


		--MERGE INTO ZnodePimProductAttributeMedia TARGET 
		--USING @TBL_MediaAttributeValue SOURCE 
		--ON (        TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
		--        AND TARGET.MediaPAth = SOURCE.AttributeValue
  --                AND TARGET.LocaleId = SOURCE.LocaleId)
		--WHEN MATCHED THEN 
		--UPDATE SET
  --                               TARGET.MediaPath = SOURCE.AttributeValue,
		--				   TARGET.MediaId   = SOURCE.MediaId,
  --                               TARGET.CreatedBy = @UserId,
  --                               TARGET.CreatedDate = @GetDate,
  --                               TARGET.ModifiedBy = @UserId,
  --                               TARGET.ModifiedDate = @GetDate
  --               WHEN NOT MATCHED
  --               THEN 
		--    INSERT(PimAttributeValueId,
  --                           LocaleId,
  --                           MediaPath,
		--					 MediaId ,
  --                           CreatedBy,
  --                           CreatedDate,
  --                           ModifiedBy,
  --                           ModifiedDate) 
		--	VALUES
  --           (SOURCE.PimAttributeValueId,
  --            SOURCE.LocaleId,
  --            SOURCE.AttributeValue,
		--	  SOURCE.MediaId,
  --            @UserId,
  --            @GetDate,
  --            @UserId,
  --            @GetDate
  --           )
		-- WHEN NOT MATCHED BY SOURCE AND EXISTS 
		-- (SELECT TOP 1 1 FROM @TBL_MediaAttributeValue TBLM WHERE TARGET.PimAttributeValueId = TBLM.PimAttributeValueId AND TARGET.Localeid = @LocaleId)
		--   THEN 
		-- DELETE  ;

	   ;With Cte_TextAreaAttributeValue AS 
		 (
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        AttributeValue
        FROM @ZnodePimAttributeValue AS a
        INNER JOIN @PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_TextAreaAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		
		)
		insert into ZnodePimProductAttributeTextAreaValue (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select CTAA.PimAttributeValueId,
              CTAA.LocaleId,
              CTAA.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate from Cte_TextAreaAttributeValue CTAA

		--MERGE INTO ZnodePimProductAttributeTextAreaValue TARGET 
		--USING Cte_TextAreaAttributeValue SOURCE 
		--ON (TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
  --              AND TARGET.LocaleId = SOURCE.LocaleId)
		--WHEN MATCHED THEN 
		--UPDATE SET
  --                               TARGET.AttributeValue = SOURCE.AttributeValue,
  --                               TARGET.CreatedBy = @UserId,
  --                               TARGET.CreatedDate = @GetDate,
  --                               TARGET.ModifiedBy = @UserId,
  --                               TARGET.ModifiedDate = @GetDate
  --               WHEN NOT MATCHED
  --               THEN 
		--    INSERT(PimAttributeValueId,
  --                           LocaleId,
  --                           AttributeValue,
  --                           CreatedBy,
  --                           CreatedDate,
  --                           ModifiedBy,
  --                           ModifiedDate) 
		--	VALUES
  --           (SOURCE.PimAttributeValueId,
  --            SOURCE.LocaleId,
  --            SOURCE.AttributeValue,
  --            @UserId,
  --            @GetDate,
  --            @UserId,
  --            @GetDate
  --           );
		 
        INSERT INTO @TBL_DefaultAttributeValue (PimAttributeValueId,LocaleId,AttributeValue)  
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        d.PimAttributeDefaultValueId  AttributeValue
        FROM @ZnodePimAttributeValue AS a
          INNER JOIN @PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_DefaultAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		INNER JOIN ZnodePimAttributeDefaultValue d ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,',') SP WHERE d.PimAttributeId = b.PimAttributeId AND SP.Item = d.AttributeDefaultValueCode))
	

	    insert into ZnodePimProductAttributeDefaultValue (PimAttributeValueId,LocaleId,PimAttributeDefaultValueId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
	    Select TDAV.PimAttributeValueId,TDAV.LocaleId,TDAV.AttributeValue,@UserId, @GetDate, @UserId, @GetDate  from @TBL_DefaultAttributeValue  TDAV
		
		---- SELECT * FROM Cte_DefaultAttributeValue
		--MERGE INTO ZnodePimProductAttributeDefaultValue TARGET 
		--USING @TBL_DefaultAttributeValue SOURCE 
		--ON (TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
  --            AND TARGET.PimAttributeDefaultValueId =  SOURCE.AttributeValue
		--	    AND TARGET.LocaleId = SOURCE.LocaleId)
		--WHEN MATCHED THEN 
		--UPDATE SET
  --                               TARGET.PimAttributeDefaultValueId = SOURCE.AttributeValue,
  --                               TARGET.CreatedBy = @UserId,
  --                               TARGET.CreatedDate = @GetDate,
  --                               TARGET.ModifiedBy = @UserId,
  --                               TARGET.ModifiedDate = @GetDate
  --               WHEN NOT MATCHED
  --               THEN 
		--    INSERT(PimAttributeValueId,
  --                           LocaleId,
  --                           PimAttributeDefaultValueId,
  --                           CreatedBy,
  --                           CreatedDate,
  --                           ModifiedBy,
  --                           ModifiedDate) 
		--	VALUES
  --           (SOURCE.PimAttributeValueId,
  --            SOURCE.LocaleId,
  --            SOURCE.AttributeValue,
  --            @UserId,
  --            @GetDate,
  --            @UserId,
  --            @GetDate
  --           )
		--	 WHEN NOT MATCHED BY SOURCE  AND EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeValue TBLAV WHERE TBLAV.PimAttributeValueId = TARGET.PimAttributeValueId AND TARGET.LocaleId = @LocaleId )
		--	 THEN 
		--	 DELETE 
		--	 ;
		
		Insert into ZnodePimAttributeValueLocale (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			 SELECT a.PimAttributeValueId,b.LocaleId,AttributeValue,@UserId,@GetDate,@UserId,@GetDate FROM @ZnodePimAttributeValue AS a
			 INNER JOIN @PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
							 AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBLDA WHERE TBLDA.PimAttributeId = b.PimAttributeId  )
			 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_MediaAttributeId TBLMA WHERE TBLMA.PimAttributeId = b.PimAttributeId  )
			 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBLTA WHERE TBLTA.PimAttributeId = b.PimAttributeId  )

			  
			 
		  -- MERGE INTO ZnodePimAttributeValueLocale TARGET
    --         USING
    --         (
    --             SELECT a.PimAttributeValueId,
    --                    b.LocaleId,
    --                    AttributeValue
    --             FROM @ZnodePimAttributeValue AS a
    --                  INNER JOIN @PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
    --                                                         AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
    --             WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBLDA WHERE TBLDA.PimAttributeId = b.PimAttributeId  )
			 --    AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_MediaAttributeId TBLMA WHERE TBLMA.PimAttributeId = b.PimAttributeId  )
				-- AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBLTA WHERE TBLTA.PimAttributeId = b.PimAttributeId  )
			 --) SOURCE
    --         ON(TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
    --            AND TARGET.LocaleId = SOURCE.LocaleId)
    --             WHEN MATCHED
    --             THEN UPDATE SET
    --                             TARGET.AttributeValue = SOURCE.AttributeValue,
    --                             TARGET.CreatedBy = @UserId,
    --                             TARGET.CreatedDate = @GetDate,
    --                             TARGET.ModifiedBy = @UserId,
    --                             TARGET.ModifiedDate = @GetDate
    --             WHEN NOT MATCHED
    --             THEN INSERT(PimAttributeValueId,
    --                         LocaleId,
    --                         AttributeValue,
    --                         CreatedBy,
    --                         CreatedDate,
    --                         ModifiedBy,
    --                         ModifiedDate) VALUES
    --         (SOURCE.PimAttributeValueId,
    --          SOURCE.LocaleId,
    --          SOURCE.AttributeValue,
    --          @UserId,
    --          @GetDate,
    --          @UserId,
    --          @GetDate
    --         );
             SET @AssociatedProduct =
             (
                 SELECT MAX(AssociatedProducts)
                 FROM @PimProductDetail AS a
             );
             INSERT INTO ZnodePimProductTypeAssociation
             (PimParentProductId,
              PimProductId,
              DisplayOrder,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT @PimProductId,
                           Item,
                           ID AS RowId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM dbo.Split(@AssociatedProduct, ',') AS b
                         INNER JOIN ZNodePimProduct AS q ON(q.PimProductId = b.Item);
             SET @ConfigureAttributeId =
             (
                 SELECT MAX(ConfigureAttributeIds)
                 FROM @PimProductDetail AS a
             );
             SET @ConfigureFamilyId =
             (
                 SELECT MAX(ConfigureFamilyIds)
                 FROM @PimProductDetail AS a
             );
             INSERT INTO [ZnodePimConfigureProductAttribute]
             (PimProductId,
              PimFamilyId,
              PimAttributeId,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT @PimProductId,
                           @ConfigureFamilyId,
                           q.PimAttributeId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM dbo.Split(@ConfigureAttributeId, ',') AS b
                         INNER JOIN ZnodePimAttribute AS q ON(q.PimAttributeId = b.Item);



             IF @IsNotReturnOutput = 0
                 SELECT @PimProductId AS Id,
                        CAST(1 AS BIT) AS Status;
             SET @status = 1;

			 IF @CopyPimProductId > 0 
			 BEGIN 
			   INSERT INTO ZnodePimAttributeValueLocale  (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.AttributeValue,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimAttributeValueLocale ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId

			    INSERT INTO ZnodePimProductAttributeDefaultValue  (PimAttributeValueId,LocaleId,PimAttributeDefaultValueId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.PimAttributeDefaultValueId,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeDefaultValue ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId


			   INSERT INTO ZnodePimProductAttributeTextAreaValue  (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.AttributeValue,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeTextAreaValue ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId
			   			   
			   INSERT INTO ZnodePimProductAttributeMedia  (PimAttributeValueId,LocaleId,MediaPath,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.MediaPath,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeMedia ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId
			   
			 END 

             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdatePimProduct @UserId = '+CAST(@UserId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@CopyPimProductId='+CAST(@CopyPimProductId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdatePimProduct',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_ImportSEODetails]...';


GO

CREATE PROCEDURE [dbo].[Znode_ImportSEODetails](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @LocaleId int= 0,@PortalId int )
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import SEO Details
	
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 

		-- Three type of import required three table varible for product , category and brand
		DECLARE @InsertSEODetails TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			
		);

		DECLARE @InsertSEODetailsOFProducts TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			
		);

		DECLARE @InsertSEODetailsOFCategory TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
		
		);

		DECLARE @InsertSEODetailsOFBrand TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			
		);

		
		DECLARE @InsertedZnodeCMSSEODetail TABLE
		( 
			CMSSEODetailId int , SEOId int, CMSSEOTypeId int
		);

		SET @SSQL = 'Select RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID  FROM '+@TableName;
		INSERT INTO @InsertSEODetails(RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID )
		EXEC sys.sp_sqlexec @SSQL;
	

		SET @SSQL = 'Select RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID  FROM '+@TableName
		+ ' Where ImportType = ''Product'' ';
		INSERT INTO @InsertSEODetailsOFProducts(  RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation	,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords	, GUID )
		EXEC sys.sp_sqlexec @SSQL;

		SET @SSQL = 'Select RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID  FROM '+@TableName
		+ ' Where ImportType = ''Category'' ';
		INSERT INTO @InsertSEODetailsOFCategory( RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords	, GUID )
		EXEC sys.sp_sqlexec @SSQL;

		SET @SSQL = 'Select RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID  FROM '+@TableName
		+ ' Where ImportType = ''Brand'' ';
		INSERT INTO @InsertSEODetailsOFBrand( RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation	,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords	, GUID )
		EXEC sys.sp_sqlexec @SSQL;


	    -- start Functional Validation 
		--1. Product
		--2. Category
		--3. Content Page
		--4. Brand
		-----------------------------------------------

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'ImportType', ImportType, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetails AS ii
			   WHERE ii.ImportType NOT in 
			   (
				   Select NAME from ZnodeCMSSEOType where NAME <> 'Content Page'
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFProducts AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select SKU from ZnodePublishProductDetail ZPPD
					INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
					INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
					AND ZPC.PortalId  = @PortalId AND SKU is not null 
			   )  AND ImportType = 'Product';


		
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'Category', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFCategory AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select PublishCategoryName from ZnodePublishCategoryDetail ZPPD
				   	INNER JOIN ZnodePublishCategory ZPP ON ZPP.PublishCategoryId = ZPPD.PublishCategoryId
					INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
				   where ZPPD.PublishCategoryName is not null  AND   ZPC.PortalId = @PortalId
			   )  AND ImportType = 'Category';

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'Brand', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFBrand AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select BrandCode from ZnodeBrandDetails 
			   )  AND ImportType = 'Brand';
		
		
		--Note : Content page import is not required 
		
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  

		DELETE FROM @InsertSEODetailsOFProducts
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		DELETE FROM @InsertSEODetailsOFCategory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		DELETE FROM @InsertSEODetailsOFBrand
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		-- Insert Product Data 
		If Exists (Select top 1 1 from @InsertSEODetailsOFProducts)
		Begin
			Update ZCSD SET ZCSD.IsRedirect = ISD.IsRedirect ,
						   ZCSD.MetaInformation =  ISD.MetaInformation,
						   ZCSD.SEOUrl=  ISD.SEOUrl
			FROM 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId = ZPPD.PublishProductId
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = ZCSD.PortalId
			where  ZCSD.PortalId  =@PortalId;
			
			Update ZCSDL SET ZCSDL.SEOTitle = ISD.SEOTitle
							,ZCSDL.SEODescription = ISD.SEODescription
							,ZCSDL.SEOKeywords= ISD.SEOKeywords
 			FROM 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId = ZPPD.PublishProductId
			INNER JOIN ZnodeCMSSEODetailLocale ZCSDL ON ZCSD.CMSSEODetailId = ZCSDL.CMSSEODetailId
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = ZCSD.PortalId
			where  ZCSD.PortalId  =@PortalId AND ZCSDL.LocaleId = @LocaleId; 

			Delete from @InsertedZnodeCMSSEODetail
			INSERT INTO ZnodeCMSSEODetail(CMSSEOTypeId,SEOId,IsRedirect,MetaInformation,PortalId,SEOUrl,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
			OUTPUT Inserted.CMSSEODetailId,Inserted.SEOId,Inserted.CMSSEOTypeId INTO @InsertedZnodeCMSSEODetail
		
			Select Distinct 1,ZPPD.PublishProductId , ISD.IsRedirect,ISD.MetaInformation,@PortalId,ISD.SEOUrl,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
			where  ZPC.PortalId  =@PortalId AND
			 NOT EXISTS (Select TOP 1 1 from ZnodeCMSSEODetail ZCSD where ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId  = ZPPD.PublishProductId
			 and  ZCSD .PortalId =@PortalId   );
		
        	insert into ZnodeCMSSEODetailLocale(CMSSEODetailId,LocaleId,SEOTitle,SEODescription,SEOKeywords,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			Select Distinct IZCSD.CMSSEODetailId,@LocaleId,ISD.SEOTitle,ISD.SEODescription,ISD.SEOKeywords,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertedZnodeCMSSEODetail IZCSD INNER JOIN ZnodePublishProductDetail ZPPD ON IZCSD.SEOId = ZPPD.PublishProductId AND IZCSD.CMSSEOTypeId =1  
											 INNER JOIN @InsertSEODetailsOFProducts ISD ON ZPPD.SKU = ISD.Code 
											 INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
											 INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
			where  ZPC.PortalId  =@PortalId 
		END

		-- Insert Category Data 
		
		If Exists (Select top 1 1 from @InsertSEODetailsOFCategory)
		Begin

			Update ZCSD SET ZCSD.IsRedirect = ISD.IsRedirect ,
						   ZCSD.MetaInformation =  ISD.MetaInformation,
						   ZCSD.SEOUrl=  ISD.SEOUrl
			FROM 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId = ZPPD.PublishCategoryId
			where  ZCSD.PortalId  =@PortalId;
			
			Update ZCSDL SET ZCSDL.SEOTitle = ISD.SEOTitle
							,ZCSDL.SEODescription = ISD.SEODescription
							,ZCSDL.SEOKeywords= ISD.SEOKeywords
 			FROM 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId = ZPPD.PublishCategoryId
			INNER JOIN ZnodeCMSSEODetailLocale ZCSDL ON ZCSD.CMSSEODetailId = ZCSDL.CMSSEODetailId
			where  ZCSD.PortalId  =@PortalId AND ZCSDL.LocaleId = @LocaleId; 

			Delete from @InsertedZnodeCMSSEODetail
			INSERT INTO ZnodeCMSSEODetail(CMSSEOTypeId,SEOId,IsRedirect,MetaInformation,PortalId,SEOUrl,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
			OUTPUT Inserted.CMSSEODetailId,Inserted.SEOId,Inserted.CMSSEOTypeId INTO @InsertedZnodeCMSSEODetail
		
			Select Distinct 2,ZPPD.PublishCategoryId , ISD.IsRedirect,ISD.MetaInformation,@PortalId,ISD.SEOUrl,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodePublishCategory ZPP ON ZPP.PublishCategoryId = ZPPD.PublishCategoryId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = @PortalId
			where NOT EXISTS (Select TOP 1 1 from ZnodeCMSSEODetail ZCSD where ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId  = ZPPD.PublishCategoryId AND ZCSD.PortalId = @PortalId );
		


			insert into ZnodeCMSSEODetailLocale(CMSSEODetailId,LocaleId,SEOTitle,SEODescription,SEOKeywords,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			Select Distinct IZCSD.CMSSEODetailId,@LocaleId,ISD.SEOTitle,ISD.SEODescription,ISD.SEOKeywords,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertedZnodeCMSSEODetail IZCSD INNER JOIN ZnodePublishCategoryDetail ZPPD ON IZCSD.SEOId = ZPPD.PublishCategoryId AND IZCSD.CMSSEOTypeId =2  
											 INNER JOIN @InsertSEODetailsOFCategory ISD ON ZPPD.PublishCategoryName = ISD.Code 
		END
										 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_ReapirAdminUser]...';


GO

CREATE PROCEDURE [dbo].[Znode_ReapirAdminUser](@IsCreateAdminUser bit, @IsUpdatePassword bit)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Create Admin user and update password
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max),@AspNetZnodeUserId nvarchar(256),@ASPNetUsersId nvarchar(256),
		@PasswordHash nvarchar(max),@SecurityStamp nvarchar(max),@RoleId nvarchar(256),@IsAllowGlobalLevelUserCreation nvarchar(10),
		@GetDate datetime ,@UserId int,@AddressId int,@Status bit,@UserName  Nvarchar(512), @PortalId int ,@NewUserId int 
		
		SET  @UserName = 'admin@znode1.com'
		SET  @PortalId  = null 
		SET  @SecurityStamp = N'0wVYOZNK4g4kKz9wNs-UHw2'
		SET  @PasswordHash = N'APy4Tm1KbRG6oy7h3r85UDh/lCW4JeOi2O2Mfsb3OjkpWTp1YfucMAvvcmUqNaSOlA==';
		SELECT  @RoleId  = Id from AspNetRoles where   NAME = 'Admin'  
		SET  @GetDate = [dbo].[Fn_GetDate]()
		SET  @UserId = 2 
		SET @ASPNetUsersId = newid()

		--Select ANR.Name, ANZU.USername  ,ANU.* from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
		--INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
		--INNER JOIN AspNetUserRoles ANUR ON ZU.AspNetUserId = ANUR.UserId
		--inner join AspNetRoles ANR ON ANUR.RoleId = ANUR.RoleId
		--where ANR.Name = 'Admin' and ANZU.Username = 'admin@znode.com'
		----where Isnull(ANZU.PortalId,0) = Isnull(@PortalId ,0)
		if @IsCreateAdminUser =1 
		Begin 
				IF NOT Exists (select TOP 1 1 from AspNetZnodeUser where UserName = @UserName ) 
				Begin
						DECLARE @InsertedAspNetZnodeUser TABLE (AspNetZnodeUserId nvarchar(256) ,UserName nvarchar(512),PortalId int )
						DECLARE @InsertedASPNetUsers TABLE (Id nvarchar(256) ,UserName nvarchar(512))
						DECLARE @InsertZnodeUser TABLE (UserId int)
				
						Insert into AspNetZnodeUser (AspNetZnodeUserId, UserName, PortalId)		
						OUTPUT INSERTED.AspNetZnodeUserId, INSERTED.UserName, INSERTED.PortalId	INTO  @InsertedAspNetZnodeUser 			 
						Select NEWID(),@UserName, @PortalId 
				 
						--where Not Exists (Select TOP 1 1  from AspNetZnodeUser ANZ where Isnull(ANZ.PortalId,0) = Isnull(@PortalId,0) AND ANZ.UserName = IC.UserName)
						
						INSERT INTO ASPNetUsers (Id,Email,EmailConfirmed,PasswordHash,SecurityStamp,PhoneNumber,PhoneNumberConfirmed,TwoFactorEnabled,
						LockoutEndDateUtc,LockOutEnabled,AccessFailedCount,PasswordChangedDate,UserName)
						output inserted.Id, inserted.UserName into @InsertedASPNetUsers
						SELECT @ASPNetUsersId, NULL Email,0 ,@PasswordHash,@SecurityStamp,NULL PhoneNumber,0,0,NULL LockoutEndDateUtc,1 LockoutEnabled,
						0,@GetDate,AspNetZnodeUserId from @InsertedAspNetZnodeUser  
				
						INSERT INTO  ZnodeUser(AspNetUserId,FirstName,LastName,MiddleName,CustomerPaymentGUID,BudgetAmount,Email,PhoneNumber,EmailOptIn,
						IsActive,ExternalId, CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						--OUTPUT Inserted.UserId into @InsertZnodeUser
						SELECT IANU.Id,'' FirstName,'' LastName,'' MiddleName,null CustomerPaymentGUID,null BudgetAmount,null Email,null PhoneNumber,0 EmailOptIn,1 IsActive,null ExternalId, @UserId,@Getdate,@UserId,@Getdate
						from @InsertedASPNetUsers IANU 

						SET @NewUserId = @@Identity 
				  	     
						INSERT INTO AspNetUserRoles (UserId,RoleId)  Select @ASPNetUsersId, @RoleID 

						INSERT INTO ZnodeUserPortal (UserId,PortalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
						SELECT @NewUserId, @PortalId , @UserId,@Getdate,@UserId,@Getdate --from @InsertZnodeUser

						Insert into ZnodeAddress (FirstName,LastName,DisplayName,Address1,Address2,Address3,CountryName,StateName,
						CityName,PostalCode,PhoneNumber,Mobilenumber,AlternateMobileNumber,FaxNumber,IsDefaultBilling,IsDefaultShipping,IsActive,
						ExternalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						Select '' FirstName, '' LastName, '' DisplayName,'' Address1,'' Address2,'' Address3, '' CountryName, '' StateName,
						'' CityName,'' PostalCode,'' PhoneNumber, '' Mobilenumber, '' AlternateMobileNumber,'' FaxNumber, 1 IsDefaultBilling, 0 IsDefaultShipping,1 IsActive,
						'' ExternalId,@UserId CreatedBy,@Getdate CreatedDate,@UserId ModifiedBy,@Getdate ModifiedDate

						SET @AddressId = @@Identity
						Insert into ZnodeUserAddress(UserId,AddressId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						SElect @AddressId , @NewUserId , @UserId, @Getdate, @UserId, @Getdate from @InsertZnodeUser

						SET @Status = 1;
						select @Status 
						Select 'New user is created by name  : ' + @UserName	+ ' and Password : admin12345'  
							
						--Select ANZU.PortalId ,ANR.Name, ANZU.USername  ,ANU.* from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
						--INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
						--INNER JOIN AspNetUserRoles ANUR ON ZU.AspNetUserId = ANUR.UserId
						--inner join AspNetRoles ANR ON ANUR.RoleId = ANUR.RoleId
						--where ANR.Name = 'Admin' and ANZU.Username = 'admin@znode1.com'

				End
				Else 
				Begin
				   Select 'User Already Exists : ' + @UserName
				End
		END
		Else If @IsUpdatePassword =1 
		Begin

				--Select ANR.Name, ANZU.USername  ,ANU.* from AspNetZnodeUser ANZU 
				--INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				--INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				--INNER JOIN AspNetUserRoles ANUR ON ZU.AspNetUserId = ANUR.UserId
				--inner join AspNetRoles ANR ON ANUR.RoleId = ANUR.RoleId
				--where ANR.Name = 'Admin' and ANZU.Username = 'admin@znode.com' 
				--AND Isnull(ANZU.PortalId,0) = Isnull(@portalId,0)

				Update ANU SET    
						 ANU.[PasswordHash] = @PasswordHash
						,ANU.[SecurityStamp]= @SecurityStamp
				   	    ,ANU.LockoutEndDateUtc = NULL 
						,ANU.PasswordChangedDate= @Getdate
				--Select ANR.Name, ANZU.USername  ,ANU.* 
				FROM AspNetZnodeUser ANZU 
				INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN AspNetUserRoles ANUR ON ZU.AspNetUserId = ANUR.UserId
				inner join AspNetRoles ANR ON ANUR.RoleId = ANUR.RoleId
				where ANR.Name = 'Admin' and ANZU.Username = 'admin@znode.com' 
				AND Isnull(ANZU.PortalId,0) = Isnull(@portalId,0)

				 DELETE from ZnodePasswordLog where userid in 
				 (Select ANU.Id 
				FROM AspNetZnodeUser ANZU 
				INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN AspNetUserRoles ANUR ON ZU.AspNetUserId = ANUR.UserId
				inner join AspNetRoles ANR ON ANUR.RoleId = ANUR.RoleId
				where ANR.Name = 'Admin' and ANZU.Username = 'admin@znode.com' 
				AND Isnull(ANZU.PortalId,0) = Isnull(@portalId,0))
				-------Reset Password ( admin12345 )
				SET @Status = 1;
				select @Status 
				Select  'Updated Password : admin12345'
		END
		-- 'End'
		COMMIT TRAN A;
	END TRY
	BEGIN CATCH
	SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_GetDynamicReport]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetDynamicReport]
( @WhereClause nvarchar(max),
  @Columns varchar(max),
  @ReportType varchar(600), 
  @LocaleId int,
  @CatalogId    int = 0,
  @PriceListId  int = 0,
  @WarehouseId  int = 0,
  @CategoreyId  nvarchar(max) = '',
  @Isdebug bit = 0 , 
  @IscallforTest BIT =0 
  )

AS 
/*
	 Summary:-  This Procedure is Used to get the dynamic report data of product
	 Unit Testing
	 begin tran
	 EXEC Znode_GetDynamicReport '','SKU','Product',1,@CatalogId =1 
	 
	 EXEC Znode_GetDynamicReport '','ProductType,ProductName,SKU,ProductCode,ShortDescription,LongDescription,Assortment,Brand,Vendor,Highlights,Tags,FeatureDescription,ProductSpecification,File,IsActive,UOM,MinimumQuantity,MaximumQuantity,NewProduct,OutOfStockOptions,IsFeatured,CallForPricing,VideoURL,Calories,SpecialFeatures,PriceRange,Family,Specials,Sharp,Mild,GrapeColor,Season,Shelled,Salted,Color,testAttribute,testAttributeMultiSelect,Size,FreeShipping,ShippingCostRules,Weight,Height,Width,Length,ShippingInformation,testNumber,testCode,xbv,ShipSeparately','Product',1,@CatalogId =1 

	 EXEC Znode_GetDynamicReport '','CategoryName,ShortDescription,LongDescription,CategoryTitle,DisplayOrderCategory,AdditionalDescription,CategoryBanner,CategoryImage,ImageAltText','Category',1

      EXEC Znode_GetDynamicReport '', 'OmsOrderDetailsId,OmsOrderId,PortalId,UserId,OrderDate,OmsOrderStateId,ShippingId,PaymentTypeId,BillingFirstName
      ,BillingLastName,BillingCompanyName,BillingStreet1,BillingStreet2,BillingCity,BillingStateCode,BillingPostalCode,BillingCountry,BillingPhoneNumber
      ,BillingEmailId,TaxCost,ShippingCost,Total,subTotal,DiscountAmount,CurrencyCode,OverDueAmount,ShippingNumber,TrackingNumber,CouponCode,PromoDescription
      ,ReferralUserId,PurchaseOrderNumber,OmsPaymentStateId,WebServiceDownloadDate,PaymentSettingId,PaymentTransactionToken,ShipDate,ReturnDate,AddressId
      ,PoDocument,IsActive,ExternalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate','Orders',1
	 
	  EXEC Znode_GetDynamicReport '','UserId,AccountId,AspNetUserId,FirstName,LastName,MiddleName,CustomerPaymentGUID,BudgetAmount,Email
	  ,PhoneNumber,EmailOptIn,ReferralStatus,ReferralCommission,ReferralCommissionTypeId,IsActive,ExternalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate','User',1
 
	 rollback tran
	 
*/
BEGIN
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @SQL NVARCHAR(max),@OutPimProductIds VARCHAR(max),@RowsCount INT  = 0 ,@SubTotalString nvarchar(100),@PimProductIds VARCHAR(max),@IsProductNotIn bit 
		DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId() 
		DECLARE @TransferPimProductId TransferId 
		DECLARE @TBL_CatalogDetails TABLE (PimCatalogId INT,CatalogName NVARCHAR(max) )	
		DECLARE @CategoryNameAttributeId INT = dbo.Fn_GetCategoryNameAttributeId()
		DECLARE @TBL_CategoryDetails TABLE (PimCategoryId INT,CategoryName NVARCHAR(max) )

		INSERT INTO @TBL_CatalogDetails (PimCatalogId,CatalogName)
		SELECT PimCatalogId , CatalogName
		FROM ZnodePimCatalog  ZPC
		WHERE (ZPC.PimCatalogId = Isnull(@CatalogId ,0) OR Isnull(@CatalogId,0)  =0 )
	
	    
		INSERT INTO @TBL_CategoryDetails (PimCategoryId,CategoryName)
		SELECT PimCategoryId , CategoryValue 
		FROM ZnodePimCategoryAttributeValue ZPCAV 
		INNER JOIN ZnodePimCategoryAttributeValueLocale ZPCAVL ON (ZPCAVL.PimCategoryAttributeValueId = ZPCAV.PimCategoryAttributeValueId AND ZPCAVL.LocaleId = @DefaultLocaleId)
		INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPCAV.PimAttributeId AND IsCategory = 1 AND ZPA.PimAttributeId = @CategoryNameAttributeId)
		WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.split(@CategoreyId,',') SP WHERE SP.Item= ZPCAV.PimCategoryId) OR @CategoreyId ='')

		DECLARE @TBL_DetailTable TABLE
		( 
			Id int, 
			CountId int, 
			RowId int 
		);

	   DECLARE @TBL_AttributeValue TABLE
        (	    PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  varchar(300),
              PimAttributeId INT,
		    DisplayOrder Bigint
        );
		DECLARE @TBL_AttributeCode TABLE(AttributeCode varchar(300),DisplayOrder Bigint )
		
		DECLARE @ProductData TABLE 
		(AttributeValue Nvarchar(Max), AttributeCode varchar(300), PimProductId  Bigint)

		IF @ReportType = 'Product'
		BEGIN
		      
			 IF Isnull(@CatalogId,0) <> 0 
			 BEGIN 
				Insert into @TransferPimProductId 
				    SELECT  Distinct PimProductId  
				    FROM ZnodePimCatalogCategory ZPCC
				    WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_CatalogDetails TBCD WHERE TBCD.PimCatalogId = ZPCC.PimCatalogId ) OR Isnull(@CatalogId,0) =0 ) and PimProductId Is not null 
					AND (PimProductId =  @IscallforTest OR @IscallforTest = 0) 
			
				SET @IsProductNotIn  = 0 
			 END 
			 ELSE 
			 BEGIN 
			  Insert into @TransferPimProductId 
			  SELECT 1 
			  WHERE @IscallforTest = 1
			   
			  SET @PimProductIds = CASE WHEN @IscallforTest = 1 THEN 1 ELSE  '' END 
			  SET @IsProductNotIn  = 0 
			 END 
			 
			 EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = 10000000,
                  @PageNo = 1,
                  @Order_BY = '',
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = '',
                  @PimProductId = @TransferPimProductId ,
                  @IsProductNotIn = @IsProductNotIn  ,
			   @OutProductId = @OutPimProductIds OUT;
			
	
			 INSERT INTO @TBL_DetailTable (Id ,RowId,CountId)             
			 SELECT item,Id,@RowsCount
			 FROM  dbo.split(@OutPimProductIds,',') SP 
			
			 SET @SQL = SUBSTRING((SELECT ','+CAST(Id AS VARCHAR(50)) FROM  @TBL_DetailTable FOR XML PATH('') ),2,4000)
		
			 INSERT INTO @TBL_AttributeValue (PimProductId,AttributeValue,AttributeCode,PimAttributeId)
			 EXEC [dbo].[Znode_GetProductsAttributeValue] @SQL,@Columns,@LocaleId
		
			 UPDATE A SET A.AttributeValue 
					= SUBSTRING ((SELECT ','+CAST([FileName] AS VARCHAR(50)) FROM ZnodeMedia ZM WHERE EXISTS
					(SELECT TOP 1 1 FROM dbo.split(A.AttributeValue ,',') SP WHERE ltrim(rtrim(sp.Item)) = ZM.MediaId) FOR XML PATH ('') ) ,2,4000)   
					FROM @TBL_AttributeValue   A   where A.AttributeCode in ('ProductImage','GalleryImages','SwatchImage') 

			
			 INSERT INTO @TBL_AttributeCode (AttributeCode ,DisplayOrder )
			 select ltrim(rtrim(SPL.item)),SPL.Id
			 from DBO.Split(@Columns,',') SPL
			 where NOT EXISTS (SELECT TOP 1  1 FROM @TBL_AttributeValue TBAV WHERE TBAV.AttributeCode = SPL.item)
	           
			 SET @Columns = 'CatalogName,CategoryName,' + @Columns 
	           ;With CTE_ProductData AS 
			 (
				SELECT tblAv.AttributeValue, tblAv.AttributeCode, tblAv.PimProductId  
				FROM @TBL_AttributeValue  tblAv 
				UNION All 
				select NULL  AttributeValue, SPL.AttributeCode , AV.PimProductId   
				from @TBL_AttributeCode SPL
				CROSS APPLY @TBL_AttributeValue AV 
				--inner join ZnodePimCatalogCategory x on AV.PimProductId = x.PimProductId
				-- SPL.item Not in (Select Distinct AttributeCode from @TBL_AttributeValue) 
				UNION ALL 
				SELECT Distinct  TBCD.CatalogName,'CatalogName' AttributeCode ,  ZPCC.PimProductId 
				FROM ZnodePimCatalogCategory ZPCC
				INNER JOIN @TBL_CatalogDetails TBCD ON TBCD.PimCatalogId = ZPCC.PimCatalogId 
				WHERE ZPCC.PimProductId IS NOT NULL 
				AND EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeValue TBL WHERE TBL.PimProductId = ZPCC.PimProductId )
				GROUP BY  ZPCC.PimProductId ,TBCD.CatalogName
				UNION ALL 
				SELECT SUBSTRING(( SELECT DISTINCT ','+TBCD.CategoryName FROM @TBL_CategoryDetails TBCD INNER JOIN ZnodePimCatalogCategory ZPCCI ON (ZPCCI.PimCategoryId = TBCD.PimCategoryId )
				     WHERE  ZPCC.PimCatalogId = ZPCCI.PimCatalogId AND ZPCC.PimProductId = ZPCCI.PimProductId  FOR XML PATH('')),2,8000)   ,'CategoryName' AttributeCode ,  ZPCC.PimProductId 
				FROM ZnodePimCatalogCategory ZPCC
				WHERE ZPCC.PimProductId IS NOT NULL  
				AND (PimCatalogId in (Select PimCatalogId FROM @TBL_CatalogDetails) OR Isnull(@CatalogId,0)  =0)
				AND EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeValue TBL WHERE TBL.PimProductId = ZPCC.PimProductId )
				GROUP BY ZPCC.PimProductId ,ZPCC.PimCatalogId 
			 )
			 	Select  AttributeValue, AttributeCode, PimProductId  AS Id
				from CTE_ProductData INNER JOIN DBO.Split(@Columns,',') SPLORD  ON CTE_ProductData.AttributeCode = SPLORD.Item 
				--WHERE AttributeValue IS NOT NULL  
				order by PimProductId,SPLORD.id
		END;
		ELSE IF @ReportType = 'Category'
			 BEGIN

			  IF Isnull(@CatalogId,0) <> 0  
			 BEGIN 

			 SET @PimProductIds = SUBSTRING ((SELECT  ','+CAST(PimCategoryId AS VARCHAr(50)) 
												FROM ZnodePimCatalogCategory ZPCC
												WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_CatalogDetails TBCD WHERE TBCD.PimCatalogId = ZPCC.PimCatalogId ) OR Isnull(@CatalogId,0) =0 )
												--AND (EXISTS (SELECT TOP 1 1 FROM @TBL_CategoryDetails TBCD WHERE TBCD.PimCategoryId = ZPCC.PimCategoryId ) OR @CategoreyId ='')
												FOR XML PATH('')
											),2,4000)
			
			 END 
			 ELSE 
			 BEGIN 
			  SET @PimProductIds = ''
			 END 

				INSERT INTO @TBL_DetailTable( Id, CountId, RowId )
				EXEC Znode_GetCategoryIdForPaging 
				@WhereClauseXML = @WhereClause, 
				@Rows = 10000000, 
				@PageNo = 1, 
				@Order_BY = '', 
				@RowsCount = 0, 
				@LocaleId = @LocaleId, 
				@AttributeCode = '', 
				@PimCategoryId = @PimProductIds,
				@IsAssociated = 1;
				
				Insert into @TBL_AttributeValue (AttributeValue,AttributeCode,PimProductId)
				SELECT CategoryValue AS AttributeValue, AttributeCode, PimCategoryId AS Id
				FROM View_PimCategoryAttributeValue AS VICAV
				WHERE EXISTS
				(
					SELECT TOP 1 1
					FROM @TBL_DetailTable AS TBP
					WHERE VICAV.PimCategoryId = TBP.Id
				) AND 
					  EXISTS
				(
					SELECT TOP 1 1
					FROM dbo.split( @Columns, ',' ) AS SP
					WHERE SP.Item = VICAV.AttributeCode
				) AND  LocaleId = @LocaleId;

						
				Insert into @TBL_AttributeValue (AttributeValue,AttributeCode,PimProductId)
				SELECT CategoryValue AS AttributeValue, AttributeCode, PimCategoryId AS Id
				FROM View_PimCategoryAttributeValue AS VICAV
				WHERE EXISTS
				(
					SELECT TOP 1 1
					FROM @TBL_DetailTable AS TBP
					WHERE VICAV.PimCategoryId = TBP.Id
				) AND 
					  EXISTS
				(
					SELECT TOP 1 1
					FROM dbo.split( @Columns, ',' ) AS SP
					WHERE SP.Item = VICAV.AttributeCode
				) AND  LocaleId = @DefaultLocaleId
				AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeValue RTRR WHERE VICAV.PimCategoryId = RTRR.PimProductId AND VICAV.AttributeCode = RTRR.AttributeCode)
				;


					
				UPDATE A SET A.AttributeValue 
				= SUBSTRING ((SELECT ','+CAST([FileName] AS VARCHAR(50)) FROM ZnodeMedia ZM WHERE EXISTS
				(SELECT TOP 1 1 FROM dbo.split(A.AttributeValue ,',') SP WHERE ltrim(rtrim(sp.Item)) = ZM.MediaId) FOR XML PATH ('') ) ,2,4000)   
				FROM @TBL_AttributeValue   A   where A.AttributeCode in ('CategoryImage') 

			
				;With CTE_CategoryData AS 
				(
				    select AttributeValue  ,AttributeCode,PimProductId  from @TBL_AttributeValue
				    UNION All 
				    select  NULL  AttributeValue, SPL.item , AV.PimProductId  from DBO.Split(@Columns,',') SPL
				    CROSS JOIN @TBL_AttributeValue AV
				    where SPL.item Not in (Select Distinct AttributeCode from @TBL_AttributeValue)
				    UNION ALL
				    SELECT DISTINCT TBCD.CatalogName,'CatalogName' AttributeCode ,  ZPCC.PimCategoryId 
				    FROM ZnodePimCategoryHierarchy ZPCC
				    INNER JOIN @TBL_CatalogDetails TBCD ON TBCD.PimCatalogId = ZPCC.PimCatalogId 
				)
				Select  AttributeValue, AttributeCode, PimProductId  AS Id  from CTE_CategoryData LEft Outer JOIN DBO.Split(@Columns,',') SPLORD  
				ON CTE_CategoryData.AttributeCode = SPLORD.Item 
				Order by CTE_CategoryData.PimProductId, SPLORD.Id



	    END
	    ELSE IF @ReportType = 'Inventory' 
	    BEGIN 
		SET @Columns = Replace (@Columns, 'Quantity','dbo.Fn_GetDefaultInventoryRoundOff(Quantity) Quantity')   
		SET @Columns = Replace (@Columns, 'ReOrderLevel','dbo.Fn_GetDefaultInventoryRoundOff(ReOrderLevel) ReOrderLevel')   
		SET @SQL = 
		'
					;With Cte_Inventory AS (
					SELECT '+@Columns+' FROM ZnodeInventory ZI Inner join ZnodeWarehouse ZW on ZI.WarehouseId  = ZW.WarehouseId  
					WHERE 1=1 '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)  
					+' AND ( ZI.WarehouseId =  ' + CONVERT(Varchar(300), Isnull(@WarehouseId,0)) + ' OR ' + CONVERT(Varchar(300), Isnull( @WarehouseId,0) ) + '  = 0 ))

					SELECT * FROM Cte_Inventory '
		EXEC (@SQL)
		END 
		ELSE IF @ReportType = 'Orders' 
		BEGIN 
		    if (Charindex('SubTotal',@Columns) > 0 )
				SET @Columns = Replace (@Columns, 'SubTotal','[SBT]')  

		    SET @Columns = Replace (@Columns, 'TaxCost','dbo.Fn_GetDefaultPriceRoundOff(TaxCost) TaxCost')   
		    SET @Columns = Replace (@Columns, 'ShippingCost','dbo.Fn_GetDefaultPriceRoundOff(ShippingCost) ShippingCost')
		    SET @Columns = Replace (@Columns, 'Total','dbo.Fn_GetDefaultPriceRoundOff(Total) Total')   
		    SET @Columns = Replace (@Columns, 'DiscountAmount','dbo.Fn_GetDefaultPriceRoundOff(DiscountAmount) DiscountAmount')   
		    SET @Columns = Replace (@Columns, 'OverDueAmount','dbo.Fn_GetDefaultPriceRoundOff(OverDueAmount) OverDueAmount')   
		    SET @Columns = Replace (@Columns, '[SBT]','dbo.Fn_GetDefaultPriceRoundOff(SubTotal) SubTotal')   
		   	    
		    SET @SQL = '
					    ;With Cte_Orders AS (
					    SELECT '+@Columns+'
					    FROM ZnodeOmsOrderDetails
					    WHERE 1=1
					    '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+'
						) 
					    SELECT * 
					    FROM Cte_Orders '
		    EXEC (@SQL)
		END 
		ELSE IF @ReportType = 'User' 
		BEGIN 
		SET @Columns = Replace (@Columns, 'BudgetAmount','dbo.Fn_GetDefaultPriceRoundOff(BudgetAmount) BudgetAmount')   
		SET @SQL = '
					;With Cte_User AS (
					SELECT '+@Columns+'
					FROM ZnodeUser 
					WHERE 1=1
					'+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+'
					 ) 
					SELECT * 
					FROM Cte_User '
		EXEC (@SQL)
		END 
		ELSE IF @ReportType = 'Pricing' 
		BEGIN 

			 SET @Columns = Replace (@Columns, 'SalesPrice','dbo.Fn_GetDefaultPriceRoundOff(SalesPrice) SalesPrice')   
			 SET @Columns = Replace (@Columns, 'RetailPrice','dbo.Fn_GetDefaultPriceRoundOff(RetailPrice) RetailPrice')
			 SET @Columns = Replace (@Columns, 'ActivationDate','ZP.ActivationDate ActivationDate')
			 SET @Columns = Replace (@Columns, 'ExpirationDate','ZP.ExpirationDate ExpirationDate')
			 SET @Columns = Replace (@Columns, 'PriceListCode','ZPL.ListCode PriceListCode')   

		

		SET @SQL = '
					;With Cte_Pricing AS (
					SELECT '+@Columns+'
					FROM ZnodePrice ZP Inner join ZnodePriceList ZPL ON ZP.PriceListId = ZPL.PriceListId
					WHERE 1=1
					'+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+' AND (ZP.PriceListId =  ' + CONVERT(Varchar(300), Isnull(@PriceListId ,0) ) + ' OR ' + CONVERT(Varchar(300), Isnull( @PriceListId,0) ) + '  = 0 ) 
					 ) 
					SELECT * 
					FROM Cte_Pricing '
		EXEC (@SQL)
		--print @SQL
		END 

	END TRY
	BEGIN CATCH
		  DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
			 @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetDynamicReport @WhereClause = '+@WhereClause+',@Columns='+@Columns+',@ReportType='+@ReportType+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@CatalogId='+CAST(isnull(@CatalogId,0) AS VARCHAR(50)) +',@PriceListId='+@PriceListId+',@WarehouseId='+@WarehouseId+',@CategoreyId='+@CategoreyId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetDynamicReport',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_GetPimCategoryProductList]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetPimCategoryProductList]
(   @WhereClause   XML,
    @Rows          INT           = 100,
    @PageNo        INT           = 1,
    @Order_BY      VARCHAR(1000) = '',
    @RowsCount     INT OUT,
    @LocaleId      INT           = 1,
    @PimCategoryId INT,
    @IsAssociated  BIT           = 0
	,@AttributeCode VARCHAR(max) = ''
	)
AS 
/*
     Summary :- This Procedure is used to get the product list for category products 
				The result is fetched order by DisplayOrder or status as per requirement in both asc and desc
				
     Unit Testing 
	 begin tran
     EXEC Znode_GetPimCategoryProductList '',@RowsCount = 0, @PimCategoryId = 22,@Order_BY ='DisplayOrder asc'
	 rollback tran
	*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX),
			  DisplayOrder INT
             );
			 DECLARE @TransferPimProductId TransferId 
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @TBL_FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @OrderByDisplay INT= 0;
             DECLARE @DefaultAttributeFamilyId INT= dbo.Fn_GetDefaultPimProductFamilyId(), @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             
			 DECLARE @TBL_ProductIdTable TABLE
             ([PimProductId] INT,
              [CountId]      INT,
              PimCategoryId  INT,
              RowId          INT
             );
             DECLARE @PimProductId VARCHAR(MAX)= '', @PimAttributeId VARCHAR(MAX),@OutPimProductIds VARCHAR(MAX);
             IF @Order_BY LIKE '%DisplayOrder%'
                 BEGIN
                     SET @OrderByDisplay = 1;
                 END;
             ELSE
             IF @Order_BY LIKE '%Status%'
                 BEGIN
                     SET @OrderByDisplay = 2;
                 END;
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

            INSERT INTO @TransferPimProductId
			SELECT PimProductId 
			FROM ZnodePimCategoryProduct ZCP
            WHERE ZCP.PimCategoryId = @PimCategoryId 
			ORDER BY CASE WHEN @Order_By LIKE '% DESC%'
            THEN 
			CASE WHEN @OrderByDisplay = 1 
					THEN ZCP.DisplayOrder 
				WHEN @OrderByDisplay = 2 
					THEN ZCP.Status
				 ELSE 1 END 
				 ELSE 1 END DESC,
            CASE WHEN @Order_By LIKE '% ASC%' 
				THEN
					CASE WHEN @OrderByDisplay = 1 
					THEN ZCP.DisplayOrder 
						WHEN @OrderByDisplay = 2
							THEN ZCP.Status
							 ELSE 1 END
							  ELSE 1 END 
	         IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId  )
			 BEGIN 
			   INSERT INTO @TransferPimProductId
			   SELECT '0'
			   SET @IsAssociated = 0 
             END 
		
		 


			 EXEC Znode_GetProductIdForPaging @whereClauseXML = @WhereClause,@Rows = @Rows,@PageNo = @PageNo,@Order_BY = @Order_BY,@RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,@AttributeCode = @AttributeCode,@PimProductId = @TransferPimProductId,@IsProductNotIn = @IsAssociated,@OutProductId = @OutPimProductIds OUT;
			 
			 INSERT INTO @TBL_ProductIdTable(PimProductId,RowId) 
			 SELECT item ,Id FROM dbo.split(@OutPimProductIds,',') SP 

             UPDATE @TBL_ProductIdTable SET PimCategoryId = @PimCategoryId;
             SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetGridPimAttributes]() FOR XML PATH('')), 2, 4000);
            
			 --INSERT INTO @TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
    --         EXEC Znode_GetAttributeDefaultValueLocale @PimAttributeId,@LocaleId;

             INSERT INTO @TBL_AttributeDetails(PimProductId, AttributeValue,AttributeCode,PimAttributeId)
             EXEC Znode_GetProductsAttributeValue @OutPimProductIds,@PimAttributeId,@LocaleId;

             --- find the specific attributes and values ---- 
    --         WITH Cte_UpdateDefaultAttributeValue 
			 --AS (SELECT PimProductId,AttributeCode,AttributeValue,SUBSTRING((SELECT ','+TBADV.AttributeDefaultValue 
			 --FROM @TBL_AttributeDefaultValue AS TBADV
    --         INNER JOIN ZnodePimAttribute AS TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId) 
			 --WHERE TBAC.AttributeCode = TBAD.AttributeCode
    --         AND EXISTS(SELECT TOP 1 1 FROM dbo.split(TBAD.AttributeValue, ',') AS SP WHERE Sp.item = TBADV.AttributeDefaultValueCode)
    --         FOR XML PATH('')), 2, 4000) AS AttributeDefaultValue 
			 
			 --FROM @TBL_AttributeDetails AS TBAD)
	
    --         UPDATE TBAD SET AttributeValue = CTUDAV.AttributeDefaultValue 
			 --FROM @TBL_AttributeDetails TBAD 
			 --INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV 
			 --ON(CTUDAV.PimProductId = TBAD.PimProductId AND CTUDAV.AttributeCode = TBAD.AttributeCode) WHERE AttributeDefaultValue IS NOT NULL;

			   ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue , SUBSTRING( ( SELECT ','+AttributeValue
			   FROM  @TBL_AttributeDetails AS TBAI
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) MediaIds  
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;
				


			 INSERT INTO @TBL_FamilyDetails(PimAttributeFamilyId,PimProductId)
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId] @PimProductId,1;

             UPDATE TFD SET FamilyName = ZPFL.AttributeFamilyName FROM @TBL_FamilyDetails TFD INNER JOIN ZnodePimFamilyLocale ZPFL 
			 ON(TFD.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId AND LocaleId = @LocaleId);

             UPDATE TFD SET FamilyName = ZPFL.AttributeFamilyName FROM @TBL_FamilyDetails TFD INNER JOIN ZnodePimFamilyLocale ZPFL
			 ON(TFD.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId AND LocaleId = @DefaultLocaleId) WHERE TFD.FamilyName IS NULL OR TFD.FamilyName = '';




             SELECT zpp.[PimProductId] AS [Productid],zpp.[PimProductId],ZPCP.[PimCategoryId],TBFD.FamilyName,[ProductName],[SKU],[ProductType],[Assortment],
             CASE WHEN ZPCP.Status IS NULL THEN CAST(0 AS BIT) ELSE CAST(ZPCP.Status AS BIT) END AS [Status],
			 piv.[ProductImage] [ImagePath],ZPCP.DisplayOrder 
			 
			 FROM @TBL_ProductIdTable AS zpp
			 LEFT JOIN ZnodePimCategoryProduct ZPCP ON(ZPCP.PimProductId = Zpp.PimProductId AND ZPCP.PimCategoryId = Zpp.PimCategoryId)
             INNER JOIN (SELECT PimProductId,AttributeValue,AttributeCode FROM @TBL_AttributeDetails) TB
			  PIVOT(MAX([AttributeValue]) 
			 FOR [AttributeCode] IN([ProductName],[IsActive],[ProductImage],[SKU],[ProductType],[Assortment])) AS Piv ON(Piv.[PimProductId] = zpp.[PimProductId])
             LEFT JOIN @TBL_FamilyDetails TBFD ON(TBFD.PimProductId = zpp.[PimProductId])
             ORDER BY CASE WHEN @Order_By LIKE '% DESC%' THEN CASE WHEN @OrderByDisplay = 1 THEN ZPCP.DisplayOrder 
			 WHEN @OrderByDisplay = 2 THEN ZPCP.Status ELSE 1 END ELSE 1 END DESC,
             CASE WHEN @Order_By LIKE '% ASC%' THEN CASE WHEN @OrderByDisplay = 1 THEN ZPCP.DisplayOrder
             WHEN @OrderByDisplay = 2 THEN ZPCP.Status ELSE 1 END ELSE 1 END,zpp.RowId;

         END TRY
         BEGIN CATCH
		  SELECT ERROR_MESSAGE()
            DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimCategoryProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimCategoryId='+CAST(@PimCategoryId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPimCategoryProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductbulk]...';


GO
-- SELECT * FROM ZnodePublishCataloglog
-- SELECT * FROM ZnodePublishedXML 
-- SELECT * FROM ZnodePublishProduct WHERE PublishProductId = 218 


ALTER PROCEDURE [dbo].[Znode_GetPublishProductbulk]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
With RECOMPILE
AS
-- EXEC Znode_GetPublishProductbulk 3, 0 , '' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

  DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
  DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
  DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
  DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
  DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
 DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 

 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
           
		     DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

			  
 
WHILE @Counter <= @maxCountId
BEGIN
 
  SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId

  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML ZPAX
  WHERE ZPAX.LocaleId = @DefaultLocaleId  
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  INSERT INTO @PimDefaultValueLocale 
   SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML ZX
  WHERE localeId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  
 
  
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 


  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
  
      
	 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )

		
  SET @versionId = (SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId) 

 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END 
 --;With Cte_GetData AS ( 
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
INTO #Cte_GetData
FROM View_LoadManageProductInternal a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN #TBL_AttributeVAlue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId AND CTE.LocaleId  = CASE WHEN cte.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
UNION ALL 
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
                 
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
UNION ALL 
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CAST(ISNULL((SELECT ''+CustomeFiledXML FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue
 
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT  ',' +MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     INNER JOIN #TBL_AttributeVAlue FTRE ON (FTRE.PimProductId = ZPAV.PimProductId AND FTRE.PimAttributeId = ZPAV.PimAttributeId  AND FTRE.LocaleId  = CASE WHEN FTRE.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
	 WHERE ZPPG.PimProductAttributeMediaId = FTRE.ZnodePimAttributeValueLocaleId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM @TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP  
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

  --CREATE INDEX IND_ZnodePublishInline_0999 ON Cte_GetData(PimProductId ASC)

  DELETE FROM ZnodePublishedXml WHERE PublishCatalogLogId = @versionId AND IsProductXML = 1   AND LocaleId = @LocaleId 

  --ALTER INDEX ALL ON ZnodePublishedXml  REBUILD WITH (FILLFACTOR = 80 ) 

  INSERT INTO ZnodePublishedXml (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)
SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
FROM  @TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId



DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
DROP TABLE #Cte_GetData
DROP TABLE #TBL_AttributeVAlue
SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_GetPublishSingleProduct]...';


GO
-- SELECT * FROM ZnodePublishCataloglog

-- SELECT * FROM ZnodePublishProduct WHERE PublishProductId = 218 


ALTER PROCEDURE [dbo].[Znode_GetPublishSingleProduct]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
AS
-- EXEC Znode_GetPublishProductbulk 0, 0 , '110' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 

 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 AND IsCatalogPublished =1
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
             DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

			 INSERT INTO @TBL_AttributeVAlueLocale
			 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId
			 FROM View_LoadManageProductInternal VIR
			 INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = VIR.PimProductId)
			 UNION ALL 
			 SELECT VIR.PimProductId,PimAttributeId,PimProductAttributeMediaId,ZPDE.LocaleId 
			 FROM ZnodePimAttributeValue  VIR
			 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
			 WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
 
WHILE @Counter <= @maxCountId
BEGIN
 SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId

  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML ZPAX
  WHERE ZPAX.LocaleId = @DefaultLocaleId  
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  INSERT INTO @PimDefaultValueLocale 
   SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML ZX
  WHERE localeId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  
  DECLARE @TBL_AttributeVAlue TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT  )
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
  

    INSERT INTO @TBL_AttributeVAlue
    SELECT PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId
	FROM @TBL_AttributeVAlueLocale
    WHERE LocaleId = @LocaleId

    
	INSERT INTO @TBL_AttributeVAlue
	SELECT VI.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId
	FROM @TBL_AttributeVAlueLocale VI 
    WHERE VI.LocaleId = @DefaultLocaleId 
	AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeVAlue  CTE WHERE CTE.PimProductId = VI.PimProductId AND CTE.PimAttributeId = VI.PimAttributeId )
 

	
INSERT INTO @TBL_ZnodeTempPublish  
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM View_LoadManageProductInternal a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_AttributeValue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId)
UNION ALL 
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
UNION ALL 
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CAST(ISNULL((SELECT ''+CustomeFiledXML FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue
 
FROM ZnodePimAttributeValue ZPAV  With (NoLock)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT ',' +MediaPath 
	FROM ZnodePimProductAttributeMedia ZPPG
	INNER JOIN  @TBL_AttributeVAlue TBLV ON (TBLV.PimProductId=  ZPAV.PimProductId AND TBLV.PimAttributeId = ZPAV.PimAttributeId )
    WHERE ZPPG.PimProductAttributeMediaId = TBLV.ZnodePimAttributeValueLocaleId
	FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue
 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM @TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP 
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

 DELETE FROM ZnodePublishedXML WHERE  IsProductXML = 1  AND LocaleId = @localeId 
								AND  EXISTS ( SELECT TOP 1 1 FROM  @TBL_PublishCatalogId  TBL WHERE TBL.VersionId  = ZnodePublishedXML.PublishCatalogLogId AND TBL.PublishProductId = ZnodePublishedXML.PublishedId)


;WITH CTE AS
(
SELECT ROW_NUMBER() OVER (PARTITION BY PimProductId	,AttributeCode
ORDER BY PimProductId	,AttributeCode) AS RN
FROM @TBL_ZnodeTempPublish
)

DELETE FROM CTE WHERE RN<>1

  
 MERGE INTO ZnodePublishedXML TARGET 
 USING (
 SELECT zpp.PublishProductId,zpp.VersionId ,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>''<SKULower>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM @TBL_ZnodeTempPublish TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue
FROM  @TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId
) SOURCE 
ON (
     TARGET.PublishCatalogLogId = SOURCE.versionId 
	 AND TARGET.PublishedId = SOURCE.PublishProductId
	 AND TARGET.IsProductXML = 1 
	 AND TARGET.LocaleId = @localeId 
)
WHEN MATCHED THEN 
UPDATE 
SET  PublishedXML = xmlvalue
   , ModifiedBy = @userId 
   ,ModifiedDate = @GetDate
WHEN NOT MATCHED THEN 
INSERT (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)

VALUES (SOURCE.versionid , Source.publishProductid,Source.xmlvalue,1,@localeid,@userId,@getDate,@userId,@getDate);

DELETE FROM @TBL_ZnodeTempPublish

DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
DELETE FROM @TBL_AttributeValue 

SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_ImportValidatePimProductData]...';


GO
ALTER PROCEDURE [dbo].[Znode_ImportValidatePimProductData]
(   @ImportHeadName     VARCHAR(200),
    @TableName          VARCHAR(200),
    @NewGUID            NVARCHAR(200),
    @TemplateId         INT,
    @UserId             INT,
    @LocaleId           INT           = 1,
    @IsCategory         INT           = 0,
    @DefaultFamilyId    INT           = 0,
    @ImportProcessLogId INT,
    @PriceListId        INT,
	@CountryCode VARCHAR(100) = '',
	@PimCatalogId         INT    = 0 ,
	@PortalId int = 0 )
AS
     SET NOCOUNT ON;

/*
    Summary :   Import PimProduct / Price / Inventory / Category / Category Associated Data 
    Process :   Admin site will upload excel / csv file in database and create global temporary table
				Procedure Znode_ImportValidatePimProductData will validate data with attribute validation rule
				If datatype validation issue found in input daata will logged into table "ZnodeImportLog"
				If Data is correct and record count in table ZnodeImportLog will be 0 then process for import data into Base tables
				To import data call procedure "Znode_ImportPimProductData"
    		  
				SourceColumnName: CSV file column headers
				TargetColumnName: Attributecode from ZnodePimAttribute Table (Consider those Attributecodes configured with default family only)
*/

     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             BEGIN TRAN TRN_ImportValidProductData;
             DECLARE @GetDate DATETIME= dbo.Fn_GetDate();
             DECLARE @SQLQuery NVARCHAR(MAX), @AttributeTypeName NVARCHAR(10), @AttributeCode NVARCHAR(300), @AttributeId INT, @IsRequired BIT, @SourceColumnName NVARCHAR(600), @ControlName VARCHAR(300), @ValidationName VARCHAR(100), @SubValidationName VARCHAR(300), @ValidationValue VARCHAR(300), @RegExp VARCHAR(300), @CreateDateString NVARCHAR(300), @DefaultLocaleId INT, @ImportHeadId INT, @CheckedSourceColumn NVARCHAR(600)= '', @Status BIT= 0;
             DECLARE @FamilyAttributeDetail TABLE
             (PimAttributeId       INT,
              AttributeTypeName    VARCHAR(300),
              AttributeCode        VARCHAR(300),
              SourceColumnName     NVARCHAR(600),
              IsRequired           BIT,
              PimAttributeFamilyId INT
             );
             DECLARE @AttributeDetail TABLE
             (PimAttributeId    INT,
              AttributeTypeName VARCHAR(300),
              AttributeCode     VARCHAR(300),
              SourceColumnName  NVARCHAR(600),
              IsRequired        BIT,
              ControlName       VARCHAR(300),
              ValidationName    VARCHAR(100),
              SubValidationName VARCHAR(300),
              ValidationValue   VARCHAR(300),
              RegExp            VARCHAR(300)
             );
		
             DECLARE @GlobalTempTableColumns TABLE(ColumnName NVARCHAR);
             IF NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM INFORMATION_SCHEMA.TABLES
                 WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '#InvalidDefaultData'
             )
                 CREATE TABLE #InvalidDefaultData
                 (RowNumber  INT,
                  Value      NVARCHAR(MAX),
                  ColumnName NVARCHAR(600)
                 );
             ELSE
             DROP TABLE #InvalidDefaultData;
             IF NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM INFORMATION_SCHEMA.TABLES
                 WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '#GlobalTempTableColumns'
             )
                 BEGIN

                     SET @SQLQuery = 'SELECT Column_Name, '''+@ImportHeadName+''' AS ImportHeadName  from tempdb.INFORMATION_SCHEMA.COLUMNS	where table_name = object_name(object_id('''+@TableName+'''),
					(select database_id from sys.databases where name = ''tempdb''))';
                     CREATE TABLE #GlobalTempTableColumns
                     (ColumnName   NVARCHAR(MAX),
                      TypeOfImport NVARCHAR(100)
                     );
                     INSERT INTO #GlobalTempTableColumns
                     (ColumnName,
                      TypeOfImport
                     )
                     EXEC sys.sp_sqlexec
                          @SQLQuery;
                 END;
		  -- If Exists ( Select  count(1)  from #GlobalTempTableColumns GROUP BY ColumnName  Having count(1) > 1 )
		  -- Begin
			 --   INSERT INTO ZnodeImportLog(ErrorDescription,ColumnName,Data,GUID,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,ImportProcessLogId)
    --               Select  46,ColumnName,'',@newGUID,@UserId,@GetDate,@UserId,@GetDate, @ImportProcessLogId  from #GlobalTempTableColumns GROUP BY ColumnName  Having count(1) > 1 
				
				----'Multiple occurance of column are not allow for'
		  -- END
             IF EXISTS
             (
                 SELECT TOP 1 1
                 FROM #GlobalTempTableColumns
                 WHERE ColumnName IN('PimCategoryId', 'PimProductId', 'RowNumber')
             )
                 BEGIN
                     INSERT INTO ZnodeImportLog
                     (ErrorDescription,
                      ColumnName,
                      Data,
                      GUID,
                      CreatedBy,
                      CreatedDate,
                      ModifiedBy,
                      ModifiedDate,
                      ImportProcessLogId
                     )
                     VALUES
                     (43,
                      '',
                      '',
                      @newGUID,
                      @UserId,
                      @GetDate,
                      @UserId,
                      @GetDate,
                      @ImportProcessLogId
                     );
                 END;
             SET @DefaultLocaleId = dbo.Fn_GetDefaultLocaleId();
             --Remove old error log 
             --DELETE FROM ZnodeImportLog WHERE ImportProcessLogId in (select ImportProcessLogId  FROM ZnodeImportProcessLog  WHERE ImportTemplateId  = @TemplateId )
             --GUID = @NewGUID;
             --Delete FROM ZnodeImportProcessLog  WHERE ImportTemplateId  = @TemplateId 
		  
             IF NOT EXISTS
             (
                 SELECT TOP 1 1  FROM ZnodeImportLog
                 WHERE Guid = @NewGUID
                       AND ErrorDescription IN(43, 42)
                 AND ImportProcessLogId = @ImportProcessLogId
             )
                 BEGIN
                     IF @ImportHeadName = 'Product'
                      BEGIN
						  IF @@VERSION LIKE '%Azure%' OR @@VERSION LIKE '%Express Edition%'
							  SET @SQLQuery = 'Alter table '+@TableName+' Add  RowNumber BIGINT Identity(1,1),PimProductId int null ';
						  ELSE 
							 SET @SQLQuery = 'Alter table '+@TableName+' Add  RowNumber BIGINT Identity(1,1),PimProductId int null Primary KEY CLUSTERED(RowNumber)';
						 
						  EXEC sys.sp_sqlexec @SQLQuery;
			         END;
                     ELSE
                     IF @ImportHeadName = 'Category'
                         BEGIN
							  IF @@VERSION LIKE '%Azure%' OR @@VERSION LIKE '%Express Edition%'
								SET @SQLQuery = 'Alter table '+@TableName+' Add  RowNumber BIGINT Identity(1,1),PimCategoryId int null ';
							  ElSE
								SET @SQLQuery = 'Alter table '+@TableName+' Add  RowNumber BIGINT Identity(1,1),PimCategoryId int null Primary KEY CLUSTERED(RowNumber) ';
						  
							  EXEC sys.sp_sqlexec @SQLQuery;
                         END;
                     ELSE
                         BEGIN
							IF @@VERSION LIKE '%Azure%' OR @@VERSION LIKE '%Express Edition%'
								SET @SQLQuery = 'Alter table '+@TableName+' Add  RowNumber BIGINT Identity(1,1) ';
							Else 
								SET @SQLQuery = 'Alter table '+@TableName+' Add  RowNumber BIGINT Identity(1,1) Primary KEY CLUSTERED(RowNumber)';
							
							EXEC sys.sp_sqlexec @SQLQuery;
                         END;;
                 END;
				
             --Generate new process for current import 
             --INSERT INTO ZnodeImportProcessLog(ImportTemplateId,Status,ProcessStartedDate,ProcessCompletedDate,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
             --SELECT @TemplateId,dbo.Fn_GetImportStatus(0),@GetDate,NULL,@UserId,@GetDate,@UserId,@GetDate;
             --SET @ImportProcessLogId = @@IDENTITY;

             SET @CreateDateString = CONVERT(VARCHAR(100), @UserId)+','''+CONVERT(VARCHAR(100), @GetDate)+''','+CONVERT(VARCHAR(100), @UserId)+','''+CONVERT(VARCHAR(100), @GetDate)+''', '+CONVERT(VARCHAR(100), @ImportProcessLogId);
             SELECT TOP 1 @ImportHeadId = ImportHeadId
             FROM ZnodeImportTemplate
             WHERE ImportTemplateId = @TemplateId;
             IF @DefaultFamilyId = 0
                AND @ImportHeadName IN('Product', 'Category')
                 BEGIN 
                     --Get all default attribute values in attribute 
                     INSERT INTO @FamilyAttributeDetail
                     (PimAttributeId,
                      AttributeTypeName,
                      AttributeCode,
                      SourceColumnName,
                      IsRequired,
                      PimAttributeFamilyId
                     )
                     --Call Process to insert data of defeult family with source column name and target column name 
                     EXEC Znode_ImportGetTemplateDetails
                          @TemplateId = @TemplateId,
                          @IsValidationRules = 0,
                          @IsIncludeRespectiveFamily = 1,
                          @IsCategory = @IsCategory,
                          @DefaultFamilyId = @DefaultFamilyId;
                 END;
             ELSE
             IF @ImportHeadName IN('Product', 'Category')
                 BEGIN
                     --Get all default attribute values in attribute 
                     INSERT INTO @FamilyAttributeDetail
                     (PimAttributeId,
                      AttributeTypeName,
                      AttributeCode,
                      SourceColumnName,
                      IsRequired,
                      PimAttributeFamilyId
                     )
                     --Call Process to insert data of defeult family with source column name and target column name 
                     EXEC Znode_ImportGetTemplateDetails
                          @TemplateId = @TemplateId,
                          @IsValidationRules = 0,
                          @IsIncludeRespectiveFamily = 1,
                          @IsCategory = @IsCategory,
                          @DefaultFamilyId = @DefaultFamilyId;
                 END;      
             -- Check attributes are manditory and not provided with source table
		   	 
			 if @TABLENAME	like '%tempdb..%'
				SET @SQLQuery = 'SELECT 42 AS ErrorDescription , SourceColumnName , '''' , '''+@NewGUID+''','+@CreateDateString+' from ZnodeImportTemplateMapping where ImportTemplateId = '+CONVERT(VARCHAR(100), @TemplateId)+' and ltrim(rtrim(SourceColumnName)) <> '''' AND ltrim(rtrim(SourceColumnName)) not in ( select isnull(Name ,'''') from tempdb.sys.columns where object_id = object_id('''+@TABLENAME+'''));';
			 else 
				SET @SQLQuery = 'SELECT 42 AS ErrorDescription , SourceColumnName , '''' , '''+@NewGUID+''','+@CreateDateString+' from ZnodeImportTemplateMapping where ImportTemplateId = '+CONVERT(VARCHAR(100), @TemplateId)+' and ltrim(rtrim(SourceColumnName)) <> '''' AND ltrim(rtrim(SourceColumnName)) not in ( select isnull(Name ,'''') from sys.columns where object_id = object_id('''+@TABLENAME+'''));';

  
     		 INSERT INTO ZnodeImportLog
             (ErrorDescription,
              ColumnName,
              Data,
              GUID,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate,
              ImportProcessLogId
             )
             EXEC sys.sp_sqlexec
                  @SQLQuery;
             IF NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM ZnodeImportLog
                 WHERE Guid = @NewGUID
                       AND ErrorDescription IN(43, 42)
                 AND ImportProcessLogId = @ImportProcessLogId
             )
                 BEGIN
                     --Get all default attribute values in attribute 
                     IF @ImportHeadName IN('Product', 'Category')
                         BEGIN
                             -- Check attributes are manditory and not provided with source table
                             INSERT INTO ZnodeImportLog
                             (ErrorDescription,
                              ColumnName,
                              Data,
                              GUID,
                              CreatedBy,
                              CreatedDate,
                              ModifiedBy,
                              ModifiedDate,
                              ImportProcessLogId
                             )
                                    SELECT '14' AS ErrorDescription,
                                           AttributeCode,
                                           '',
                                           @NewGUID,
                                           @UserId,
                                           @GetDate,
                                           @UserId,
                                           @GetDate,
                                           @ImportProcessLogId
                                    FROM @FamilyAttributeDetail
                                    WHERE ISNULL(SourceColumnName, '') = ''
                                          AND IsRequired = 1;  

                             -- Read all attribute details with their datatype
                             INSERT INTO @AttributeDetail
                             (PimAttributeId,
                              AttributeTypeName,
                              AttributeCode,
                              SourceColumnName,
                              IsRequired,
                              ControlName,
                              ValidationName,
                              SubValidationName,
                              ValidationValue,
                              RegExp
                             )
                             EXEC Znode_ImportGetTemplateDetails
                                  @TemplateId;
                             DELETE FROM @AttributeDetail
                             WHERE AttributeTypeName = 'Image'
                                   AND ValidationName <> 'IsAllowMultiUpload';
                             IF NOT EXISTS
                             (
                                 SELECT TOP 1 1
                                 FROM INFORMATION_SCHEMA.TABLES
                                 WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '#DefaultAttributeCode'
                             )
                                 BEGIN
                                     CREATE TABLE #DefaultAttributeCode
                                     (AttributeTypeName          VARCHAR(300),
                                      PimAttributeDefaultValueId INT,
                                      PimAttributeId             INT,
                                      AttributeDefaultValueCode  VARCHAR(100)
                                     );
                                     INSERT INTO #DefaultAttributeCode
                                     (AttributeTypeName,
                                      PimAttributeDefaultValueId,
                                      PimAttributeId,
                                      AttributeDefaultValueCode
                                     )
                                     --Call Process to insert default data value 
                                     EXEC Znode_ImportGetPimAttributeDefaultValue;
                                     DELETE FROM #DefaultAttributeCode
                                     WHERE AttributeTypeName = 'Yes/No';
                                 END;
                             ELSE
                                 BEGIN
                                     DROP TABLE #DefaultAttributeCode;
                                 END;
                         END;
                     ELSE
                         BEGIN
					
					
                             --Read all attribute details with their datatype
                             INSERT INTO @AttributeDetail
                             (AttributeTypeName,
                              AttributeCode,
                              SourceColumnName,
                              IsRequired,
                              ControlName,
                              ValidationName,
                              SubValidationName,
                              ValidationValue,
                              RegExp
                             )
                             EXEC [Znode_ImportGetOtherTemplateDetails]
                                  @TemplateId = @TemplateId,
                                  @ImportHeadId = @ImportHeadId;
						
                             --Check attributes are not mapped with any family of Pim Product
                             INSERT INTO ZnodeImportLog
                             (ErrorDescription,
                              ColumnName,
                              Data,
                              GUID,
                              CreatedBy,
                              CreatedDate,
                              ModifiedBy,
                              ModifiedDate,
                              ImportProcessLogId
                             )
                                    SELECT DISTINCT
                                           '14' AS ErrorDescription,
                                           AttributeCode,
                                           '',
                                           @NewGUID,
                                           @UserId,
                                           @GetDate,
                                           @UserId,
                                           @GetDate,
                                           @ImportProcessLogId
                                    FROM @AttributeDetail
                                    WHERE ISNULL(SourceColumnName, '') = '';

                         END;
				
                     --	Check attributes are not mapped with (Default / Other) family of Pim Product
                     --	INSERT INTO ZnodeImportLog ( ErrorDescription , ColumnName , Data , GUID , CreatedBy , CreatedDate , ModifiedBy , ModifiedDate , ImportProcessLogId)
                     --	SELECT '1' AS ErrorDescription , SourceColumnName , '' , @NewGUID , @UserId , @GetDate , @UserId , @GetDate , @ImportProcessLogId
                     --	FROM @AttributeDetail WHERE PimAttributeId NOT IN ( SELECT zpfgm.PimAttributeId FROM dbo.ZnodePimFamilyGroupMapper AS zpfgm);
                     --	Verify data in global temporary table (column wise)

                     DECLARE Cr_Attribute CURSOR LOCAL FAST_FORWARD
                     FOR SELECT PimAttributeId,
                                AttributeTypeName,
                                AttributeCode,
                                IsRequired,
                                SourceColumnName,
                                ControlName,
                                ValidationName,
                                SubValidationName,
                                ValidationValue,
                                RegExp
                         FROM @AttributeDetail
                         WHERE ISNULL(SourceColumnName, '') <> '';
                     OPEN Cr_Attribute;
                     FETCH NEXT FROM Cr_Attribute INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @ControlName, @ValidationName, @SubValidationName, @ValidationValue, @RegExp;
                     WHILE @@FETCH_STATUS = 0
                         BEGIN
                             IF @AttributeTypeName = 'Number'
                                 BEGIN
							      EXEC Znode_ImportValidateNumber
                                          @TableName = @TableName,
                                          @SourceColumnName = @SourceColumnName,
                                          @CreateDateString = @CreateDateString,
                                          @ValidationName = @ValidationName,
                                          @ControlName = @ControlName,
                                          @ValidationValue = @ValidationValue,
                                          @NewGUID = @NewGUID,
                                          @ImportHeadId = @ImportHeadId,
                                          @ImportProcessLogId = @ImportProcessLogId;
                                 END;
                             -- Check invalid date
                             IF @AttributeTypeName = 'Date'
                                 BEGIN
                                     EXEC Znode_ImportValidateDate
                                          @TableName = @TableName,
                                          @SourceColumnName = @SourceColumnName,
                                          @CreateDateString = @CreateDateString,
                                          @ValidationName = @ValidationName,
                                          @ControlName = @ControlName,
                                          @ValidationValue = @ValidationValue,
                                          @NewGUID = @NewGUID,
                                          @ImportHeadId = @ImportHeadId,
                                          @ImportProcessLogId = @ImportProcessLogId;
                                 END;
							-- Check Manditory Data
							IF @IsRequired = 1 AND @CheckedSourceColumn <> @SourceColumnName
								BEGIN
									SET @CheckedSourceColumn = @SourceColumnName;
									EXEC Znode_ImportValidateManditoryData
									@TableName = @TableName,
									@SourceColumnName = @SourceColumnName,
									@CreateDateString = @CreateDateString,
									@ValidationName = @ValidationName,
									@ControlName = @ControlName,
									@ValidationValue = @ValidationValue,
									@NewGUID = @NewGUID,
									@ImportHeadId = @ImportHeadId;
								END;
							--END 
                             IF @AttributeTypeName = 'Text'
                                 BEGIN
						              EXEC Znode_ImportValidateManditoryText
                                          @TableName = @TableName,
                                          @SourceColumnName = @SourceColumnName,
                                          @CreateDateString = @CreateDateString,
                                          @ValidationName = @ValidationName,
                                          @ControlName = @ControlName,
                                          @ValidationValue = @ValidationValue,
                                          @NewGUID = @NewGUID,
                                          @LocaleId = @LocaleId,
                                          @DefaultLocaleId = @DefaultLocaleId,
                                          @AttributeId = @AttributeId,
                                          @ImportProcessLogId = @ImportProcessLogId,
                                          @ImportHeadId = @ImportHeadId;
                                 END;
                             IF @AttributeTypeName = 'Image'
                                 BEGIN
                                     EXEC Znode_ImportValidateImageData
                                          @TableName = @TableName,
                                          @SourceColumnName = @SourceColumnName,
                                          @CreateDateString = @CreateDateString,
                                          @ValidationName = @ValidationName,
                                          @ControlName = @ControlName,
                                          @ValidationValue = @ValidationValue,
                                          @NewGUID = @NewGUID,
                                          @LocaleId = @LocaleId,
                                          @DefaultLocaleId = @DefaultLocaleId,
                                          @AttributeId = @AttributeId,
                                          @ImportProcessLogId = @ImportProcessLogId,
                                          @ImportHeadId = @ImportHeadId;
                                 END;
                             --Check Default data value is valid 
                             IF @ImportHeadName IN('Product', 'Category')
                                 BEGIN
                                     IF @AttributeId IN
                                     (
                                         SELECT PimAttributeId
                                         FROM #DefaultAttributeCode
                                     )
                                         BEGIN
							
                                                   ---Verify Image file is exists in media table or not 
                                             SET @SQLQuery = ' INSERT INTO #InvalidDefaultData (RowNumber, Value, ColumnName) 
                                             SELECT ROWNUMBER , (Select TOP 1 Item from dbo.split(' + @SourceColumnName + ','','')  SP WHERE NOT EXISTS 
                                             (Select ToP 1 1 FROM #DefaultAttributeCode DAC WHERE 
                                              DAC.AttributeTypeName <> ''Yes/No'' AND DAC.AttributeDefaultValueCode IS NOT NULL AND DAC.PimAttributeId = 
                                             ' + CONVERT(VARCHAR(100), @AttributeId) + ' AND ltrim(rtrim(SP.Item) ) = DAC.AttributeDefaultValueCode
                                             )), ''' + @SourceColumnName + ''' as [ColumnName]  FROM ' + @TableName
                                             + ' Where ISnull(' + @SourceColumnName +  ','''') <> '''''

						
                                             EXEC sys.sp_sqlexec @SQLQuery;
                                             -- Check Invalid Image 
                                             
											 SET @SQLQuery = 'SELECT ''9 '' ErrorDescription,'''+@SourceColumnName+''' as [ColumnName], 
                                             Value AS  AttributeValue,RowNumber ,'''+@NewGUID+''',  '+@CreateDateString+' FROM #InvalidDefaultData Where Value IS NOT NULL'
                                             INSERT INTO ZnodeImportLog (ErrorDescription, ColumnName, Data, RowNumber, GUID,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,ImportProcessLogId)
                                             EXEC sys.sp_sqlexec @SQLQuery;

											 Delete from #InvalidDefaultData

       
                                         END;
                                 END;
                             FETCH NEXT FROM Cr_Attribute INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @ControlName, @ValidationName, @SubValidationName, @ValidationValue, @RegExp;
                         END;
                     CLOSE Cr_Attribute;
                     DEALLOCATE Cr_Attribute;
                     --SELECT top 1 1 FROM @FamilyAttributeDetail where  iSNULL(SourceColumnName,'') = ''  and IsRequired = 1
                 END;
             COMMIT TRAN TRN_ImportValidProductData;
			 
  			 SET @SQLQuery = 'Delete FROM  '+@TableName+' Where Rownumber in (Select Rownumber from ZnodeImportLog  WHERE ImportProcessLogId = '+CONVERT(VARCHAR(100), @ImportProcessLogId)+' AND Rownumber is not null)';
             EXEC sys.sp_sqlexec  @SQLQuery;
			 

			 --SET @SQLQuery = 'Select * FROM  '+@TableName
    --         EXEC sys.sp_sqlexec  @SQLQuery;

             IF @ImportHeadName IN('Product', 'Category')
                 BEGIN
                     IF NOT EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @FamilyAttributeDetail
                         WHERE ISNULL(SourceColumnName, '') = ''
                               AND IsRequired = 1
                     ) AND NOT EXISTS
					 (
						 SELECT TOP 1 1
						 FROM ZnodeImportLog
						 WHERE Guid = @NewGUID
							   AND ErrorDescription IN(43, 42)
						 AND ImportProcessLogId = @ImportProcessLogId
					 )
                         BEGIN
                             IF @IsCategory = 0
                                 BEGIN
			
                                     EXEC Znode_ImportPimProductData
                                          @TableName = @TableName,
                                          @NewGUID = @NewGUID,
                                          @TemplateId = @TemplateId,
                                          @ImportProcessLogId = @ImportProcessLogId,
                                          @UserId = @UserId,
                                          @LocaleId = @LocaleId,
                                          @DefaultFamilyId = @DefaultFamilyId;

                                 END;
                             ELSE
                                 BEGIN
                                     EXEC Znode_ImportPimCategoryData
                                          @TableName = @TableName,
                                          @NewGUID = @NewGUID,
                                          @TemplateId = @TemplateId,
                                          @ImportProcessLogId = @ImportProcessLogId,
                                          @UserId = @UserId,
                                          @LocaleId = @LocaleId,
                                          @DefaultFamilyId = @DefaultFamilyId;
                                 END;
                         END;
                 END;
				IF NOT EXISTS
					 (
						 SELECT TOP 1 1
						 FROM ZnodeImportLog
						 WHERE Guid = @NewGUID
							   AND ErrorDescription IN(43, 42)
						 AND ImportProcessLogId = @ImportProcessLogId
					 )
             BEGIN
                 IF @ImportHeadName = 'Pricing'
                     BEGIN
                         EXEC [Znode_ImportPriceList]
                              @TableName = @TableName,
                              @Status = @Status,
                              @UserId = @UserId,
                              @ImportProcessLogId = @ImportProcessLogId,
                              @NewGUID = @NewGUID,
                              @PriceListId = @PriceListId;
                     END;
                 IF @ImportHeadName = 'Inventory'
                     BEGIN
				
                         EXEC Znode_ImportInventory_Ver1
                              @TableName = @TableName,
                              @Status = @Status,
                              @UserId = @UserId,
                              @ImportProcessLogId = @ImportProcessLogId,
                              @NewGUID = @NewGUID;
                     END;
                 IF @ImportHeadName = 'ZipCode'
                     BEGIN
						 EXEC Znode_ImportZipCode
                              @TableName = @TableName,
                              @Status = @Status,
                              @UserId = @UserId,
                              @ImportProcessLogId = @ImportProcessLogId,
                              @NewGUID = @NewGUID,
							  @CountryCode = @CountryCode;
                     END;
					 IF @ImportHeadName = 'CategoryAssociation'
                     BEGIN
						 EXEC Znode_ImportCatalogCategory
                              @TableName = @TableName,
                              @Status = @Status,
                              @UserId = @UserId,
                              @ImportProcessLogId = @ImportProcessLogId,
                              @NewGUID = @NewGUID,
							  @PimCatalogId = @PimCatalogId;
                     END;
					 IF @ImportHeadName = 'ProductAssociation'
                     BEGIN
						 EXEC Znode_ImportAssociateProducts
                              @TableName = @TableName,
                              @Status = @Status,
                              @UserId = @UserId,
                              @ImportProcessLogId = @ImportProcessLogId,
                              @NewGUID = @NewGUID
                     END;
			
					 IF @ImportHeadName = 'SEODetails' AND @PortalId > 0 
                     BEGIN
						 EXEC Znode_ImportSEODetails
                              @TableName = @TableName,
                              @Status = @Status,
                              @UserId = @UserId,
							  @LocaleId = @LocaleId,
							  @PortalId =@PortalId,
                              @ImportProcessLogId = @ImportProcessLogId,
                              @NewGUID = @NewGUID
				
                     END;
				 
             END;
             EXEC Znode_ImportReadErrorLog
                  @ImportProcessLogId = @ImportProcessLogId,
                  @NewGUID = @NewGUID;
             DROP TABLE #GlobalTempTableColumns;

             -- Finally call product insert process if error not found in error log table 
             IF EXISTS
             (
                 SELECT TOP 1 1
                 FROM ZnodeImportLog
                 WHERE ImportProcessLogId = @ImportProcessLogId
                       AND Guid = @NewGUID
             )
                 BEGIN
                     --Update process with completed status for current import 
                     UPDATE ZnodeImportProcessLog
                       SET
                           Status = dbo.Fn_GetImportStatus(3),
                           ProcessCompletedDate = @GetDate
                       WHERE ImportProcessLogId = @ImportProcessLogId;
                 END;
				 SET @SQLQuery = 'Drop Table ' + @TableName
                 EXEC sys.sp_sqlexec @SQLQuery;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE(),
                    ERROR_LINE(),
                    ERROR_PROCEDURE();
             EXEC Znode_ImportReadErrorLog
                  @ImportProcessLogId = @ImportProcessLogId,
                  @NewGUID = @NewGUID; 
             --Update process with failed status for current import 
             UPDATE ZnodeImportProcessLog
               SET
                   Status = dbo.Fn_GetImportStatus(3),
                   ProcessCompletedDate = @GetDate
             WHERE ImportProcessLogId = @ImportProcessLogId;
			 				 SET @SQLQuery = 'Drop Table ' + @TableName
                 EXEC sys.sp_sqlexec @SQLQuery;
             ROLLBACK TRAN TRN_ImportValidProductData;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProducts]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetPublishProducts](
	  @PublishCatalogId int= NULL
	  , @PublishCategoryId varchar(2000)= NULL
	  , @UserId int
	  , @NotReturnXML int= NULL
	  , @PimProductId varchar(2000)= ''
	  , @VersionId int= 0
	  , @IsDebug bit= 0
	  , @TokenId nvarchar(max)= ''
	  )
AS
    
/*
    Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

    Unit Testing
    
    SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
    SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
    SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
    SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
    select * from znodepublishcatalog
    SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
    SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
    SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = 0 ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 118,@IsDebug= 1 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = null,@UserId= 2 ,@NotReturnXML= NULL,@IsDebug= 1  ,@PimProductId = 103
    EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
    SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
    SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
 */

BEGIN
	
	BEGIN TRY
		SET NOCOUNT ON;
	
	           DECLARE @TBL_PublisshIds TABLE (PublishProductId INT , PimProductId INT , PublishCatalogId INT)
			   
	         IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			 BEGIN 

			 
			   INSERT INTO @TBL_PublisshIds 
			   EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId
			   
			   SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			   EXEC Znode_GetPublishSingleProduct @PublishCatalogId,@VersionId,@PimProductId,@userid

			  -- SELECT 	@PimProductId	
			 END 
			 ELSE 
			 BEGIN 
			  
			    EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId

				 EXEC Znode_GetPublishProductbulk @PublishCatalogId,@VersionId,@PimProductId,@userid
				 UPDATE ZnodePimProduct 
			     SET IsProductPublish = 1 
				 WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePublishProduct ZPP WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId AND ZPP.PublishCatalogId = @PublishCatalogId)
			 END 
			
		  

			 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT , VersionId INT );

			INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 LEFT JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId

			


			IF @PimProductId IS NOT NULL AND @PimProductId <> ''
			BEGIN
				SELECT PublishedXML ProductXml
				FROM ZnodePublishedXml ZPX
				WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLP WHERE TBLP.VersionId = ZPX.PublishCatalogLogId AND TBLP.PublishProductId = ZPX.PublishedId  )
				AND IsProductXML = 1
				;

				SELECT PublishProductId AS ProductXml
				FROM @TBL_PublishCatalogId
				GROUP BY PublishProductId;
			END
			UPDATE ZnodePublishCatalogLog 
			SET IsProductPublished = 1 
			    ,PublishProductId = (SELECT DISTINCT COUNT(PublishProductId) FROM ZnodePublishProduct ZPP WHERE ZPP.PublishCatalogId = ZnodePublishCatalogLog.PublishCatalogId  ) 
		    WHERE PublishCatalogLogId = @VersionId AND  @VersionId <> 0

			

			UPDATE ZnodePimProduct 
			SET IsProductPublish = 1 
			WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId)
			--END 
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE(), ERROR_PROCEDURE();
		UPDATE ZnodePublishCatalogLog 
	    SET IsCatalogPublished = 0 
		WHERE PublishCatalogLogId = @VersionId
		DECLARE @Status bit;
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PublishCatalogId = '+CAST(@PublishCatalogId AS varchar(max))+',@PublishCategoryId='+@PublishCategoryId+',@UserId='+CAST(@UserId AS Varchar(50))+',@NotReturnXML='+CAST(@NotReturnXML AS Varchar(50))+',@UserId = '+CAST(@UserId AS Varchar(50))+',@PimProductId='+CAST(@PimProductId AS Varchar(50))+',@VersionId='+CAST(@VersionId AS Varchar(50))+',@TokenId='+CAST(@TokenId AS varchar(max))+',@Status='+CAST(@Status AS varchar(10));
		SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		ROLLBACK TRAN GetPublishProducts;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_GetPublishProducts', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Refreshing [dbo].[Fn_GetRecurciveUserId]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Fn_GetRecurciveUserId]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPublishAssociatedProducts]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPublishAssociatedProducts]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPimCatalogAssociatedCategory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPimCatalogAssociatedCategory]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPimCategoryDetail]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPimCategoryDetail]';


GO
PRINT N'Refreshing [dbo].[Znode_ManageProductListByAttributes]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_ManageProductListByAttributes]';


GO
PRINT N'Refreshing [dbo].[Znode_GetTaxlClassDetail]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetTaxlClassDetail]';


GO
PRINT N'Refreshing [dbo].[Znode_GetCatalogCategoryProducts]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetCatalogCategoryProducts]';


GO
PRINT N'Refreshing [dbo].[Znode_GetSkuListForInventoryAndPrice]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetSkuListForInventoryAndPrice]';


GO
PRINT N'Refreshing [dbo].[Znode_GetZnodeShippingDetails]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetZnodeShippingDetails]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPaymentSetting]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPaymentSetting]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPromotionByPublishProductId]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPromotionByPublishProductId]';


GO
PRINT N'Refreshing [dbo].[Znode_GetShippingList]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetShippingList]';


GO
PRINT N'Refreshing [dbo].[Znode_GetShippingRuleList]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetShippingRuleList]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_Dashboard]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_Dashboard]';


GO
PRINT N'Checking existing data against newly created constraints';


GO



GO
ALTER TABLE [dbo].[ZnodeBlogNews] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogNews_ZnodeMedia];

ALTER TABLE [dbo].[ZnodeBlogNews] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogNews_ZnodePortal];

ALTER TABLE [dbo].[ZnodeBlogNewsComment] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogComment_ZnodeBlogNews];

ALTER TABLE [dbo].[ZnodeBlogNewsComment] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogComment_ZnodeUser];

ALTER TABLE [dbo].[ZnodeBlogNewsCommentLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogCommentLocale_ZnodeBlogComment];

ALTER TABLE [dbo].[ZnodeBlogNewsContent] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogNewsContent_ZnodeBlogNews];

ALTER TABLE [dbo].[ZnodeBlogNewsLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogNewsLocale_ZnodeBlogNews];

ALTER TABLE [dbo].[ZnodeBlogNewsLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeBlogNewsLocale_ZnodeCMSContentPages];


GO
PRINT N'Update complete.';


GO
/*
Deployment script for Znode_Multifront_90_ga_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;

GO
ALTER TABLE [dbo].[ZnodeOmsOrderDetails] DROP COLUMN [AutoAddonSKU];

GO
ALTER TABLE [dbo].[ZnodeOmsOrderLineItems] ADD [AutoAddonSKU] NVARCHAR (MAX) NULL;

GO
ALTER PROCEDURE [dbo].[Znode_GetInventoryBySkus]
( @SKUs     NVARCHAR(MAX),
  @PortalId VARCHAR(2000))
AS 
  /* 
    Summary: This procedure is used to get inventory details of sku portal wise    		   
    Unit Testing   
     EXEC Znode_GetInventoryBySkus @SKUs='ap1234,LI001',@PortalId=1
 
   */ 
	 BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @TBL_SKUs TABLE(SKU NVARCHAR(MAX));
             DECLARE @TBL_PortalIds TABLE(PortalId INT);

             INSERT INTO @TBL_SKUs
                    SELECT item
                    FROM dbo.split(@SKUs, ',');

             INSERT INTO @TBL_PortalIds
                    SELECT item
                    FROM dbo.split(@PortalId, ',');

             DECLARE @TLB_SKUSumInventory TABLE
             (SKU          VARCHAR(600),
              Quantity     NUMERIC(28, 6),
              ReOrderLevel NUMERIC(28, 6),
              PortalId     INT
             );

             DECLARE @TBL_AllwareHouseToportal TABLE
             (WarehouseId       INT,
              PortalId          INT,
              PortalWarehouseId INT
             );

             INSERT INTO @TBL_AllwareHouseToportal
                    SELECT zpw.WarehouseId,zp.PortalId,zpw.PortalWarehouseId
                    FROM [dbo].ZnodePortal AS zp
                         INNER JOIN [ZnodePortalWarehouse] AS zpw ON(zpw.PortalId = zp.PortalId)
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM @TBL_PortalIds AS tp
                        WHERE tp.PortalId = zp.PortalId
                    );
             INSERT INTO @TBL_AllwareHouseToportal
                    SELECT zpaw.WarehouseId,a.PortalId,zpaw.PortalWarehouseId
                    FROM [dbo].[ZnodePortalAlternateWarehouse] AS zpaw
                         INNER JOIN @TBL_AllwareHouseToportal AS a ON(zpaw.PortalWarehouseId = a.PortalWarehouseId);

             SELECT zi.SKU,SUM(ISNULL(zi.Quantity, 0)) AS Quantity,SUM(ISNULL(Zi.ReOrderLevel, 0)) AS ReOrderLevel,zpw.PortalId
             FROM @TBL_AllwareHouseToportal AS zpw
                  INNER JOIN @TBL_AllwareHouseToportal AS ziw ON(ziw.WarehouseId = zpw.WarehouseId)
                  INNER JOIN [dbo].[ZnodeInventory] AS ZI ON(zi.WarehouseId = ziw.WarehouseId)
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_SKUs AS ts
                 WHERE (SELECT ''+zi.SKU FOR XML PATH ('')) = ts.SKU
             )
             GROUP BY zi.SKU, zpw.PortalId;
                     
         END TRY
         BEGIN CATCH
            DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetInventoryBySkus @SKUs = '+@SKUs+',@PortalId='+@PortalId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetInventoryBySkus',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductbulk]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPublishProductbulk]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
With RECOMPILE
AS
-- EXEC Znode_GetPublishProductbulk 3, 0 , '' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

  DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
  DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
  DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
  DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
  DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
 DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 

 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
           
		     DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

			  
 
WHILE @Counter <= @maxCountId
BEGIN
 
  SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId

  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML ZPAX
  WHERE ZPAX.LocaleId = @DefaultLocaleId  
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  INSERT INTO @PimDefaultValueLocale 
   SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML ZX
  WHERE localeId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  
 
  
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 


  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
  
      
	 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  UNION ALL 
	 SELECT VIR.PimProductId,PimAttributeId,PimProductAttributeMediaId,ZPDE.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
	 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
		
  SET @versionId = (SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId) 

 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END 
 --;With Cte_GetData AS ( 
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
INTO #Cte_GetData
FROM View_LoadManageProductInternal a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN #TBL_AttributeVAlue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId AND CTE.LocaleId  = CASE WHEN cte.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
UNION ALL 
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
                 
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
UNION ALL 
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML+'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue
 
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT ',' +MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     WHERE ZPPG.PimAttributeValueId = ZPAV.PimAttributeValueId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue
 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
INNER JOIN #TBL_AttributeVAlue FTRE ON (FTRE.PimProductId = ZPAV.PimProductId AND FTRE.PimAttributeId = ZPAV.PimAttributeId  AND FTRE.LocaleId  = CASE WHEN FTRE.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM @TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP  
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

  --CREATE INDEX IND_ZnodePublishInline_0999 ON Cte_GetData(PimProductId ASC)

  DELETE FROM ZnodePublishedXml WHERE PublishCatalogLogId = @versionId AND IsProductXML = 1   AND LocaleId = @LocaleId 

  --ALTER INDEX ALL ON ZnodePublishedXml  REBUILD WITH (FILLFACTOR = 80 ) 

  INSERT INTO ZnodePublishedXml (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)
SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
FROM  @TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId



DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
DROP TABLE #Cte_GetData
DROP TABLE #TBL_AttributeVAlue
SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductPricingBySku]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetPublishProductPricingBySku]
(   @SKU            VARCHAR(MAX),
    @PortalId       INT,
    @currentUtcDate VARCHAR(100), -- this date is required for the user date r
    @UserId         INT          = 0, -- userid is optional 
    @PublishProductId TransferId READONLY,
	@IsDebug        BIT          = 0
	)
AS 
   /* 
    --Summary: Retrive Price of product from pricelist
    --Input Parameters:
    --UserId, SKU(Comma separated multiple), PortalId
    --Conditions :
    --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --2. If There is no any PriceList having given sku associated to profile  then check for  
    --PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --4. If There is no any PriceList having given sku associated to user  then check for  
    --PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --5. If There is no any PriceList having given sku associated to account  then check for  
    --PriceList associated Profile having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --6. If There is no any PriceList having given sku associated to Profile  then check for  
    --PriceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --7. If in each case Precedence is same then get PriceList according to higher PriceListId ActivationDate and ExpirationDate for PriceList and SKU also.
    --8. Also get the Tier Price, Tier Quantity of given sku.
    --Unit Testing   
    --Exec Znode_GetPublishProductPricingBySku  @SKU = 'Levi''s T-Shirt & Jeans - Bundle Product',@PortalId = 1, @currentUtcDate = '2016-07-31 00:00:00.000'
	*/
    
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );

			  DECLARE @DefaultLocaleId INT = dbo.FN_GETDEFAULTLocaleId()

			 IF @SKU = '' 
			 BEGIN 
			  INSERT INTO @Tlb_SKU(SKU)
			  	SELECT (SELECT ''+SKU FOR XML PATH('')) 
					FROM ZnodePublishProductDetail a
					INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId )
					WHERE LocaleId = @DefaultLocaleId

			 END 
			 ELSE 
			 BEGIN
			   INSERT INTO @Tlb_SKU(SKU)
                    SELECT Item
                    FROM Dbo.split(@SKU, ',');
			  

			 END 

           
             DECLARE @TLB_SKUPRICELIST TABLE
             (SKU          VARCHAR(100),
              RetailPrice  NUMERIC(28, 6),
              SalesPrice   NUMERIC(28, 6),
              PriceListId  INT,
              TierPrice    NUMERIC(28, 6),
              TierQuantity NUMERIC(28, 6)
             );
             DECLARE @PriceListId INT, @PriceRoundOff INT;
             SELECT @PriceRoundOff = CONVERT( INT, FeatureValues)
             FROM ZnodeGlobalSetting
             WHERE FeatureName = 'PriceRoundOff';
		
             --Retrive portal wise pricelist  
             DECLARE @Tbl_PortalWisePriceList TABLE
             (PriceListId    INT,
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              Precedence     INT,
			  SKU NVARCHAR(300)
             );
             --Retrive price for respective pricelist   
             DECLARE @Tbl_PriceListWisePrice TABLE
             (PriceListId    INT,
              SKU            VARCHAR(300),
              SalesPrice     NUMERIC(28, 6),
              RetailPrice    NUMERIC(28, 6),
              UomId          INT,
              UnitSize       NUMERIC(28, 6),
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              TierPrice      NUMERIC(28, 6),
              TierQuantity   NUMERIC(28, 6),
              TierUomId      INT,
              TierUnitSize   NUMERIC(28, 6)
			 
             );
			 DECLARE @Tbl_SKUWisePriceList TABLE (PriceListId INT, SKU NVARCHAR(300))

			 insert into @Tbl_SKUWisePriceList(PriceListId,SKU) 
			 SELECT  PriceListId,SKU from ZnodePrice where (SELECT ''+SKU FOR XML PATH('')) in (Select SKU from @Tlb_SKU )
			 Union
			 SELECT PriceListId,SKU  from ZnodePriceTier where (SELECT ''+SKU FOR XML PATH('')) in (Select SKU from @Tlb_SKU )
			 
			 --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
            IF @UserId = 0
                 BEGIN
					INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
					SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
					FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
						ON b.PortalProfileId = c.PortalProfileID AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
						inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
					WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId
					ORDER BY b.Precedence;
		
			 
                     --2. If There is no any PriceList having given sku associated to profile  then check for PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
			IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
							INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId 
							inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
							AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
							WHERE @CurrentUtcDate BETWEEN a.ActivationDate 
							AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							ORDER BY b.Precedence
							;
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						
                         END;
                 END;
                     --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
             ELSE
                 BEGIN
				 
                     INSERT INTO @Tbl_PortalWisePriceList (PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
                            SELECT a.PriceListId, ActivationDate,ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                            FROM ZnodePriceList AS a INNER JOIN ZnodePriceListUser AS b ON a.PriceListId = b.PriceListId
                                 INNER JOIN ZnodePortalunit zupu ON a.CurrencyId = zupu.CurrencyId AND zupu.PortalId = @PortalId
								 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                            WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.UserID = @UserId
							ORDER BY b.Precedence ;

                --4. If There is no any PriceList having given sku associated to user  then check for PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
						BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
								   SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), c.Precedence,tsw.SKU
								   FROM ZnodePriceList AS a INNER JOIN ZnodePriceListAccount AS c ON a.PriceListId = c.PriceListId
										INNER JOIN ZnodeUser AS d ON c.Accountid = d.Accountid INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId 
										AND zupu.PortalId = @PortalId
										inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								   WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND d.UserID = @UserId
									ORDER BY c.Precedence
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						 END;
                     -- 5. If There is no any PriceList having given sku associated to account  then check for PriceList associated Profile having PortalId and having higher   Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
				where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
                             INSERT INTO @Tbl_PortalWisePriceList(PriceListId,ActivationDate,ExpirationDate,Precedence,SKU)
                                    SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                                    FROM ZnodePriceList AS a
                                         INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId 
										 INNER JOIN ZnodePortalProfile AS c ON b.PortalProfileId = c.PortalProfileId  AND c.PortalId = @PortalId 
                                         INNER JOIN dbo.ZnodeUserProfile zup ON c.ProfileId = zup.ProfileId AND IsDefault = 1
                                         INNER JOIN ZnodePortalunit zupu ON a.CurrencyId = zupu.CurrencyId AND zupu.PortalId = @PortalId
										 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                                    WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND zup.UserId = @UserId;
									--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )

					     END;
                   

                     ---6. If There is no any PriceList having given sku associated to Profile  then check for priceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
                  				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
								where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
								INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId AND  zupu.PortalId = b.PortalId
								inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							    ORDER BY b.Precedence
								;
								--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
                         END;
						 
				--IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				--WHERE tspl.SKU = tpwl.SKU))
				--BEGIN
				
				--	INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
				--	SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
				--	FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
				--	ON b.ProfileId = c.ProfileId AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
				--	inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
				--	AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
				--	WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId;
				--END

                 END;
			
             SET @PriceListId = 0;
             -- Check Activation date and expiry date 
             IF EXISTS( SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList)
                 BEGIN
				
                     -- Declare  @d datetime
                     -- SET @d = @GetDate
                     -- Select ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ),b.Precedence,* from ZnodePriceList  a inner join ZnodePriceListPortal b on a.PriceListId = b.PriceListId where @d between ISNULL(ActivationDate,@d) 
                     -- and ISNULL(ExpirationDate,@GetDate ) --and a.PriceListId <>  80
                     -- Order by ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ) ,  b.Precedence DESC 
                     --	Retrive pricelist wise price
                   INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize )
				   SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize
				   FROM [ZnodePrice] AS ZP 
				   INNER JOIN @Tlb_SKU AS TSKU ON (SELECT ''+ZP.SKU FOR XML PATH ('')) = TSKU.SKU 
				   LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND ZP.PriceListId = ZPT.PriceListId
				   WHERE ZP.PriceListId IN
				   (
					   SELECT TOP 1 PriceListId
					   FROM @Tbl_PortalWisePriceList AS TBPWPL
					   WHERE  TBPWPL.SKU = ZP.SKU
					   ORDER BY Precedence 
				   );
				  


                     -- Check Activation date and expiry date 
                    INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					   SELECT DISTINCT  PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity
					   FROM @Tbl_PriceListWisePrice
					   WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					   
					  
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					   SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity
					   FROM @Tbl_PriceListWisePrice
					   WHERE SKU NOT IN(SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null 
				
                 END;
                     -- Retrive data as per precedance from ZnodePriceListPortal table  
					
             ELSE
                 BEGIN
                     SET @PriceListId =( SELECT TOP 1 PriceListId FROM @Tbl_PortalWisePriceList ORDER BY Precedence  );

                     --Retrive pricelist wise price  
                     INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize )
					 SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), 
							ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize
					 FROM [ZnodePrice] AS ZP INNER JOIN @Tlb_SKU AS TSKU ON ZP.SKU = TSKU.SKU LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND 
							   ZP.PriceListId = ZPT.PriceListId WHERE ZP.PriceListId = @PriceListId; 

                     -- Check Activation date and expiry date 
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity
					FROM @Tbl_PriceListWisePrice WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity )
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity FROM @Tbl_PriceListWisePrice
					WHERE SKU NOT IN ( SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null;

                 END;
             SELECT SKU,
                    ROUND(RetailPrice, @PriceRoundOff) AS RetailPrice,
                    ROUND(SalesPrice, @PriceRoundOff) AS SalesPrice,
                    ROUND(TierPrice, @PriceRoundOff) AS TierPrice,
                    ROUND(TierQuantity, @PriceRoundOff) AS TierQuantity,
                    ZC.CurrencyCode,
                    Zc.CurrencySuffix
             FROM @TLB_SKUPRICELIST AS TSPL
                  INNER JOIN ZnodePriceList AS ZPL ON TSPL.PriceListId = ZPL.PriceListId
                  INNER JOIN ZnodeCurrency AS ZC ON ZPL.CurrencyId = ZC.CurrencyId
				  ORDER BY TierQuantity ASC;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishProductPricingBySku @SKU = '+@SKU+',@PortalId = '+CAST(@PortalId AS VARCHAR(10))+',@currentUtcDate = '+@currentUtcDate+',@UserId='+CAST(@UserId AS VARCHAR(100))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPublishProductPricingBySku',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishSingleProduct]...';


GO
-- SELECT * FROM ZnodePublishCataloglog

-- SELECT * FROM ZnodePublishProduct WHERE PublishProductId = 218 


ALTER PROCEDURE [dbo].[Znode_GetPublishSingleProduct]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
AS
-- EXEC Znode_GetPublishProductbulk 0, 0 , '110' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 

 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 AND IsCatalogPublished =1
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
             DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

			 INSERT INTO @TBL_AttributeVAlueLocale
			 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId
			 FROM View_LoadManageProductInternal VIR
			 INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = VIR.PimProductId)
			 UNION ALL 
			 SELECT VIR.PimProductId,PimAttributeId,PimProductAttributeMediaId,ZPDE.LocaleId 
			 FROM ZnodePimAttributeValue  VIR
			 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
			 WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
 
WHILE @Counter <= @maxCountId
BEGIN
 SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId

  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML ZPAX
  WHERE ZPAX.LocaleId = @DefaultLocaleId  
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  INSERT INTO @PimDefaultValueLocale 
   SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML ZX
  WHERE localeId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  
  DECLARE @TBL_AttributeVAlue TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT  )
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
  

    INSERT INTO @TBL_AttributeVAlue
    SELECT PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId
	FROM @TBL_AttributeVAlueLocale
    WHERE LocaleId = @LocaleId

    
	INSERT INTO @TBL_AttributeVAlue
	SELECT VI.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId
	FROM @TBL_AttributeVAlueLocale VI 
    WHERE VI.LocaleId = @DefaultLocaleId 
	AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeVAlue  CTE WHERE CTE.PimProductId = VI.PimProductId AND CTE.PimAttributeId = VI.PimAttributeId )
 

	
INSERT INTO @TBL_ZnodeTempPublish  
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM View_LoadManageProductInternal a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_AttributeValue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId)
UNION ALL 
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
UNION ALL 
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML +'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue
 
FROM ZnodePimAttributeValue ZPAV  With (NoLock)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT ',' +MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     WHERE ZPPG.PimAttributeValueId = ZPAV.PimAttributeValueId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue
 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
INNER JOIN  @TBL_AttributeVAlue TBLV ON (TBLV.PimProductId=  ZPAV.PimProductId AND TBLV.PimAttributeId = ZPAV.PimAttributeId )
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM @TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP 
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

 DELETE FROM ZnodePublishedXML WHERE  IsProductXML = 1  AND LocaleId = @localeId 
								AND  EXISTS ( SELECT TOP 1 1 FROM  @TBL_PublishCatalogId  TBL WHERE TBL.VersionId  = ZnodePublishedXML.PublishCatalogLogId AND TBL.PublishProductId = ZnodePublishedXML.PublishedId)


;WITH CTE AS
(
SELECT ROW_NUMBER() OVER (PARTITION BY PimProductId	,AttributeCode
ORDER BY PimProductId	,AttributeCode) AS RN
FROM @TBL_ZnodeTempPublish
)

DELETE FROM CTE WHERE RN<>1

  
 MERGE INTO ZnodePublishedXML TARGET 
 USING (
 SELECT zpp.PublishProductId,zpp.VersionId ,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU><SKULower>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM @TBL_ZnodeTempPublish TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue
FROM  @TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId
) SOURCE 
ON (
     TARGET.PublishCatalogLogId = SOURCE.versionId 
	 AND TARGET.PublishedId = SOURCE.PublishProductId
	 AND TARGET.IsProductXML = 1 
	 AND TARGET.LocaleId = @localeId 
)
WHEN MATCHED THEN 
UPDATE 
SET  PublishedXML = xmlvalue
   , ModifiedBy = @userId 
   ,ModifiedDate = @GetDate
WHEN NOT MATCHED THEN 
INSERT (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)

VALUES (SOURCE.versionid , Source.publishProductid,Source.xmlvalue,1,@localeid,@userId,@getDate,@userId,@getDate);

DELETE FROM @TBL_ZnodeTempPublish

DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
DELETE FROM @TBL_AttributeValue 

SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_GetSKUInventoryList]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetSKUInventoryList]
(   @WhereClause VARCHAR(1000),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT,
    @LocaleId    INT           = 1)
AS 
    /*
    Summary : this procedure is used to Get the inventory list by sku 
    Unit Testing 
     EXEC Znode_GetSKUInventoryList  '' ,@RowsCount= 1,@PageNo= 1 ,@Rows = 100
     SELECT * FROM ZnodePublishProduct WHERE PimProductid  = 4
    */
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_InventoryList TABLE (InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300)
			 ,Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6),ProductName NVARCHAR(max),RowId INT,CountNo INT);

             DECLARE @DefaultLocaleId VARCHAR(100)= Dbo.Fn_GetDefaultValue('Locale');
             SET @SQL = '
						DECLARE @TBL_ZnodeInventoryList TABLE (InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300),Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6) )
						DECLARE @TBL_InventoryListFindProduct TABLE (InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300),Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6),ProductName NVARCHAR(max),LocaleId INT  )				
						DECLARE @TBL_InventorySKU TABLE (PimProductId INT ,InventoryId INT,SKU VARCHAR(600) )
						
						--INSERT INTO @TBL_ZnodeInventoryList
						--SELECT ZI.InventoryId,ZI.WarehouseId,ZW.WarehouseCode,ZW.WarehouseName,ZI.SKU,ZI.Quantity,ZI.ReOrderLevel
						--FROM ZnodeInventory ZI 
						--INNER JOIN ZnodeWarehouse ZW ON (ZW.WarehouseId = ZI.WarehouseId) 
				 								
						--INSERT INTO @TBL_InventorySKU 
						;With  Cte_getSKUDetails AS
						(
						SELECT PimProductId,AttributeCode,(SELECT ''''+ZAVL.AttributeValue FOR XML PATH('''')) AttributeValue,LocaleId
						FROM ZnodePimAttributeValue ZAV				 
						INNER JOIN  ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZAV.PimAttributeId )
						INNER JOIN ZnodePimAttributeValueLocale ZAVL ON (ZAVL.PimAttributeValueId = ZAV.PimAttributeValueId )
						WHERE ZPA.AttributeCode IN ( ''SKU'',''ProductName'')	
						--GROUP BY PimProductId	
						)	
						, CTE_InventoryListMain AS (				 
						SELECT  CTE.PimProductId , CTEI.AttributeValue ProductName,ZW.WarehouseCode,ZW.WarehouseName , CTEI.LocaleId,SKU,SPN.InventoryId,SPN.WarehouseId
						,SPN.Quantity,SPN.ReOrderLevel
						FROM Cte_getSKUDetails CTE
						INNER JOIN Cte_getSKUDetails CTEI ON (CTEI.PimProductId = CTE.Pimproductid AND CTEI.AttributeCode = ''ProductName'' )
						INNER JOIN ZnodeInventory  SPN ON ((SELECT ''''+SPN.SKU FOR XML PATH(''''))  = CTE.AttributeValue)
						INNER JOIN ZnodeWarehouse ZW ON (ZW.WarehouseId = SPN.WarehouseId) 
						WHERE CTE.AttributeCode = ''SKU''
						AND  CTEI.LocaleId  IN ('+@DefaultLocaleId+','+CAST(@LocaleId AS VARCHAR(100))+')) 
				
						, CTE_InventoryListProductNameWithLocale AS 
						(SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
						FROM CTE_InventoryListMain 
						WHERE LocaleId =  '+CAST(@LocaleId AS VARCHAR(100))+'	) 

						,CTE_InventoryListWithSKU AS 
						(SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName 
						FROM CTE_InventoryListProductNameWithLocale pl
						UNION ALL
						SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
						FROM CTE_InventoryListMain ZL
						WHERE LocaleId =  '+@DefaultLocaleId+'
						AND NOT EXISTS (SELECT TOP 1 1 FROM CTE_InventoryListProductNameWithLocale ZS WHERE ZS.SKU = ZL.SKU AND ZS.InventoryId = ZL.InventoryId)
						)
                
						,CTE_ListDetailForPaging AS 
						(SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
						,'+dbo.Fn_GetPagingRowId(@Order_BY,'InventoryId DESC')+',Count(*)Over() CountNo 
						FROM CTE_InventoryListWithSKU
						WHERE 1=1 
						 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+')
				
						SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,dbo.Fn_Trim(SKU)SKU,Quantity,ReOrderLevel,dbo.Fn_Trim(ProductName)ProductName,RowId,CountNo
						FROM CTE_ListDetailForPaging 
						'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			PRINT @SQL

				--SElect @SQL
				INSERT INTO @TBL_InventoryList(InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName,RowId,CountNo)
				EXEC (@SQL);

            SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_InventoryList), 0);

            SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
			FROM @TBL_InventoryList;
           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSKUInventoryList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSKUInventoryList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ImportAttributes]...';

GO 
IF EXISTS (SELECT TOP 1 1 FROM SYS.Procedures WHERE Name = 'Znode_ImportAttributes')
BEGIN 
 
 DROP PROC Znode_ImportAttributes

END 

GO

CREATE PROCEDURE [dbo].[Znode_ImportAttributes](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Attribute Code Name and their default input validation rule other 
	--			  flag will be inserted as default we need to modify front end
	
	-- Unit Testing: 

	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate(), @LocaleId int  ;
		SELECT @LocaleId = DBO.Fn_GetDefaultLocaleId();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertPimAtrribute TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, AttributeName varchar(300), AttributeCode varchar(300), AttributeType varchar(300), DisplayOrder int, GUID nvarchar(400)
			--,
			--Index Ind_AttributeCode (AttributeCode)
		);
		DECLARE @InsertedPimAttributeIds TABLE (PimAttributeId int ,AttributeTypeId int,AttributeCode nvarchar(300))
		
		SET @SSQL = 'Select RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID FROM '+@TableName;
		INSERT INTO @InsertPimAtrribute( RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID)
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @AttributeCode TABLE
		( 
		   AttributeCode nvarchar(300)--, Index Ins_AttributeCode (AttributeCode)
		);
		INSERT INTO @AttributeCode
			   SELECT AttributeCode
			   FROM ZnodePimAttribute 

		-- Start Functional Validation 
		
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeCode NOT in 
			   (
				   SELECT AttributeCode FROM @AttributeCode  where AttributeCode is not null 
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'AttributeType', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeType NOT in 
			   (
				   SELECT AttributeTypeName  FROM ZnodeAttributeType  where IsPimAttributeType = 1 
			   );
		-- End Function Validation 	
		-----------------------------------------------
		-- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertPimAtrribute
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
		);
		
		--- Insert data into base table ZnodePimatrribute with their validation 

		INSERT INTO ZnodePimAttribute (AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined
			,IsConfigurable,IsPersonalizable,IsShowOnGrid,DisplayOrder,HelpDescription,IsCategory,IsHidden,IsSwatch,
			CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
		OUTPUT Inserted.PimAttributeId,Inserted.AttributeTypeId,Inserted.AttributeCode INTO @InsertedPimAttributeIds  
		
		SELECT ZAT.AttributeTypeId,AttributeCode, 1 IsRequired , 1 IsLocalizable,1 IsFilterable, 0 IsSystemDefined, 0 IsConfigurable,
		0 IsPersonalizable,  1 IsShowOnGrid , DisplayOrder, 'Imported Data' HelpDescription ,0  IsCategory , 0 IsHidden , 0 IsSwatch,
		@UserId , @GetDate ,@UserId , @GetDate from @InsertPimAtrribute IPA INNER JOIN ZnodeAttributeType ZAT 
		ON IPA.AttributeType = ZAT.AttributeTypeName 
		
		
		INSERT INTO ZnodePimAttributeLocale (LocaleId,PimAttributeId,AttributeName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select @LocaleId ,IPAS.PimAttributeId, IPA.AttributeName, '', @UserId , @GetDate ,@UserId , @GetDate   
		 FROM @InsertedPimAttributeIds IPAS INNER JOIN @InsertPimAtrribute IPA ON IPAS.AttributeCode= IPA.AttributeCode 
		
		INSERT INTO ZnodePimAttributeValidation
		(PimAttributeId,InputValidationId,InputValidationRuleId,Name,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		SELECT IPA.PimAttributeId,ZAIV.InputValidationId,NULL,null , @UserId , @GetDate ,@UserId , @GetDate  
		FROM @InsertedPimAttributeIds IPA INNER JOIN ZnodeAttributeInputValidation ZAIV ON IPA.AttributeTypeId = ZAIV.AttributeTypeId

		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET STATUS = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;
		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportCatalogCategory]...';


GO

ALTER PROCEDURE [dbo].[Znode_ImportCatalogCategory](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Catalog Category Product association
	
	-- Unit Testing : 
	--BEGIN TRANSACTION;
	--update ZnodeGlobalSetting set FeatureValues = '5' WHERE FeatureName = 'InventoryRoundOff' 
	--    DECLARE @status INT;
	--    EXEC [Znode_ImportInventory] @InventoryXML = '<ArrayOfImportInventoryModel>
	-- <ImportInventoryModel>
	--   <SKU>S1002</SKU>
	--   <Quantity>999998.33</Quantity>
	--   <ReOrderLevel>10</ReOrderLevel>
	--   <RowNumber>1</RowNumber>
	--   <ListCode>TestInventory</ListCode>
	--   <ListName>TestInventory</ListName>
	-- </ImportInventoryModel>
	--</ArrayOfImportInventoryModel>' , @status = @status OUT , @UserId = 2;
	--    SELECT @status;
	--    ROLLBACK TRANSACTION;
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertCatalogCategory TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300), CategoryName varchar(200), DisplayOrder int, IsActive bit, GUID nvarchar(400)
			--,
			--Index Ind_SKU1 (SKU),Index Ind_CategoryName (CategoryName)
		);

		DECLARE @CategoryAttributId int;

		SET @CategoryAttributId =
		(
			SELECT TOP 1 PimAttributeId
			FROM ZnodePimAttribute AS ZPA
			WHERE ZPA.AttributeCode = 'CategoryName' AND 
				  ZPA.IsCategory = 1
		);

		DECLARE @InventoryListId int;

		SET @SSQL = 'Select RowNumber,SKU,CategoryName,DisplayOrder ,IsActive,GUID FROM '+@TableName;
		INSERT INTO @InsertCatalogCategory( RowNumber, SKU, CategoryName, DisplayOrder, IsActive, GUID )
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @SKU TABLE
		( 
		   SKU nvarchar(300), PimProductId int--, Index Ins_SKU (SKU)
		);
		INSERT INTO @SKU
			   SELECT b.AttributeValue, a.PimProductId
			   FROM ZnodePimAttributeValue AS a
					INNER JOIN
					ZnodePimAttributeValueLocale AS b
					ON a.PimAttributeId = dbo.Fn_GetProductSKUAttributeId() AND 
					   a.PimAttributeValueId = b.PimAttributeValueId;


		DECLARE @CategoryName TABLE
		( 
			CategoryName nvarchar(300), PimCategoryId int -- index ind_101 (CategoryName)
		);
		INSERT INTO @CategoryName
			   SELECT ZPCAL.CategoryValue, ZPCA.PimCategoryId
			   FROM ZnodePimCategoryAttributeValue AS ZPCA
					INNER JOIN
					ZnodePimCategoryAttributeValueLocale AS ZPCAL
					ON ZPCA.PimAttributeId = 5 AND 
					ZPCA.PimCategoryAttributeValueId = ZPCAL.PimCategoryAttributeValueId;
					
		-- start Functional Validation 
		
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertCatalogCategory AS ii
			   WHERE ii.SKU NOT in 
			   (
				   SELECT SKU FROM @SKU  where SKU is not null 
			   );
		
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'CategoryName', CategoryName, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertCatalogCategory AS ii
			   WHERE ii.CategoryName NOT in 
			   (
				   SELECT CategoryName FROM @CategoryName  where CategoryName is not null 
			   );
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertCatalogCategory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

			
		IF(ISNULL(@PimCatalogId, 0) <> 0)
		BEGIN
			WITH Cte_CategorySKUAssociation
				 AS(SELECT SKU.PimProductId, 
				   (Select top 1 PimCategoryId from @CategoryName where ICC.CategoryName = CategoryName )  
				   PimCategoryId
				   , DisplayOrder, IsActive FROM @InsertCatalogCategory AS ICC INNER JOIN @SKU AS SKU ON ICC.SKU = SKU.SKU)
				 MERGE INTO ZnodePimCatalogCategory TARGET
				 USING Cte_CategorySKUAssociation SOURCE
				 ON( TARGET.PimCategoryId = SOURCE.PimCategoryId AND 
					 Target.PimCatalogId = @PimCatalogId
				   )
				 WHEN MATCHED
					   THEN UPDATE SET TARGET.PimProductId = SOURCE.PimProductId, TARGET.IsActive = SOURCE.IsActive, TARGET.DisplayOrder = SOURCE.DisplayOrder, TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate
				 WHEN NOT MATCHED
					   THEN INSERT(PimCatalogId, PimCategoryId, PimProductId, IsActive, DisplayOrder, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) VALUES( @PimCatalogId, SOURCE.PimCategoryId, SOURCE.PimProductId, SOURCE.IsActive, SOURCE.DisplayOrder, @UserId, @GetDate, @UserId, @GetDate );
		END;
		ELSE
		BEGIN
			
			  Declare @ZnodePimCategoryProduct TABLE (PimProductId int , PimCategoryId int , Status bit , DisplayOrder int) 
			  	
			  insert into @ZnodePimCategoryProduct (PimProductId , PimCategoryId , Status , DisplayOrder )
			  SELECT SKU.PimProductId, (Select top 1 PimCategoryId from @CategoryName where ICC.CategoryName = CategoryName )  PimCategoryId
				 , IsActive , DisplayOrder FROM @InsertCatalogCategory AS ICC INNER JOIN	 @SKU AS SKU ON ICC.SKU = SKU.SKU 
			
			  INSERT into ZnodePimCategoryProduct ( PimProductId, PimCategoryId, Status, DisplayOrder, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
			  Select TABL.PimProductId, TABL.PimCategoryId, TABL.Status, TABL.DisplayOrder,@UserId, @GetDate, @UserId, @GetDate   from @ZnodePimCategoryProduct TABL    
			  Where NOT EXISTS (Select top 1 1 from ZnodePimCategoryProduct ZPCP where ZPCP.PimProductId = TABL.PimProductId and  ZPCP.PimCategoryId = TABL.PimCategoryId)

		END;										 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportSEODetails]...';
GO 

IF EXISTS (SELECT TOP 1 1 FROM SYS.Procedures WHERE Name = 'Znode_ImportSEODetails')
BEGIN 
 
 DROP PROC Znode_ImportSEODetails

END 

GO

CREATE  PROCEDURE [dbo].[Znode_ImportSEODetails](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @LocaleId int= 0,@PortalId int ,@CsvColumnString nvarchar(max))
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import SEO Details
	
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 

		-- Three type of import required three table varible for product , category and brand
		DECLARE @InsertSEODetails TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		DECLARE @InsertSEODetailsOFProducts TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		DECLARE @InsertSEODetailsOFCategory TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		DECLARE @InsertSEODetailsOFBrand TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		
		DECLARE @InsertedZnodeCMSSEODetail TABLE
		( 
			CMSSEODetailId int , SEOId int, CMSSEOTypeId int
		);
		
		--SET @SSQL = 'Select RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID  FROM '+@TableName;
		SET @SSQL = 'Select RowNumber,'+@CsvColumnString+',GUID  FROM '+@TableName;

		
		INSERT INTO @InsertSEODetails(RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID )
		EXEC sys.sp_sqlexec @SSQL;
	

		SET @SSQL = 'Select RowNumber,' +@CsvColumnString +',GUID  FROM '+@TableName
		+ ' Where ImportType = ''Product'' ';
		INSERT INTO @InsertSEODetailsOFProducts(  RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation	,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords	, GUID )
		EXEC sys.sp_sqlexec @SSQL;

		SET @SSQL = 'Select RowNumber,' +@CsvColumnString +',GUID  FROM '+@TableName
		+ ' Where ImportType = ''Category'' ';
		INSERT INTO @InsertSEODetailsOFCategory( RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords	, GUID )
		EXEC sys.sp_sqlexec @SSQL;

		SET @SSQL = 'Select RowNumber,' +@CsvColumnString +',GUID  FROM '+@TableName
		+ ' Where ImportType = ''Brand'' ';
		INSERT INTO @InsertSEODetailsOFBrand( RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation	,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords	, GUID )
		EXEC sys.sp_sqlexec @SSQL;


	    -- start Functional Validation 
		--1. Product
		--2. Category
		--3. Content Page
		--4. Brand
		-----------------------------------------------

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'ImportType', ImportType, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetails AS ii
			   WHERE ii.ImportType NOT in 
			   (
				   Select NAME from ZnodeCMSSEOType where NAME <> 'Content Page'
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFProducts AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select SKU from ZnodePublishProductDetail ZPPD
					INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
					INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
					AND ZPC.PortalId  = @PortalId AND SKU is not null 
			   )  AND ImportType = 'Product';


		
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'Category', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFCategory AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select PublishCategoryName from ZnodePublishCategoryDetail ZPPD
				   	INNER JOIN ZnodePublishCategory ZPP ON ZPP.PublishCategoryId = ZPPD.PublishCategoryId
					INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
				   where ZPPD.PublishCategoryName is not null  AND   ZPC.PortalId = @PortalId
			   )  AND ImportType = 'Category';

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'Brand', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFBrand AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select BrandCode from ZnodeBrandDetails 
			   )  AND ImportType = 'Brand';
		
		
		--Note : Content page import is not required 
		
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  

		DELETE FROM @InsertSEODetailsOFProducts
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		DELETE FROM @InsertSEODetailsOFCategory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		DELETE FROM @InsertSEODetailsOFBrand
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		-- Insert Product Data 
		If Exists (Select top 1 1 from @InsertSEODetailsOFProducts)
		Begin
			Update ZCSD SET ZCSD.IsRedirect = ISD.IsRedirect ,
						   ZCSD.MetaInformation =  ISD.MetaInformation,
						   ZCSD.SEOUrl=  ISD.SEOUrl
			FROM 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId = ZPPD.PublishProductId
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = ZCSD.PortalId
			where  ZCSD.PortalId  =@PortalId;
			
			Update ZCSDL SET ZCSDL.SEOTitle = ISD.SEOTitle
							,ZCSDL.SEODescription = ISD.SEODescription
							,ZCSDL.SEOKeywords= ISD.SEOKeywords
 			FROM 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId = ZPPD.PublishProductId
			INNER JOIN ZnodeCMSSEODetailLocale ZCSDL ON ZCSD.CMSSEODetailId = ZCSDL.CMSSEODetailId
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = ZCSD.PortalId
			where  ZCSD.PortalId  =@PortalId AND ZCSDL.LocaleId = @LocaleId; 

			Delete from @InsertedZnodeCMSSEODetail
			INSERT INTO ZnodeCMSSEODetail(CMSSEOTypeId,SEOId,IsRedirect,MetaInformation,PortalId,SEOUrl,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
			OUTPUT Inserted.CMSSEODetailId,Inserted.SEOId,Inserted.CMSSEOTypeId INTO @InsertedZnodeCMSSEODetail
		
			Select Distinct 1,ZPPD.PublishProductId , ISD.IsRedirect,ISD.MetaInformation,@PortalId,ISD.SEOUrl,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
			where  ZPC.PortalId  =@PortalId AND
			 NOT EXISTS (Select TOP 1 1 from ZnodeCMSSEODetail ZCSD where ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId  = ZPPD.PublishProductId
			 and  ZCSD .PortalId =@PortalId   );
		
        	insert into ZnodeCMSSEODetailLocale(CMSSEODetailId,LocaleId,SEOTitle,SEODescription,SEOKeywords,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			Select Distinct IZCSD.CMSSEODetailId,@LocaleId,ISD.SEOTitle,ISD.SEODescription,ISD.SEOKeywords,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertedZnodeCMSSEODetail IZCSD INNER JOIN ZnodePublishProductDetail ZPPD ON IZCSD.SEOId = ZPPD.PublishProductId AND IZCSD.CMSSEOTypeId =1  
											 INNER JOIN @InsertSEODetailsOFProducts ISD ON ZPPD.SKU = ISD.Code 
											 INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
											 INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
			where  ZPC.PortalId  =@PortalId 
		END

		-- Insert Category Data 
		
		If Exists (Select top 1 1 from @InsertSEODetailsOFCategory)
		Begin

			Update ZCSD SET ZCSD.IsRedirect = ISD.IsRedirect ,
						   ZCSD.MetaInformation =  ISD.MetaInformation,
						   ZCSD.SEOUrl=  ISD.SEOUrl
			FROM 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId = ZPPD.PublishCategoryId
			where  ZCSD.PortalId  =@PortalId;
			
			Update ZCSDL SET ZCSDL.SEOTitle = ISD.SEOTitle
							,ZCSDL.SEODescription = ISD.SEODescription
							,ZCSDL.SEOKeywords= ISD.SEOKeywords
 			FROM 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId = ZPPD.PublishCategoryId
			INNER JOIN ZnodeCMSSEODetailLocale ZCSDL ON ZCSD.CMSSEODetailId = ZCSDL.CMSSEODetailId
			where  ZCSD.PortalId  =@PortalId AND ZCSDL.LocaleId = @LocaleId; 

			Delete from @InsertedZnodeCMSSEODetail
			INSERT INTO ZnodeCMSSEODetail(CMSSEOTypeId,SEOId,IsRedirect,MetaInformation,PortalId,SEOUrl,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
			OUTPUT Inserted.CMSSEODetailId,Inserted.SEOId,Inserted.CMSSEOTypeId INTO @InsertedZnodeCMSSEODetail
		
			Select Distinct 2,ZPPD.PublishCategoryId , ISD.IsRedirect,ISD.MetaInformation,@PortalId,ISD.SEOUrl,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodePublishCategory ZPP ON ZPP.PublishCategoryId = ZPPD.PublishCategoryId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = @PortalId
			where NOT EXISTS (Select TOP 1 1 from ZnodeCMSSEODetail ZCSD where ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId  = ZPPD.PublishCategoryId AND ZCSD.PortalId = @PortalId );
		


			insert into ZnodeCMSSEODetailLocale(CMSSEODetailId,LocaleId,SEOTitle,SEODescription,SEOKeywords,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			Select Distinct IZCSD.CMSSEODetailId,@LocaleId,ISD.SEOTitle,ISD.SEODescription,ISD.SEOKeywords,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertedZnodeCMSSEODetail IZCSD INNER JOIN ZnodePublishCategoryDetail ZPPD ON IZCSD.SEOId = ZPPD.PublishCategoryId AND IZCSD.CMSSEOTypeId =2  
											 INNER JOIN @InsertSEODetailsOFCategory ISD ON ZPPD.PublishCategoryName = ISD.Code 
		END
										 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProducts]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPublishProducts](
	  @PublishCatalogId int= NULL
	  , @PublishCategoryId varchar(2000)= NULL
	  , @UserId int
	  , @NotReturnXML int= NULL
	  , @PimProductId varchar(2000)= ''
	  , @VersionId int= 0
	  , @IsDebug bit= 0
	  , @TokenId nvarchar(max)= ''
	  )
AS
    
/*
    Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

    Unit Testing
    
    SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
    SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
    SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
    SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
    select * from znodepublishcatalog
    SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
    SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
    SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = 0 ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 41,@IsDebug= 1 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = null,@UserId= 2 ,@NotReturnXML= NULL,@IsDebug= 1  ,@PimProductId = 103
    EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
    SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
    SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
 */

BEGIN
	
	BEGIN TRY
		SET NOCOUNT ON;
	
	           DECLARE @TBL_PublisshIds TABLE (PublishProductId INT , PimProductId INT , PublishCatalogId INT)
			   
	         IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			 BEGIN 

			 
			   INSERT INTO @TBL_PublisshIds 
			   EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId
			   
			   SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			   EXEC Znode_GetPublishSingleProduct @PublishCatalogId,@VersionId,@PimProductId,@userid

			  -- SELECT 	@PimProductId	
			 END 
			 ELSE 
			 BEGIN 
			  
			    EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId

				 EXEC Znode_GetPublishProductbulk @PublishCatalogId,@VersionId,@PimProductId,@userid
				 UPDATE ZnodePimProduct 
			     SET IsProductPublish = 1 
				 WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePublishProduct ZPP WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId AND ZPP.PublishCatalogId = @PublishCatalogId)
			 END 
			
		  

			 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT , VersionId INT );

			INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 LEFT JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId

			


			IF @PimProductId IS NOT NULL AND @PimProductId <> ''
			BEGIN
				SELECT PublishedXML ProductXml
				FROM ZnodePublishedXml ZPX
				WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLP WHERE TBLP.VersionId = ZPX.PublishCatalogLogId AND TBLP.PublishProductId = ZPX.PublishedId  )
				AND IsProductXML = 1
				;

				SELECT PublishProductId AS ProductXml
				FROM @TBL_PublishCatalogId
				GROUP BY PublishProductId;
			END
			UPDATE ZnodePublishCatalogLog 
			SET IsProductPublished = 1 
			    ,PublishProductId = (SELECT DISTINCT COUNT(PublishProductId) FROM ZnodePublishProduct ZPP WHERE ZPP.PublishCatalogId = ZnodePublishCatalogLog.PublishCatalogId  ) 
		    WHERE PublishCatalogLogId = @VersionId AND  @VersionId <> 0

			

			UPDATE ZnodePimProduct 
			SET IsProductPublish = 1 
			WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId)
			--END 
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE(), ERROR_PROCEDURE();
		UPDATE ZnodePublishCatalogLog 
	    SET IsCatalogPublished = 0 
		WHERE PublishCatalogLogId = @VersionId
		DECLARE @Status bit;
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PublishCatalogId = '+CAST(@PublishCatalogId AS varchar(max))+',@PublishCategoryId='+@PublishCategoryId+',@UserId='+CAST(@UserId AS Varchar(50))+',@NotReturnXML='+CAST(@NotReturnXML AS Varchar(50))+',@UserId = '+CAST(@UserId AS Varchar(50))+',@PimProductId='+CAST(@PimProductId AS Varchar(50))+',@VersionId='+CAST(@VersionId AS Varchar(50))+',@TokenId='+CAST(@TokenId AS varchar(max))+',@Status='+CAST(@Status AS varchar(10));
		SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		ROLLBACK TRAN GetPublishProducts;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_GetPublishProducts', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Refreshing [dbo].[ZnodeReport_DashboardSalesOrders]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_DashboardSalesOrders]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_DashboardSalesTables]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_DashboardSalesTables]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_DashboardTopBrands]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_DashboardTopBrands]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_DashboardTopCategory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_DashboardTopCategory]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_DashboardTopProducts]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_DashboardTopProducts]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetAffiliateFiltered]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetAffiliateFiltered]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetCouponFiltered]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetCouponFiltered]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetFrequentUsers]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetFrequentUsers]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetOrderPicklist]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetOrderPicklist]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetPopularProductFiltered]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetPopularProductFiltered]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetRecurringOrder]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetRecurringOrder]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetRecurringOrderItem]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetRecurringOrderItem]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetTaxFiltered]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetTaxFiltered]';


GO
PRINT N'Refreshing [dbo].[Znode_GetRMAOrderLineItem]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetRMAOrderLineItem]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteOrderById]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteOrderById]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteShipping]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteShipping]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteUserDetails]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteUserDetails]';


GO
PRINT N'Refreshing [dbo].[Znode_GetOmsOrderLineItemRMARequestReport]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetOmsOrderLineItemRMARequestReport]';


GO
PRINT N'Refreshing [dbo].[Znode_GetOmsRMAOrderLineItem]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetOmsRMAOrderLineItem]';


GO
PRINT N'Refreshing [dbo].[Znode_GetRMAOrderLineItemByOmsOrderDetailsId]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetRMAOrderLineItemByOmsOrderDetailsId]';


GO
PRINT N'Refreshing [dbo].[Znode_GetOrderHistory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetOrderHistory]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_Dashboard]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_Dashboard]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetOrderDetails]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetOrderDetails]';


GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetOrderLineItemByOrderId]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetOrderLineItemByOrderId]';


GO
PRINT N'Refreshing [dbo].[Znode_DeletePortalByPortalId]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeletePortalByPortalId]';


GO
PRINT N'Refreshing [dbo].[Znode_CouponExistInOrder]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_CouponExistInOrder]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteTaxClass]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteTaxClass]';


GO
PRINT N'Refreshing [dbo].[Znode_GetOrderRMAFlag]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetOrderRMAFlag]';


GO
PRINT N'Refreshing [dbo].[Znode_RevertOrderInventory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_RevertOrderInventory]';


GO
PRINT N'Refreshing [dbo].[Znode_ReturnOrderLineItem]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_ReturnOrderLineItem]';


GO
PRINT N'Refreshing [dbo].[Znode_CopyPortal]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_CopyPortal]';


GO
PRINT N'Refreshing [dbo].[Znode_GetSkuPricebyCatalog]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetSkuPricebyCatalog]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteAccount]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteAccount]';


GO
PRINT N'Refreshing [dbo].[Znode_ImportValidatePimProductData]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_ImportValidatePimProductData]';


GO
PRINT N'Checking existing data against newly created constraints';


GO



GO
ALTER TABLE [dbo].[ZnodePortalSmtpSetting] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSMTPSettings_ZnodePortal];


GO
PRINT N'Update complete.';


GO
        
GO

---- Start Default Data updation       

		UPDATE [dbo].[ZnodeDomain] SET [DomainName]=N'admin.multifront902.localhost.com' WHERE [DomainName] = 'admin.multifront901.localhost.com'
UPDATE [dbo].[ZnodeDomain] SET [DomainName]=N'webstore.multifront902.localhost.com' WHERE [DomainName] = 'webstore.multifront901.localhost.com'
UPDATE [dbo].[ZnodeDomain] SET [DomainName]=N'api.multifront902.localhost.com' WHERE[DomainName] = 'api.multifront901.localhost.com'
UPDATE [dbo].[ZnodeDomain] SET [DomainName]=N'winewebstore.multifront902.localhost.com' WHERE [DomainName] = 'winewebstore.multifront901.localhost.com'
UPDATE [dbo].[ZnodeDomain] SET [DomainName]=N'nutswebstore.multifront902.localhost.com' WHERE [DomainName] = 'nutswebstore.multifront901.localhost.com'


UPDATE [dbo].[ZnodeActionMenu] SET [MenuId]=3 WHERE [ActionMenuId] in 
(select [ActionMenuId] from [ZnodeActionMenu]  ZAM Inner join ZnodeMenu ZM ON ZAM.MenuId = ZM.MenuId and ZM.MenuName = 'Pages'  WHERE ZAM.[ActionId]  in (
select ActionId from [ZnodeActions]      WHERE ControllerName = 'WebSite' AND ActionName = 'GetAssociatedProductList' ))

Begin 
	DEclare @ActionId int, @MenuId int 
	Select @MenuId = MenuId from ZnodeMenu where MenuName = 'Catalogs'  
	INSERT INTO [dbo].[ZnodeActions] ([AreaName], [ControllerName], [ActionName], [IsGlobalAccess], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) 
	VALUES ( N'PIM', N'Catalog', N'CreateScheduler', 0, 2, '20170622 00:00:00.000', 2, '20170622 00:00:00.000')
	SET @ActionId  = @@IDENTITY
	INSERT INTO [dbo].[ZnodeMenuActionsPermission] ([MenuId], [ActionId], [AccessPermissionId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) 
	VALUES ( @MenuId, @ActionId, 2, 2, '20170622 12:07:23.150', 2, '20170622 12:07:23.150')
	INSERT INTO [dbo].[ZnodeActionMenu] ([MenuId], [ActionId], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) VALUES
	(@MenuId, @ActionId, 2, '20170622 00:00:00.000', 2, '20170622 00:00:00.000')

	INSERT INTO [dbo].[ZnodeActions] ([AreaName], [ControllerName], [ActionName], [IsGlobalAccess], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate])
	   VALUES ( N'MediaManager', N'Attributes', N'IsAttributeDefaultValueCodeExist', 0, 2, '20170717 15:27:30.883', 2, '20170717 15:27:30.883')
END 

GO

INSERT INTO [dbo].[ZnodeMultifront] ( [VersionName], [Descriptions], [MajorVersion], [MinorVersion], [LowerVersion], [BuildVersion], [PatchIndex], [CreatedBy], 
[CreatedDate], [ModifiedBy], [ModifiedDate]) 
VALUES ( N'Znode_Multifront_9_0_2', N'Upgrade GA Realese by 902', 9, 0, 2, 90251, 0, 2, '20170729 11:20:23.167', 2, '20170729 11:20:23.167')

GO

/*
This script performs its actions in the following order:
1. Disable foreign-key constraints.
2. Perform DELETE commands. 
3. Perform UPDATE commands.
4. Perform INSERT commands.
5. Re-enable foreign-key constraints.
Please back up your target database before running this script.
*/
SET NUMERIC_ROUNDABORT OFF
GO
SET XACT_ABORT, ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

/*Pointer used for text / image updates. This might not be needed, but is declared here just in case*/
DECLARE @pv binary(16)
BEGIN TRANSACTION
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>MediaId</name>      <headertext>Media Id</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>MediaId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>MultiCheckboxList</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>MultiCheckboxList</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>MediaConfigurationId</name>      <headertext>Media Configuration Id</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Path</name>      <headertext>Path</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustsh'' WHERE [ItemName] = ''ZnodeMedia''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>y</allowdetailview>    </column>    <column>      <id>4</id>      <name>Size</name>      <headertext>Size</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Height</name>      <headertext>Height</headertext>      <width>0</width>      <datatype>Double</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </control'',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''type>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Width</name>      <headertext>Width</headertext>      <width>0</width>      <datatype>Double</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Length</name>      <headertext>Length</headertext>      <width>0</width>      <datatype>Double</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imagepa'',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ramfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Type</name>      <headertext>Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>CreatedBy</name>      <headertext>Created By</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters> '',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''     </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>CreatedDate</name>      <headertext>Created on</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>ModifiedBy</name>      <headertext>Modified By</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>12</id>      <name>ModifiedDate</name>      <headertext>Modified on</headertext>      <width>0</width>      <datatype>DateTime</datatype>      <columntype>DateTime</columntype>      <allowso'',NUL'
+N'L,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''rting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>MediaId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>13</id>      <name>Edit</name>      <headertext>Edit</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>14</id>      <name>Delete</name>      <headertext>Delete</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <i'',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''scheckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>15</id>      <name>Manage</name>      <headertext>Manage</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>16</id>      <name>Copy</name>      <headertext>Copy</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>    '',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''  <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>17</id>      <name>View</name>      <headertext>View</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>18</id>      <name>Image</name>      <headertext>Image</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>Path</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y'',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'',NULL,NULL) WHERE [ItemName] = ''ZnodeMedia''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>MenuId</name>
    <headertext>Checkbox</headertext>
    <width>10</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>Id</islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext> Id</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>MenuName</name>
    <headertext>Menu Name</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/RoleAndAccessRight/EditMenu</islinkactionurl>
    <islinkparamfield>menuId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ParentMenuid</name>
    <headertext>Parent Menu ID</headertext>
    <width>10</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>'', [ModifiedDate]=''20170719 11:16:55.067'' WHERE ItemName = N''ZnodeMenu''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>Id</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Parent Menu Id</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>MenuSequence</name>
    <headertext>Menu Sequence</headertext>
    <width>10</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>Id</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Menu Sequence</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>AreaName</name>
    <headertext>Area Name</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </c'',NULL,NULL) WHERE ItemName = N''ZnodeMenu''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ontroltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>ControllerName</name>
    <headertext>Controller Name</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>Id</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Controller Name</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>ActionName</name>
    <headertext>Action Name</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>Id</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Action Name</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
   '',NULL,NULL) WHERE ItemName = N''ZnodeMenu''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>IsActive</name>
    <headertext>Is Active</headertext>
    <width>50</width>
    <datatype>Boolean</datatype>
    <columntype>Boolean</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Is Active</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Manage|Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>Id</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>Id</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Manage|Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/RoleAndAccessRight/ManageMenu|/RoleAndAccessRight/EditMenu|/RoleAndAccessRight/DeleteMenu</manageactionurl>
    <manageparamfield>menuId,menuName|menuId|menuId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
'',NULL,NULL) WHERE ItemName = N''ZnodeMenu''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <isadvancesearch>y</isadvancesearch>
    <Class>grid-action</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeMenu''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>MediaId</name>
    <headertext>Checkbox</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>Image</name>
    <headertext>Media</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Edit</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>Path,FileName</imageparamfield>
    <manageactionurl>/MediaManager/MediaManager/GetMediaAttributeValues</manageactionurl>
    <manageparamfield>MediaId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>imageicon</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>FileName</name>
    <headertext>File Name</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvi'' WHERE ItemName = N''View_GetMediaPathDetail''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''sible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>100</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/MediaManager/MediaManager/GetMediaAttributeValues</islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>y</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>MediaType</name>
    <headertext>File Type</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>Size</name>
    <headertext>Size</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkb'',NULL,NULL) WHERE ItemName = N''View_GetMediaPathDetail''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''oxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>Height</name>
    <headertext>Height</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>Width</name>
    <headertext>Width</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
'',NULL,NULL) WHERE ItemName = N''View_GetMediaPathDetail''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>MediaType</name>
    <headertext>Type</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>Folder</name>
    <headertext>Folder</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>MediaId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <S'',NULL,NULL) WHERE ItemName = N''View_GetMediaPathDetail''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''earchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>10</id>
    <name>Path</name>
    <headertext>Path</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>Path</imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>imageicon</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>11</id>
    <name>DisplayName</name>
    <headertext>Display Name</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>Path</imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>12</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>50</width>
    <datatype>String</datatype>
  '','
+N'NULL,NULL) WHERE ItemName = N''View_GetMediaPathDetail''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''  <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>MediaId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/MediaManager/MediaManager/GetMediaAttributeValues|/MediaManager/MediaManager/DeleteMedia</manageactionurl>
    <manageparamfield>MediaId|MediaId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>inline</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''View_GetMediaPathDetail''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>TaxClassId</name>
    <headertext>Checkbox</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>Name</name>
    <headertext>Name</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/TaxClass/Edit</islinkactionurl>
    <islinkparamfield>taxClassId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>DisplayOrder</name>
    <headertext>Display Order</headertext>
    <width>30</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
'', [ModifiedDate]=''20170620 19:28:02.133'' WHERE ItemName = N''ZnodeTaxClass''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>IsActive</name>
    <headertext>Enable</headertext>
    <width>20</width>
    <datatype>Boolean</datatype>
    <columntype>Boolean</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>taxClassId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </contr'',NULL,NULL) WHERE ItemName = N''ZnodeTaxClass''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''oltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/TaxClass/Edit|/TaxClass/Delete</manageactionurl>
    <manageparamfield>taxClassId|taxClassId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>SKU</name>
    <headertext>SKU</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeTaxClass''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>PimProductId</name><headertext>Checkbox</headertext><width>20</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield>PimProductId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>Image</name><headertext>Image</headertext><width>20</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield>ProductImage,ProductName</imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class>imageicon</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>ProductName</name><headertext>Product Name</headertext><width>60</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>y</isallowlink><islinkactionurl>/PIM/Products/Edit</islinkactionurl><islinkparamfield>PimProductId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearc'', [ModifiedDate]=''20170607 19:52:17.483'' WHERE ItemName = N''View_ManageProductList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''h>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>ProductType</name><headertext>Product Type</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>AttributeFamily</name><headertext>Attribute Family</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>SKU</name><headertext>SKU</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><managep'',NULL,NULL) WHERE ItemName = N''View_ManageProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''aramfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>PublishStatus</name><headertext>Publish Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>IsActive</name><headertext>Status</headertext><width>0</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>Manage</name><headertext>Action</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Edit|Copy|Delete|Publish</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Edit|Copy|Delete|Publish</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deletep'',NULL,NULL) WHERE ItemName = N''View_ManageProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''aramfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/PIM/Products/Edit|/PIM/Products/Copy|/PIM/Products/Delete|/PIM/Products/PublishProduct</manageactionurl><manageparamfield>PimProductId|PimProductId|PimProductId|PimProductId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'',NULL,NULL) WHERE ItemName = N''View_ManageProductList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PimAttributeId</name>
    <headertext>Checkbox</headertext>
    <width>20</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>AttributeCode</name>
    <headertext>Attribute Code</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/PIM/CategoryAttribute/Edit</islinkactionurl>
    <islinkparamfield>PimAttributeId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>AttributeName</name>
    <headertext>Attribute Label</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>'' WHERE ItemName = N''ZnodeCategoryAttribute''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>/Attributes/Attributes/Edit</islinkactionurl>
    <islinkparamfield>MediaAttributeId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>y</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>AttributeTypeName</name>
    <headertext>Attribute Type</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>/PIM/PIMAttribute/Edit</islinkactionurl>
    <islinkparamfield>PimAttributeId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>y</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>IsRequired</name>
    <headertext>Is Required</headertext>
    <width>10</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
 '',NULL,NULL) WHERE ItemName = N''ZnodeCategoryAttribute''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''   <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>IsLocalizable</name>
    <headertext>Is Localizable</headertext>
    <width>10</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>IsSystemDefined</name>
    <headertext>Is SystemDefined</headertext>
    <width>10</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamf'',NULL,NULL) WHERE ItemName = N''ZnodeCategoryAttribute''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>IsComparable</name>
    <headertext>Is Comparable</headertext>
    <width>10</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>IsUseInSearch</name>
    <headertext>Is Use In Search</headertext>
    <width>10</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
'',NULL,NULL) WHERE ItemName = N''ZnodeCategoryAttribute''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>10</id>
    <name>IsFacets</name>
    <headertext>Is Use In Facets</headertext>
    <width>10</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>11</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/PIM/CategoryAttribute/Edit|/PIM/CategoryAttribute/Delete</manageactionurl>
    <manageparamfield>PimAttributeId|pimAttributeId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdeta'','
+N'NULL,NULL) WHERE ItemName = N''ZnodeCategoryAttribute''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ilview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeCategoryAttribute''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PimCatalogId</name>
    <headertext>Checkbox</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>CatalogName</name>
    <headertext>Catalog Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>500</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>y</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>PublishStatus</name>
    <headertext>Publish Status</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mus'', [ModifiedDate]=''20170619 14:55:47.820'' WHERE ItemName = N''ZnodePimCatalog''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''tshow>
    <musthide>n</musthide>
    <maxlength>500</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>PublishProductCount</name>
    <headertext>No. of Products Published</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>PublishCategoryCount</name>
    <headertext>No. of Categories Published</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
'',NULL,NULL) WHERE ItemName = N''ZnodePimCatalog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>PublishCreatedDate</name>
    <headertext>Published Date</headertext>
    <width>30</width>
    <datatype>Date</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Manage|Edit|Copy|Publish|View|Trigger|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Manage|Edit|Copy|Publish|Publish History|Create Scheduler|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <delete'',NULL,NULL) WHERE ItemName = N''ZnodePimCatalog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''paramfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/PIM/Catalog/Manage|/PIM/Catalog/EditCatalogName|/PIM/Catalog/Copy|/PIM/Catalog/Publish|/PIM/Catalog/GetCatalogPublishStatus|/PIM/Catalog/CreateScheduler|/PIM/Catalog/Delete</manageactionurl>
    <manageparamfield>pimCatalogId|pimCatalogId|pimCatalogId|pimCatalogId|pimCatalogId,UrlEncodedCatalogName|ConnectorTouchPoints,SchedulerCallFor|pimCatalogId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodePimCatalog''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>InventoryId</name><headertext>Checkbox</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>SKU</name><headertext>SKU</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>ProductName</name><headertext>Product Name</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlT'', [ModifiedDate]=''20170727 13:07:46.107'' WHERE [ApplicationSettingId]=51')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ype><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>WarehouseCode</name><headertext>Warehouse</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>y</iscontrol><controltype>DropDown</controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>WarehouseName</name><headertext>Warehouse Name</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>Quantity</name><headertext>Quantity On Hand</headertext><width>50</width><datatype>String</datatype><columntype>Decimal</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>15</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>y</iscontrol><controltype>Text</controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyac'',NULL,NULL) WHERE [ApplicationSettingId]=51
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''tionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>ReOrderLevel</name><headertext>Re-Order Level</headertext><width>50</width><datatype>String</datatype><columntype>Decimal</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>7</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>y</iscontrol><controltype>Text</controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>CreatedDate</name><headertext>Created Date</headertext><width>30</width><datatype>Date</datatype><columntype>DateTime</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>ModifiedDate</name><headertext>Modified Date</headertext><width>30</width><datatype>Date</datatype><columntype>DateTime</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield>'',NULL,NULL) WHERE [ApplicationSettingId]=51
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''<imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>10</id><name>Manage</name><headertext>Action</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format>Edit|Delete</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Edit|Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Inventory/EditSKUInventory|/Inventory/DeleteSKUInventory</manageactionurl><manageparamfield>inventoryId,SKU|inventoryId,inventoryListId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'',NULL,NULL) WHERE [ApplicationSettingId]=51
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>WarehouseId</name>
    <headertext>Checkbox</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>WarehouseCode</name>
    <headertext>Code</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/Warehouse/Edit</islinkactionurl>
    <islinkparamfield>WarehouseId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>WarehouseName</name>
    <headertext>Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustsho'' WHERE [ApplicationSettingId]=58')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''w>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>CountryName</name>
    <headertext>Country</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>StateName</name>
    <headertext>State</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controlt'',NULL,NULL) WHERE [ApplicationSettingId]=58
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>CityName</name>
    <headertext>City</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>PostalCode</name>
    <headertext>Postal Code</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
  '',NULL,NULL) WHERE [ApplicationSettingId]=58
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''  <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>CreatedDate</name>
    <headertext>Created Date</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>ModifiedDate</name>
    <headertext>Modified Date</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
'',NULL,NULL) WHERE [ApplicationSettingId]=58
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>10</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Manage|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Manage|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Warehouse/Edit|/Warehouse/Delete</manageactionurl>
    <manageparamfield>WarehouseId|warehouseId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE [ApplicationSettingId]=58
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>PimProductId</name>
		<headertext>Checkbox</headertext>
		<width>30</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield>ProductId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>PimProductId</name>
		<headertext>ID</headertext>
		<width>30</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>ProductId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>Image</name>
		<headertext>Image</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
'' WHERE ItemName = N''UnassociatedProducts''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield>ProductImage,ProductName</imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class>imageicon</Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>ProductName</name>
		<headertext>Product Name</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>ProductType</name>
		<headertext>Product Type</headertext>
		<width>50</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>SKU</name>
		<headertex'',NULL,NULL) WHERE ItemName = N''UnassociatedProducts''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''t>SKU</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>SKU</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>Assortment</name>
		<headertext>Assortment</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''UnassociatedProducts''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>PimLinkProductDetailId</name>
		<headertext>Checkbox</headertext>
		<width>40</width>
		<datatype>Int32</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield>PimLinkProductDetailId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>PimProductId</name>
		<headertext>ID</headertext>
		<width>40</width>
		<datatype>Int32</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PimLinkProductDetailId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>Image</name>
		<headertext>Image</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext'' WHERE ItemName = N''View_ManageLinkProductList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield>ProductImage,ProductName</imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class>imageicon</Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>ProductName</name>
		<headertext>Name</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>ProductType</name>
		<headertext>Product Type</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<'',NULL,NULL) WHERE ItemName = N''View_ManageLinkProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''name>SKU</name>
		<headertext>SKU</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>Assortment</name>
		<headertext>Assortment</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>8</id>
		<name>Manage</name>
		<headertext>Action</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format>Delete</format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Delete</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamf'',NULL,NULL) WHERE ItemName = N''View_ManageLinkProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl>/PIM/Products/UnAssignLinkProducts</manageactionurl>
		<manageparamfield>PimLinkProductDetailId</manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''View_ManageLinkProductList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PriceListAccountId</name>
    <headertext>Checkbox</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>AccountName</name>
    <headertext>Account Name</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ExternalId</name>
    <headertext>External ID</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustsho'' WHERE ItemName = N''AccountPriceList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''w>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>ParentAccountName</name>
    <headertext>Parent Account Name</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
'',NULL,NULL) WHERE ItemName = N''AccountPriceList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Price/DeleteAssociatedAccount</manageactionurl>
    <manageparamfield>PriceListAccountId,priceListId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''AccountPriceList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>ShippingRuleId</name>
    <headertext>Checkbox</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>ShippingId</name>
    <headertext>Shipping ID</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ShippingRuleTypeCode</name>
    <headertext>Rule Type</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustsho'', [ModifiedDate]=''20170719 11:11:37.227'' WHERE ItemName = N''ZnodeShippingRule''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''w>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>ShippingRuleTypeCodeLocale</name>
    <headertext>Rule Type</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>BaseCost</name>
    <headertext>Base Cost</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>Decimal</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>'',NULL,NULL) WHERE ItemName = N''ZnodeShippingRule''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>PerItemCost</name>
    <headertext>Per Item Cost</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>Decimal</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>LowerLimit</name>
    <headertext>Lower Limit</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>Decimal</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>'',NULL,NULL) WHERE ItemName = N''ZnodeShippingRule''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>UpperLimit</name>
    <headertext>Upper Limit</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>Decimal</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>shippingRuleId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Shippings/EditShippingRule|/Shippings/DeleteShippingRule</manageactionurl>
    <manageparamfield>shippingRuleId,,shippingId|shippingRuleId,shippingId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis'',NULL,NULL) WHERE ItemName = N''ZnodeShippingRule''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>grid-action</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeShippingRule''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>CMSContentPagesId</name>
    <headertext>Checkbox</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>PageTitle</name>
    <headertext>Page Title</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>/Content/EditContentPage</islinkactionurl>
    <islinkparamfield>cmsContentPagesId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>PageName</name>
    <headertext>Page Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
 '', [ModifiedDate]=''20170712 14:03:30.933'' WHERE ItemName = N''StaticPageList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''   <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>PageTemplateName</name>
    <headertext>Template Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>CMSContentPageGroupName</name>
    <headertext>Folder</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontr'',NULL,NULL) WHERE ItemName = N''StaticPageList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>PortalName</name>
    <headertext>Store Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>SEOTitle</name>
    <headertext>SEO Title</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparam'',NULL,NULL) WHERE ItemName = N''StaticPageList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''field>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>SEODescription</name>
    <headertext>SEO Description</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>SEOKeywords</name>
    <headertext>SEO Keywords</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
'',NULL,NULL) WHERE ItemName = N''StaticPageList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>10</id>
    <name>MetaInformation</name>
    <headertext>Meta Information</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>11</id>
    <name>SEOUrl</name>
    <headertext>SEO Friendly Url </headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>12</id>
    <name>ActivationDate</name>
    <headertext>Activation Date </headertext>
    <wid'
+N't'',NULL,NULL) WHERE ItemName = N''StaticPageList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''h>60</width>
    <datatype>DateTime</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>13</id>
    <name>ExpirationDate</name>
    <headertext>Expiration Date </headertext>
    <width>60</width>
    <datatype>DateTime</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>14</id>
    <name>IsActive</name>
    <headertext>Is Active</headertext>
    <width>60</width>
    <datatype>Boolean</datatype>
    <columntype>Boolean</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isa'',NULL,NULL) WHERE ItemName = N''StaticPageList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''llowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>15</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Content/EditContentPage|/Content/DeleteContentPage</manageactionurl>
    <manageparamfield>cmsContentPagesId|cmsContentPagesId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''StaticPageList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>ID</name>
    <headertext>ID</headertext>
    <width>0</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>PublishProductId</name>
    <headertext>Product Id</headertext>
    <width>0</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ProductName</name>
    <headertext>Product Name</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>'', [ModifiedDate]=''20170725 15:01:10.117'' WHERE ItemName = N''ZnodeSearchGlobalProductBoost''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>SKU</name>
    <headertext>SKU</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>Boost</name>
    <headertext>Boost</headertext>
    <width>30</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>10</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>y</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    <'',NULL,NULL) WHERE ItemName = N''ZnodeSearchGlobalProductBoost''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''/controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Edit</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>ID,PublishProductId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/SearchConfiguration/SaveBoostValue</manageactionurl>
    <manageparamfield>ID,PublishProductId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeSearchGlobalProductBoost''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PublishProductId</name>
    <headertext>Publish Product ID</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>PublishProductId</name>
    <headertext>Checkbox</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>Name</name>
    <headertext>Product Name</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</m'', [ModifiedDate]=''20170728 19:08:33.717'' WHERE ItemName = N''PublishedProductList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>productnameclass</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>ProductType</name>
    <headertext>Product Type</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>SKU</name>
    <headertext>SKU</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
'',NULL,NULL) WHERE ItemName = N''PublishedProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>CatalogName</name>
    <headertext>Catalog Name</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>IsActive</name>
    <headertext>Status</headertext>
    <width>0</width>
    <datatype>Boolean</datatype>
    <columntype>Boolean</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
   '',NULL,NULL) WHERE ItemName = N''PublishedProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''PublishedProductList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>PimProductId</name>
		<headertext>Checkbox</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield>SKU</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>PimProductId</name>
		<headertext>ID</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>SKU</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>Image</name>
		<headertext>Product Image</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
'' WHERE ItemName = N''AssociatedTaxClassProductList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield>ProductImage,ProductName</imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class>imageicon</Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>ProductName</name>
		<headertext>Product Name</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>ProductType</name>
		<headertext>Product Type</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>AttributeFamily</name>
'',NULL,NULL) WHERE ItemName = N''AssociatedTaxClassProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''		<headertext>Attribute Family</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>SKU</name>
		<headertext>SKU</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>SKU</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>8</id>
		<name>Assortment</name>
		<headertext>Assortment</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfie'',NULL,NULL) WHERE ItemName = N''AssociatedTaxClassProductList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ld>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>9</id>
		<name>IsActive</name>
		<headertext>Status</headertext>
		<width>0</width>
		<datatype>Boolean</datatype>
		<columntype>Boolean</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Status</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''AssociatedTaxClassProductList''
')
UPDATE [dbo].[ZnodeApplicationSetting] SET [ModifiedDate]='20170620 10:32:12.557' WHERE ItemName = N'AssociatedProductsList'
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>ImportProcessLogId</name>
    <headertext>Checkbox</headertext>
    <width>0</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>ImportProcessLogId</islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>ImportProcessLogId</name>
    <headertext>ID</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ImportName</name>
    <headertext>Import Type</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow'' WHERE ItemName = N''ZnodeImportProcessLog''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>ImportTemplateId</name>
    <headertext>Template ID</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>TemplateName</name>
    <headertext>Template Name</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
  '',NULL,NULL) WHERE ItemName = N''ZnodeImportProcessLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''  <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>Status</name>
    <headertext>Status</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>ProcessStartedDate</name>
    <headertext>Process Started Date</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield'',NULL,NULL) WHERE ItemName = N''ZnodeImportProcessLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>ProcessCompletedDate</name>
    <headertext>Process Completed Date</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Manage|Publish|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Details|Status|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Import/ShowLogDetails|/Import/ShowLogStatus|/Import/Deletelogs</manageactionurl>
    <manageparamfield>ImportProcessLogId|ImportProcessLogId|ImportProcessLogId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
'',NULL,NULL) WHERE ItemName = N''ZnodeImportProcessLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeImportProcessLog''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>OrderNumber</name>
    <headertext>Order No</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/Order/Manage</islinkactionurl>
    <islinkparamfield>OmsOrderId,accountId,updatePageType</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>StoreName</name>
    <headertext>Store Name</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>OrderDate</name>
    <headertext>Order Date</headertext>
    <width>30</width>
    <datatype>Date</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
'' WHERE ItemName = N''CustomerOrderHistory''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>OrderTotalWithCurrency</name>
    <headertext>Order Amount</headertext>
    <width>30</width>
    <datatype>Decimal</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>OrderState</name>
    <headertext>Order Status</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontro'',NULL,NULL) WHERE ItemName = N''CustomerOrderHistory''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''l>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>PaymentStatus</name>
    <headertext>Payment Status</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>PaymentType</name>
    <headertext>Payment Type</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
   '',NULL,NULL) WHERE ItemName = N''CustomerOrderHistory''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>paymentType</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''CustomerOrderHistory''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>ProductId</name>
    <headertext>Checkbox</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>ProductId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>Image</name>
    <headertext>Product Image</headertext>
    <width>20</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>ProductId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>ImagePath,ProductName</imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>imageicon</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ProductId</name>
    <headertext>Product ID</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustsho'', [ModifiedDate]=''20170630 10:23:15.567'' WHERE ItemName = N''ZnodeGetProfileCatalogAssociatedProduct''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''w>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>ProductId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>ProductName</name>
    <headertext>Product Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>CategoryName</name>
    <headertext>Category Name</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
  '',NULL,NULL) WHERE ItemName = N''ZnodeGetProfileCatalogAssociatedProduct''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''  <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>SKU</name>
    <headertext>SKU</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>SKU</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>DisplayOrder</name>
    <headertext>Display Order</headertext>
    <width>40</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
 '',NULL,NULL) WHERE ItemName = N''ZnodeGetProfileCatalogAssociatedProduct''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''   </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Edit</format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Catalog/UpdateProfileCatalogCategoryProduct</manageactionurl>
    <manageparamfield>ProductId,PimCatalogId,PimCategoryId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeGetProfileCatalogAssociatedProduct''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>CaseRequestHistoryId</name>
    <headertext>ID</headertext>
    <width>0</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>FullName</name>
    <headertext>Full Name</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>UserName</name>
    <headertext>Username</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
   '' WHERE ItemName = N''ZnodeCaseRequestHistory''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>EmailSubject</name>
    <headertext>Email Subject</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>EmailMessage</name>
    <headertext>Email Message</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
'',NULL,NULL) WHERE ItemName = N''ZnodeCaseRequestHistory''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>CreatedDate</name>
    <headertext>Created Date</headertext>
    <width>0</width>
    <datatype>DateTime</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeCaseRequestHistory''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PublishCatalogLogId</name>
    <headertext>ID</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>PublishStatus</name>
    <headertext>Publish Status</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>UserName</name>
    <headertext>Username</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow'', [ModifiedDate]=''20170616 16:16:45.680'' WHERE ItemName = N''ZnodePublishCatalogLog''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>PublishCategoryCount</name>
    <headertext>No. of Categories Published</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>PublishProductCount</name>
    <headertext>No. of Products Published</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
   '',NULL,NULL) WHERE ItemName = N''ZnodePublishCatalogLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>LastPublishedDate</name>
    <headertext>Last Published Date</headertext>
    <width>40</width>
    <datatype>Date</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>CreatedDate</name>
    <headertext>Start Time</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <vie'',NULL,NULL) WHERE ItemName = N''ZnodePublishCatalogLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''wparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>ModifiedDate</name>
    <headertext>End Time</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodePublishCatalogLog''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>TaxClassId</name>
    <headertext>Checkbox</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>Name</name>
    <headertext>Name</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>DisplayOrder</name>
    <headertext>Display Order</headertext>
    <width>30</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthid'', [ModifiedDate]=''20170620 19:31:37.933'' WHERE ItemName = N''ZnodePortalTaxClassAssociatedList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''e>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>IsActive</name>
    <headertext>Enable</headertext>
    <width>20</width>
    <datatype>Boolean</datatype>
    <columntype>Boolean</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>taxClassId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
   '',NULL,NULL) WHERE ItemName = N''ZnodePortalTaxClassAssociatedList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/TaxClass/Edit|/TaxClass/Delete</manageactionurl>
    <manageparamfield>taxClassId|taxClassId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>SKU</name>
    <headertext>SKU</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>y</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodePortalTaxClassAssociatedList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>ShippingId</name>
    <headertext>Checkbox</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>ShippingTypeName</name>
    <headertext>Shipping Type</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ShippingCode</name>
    <headertext>Shipping Code</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</m'', [ModifiedDate]=''20170619 17:50:45.797'' WHERE ItemName = N''ZnodeUnAssociatedShippingList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>Description</name>
    <headertext>Description</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>DestinationCountryCode</name>
    <headertext>Country Code</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
  '',NULL,NULL) WHERE ItemName = N''ZnodeUnAssociatedShippingList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''  <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>HandlingCharge</name>
    <headertext>Handling Charge</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>DisplayOrder</name>
    <headertext>Display Order</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfie'',NULL,NULL) WHERE ItemName = N''ZnodeUnAssociatedShippingList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ld>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>IsActive</name>
    <headertext>Enable</headertext>
    <width>40</width>
    <datatype>Boolean</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>ZipCode</name>
    <headertext>Zip Code</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>'',NULL,NULL) WHERE ItemName = N''ZnodeUnAssociatedShippingList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>10</id>
    <name>ProfileName</name>
    <headertext>Profile</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeUnAssociatedShippingList''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>PaymentSettingId</name>
		<headertext>Checkbox</headertext>
		<width>40</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentSettingId</islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>ID</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>PaymentTypeName</name>
		<headertext>Payment Option</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentTypeId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentTypeId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Payment Option</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>PaymentName</name>
		<headertext>Payment Name</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentTypeId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentTypeId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Payment Option</displaytext>
		<editactionurl></editactionurl>
		<editpara'' WHERE ItemName = N''UnassociatedPaymentListToPortal''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''mfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>GatewayName</name>
		<headertext>Payment Gateway</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentGatewayId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentGatewayId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Payment Gateway</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>IsActive</name>
		<headertext>Enable</headertext>
		<width>40</width>
		<datatype>Boolean</datatype>
		<columntype>Boolean</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>IsActive</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>IsActive</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Enable</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>DisplayOrder</name>
		<headertext>Display Order</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntyp'',NULL,NULL) WHERE ItemName = N''UnassociatedPaymentListToPortal''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''e>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>DisplayOrder</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>DisplayOrder</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Display Order</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>Manage</name>
		<headertext>Action</headertext>
		<width>50</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format>Edit|Delete</format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>y</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>y</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentSettingId|</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentSettingId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Edit|Delete</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl>/Payment/Edit|/Payment/Delete</manageactionurl>
		<manageparamfield>PaymentSettingId|PaymentSettingId</manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''UnassociatedPaymentListToPortal''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>PaymentSettingId</name>
		<headertext>Checkbox</headertext>
		<width>40</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentSettingId</islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>ID</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>PaymentTypeName</name>
		<headertext>Payment Option</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentTypeId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentTypeId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Payment Option</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>PaymentName</name>
		<headertext>Payment Name</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentTypeId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentTypeId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Payment Option</displaytext>
		<editactionurl></editactionurl>
		<editpara'' WHERE ItemName = N''AssociatedPaymentListToProfile''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''mfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>GatewayName</name>
		<headertext>Payment Gateway</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentGatewayId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentGatewayId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Payment Gateway</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>IsActive</name>
		<headertext>Enable</headertext>
		<width>40</width>
		<datatype>Boolean</datatype>
		<columntype>Boolean</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>IsActive</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>IsActive</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Enable</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>DisplayOrder</name>
		<headertext>Display Order</headertext>
		<width>40</width>
		<datatype>String</datatype>
		<columntyp'',NULL,NULL) WHERE ItemName = N''AssociatedPaymentListToProfile''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''e>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>DisplayOrder</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>DisplayOrder</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Display Order</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>Manage</name>
		<headertext>Action</headertext>
		<width>50</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format>Delete</format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>y</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>y</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield>PaymentSettingId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PaymentSettingId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Delete</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl>/Profiles/RemoveAssociatedPaymentSetting</manageactionurl>
		<manageparamfield>PaymentSettingId,ProfileId</manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''AssociatedPaymentListToProfile''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>AddonGroupProductId</name>
		<headertext>Checkbox</headertext>
		<width>20</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield>AddonGroupProductId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>Image</name>
		<headertext>Image</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield>ProductImage,ProductName</imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class>imageicon</Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>ProductName</name>
		<headertext>Product Name</headertext>
		<width>60</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>'' WHERE ItemName = N''ZnodePimAddonGroupProduct''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>ProductType</name>
		<headertext>Product Type</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>Assortment</name>
		<headertext>Assortment</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>SKU</name'',NULL,NULL) WHERE ItemName = N''ZnodePimAddonGroupProduct''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>
		<headertext>SKU</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>SKU</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>Manage</name>
		<headertext>Action</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format>Delete</format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Delete</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl>/PIM/AddonGroup/DeleteAddonGroupProducts</manageactionurl>
		<manageparamfield>AddonGroupProductId</manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodePimAddonGroupProduct''
')
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>ProductFeedId</name>
    <headertext>Checkbox</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>ProductFeedTypeName</name>
    <headertext>Type Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>500</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>FileName</name>
    <headertext>File Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustsho'', [ModifiedDate]=''20170615 11:17:29.707'' WHERE ItemName = N''ZnodeProductFeed''')
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'w>
    <musthide>n</musthide>
    <maxlength>500</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>true</allowpaging>
    <format>Download|Edit|Trigger|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Generate Feed|Edit|Create Scheduler|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/ProductFeed/GenerateProductFeedLink|/ProductFeed/Edit|/ProductFeed/CreateScheduler|/ProductFeed/Delete</manageactionurl>
    <manageparamfield>ProductFeedId|ProductFeedId|ConnectorTouchPoints,SchedulerCallFor|ProductFeedId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>',NULL,NULL) WHERE ItemName = N'ZnodeProductFeed'

EXEC(N'INSERT INTO [dbo].[ZnodeApplicationSetting] ([GroupName], [ItemName], [Setting], [ViewOptions], [FrontPageName], [FrontObjectName], [IsCompressed], [OrderByFields], [ItemNameWithoutCurrency], [CreatedByName], [ModifiedByName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) VALUES (N''Table'', N''ZnodeCMSContentPageList'', N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>CMSContentPagesId</name>
    <headertext>Content Page Id</headertext>
    <width>30</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>PageTitle</name>
    <headertext>Page Title</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>CMSContentPagesId</checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>pagetitlecolumn</Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>PageName</name>
    <headertext>Page Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
 '', N''ZnodeCMSContentPageList'', N''ZnodeCMSContentPageList'', N''ZnodeCMSContentPageList'', 0, NULL, NULL, NULL, NULL, 2, ''19050626 00:00:00.000'', 2, ''20170712 16:46:41.540'')')
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'   <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>cmsContentPagesId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Page Name</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>',NULL,NULL) WHERE ItemName = N'ZnodeCMSContentPageList'
EXEC(N'INSERT INTO [dbo].[ZnodeApplicationSetting] ([GroupName], [ItemName], [Setting], [ViewOptions], [FrontPageName], [FrontObjectName], [IsCompressed], [OrderByFields], [ItemNameWithoutCurrency], [CreatedByName], [ModifiedByName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) VALUES (N''Table'', N''ZnodeBlogNewsList'', N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>BlogNewsId</name>
		<headertext>Checkbox</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>Int32</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>BlogNewstitle</name>
		<headertext>Title</headertext>
		<width>60</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl>/BlogNews/EditBlogNews</islinkactionurl>
		<islinkparamfield>blogNewsId</islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>BlogNewsType</name>
		<headertext>Type</headertext>
		<width>60</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deletep'', N''ZnodeBlogNewsList'', N''ZnodeBlogNewsList'', N''ZnodeBlogNewsList'', 0, NULL, NULL, NULL, NULL, 2, ''20160222 11:30:13.227'', 2, ''20170726 16:07:41.570'')')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''aramfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>CountComments</name>
		<headertext>Comments</headertext>
		<width>60</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>StoreName</name>
		<headertext>Store Name</headertext>
		<width>60</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>ActivationDate</name>
		<headertext>Activation Date </headertext>
		<width>60</width>
		<datatype>DateTime</datatype>
		<columntype>DateTime</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y'',NULL,NULL) WHERE ItemName = N''ZnodeBlogNewsList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>ExpirationDate</name>
		<headertext>Expiration Date </headertext>
		<width>60</width>
		<datatype>DateTime</datatype>
		<columntype>DateTime</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>8</id>
		<name>CreatedDate</name>
		<headertext>Created Date </headertext>
		<width>60</width>
		<datatype>DateTime</datatype>
		<columntype>DateTime</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvanc'',NULL,NULL) WHERE ItemName = N''ZnodeBlogNewsList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''esearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>9</id>
		<name>IsBlogNewsActive</name>
		<headertext>Is Active</headertext>
		<width>60</width>
		<datatype>Boolean</datatype>
		<columntype>Boolean</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>10</id>
		<name>IsAllowGuestComment</name>
		<headertext>Is Allow Guest Comments</headertext>
		<width>60</width>
		<datatype>Boolean</datatype>
		<columntype>Boolean</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>11</id>
		<name>Manage</name>
		<headertext>Action</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format>Edit|Delete</format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n'',NULL,NULL) WHERE ItemName = N''ZnodeBlogNewsList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Edit|Delete</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl>/BlogNews/EditBlogNews|/BlogNews/DeleteBlogNews</manageactionurl>
		<manageparamfield>blogNewsId|blogNewsId</manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodeBlogNewsList''
')
EXEC(N'INSERT INTO [dbo].[ZnodeApplicationSetting] ([GroupName], [ItemName], [Setting], [ViewOptions], [FrontPageName], [FrontObjectName], [IsCompressed], [OrderByFields], [ItemNameWithoutCurrency], [CreatedByName], [ModifiedByName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) VALUES ( N''View'', N''UnassociatedProductsDynamic'', N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>ProductId</name>
		<headertext>Checkbox</headertext>
		<width>30</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield>ProductId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>ProductId</name>
		<headertext>ID</headertext>
		<width>30</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>ProductId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>Image</name>
		<headertext>Image</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<edi'', N''UnassociatedProductsDynamic'', N''UnassociatedProductsDynamic'', N''UnassociatedProductsDynamic'', 0, NULL, NULL, NULL, NULL, 2, ''20160724 00:00:00.000'', 2, ''20160724 00:00:00.000'')')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''tparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield>ImagePath, ProductName</imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class>imageicon</Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>ProductName</name>
		<headertext>Product Name</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>ProductType</name>
		<headertext>Product Type</headertext>
		<width>50</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>n</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>6</id>
		<name>SKU</name>
		<headertext>SKU</h'',NULL,NULL) WHERE ItemName = N''UnassociatedProductsDynamic''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''eadertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>SKU</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>Assortment</name>
		<headertext>Assortment</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''UnassociatedProductsDynamic''
')
EXEC(N'INSERT INTO [dbo].[ZnodeApplicationSetting] ([GroupName], [ItemName], [Setting], [ViewOptions], [FrontPageName], [FrontObjectName], [IsCompressed], [OrderByFields], [ItemNameWithoutCurrency], [CreatedByName], [ModifiedByName], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) VALUES (NULL, N''View_ManageProductTypeList_GroupProduct'', N''<?xml version="1.0" encoding="utf-16"?>
<columns>
	<column>
		<id>1</id>
		<name>PimProductTypeAssociationId</name>
		<headertext>Checkbox</headertext>
		<width>20</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>y</ischeckbox>
		<checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>2</id>
		<name>RelatedProductId</name>
		<headertext>RelatedProductId</headertext>
		<width>20</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>n</isvisible>
		<mustshow>n</mustshow>
		<musthide>y</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>3</id>
		<name>PimProductId</name>
		<headertext>ID</headertext>
		<width>30</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfiel'', N''AssociatedProducts'', N''AssociatedProducts'', N''AssociatedProducts'', 0, NULL, NULL, NULL, NULL, 2, ''20170726 00:00:00.000'', 2, ''20170726 00:00:00.000'')')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''d>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>4</id>
		<name>Image</name>
		<headertext>Image</headertext>
		<width>20</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield>ProductImage,ProductName</imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class>imageicon</Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>5</id>
		<name>ProductName</name>
		<headertext>Product Name</headertext>
		<width>60</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>'',NULL,NULL) WHERE   ItemName = N''View_ManageProductTypeList_GroupProduct''  
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''
	<column>
		<id>6</id>
		<name>ProductType</name>
		<headertext>Product Type</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>7</id>
		<name>SKU</name>
		<headertext>SKU</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>SKU</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>8</id>
		<name>Assortment</name>
		<headertext>Assortment</headertext>
		<width>0</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>false</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>y</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></d'',NULL,NULL) WHERE ItemName = N''View_ManageProductTypeList_GroupProduct''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''eleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>9</id>
		<name>DisplayOrder</name>
		<headertext>Display Order</headertext>
		<width>10</width>
		<datatype>Int32</datatype>
		<columntype>Int32</columntype>
		<allowsorting>true</allowsorting>
		<allowpaging>true</allowpaging>
		<format></format>
		<isvisible>y</isvisible>
		<mustshow>n</mustshow>
		<musthide>n</musthide>
		<maxlength>3</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>y</iscontrol>
		<controltype>Text</controltype>
		<controlparamfield></controlparamfield>
		<displaytext></displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl></manageactionurl>
		<manageparamfield></manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>Text</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n</allowdetailview>
	</column>
	<column>
		<id>10</id>
		<name>Manage</name>
		<headertext>Action</headertext>
		<width>30</width>
		<datatype>String</datatype>
		<columntype>String</columntype>
		<allowsorting>false</allowsorting>
		<allowpaging>true</allowpaging>
		<format>Edit|Delete</format>
		<isvisible>y</isvisible>
		<mustshow>y</mustshow>
		<musthide>n</musthide>
		<maxlength>0</maxlength>
		<isallowsearch>n</isallowsearch>
		<isconditional>n</isconditional>
		<isallowlink>n</isallowlink>
		<islinkactionurl></islinkactionurl>
		<islinkparamfield></islinkparamfield>
		<ischeckbox>n</ischeckbox>
		<checkboxparamfield></checkboxparamfield>
		<iscontrol>n</iscontrol>
		<controltype></controltype>
		<controlparamfield></controlparamfield>
		<displaytext>Edit|Delete</displaytext>
		<editactionurl></editactionurl>
		<editparamfield></editparamfield>
		<deleteactionurl></deleteactionurl>
		<deleteparamfield></deleteparamfield>
		<viewactionurl></viewactionurl>
		<viewparamfield></viewparamfield>
		<imageactionurl></imageactionurl>
		<imageparamfield></imageparamfield>
		<manageactionurl>/PIM/Products/UpdateAssociatedProducts|/PIM/Products/UnassociateProducts</manageactionurl>
		<manageparamfield>PimProductTypeAssociationId,PimProductId,RelatedProductId|PimProductTypeAssociationId,PimProductId</manageparamfield>
		<copyactionurl></copyactionurl>
		<copyparamfield></copyparamfield>
		<xaxis>n</xaxis>
		<yaxis>n</yaxis>
		<isadvancesearch>y</isadvancesearch>
		<Class></Class>
		<SearchControlType>--Select--</SearchControlType>
		<SearchControlParameters></SearchControlParameters>
		<DbParamField></DbParamField>
		<useMode>DataBase</useMode>
		<IsGraph>n</IsGraph>
		<allowdetailview>n'',NULL,NULL) WHERE ItemName = N''View_ManageProductTypeList_GroupProduct''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''</allowdetailview>
	</column>
</columns>'',NULL,NULL) WHERE ItemName = N''View_ManageProductTypeList_GroupProduct''
')
SET IDENTITY_INSERT [dbo].[ZnodeApplicationSetting] OFF

UPDATE [dbo].[ZnodeGlobalSetting] SET [FeatureSubValues]=N'101' WHERE [ZNodeGlobalSettingId]=2
UPDATE [dbo].[ZnodeDateFormat] SET [MSSqlConvertId]=101 WHERE [DateFormatId]=1
UPDATE [dbo].[ZnodeDateFormat] SET [MSSqlConvertId]=105 WHERE [DateFormatId]=2
UPDATE [dbo].[ZnodeDateFormat] SET [MSSqlConvertId]=1 WHERE [DateFormatId]=3
UPDATE [dbo].[ZnodeDateFormat] SET [MSSqlConvertId]=120 WHERE [DateFormatId]=4
UPDATE [dbo].[ZnodeDateFormat] SET [MSSqlConvertId]=5 WHERE [DateFormatId]=5
UPDATE [dbo].[ZnodeDateFormat] SET [MSSqlConvertId]=120 WHERE [DateFormatId]=6

COMMIT TRANSACTION


GO

/*
This script was created by Visual Studio on 7/31/2017 at 5:49 PM.
Run this script on mssvr013\sql2016.Znode_Multifront_90_QA (sa) to make it the same as msl008\sql2016.Znode_Multifront_90_publishtest (sa).
This script performs its actions in the following order:
1. Disable foreign-key constraints.
2. Perform DELETE commands. 
3. Perform UPDATE commands.
4. Perform INSERT commands.
5. Re-enable foreign-key constraints.
Please back up your target database before running this script.
*/
SET NUMERIC_ROUNDABORT OFF
GO
SET XACT_ABORT, ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, ARITHABORT, QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
/*Pointer used for text / image updates. This might not be needed, but is declared here just in case*/
DECLARE @pv binary(16)
BEGIN TRANSACTION
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PriceListId</name>
    <headertext>Checkbox</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>ListCode</name>
    <headertext>Code</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>y</isallowlink>
    <islinkactionurl>/Price/Edit</islinkactionurl>
    <islinkparamfield>priceListId</islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ListName</name>
    <headertext>Name</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <mu'', [ModifiedDate]=''20170118 14:15:09.497'' WHERE ItemName = N''ZnodePriceList''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''sthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>CurrencyName</name>
    <headertext>Currency</headertext>
    <width>60</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>ActivationDate</name>
    <headertext>Activation Date</headertext>
    <width>30</width>
    <datatype>Date</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    <'',NULL,NULL) WHERE ItemName = N''ZnodePriceList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''/controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>ExpirationDate</name>
    <headertext>Expiration Date</headertext>
    <width>30</width>
    <datatype>Date</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Edit|Copy|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Copy|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <im'',NULL,NULL) WHERE ItemName = N''ZnodePriceList''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Price/Edit|/Price/Copy|/Price/Delete</manageactionurl>
    <manageparamfield>priceListId|priceListId|priceListId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = N''ZnodePriceList''
')
COMMIT TRANSACTION

GO 
UPDATE ZnodePimAttribute 
SET IsSystemDefined =1 
WHERE AttributeCode IN ('Brand','CategoryBanner'
,'CategoryName'
,'CategoryTitle','Vendor',
'Highlights','Tags',
'UOM',
'MinimumQuantity',
'MaximumQuantity')


GO 
DECLARE @pv binary(16)
BEGIN TRANSACTION
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>InventoryId</name>
    <headertext>Checkbox</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>y</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>SKU</name>
    <headertext>SKU</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>ProductName</name>
    <headertext>Product Name</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>'', [ModifiedDate]=''20170728 12:34:40.780'' WHERE [ItemName] = ''ZnodeInventory''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>WarehouseCode</name>
    <headertext>Warehouse Code</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>y</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>WarehouseName</name>
    <headertext>Warehouse</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>y</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>y</iscontrol>
    <controltype>DropDown</contr'',NULL,NULL) WHERE [ItemName] = ''ZnodeInventory''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''oltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>Quantity</name>
    <headertext>Quantity On Hand</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>Decimal</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>15</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>y</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>ReOrderLevel</name>
    <headertext>Re-Order Level</headertext>
    <width>50</width>
    <datatype>String</datatype>
    <columntype>Decimal</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>true</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>n</mustshow>
    <musthide>n</musthide>
    <maxlength>7</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>y</iscontrol>
    <controltype>Text</controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </'',NULL,NULL) WHERE [ItemName] = ''ZnodeInventory''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>CreatedDate</name>
    <headertext>Created Date</headertext>
    <width>30</width>
    <datatype>Date</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>9</id>
    <name>ModifiedDate</name>
    <headertext>Modified Date</headertext>
    <width>30</width>
    <datatype>Date</datatype>
    <columntype>DateTime</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>n</isvisible>
    <mustshow>n</mustshow>
    <musthide>y</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</'',NULL,NULL) WHERE [ItemName] = ''ZnodeInventory''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>10</id>
    <name>Manage</name>
    <headertext>Action</headertext>
    <width>30</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>Edit|Delete</format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>Edit|Delete</displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>/Inventory/EditSKUInventory|/Inventory/DeleteSKUInventory</manageactionurl>
    <manageparamfield>inventoryId,SKU|inventoryId,inventoryListId</manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>y</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE [ItemName] = ''ZnodeInventory''
')
COMMIT TRANSACTION
GO 
update ZnodeOmsOrderState set Description = UPPER(Description)
GO 

PRINT N'Dropping [dbo].[Znode_GetPublishSingleProducts]...';


GO
DROP PROCEDURE [dbo].[Znode_GetPublishSingleProducts];


GO
PRINT N'Altering [dbo].[Znode_GetPublishProductbulk]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPublishProductbulk]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
With RECOMPILE
AS
-- EXEC Znode_GetPublishProductbulk 3, 0 , '' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

  DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
  DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
  DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
  DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
  DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
 DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 

 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
           
		     DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

			  
 
WHILE @Counter <= @maxCountId
BEGIN
 
  SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId

  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML ZPAX
  WHERE ZPAX.LocaleId = @DefaultLocaleId  
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  INSERT INTO @PimDefaultValueLocale 
   SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML ZX
  WHERE localeId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  
 
  
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 


  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
  
      
	 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  UNION ALL 
	 SELECT VIR.PimProductId,PimAttributeId,PimProductAttributeMediaId,ZPDE.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
	 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
		
  SET @versionId = (SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId) 

 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END 
 --;With Cte_GetData AS ( 
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
INTO #Cte_GetData
FROM View_LoadManageProductInternal a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN #TBL_AttributeVAlue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId AND CTE.LocaleId  = CASE WHEN cte.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
UNION ALL 
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
                 
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
UNION ALL 
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML+'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue
 
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT  ',' +MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     INNER JOIN #TBL_AttributeVAlue FTRE ON (FTRE.PimProductId = ZPAV.PimProductId AND FTRE.PimAttributeId = ZPAV.PimAttributeId  AND FTRE.LocaleId  = CASE WHEN FTRE.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
	 WHERE ZPPG.PimProductAttributeMediaId = FTRE.ZnodePimAttributeValueLocaleId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM @TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP  
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

  --CREATE INDEX IND_ZnodePublishInline_0999 ON Cte_GetData(PimProductId ASC)

  DELETE FROM ZnodePublishedXml WHERE PublishCatalogLogId = @versionId AND IsProductXML = 1   AND LocaleId = @LocaleId 

  --ALTER INDEX ALL ON ZnodePublishedXml  REBUILD WITH (FILLFACTOR = 80 ) 

  INSERT INTO ZnodePublishedXml (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)
SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
FROM  @TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId



DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
DROP TABLE #Cte_GetData
DROP TABLE #TBL_AttributeVAlue
SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_GetPublishSingleProduct]...';


GO
-- SELECT * FROM ZnodePublishCataloglog

-- SELECT * FROM ZnodePublishProduct WHERE PublishProductId = 218 


ALTER PROCEDURE [dbo].[Znode_GetPublishSingleProduct]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
AS
-- EXEC Znode_GetPublishProductbulk 0, 0 , '110' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 

 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 AND IsCatalogPublished =1
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
             DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

			 INSERT INTO @TBL_AttributeVAlueLocale
			 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId
			 FROM View_LoadManageProductInternal VIR
			 INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = VIR.PimProductId)
			 UNION ALL 
			 SELECT VIR.PimProductId,PimAttributeId,PimProductAttributeMediaId,ZPDE.LocaleId 
			 FROM ZnodePimAttributeValue  VIR
			 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
			 WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
 
WHILE @Counter <= @maxCountId
BEGIN
 SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId

  INSERT INTO @PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML ZPAX
  WHERE ZPAX.LocaleId = @DefaultLocaleId  
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  INSERT INTO @PimDefaultValueLocale 
   SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML ZX
  WHERE localeId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  
  DECLARE @TBL_AttributeVAlue TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT  )
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
  

    INSERT INTO @TBL_AttributeVAlue
    SELECT PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId
	FROM @TBL_AttributeVAlueLocale
    WHERE LocaleId = @LocaleId

    
	INSERT INTO @TBL_AttributeVAlue
	SELECT VI.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId
	FROM @TBL_AttributeVAlueLocale VI 
    WHERE VI.LocaleId = @DefaultLocaleId 
	AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeVAlue  CTE WHERE CTE.PimProductId = VI.PimProductId AND CTE.PimAttributeId = VI.PimAttributeId )
 

	
INSERT INTO @TBL_ZnodeTempPublish  
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM View_LoadManageProductInternal a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_AttributeValue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId)
UNION ALL 
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
UNION ALL 
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML +'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue
 
FROM ZnodePimAttributeValue ZPAV  With (NoLock)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT ',' +MediaPath 
	FROM ZnodePimProductAttributeMedia ZPPG
	INNER JOIN  @TBL_AttributeVAlue TBLV ON (TBLV.PimProductId=  ZPAV.PimProductId AND TBLV.PimAttributeId = ZPAV.PimAttributeId )
    WHERE ZPPG.PimProductAttributeMediaId = TBLV.ZnodePimAttributeValueLocaleId
	FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue
 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
UNION ALL 
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM @TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP 
INNER JOIN @TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
INNER JOIN @PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId )
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

 DELETE FROM ZnodePublishedXML WHERE  IsProductXML = 1  AND LocaleId = @localeId 
								AND  EXISTS ( SELECT TOP 1 1 FROM  @TBL_PublishCatalogId  TBL WHERE TBL.VersionId  = ZnodePublishedXML.PublishCatalogLogId AND TBL.PublishProductId = ZnodePublishedXML.PublishedId)


;WITH CTE AS
(
SELECT ROW_NUMBER() OVER (PARTITION BY PimProductId	,AttributeCode
ORDER BY PimProductId	,AttributeCode) AS RN
FROM @TBL_ZnodeTempPublish
)

DELETE FROM CTE WHERE RN<>1

  
 MERGE INTO ZnodePublishedXML TARGET 
 USING (
 SELECT zpp.PublishProductId,zpp.VersionId ,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU><SKULower>'+CAST(ISNULL((SELECT ''+Lower(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM @TBL_ZnodeTempPublish TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue
FROM  @TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId
) SOURCE 
ON (
     TARGET.PublishCatalogLogId = SOURCE.versionId 
	 AND TARGET.PublishedId = SOURCE.PublishProductId
	 AND TARGET.IsProductXML = 1 
	 AND TARGET.LocaleId = @localeId 
)
WHEN MATCHED THEN 
UPDATE 
SET  PublishedXML = xmlvalue
   , ModifiedBy = @userId 
   ,ModifiedDate = @GetDate
WHEN NOT MATCHED THEN 
INSERT (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)

VALUES (SOURCE.versionid , Source.publishProductid,Source.xmlvalue,1,@localeid,@userId,@getDate,@userId,@getDate);

DELETE FROM @TBL_ZnodeTempPublish

DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
DELETE FROM @TBL_AttributeValue 

SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_InsertPublishProductIds]...';


GO
ALTER PROCEDURE [dbo].[Znode_InsertPublishProductIds]
(
	@PublishCatalogId        INT            = NULL,
     @UserId                 INT				  ,
	 @PimProductId           VARCHAR(2000) = 0,
	 @IsCallAssociated       BIT           = 0     
	)
AS
    
/*
  Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

     Unit Testing
    
     SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
     SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
     SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
	 SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
     select * from znodepublishcatalog
	 SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
     SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
	 SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
     EXEC Znode_GetPublishProducts  @PublishCatalogId = 9 ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 117,@IsDebug= 1 
     EXEC Znode_InsertPublishProductIds  @PublishCatalogId = 0,@UserId= 2  ,@PimProductId = 29 ,@NotReturnXML= NULL,@IsDebug= 1 
     EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
	 SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
	 SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
    */ 

     BEGIN
      --  BEGIN TRAN InsertPublishProductIds;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate(); 
			 DECLARE @PimCatalogId int= ISNULL((SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId), 0);  --- this variable is used to carry y pim catalog id by using published catalog id
             DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
			,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
			,@ProductTypeAttributeId INT = dbo.Fn_GetProductTypeAttributeId()
			DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1

			 -- This variable used to carry the locale in loop 
			 -- This variable is used to carry the default locale which is globaly set
             DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 
			 DECLARE @DeletePublishProductId VARCHAR(MAX)= '', @PimProductIds VARCHAR(MAX)= '', @PimAttributeId VARCHAR(MAX)= '';
             
			 -- This table will used to hold the all currently active locale ids  
			 


		     -- This table hold the complete xml of product with other information like category and catalog
            
			 DECLARE @TBL_PimProductIds TABLE(PimProductId INT  ,PimCategoryId INT,PimCatalogId INT,PublishCatalogId INT,IsParentProducts BIT
									,DisplayOrder INT,ProductName NVARCHAR(MAX),SKU  NVARCHAR(MAX),IsActive NVARCHAR(MAX),PimAttributeFamilyId INT
									,ProfileId   VARCHAR(MAX),CategoryDisplayOrder INT ,ProductIndex INT,PRIMARY KEY (PimCatalogId,PimCategoryId,PimProductId) );  
		
			  -- This table is used to hold the product which publish in current process 
             DECLARE @TBL_PublishProductIds TABLE(PublishProductId  INT  ,PimProductId INT,PublishCatalogId  INT
													,PublishCategoryId VARCHAR(MAX),CategoryProfileIds VARCHAR(max),VersionId INT , PRIMARY KEY (PimProductId,PublishProductId,PublishCatalogId)); 
	 
			-- this check is used when this procedure is call by internal procedure to publish only product and no need to return publish xml;    
			   
			--Collected list of products for  publish 
   
			 INSERT INTO @TBL_PimProductIds ( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId,CategoryDisplayOrder,PublishCatalogId )
				SELECT ZPCC.PimProductId, ZPCC.PimCategoryId, 1 AS IsParentProducts, NULL AS DisplayOrder, ZPCC.PimCatalogId,ZPCC.DisplayOrder ,ZPC.PublishCatalogId
				FROM ZnodePimCatalogCategory AS ZPCC
				INNER JOIN ZnodePublishCatalog ZPC ON ZPC.PimCatalogId = ZPCC.PimCatalogId
		    	WHERE  (ZPCC.PimCatalogId = @PimCatalogId OR 
				EXISTS( SELECT TOP 1 1 FROM dbo.split(@PimProductId,',') SP WHERE SP.Item = ZPCC.PimProductId) ) AND ZPCC.PimProductId IS NOT NULL

				
             --Collected list of link products for  publish
			 INSERT INTO @TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId , PublishCatalogId)
				 SELECT ZPLPD.PimProductId, ZPCC.PimCategoryId, 0 AS IsParentProducts, NULL AS DisplayOrder, CTPP.PimCatalogId,CTPP.PublishCatalogId 
				 FROM ZnodePimLinkProductDetail AS ZPLPD
				 INNER JOIN @TBL_PimProductIds AS CTPP ON ZPLPD.PimParentProductId = CTPP.PimProductId AND  IsParentProducts = 1 
				 INNER JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPLPD.PimProductId AND ZPCC.PimCatalogId = CTPP.PimCatalogId
				 WHERE NOT EXISTS ( SELECT TOP 1 1 FROM @TBL_PimProductIds AS CTPPI WHERE CTPPI.PimProductId = ZPLPD.PimProductId) 
				-- AND EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPLPD.PimProductId ) 
				 AND ZPCC.PimProductId IS NOT NULL
				 GROUP BY ZPLPD.PimProductId, ZPCC.PimCategoryId,CTPP.PimCatalogId,CTPP.PublishCatalogId 
             --Collected list of Addon products for  publish
        
		     INSERT INTO @TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId,PublishCatalogId)
					 SELECT ZPAPD.PimChildProductId, ISNULL(ZPCC.PimCategoryId,0) AS PublishCategoryId, 0 AS IsParentProducts, null AS DisplayOrder,CTALP.PimCatalogId,CTALP.PublishCatalogId
					 FROM ZnodePimAddOnProductDetail AS ZPAPD 
					 INNER JOIN ZnodePimAddOnProduct AS ZPAP ON ZPAP.PimAddOnProductId = ZPAPD.PimAddOnProductId
					 INNER JOIN @TBL_PimProductIds AS CTALP ON CTALP.PimProductId = ZPAP.PimProductId AND  IsParentProducts = 1
					 LEFT JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPAPD.PimChildProductId AND ZPCC.PimCatalogId = CTALP.PimCatalogId
					 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PimProductIds AS CTALPI WHERE CTALPI.PimProductId = ZPAPD.PimChildProductId) 
				---	 AND EXISTS(SELECT TOP 1 1FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPAPD.PimChildProductId)  
					 GROUP BY ZPAPD.PimChildProductId, ZPCC.PimCategoryId , CTALP.PimCatalogId,CTALP.PublishCatalogId

					 		 	

             --Collected list of Bundle / Group / Config products for  publish
             INSERT INTO @TBL_PimProductIds(PimProductId,PimCategoryId,IsParentProducts,DisplayOrder,PimCatalogId,PublishCatalogId)
                    SELECT ZPTA.PimProductId,ISNULL(ZPCC.PimCategoryId,0),0 AS IsParentProducts,NULL DisplayOrder,CTAAP.PimCatalogId,CTAAP.PublishCatalogId
                    FROM ZnodePimProductTypeAssociation AS ZPTA INNER JOIN @TBL_PimProductIds AS CTAAP ON CTAAP.PimProductId = ZPTA.PimParentProductId AND IsParentProducts = 1
                    LEFT JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPTA.PimProductId AND ZPCC.PimCatalogId = CTAAP.PimCatalogId
                    WHERE NOT EXISTS( SELECT TOP 1 1 FROM @TBL_PimProductIds AS CTAAPI WHERE CTAAPI.PimProductId = ZPTA.PimProductId)
					--AND EXISTS(SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPTA.PimProductId)
					GROUP BY ZPTA.PimProductId,ZPCC.PimCategoryId,CTAAP.PimCatalogId,CTAAP.PublishCatalogId
        				  

			   UPDATE TBPP
               SET PublishCatalogId = ZPC.PublishCatalogId 
			   FROM @TBL_PimProductIds TBPP 
			   INNER JOIN ZnodePublishCatalog ZPC ON ZpC.PimCatalogId = TBPP.PimCatalogId;
        
		DECLARE @PublishProductId TRANSFERId 


		IF @PublishCatalogId IS NOT NULL AND @PublishCatalogId <> 0 
			  BEGIN 
			  -- SELECT * FROM @TBL_PimProductIds AS TBP
			
			  INSERT INTO @PublishProductId
			    SELECT ZPP.PublishProductId 
				FROM ZnodePublishProduct AS ZPP 
				INNER JOIN ZnodePublishCategoryProduct ZPPC ON (ZPPC.PublishProductId = ZPP.PublishProductId AND ZPPC.PublishCatalogId = ZPP.PublishCatalogId)
				--INNER JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCategoryId = ZPPC.PublishCategoryId)
				WHERE NOT EXISTS(SELECT TOP 1 1 FROM @TBL_PimProductIds AS TBP WHERE ZPP.PimProductId = TBP.PimProductId AND TBP.PublishCatalogId = ZPP.PublishCatalogId)
				AND ZPP.PublishCatalogId = @PublishCatalogId
					--Remove extra products from catalog
				
		END
		ELSE IF @IsCallAssociated = 0 
		BEGIN 
		DECLARE @TBL_ProductIdscollect TABLE(PublishProductId INT , PimproductId INT , PublishcatalogId  INT  , ProductType NVARCHAr(max))

	
		INSERT INTO @TBL_ProductIdscollect (PublishProductId,PimproductId,PublishcatalogId,ProductType)
		SELECT PublishProductId,ZPAV.PimproductId,TBPOCI.PublishcatalogId,ZPATF.AttributeDefaultValueCode
		FROM ZnodePimAttributeValue ZPAV 
		INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId )
		INNER JOIN @TBL_PimProductIds TBLIDF ON (TBLIDF.PimProductId = ZPAV.PimProductId )
		INNER JOIN ZnodePublishProduct TBPOCI ON (TBPOCI.PimProductId = TBLIDF.PimProductId AND TBPOCI.PublishCatalogId = TBLIDF.PublishCatalogId 	)
		INNER JOIN ZnodePimAttributeDefaultValue ZPATF ON (ZPATF.PimAttributeId =  @ProductTypeAttributeId 
						AND ZPADV.PimAttributeDefaultValueId = ZPATF.PimAttributeDefaultValueId )
         WHERE  IsParentProducts = 1	
		 AND LocaleId =@DefaultLocaleId
    

        IF EXISTS (SELECT TOP 1 1 FROM @TBL_ProductIdscollect WHERE ProductType IN ('GroupedProduct','BundleProduct','ConfigurableProduct','SimpleProduct') )
		     
		BEGIN 
	
		   DECLARE @TBL_DeleteTrackProduct TABLE (PublishProductId INT,AssociatedZnodeProductId INT  ,PublishCatalogId INT,PublishCatalogLogId INT ,IsDelete BIT  )

		   ;With Cte_PublishProduct AS
		   (
		     SELECT TBL.PublishProductId,PimproductId,TBL.PublishcatalogId,ProductType ,MAx(PublishCatalogLogId) PublishCatalogLogId
			 FROM  @TBL_ProductIdscollect TBL 
			 INNER JOIN ZnodePublishCatalogLog TBLG ON (TBLG.PublishCatalogId = TBL.PublishcatalogId)
			 WHERE IsCatalogPublished = 1 
		     GROUP BY TBL.PublishProductId,PimproductId,TBL.PublishcatalogId,ProductType
		   
		   )
		   , Cte_ConfigData AS 
			 (
			 SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ConfigurableProductEntity') t(p)
			 WHERE  IsConfigProductXML = 1
			 AND ProductType = 'ConfigurableProduct'
			 UNION ALL 
			  SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/GroupProductEntity') t(p)
			 WHERE  IsGroupProductXML = 1
			 AND ProductType = 'GroupedProduct'
			 UNION ALL 
			  SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/BundleProductEntity') t(p)
			 WHERE  IsBundleProductXML = 1
			 AND ProductType = 'BundleProduct'
			 UNION ALL 
			 SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/AddonEntity') t(p)
			 WHERE  IsAddOnXML = 1
			 AND LocaleId = @DefaultLocaleId 
			
			 )

		--	 SELECT * FROM ZnodePublishCatalogLog WHERE PublishCatalogId = 8 

		INSERT INTO @TBL_DeleteTrackProduct (PublishProductId,AssociatedZnodeProductId,PublishcatalogId,PublishCatalogLogId)
		SELECT ZPP.PublishProductId,AssociatedZnodeProductId,PublishcatalogId,PublishCatalogLogId
		FROM Cte_ConfigData ZPP	
		WHERE NOT EXISTS (SELECT TOP 1 1 FROM  @TBL_PublishProductIds TBLP WHERE TBLP.PublishProductId = ZPP.AssociatedZnodeProductId)
		
	

		;With Cte_updateStatus AS
		(
		 
		     SELECT  PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ConfigurableProductEntity') t(p)
			 WHERE  IsConfigProductXML = 1
			 AND CTR.AssociatedZnodeProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
			 AND CTR.PublishProductId <> ZPXML.PublishedId
			-- AND ProductType = 'ConfigurableProduct'
			 UNION ALL 
			  SELECT PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/GroupProductEntity') t(p)
			 WHERE  IsGroupProductXML = 1
			 AND CTR.AssociatedZnodeProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
			 AND CTR.PublishProductId <> ZPXML.PublishedId
			 UNION ALL 
			  SELECT  PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/BundleProductEntity') t(p)
			 WHERE  IsBundleProductXML = 1
		     AND CTR.AssociatedZnodeProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
			 AND CTR.PublishProductId <> ZPXML.PublishedId
			 UNION ALL 
			 SELECT PublishProductId,PublishcatalogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN @TBL_DeleteTrackProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId )
			 CROSS APPLY ZPXML.PublishedXML.nodes('/AddonEntity') t(p)
			 WHERE  IsAddOnXML = 1 
			 AND LocaleId = @DefaultLocaleId 
		     AND CTR.PublishProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
		     AND CTR.PublishProductId <> ZPXML.PublishedId
		
		)

		UPDATE a 
		SET IsDelete = CASE WHEN TYR.PublishProductId IS NULL THEN 1 ELSE 0 END 
		FROM @TBL_DeleteTrackProduct a 
		LEFT JOIN Cte_updateStatus TYR ON (TYR.PublishProductId = a.PublishProductId AND TYR.PublishCatalogId = a.PublishCatalogId)

		
		INSERT INTO @PublishProductId 
		SELECT DISTINCT AssociatedZnodeProductId 
		FROM @TBL_DeleteTrackProduct
		WHERE IsDelete =1  
		

		END 

	
		INSERT INTO @PublishProductId
		SELECT PublishProductid
		FROM ZnodePublishProduct ZPP
		INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId =  ZPP.PublishCatalogId )
        WHERE Not EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ZPPP WHERE (ZPPP.PimCatalogid = ZPc.PimCatalogId AND ZPPP.PimProductId = ZPP.PimProductId))  
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_PimProductIds TYR WHERE TYR.PimProductId = ZPP.PimProductId )
		AND NOT EXISTS (SELECT TOP 1 1 FROM @PublishProductId YTR WHERE YTR.Id = ZPP.PublishProductId  )	
		END  

		EXEC dbo.Znode_DeletePublishCatalogProduct  @PublishProductIds = @PublishProductId,@PublishCatalogId = @PublishCatalogId ;

		

			 -- This merge statement is used for crude oprtaion with publisgh product table
			MERGE INTO ZnodePublishProduct TARGET USING  (
				SELECT PimProductId, PublishCatalogId
				FROM @TBL_PimProductIds AS TBP
				GROUP BY PimProductId, PublishCatalogId
			 )  SOURCE
				ON --check for if already exists then just update otherwise insert the product  
				TARGET.PimProductId = SOURCE.PimProductId AND  TARGET.PublishCatalogId = SOURCE.PublishCataLogId 
				WHEN MATCHED      THEN UPDATE SET TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate	
				WHEN NOT MATCHED  THEN INSERT(PimProductId, PublishCatalogId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
									   VALUES( SOURCE.PimProductId, SOURCE.PublishCatalogId, @UserId, @GetDate, @UserId, @GetDate )
				OUTPUT INSERTED.PublishProductId, INSERTED.PimProductId, INSERTED.PublishCatalogId
				INTO @TBL_PublishProductIds(PublishProductId, PimProductId, PublishCatalogId); 
			
			-- Here used the ouput clause to catch what data inserted or updated into variable table
	    	
		 --   SELECT a.PublishCatalogId,a.PublishCategoryId,b.PimProductId
			--FROM @TBL_PublishProductIds a 
			--INNER JOIN @TBL_PimProductIds b ON (a.PimProductId = b.PimCategoryId)
			----INNER JOIN ZnodePublishProduct ZPP  ON (ZPP.PimProductId = b.PimProductId AND ZPP.PublishCatalogId =  a.PublishCatalogId)
			--WHERE PimCategoryId = 2 
				
			
			-- This merge staetment is used for crude opration with  ZnodePublishCategoryProduct table
			 MERGE INTO ZnodePublishCategoryProduct TARGET USING  (
				 SELECT PublishProductId,
				 ISNULL(ZPC.PublishCategoryId,0)PublishCategoryId,
				 TBP.PublishCatalogId
				 FROM @TBL_PimProductIds AS TBP 
				 LEFT JOIN ZnodePublishCategory AS ZPC ON (ISNULL(TBP.PimCategoryId, 0) = ISNULL(ZPC.PimCategoryId, -1) AND ZPC.PublishCatalogId = TBP.PublishCatalogId)
				 INNER JOIN @TBL_PublishProductIds AS TBPP ON TBP.PimProductId = TBPP.PimProductId
				 AND TBP.PublishCatalogId = TBPP.PublishCatalogId
				 GROUP BY PublishProductId, ZPC.PublishCategoryId, TBP.PublishCatalogId
			  ) SOURCE
					ON  TARGET.PublishCatalogId = SOURCE.PublishCatalogId AND ISNULL(TARGET.PublishCategoryId, 0) = ISNULL(SOURCE.PublishCategoryId, 0) AND TARGET.PublishProductId = SOURCE.PublishProductId
					
					WHEN MATCHED THEN UPDATE SET TARGET.PublishCategoryId = CASE WHEN SOURCE.PublishCategoryId = 0 THEN NULL ELSE SOURCE.PublishCategoryId END 
												 ,TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate					
					WHEN NOT MATCHED THEN INSERT(PublishProductId,PublishCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
										  VALUES(SOURCE.PublishProductId,CASE WHEN SOURCE.PublishCategoryId =0 THEN NULL ELSE SOURCE.PublishCategoryId  END , SOURCE.PublishCatalogId,@UserId,@GetDate,@userId,@GetDate);
   
    
   WHILE @Counter <= @maxCountId
   BEGIN 
    SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
   
     
	 SELECT VIR.PimProductId,PimAttributeId,AttributeValue,ZnodePimAttributeValueLocaleId,VIR.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE (LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishProductIds ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	 AND (PimAttributeId = @ProductNamePimAttributeId  OR PimAttributeId = @SKUPimAttributeId OR PimAttributeId = @IsActivePimAttributeId  )
  
   

		
	          MERGE INTO ZnodePublishProductDetail   TARGET
			  USING  (SELECT   ZPP.PublishProductId ,TBLA.AttributeValue PRoductName,TBLAI.AttributeValue SKU ,ISNULL(TBLAII.AttributeValue,'0') IsActive --,TBLAIII.AttributeValue ProductType
						FROM  @TBL_PublishProductIds zpp
						INNER JOIN #TBL_AttributeVAlue TBLA ON (TBLA.PimAttributeId = @ProductNamePimAttributeId AND TBLA.PimProductId = ZPP.PimProductId AND TBLA.LocaleId  = CASE WHEN TBLA.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLA ON (TBLA.PimProductId = ZPP.PimProductId AND TBLA.PimAttributeId = @ProductNamePimAttributeId)
					    INNER JOIN #TBL_AttributeVAlue TBLAI ON (TBLAI.PimAttributeId = @SKUPimAttributeId AND TBLAI.PimProductId = ZPP.PimProductId AND TBLAI.LocaleId  = CASE WHEN TBLAI.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLAI ON (TBLAI.PimProductId = ZPP.PimProductId AND TBLAI.PimAttributeId = @SKUPimAttributeId)
					    INNER JOIN #TBL_AttributeVAlue TBLAII ON (TBLAII.PimAttributeId = @IsActivePimAttributeId AND TBLAII.PimProductId = ZPP.PimProductId AND TBLAII.LocaleId  = CASE WHEN TBLAII.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
						--INNER JOIN #TBL_AttributeVAlue TBLAIII ON (TBLAIII.PimAttributeId = @ProductTypePimAttributeId AND TBLAIII.PimProductId = ZPP.PimProductId AND TBLAIII.LocaleId  = CASE WHEN TBLAIII.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLAIII ON (TBLAII.PimProductId = ZPP.PimProductId AND TBLAII.PimAttributeId = @ProductTypeAttributeId)
						GROUP BY ZPP.PublishProductId,TBLA.AttributeValue,TBLAI.AttributeValue,TBLAII.AttributeValue --,TBLAIII.AttributeValue
						)   SOURCE
			ON (TARGET.PublishProductId = SOURCE.PublishProductId
				 AND TARGET.LocaleId = @LocaleId 
			) 
			WHEN MATCHED THEN 
			UPDATE 
			SET TARGET.ProductName   = SOURCE.ProductName
				,TARGET.SKU			 = SOURCE.SKU
				,TARGET.IsActive	= SOURCE.IsActive
				,TARGET.ModifiedBy	 = @userid
				,TARGET.ModifiedDate  = @GetDate
			WHEN NOT MATCHED THEN 
			INSERT (PublishProductId
					,ProductName
					,SKU
					,IsActive
					,LocaleId
					,CreatedBy
					,CreatedDate
					,ModifiedBy
					,ModifiedDate)
			VALUES ( SOURCE.PublishProductId
					,SOURCE.ProductName
					,SOURCE.SKU
					,SOURCE.IsActive
					,@LocaleId
					,@userId
					,@GetDate
					,@userId
					,@GetDate);

		 
         DROP TABLE #TBL_AttributeVAlue 
		
		 SET @Counter = @counter + 1 
			  END 

			  IF @PublishCatalogId IS NULL OR @PublishCatalogId =0 
			  BEGIN 
			  SELECT PublishProductId, PimProductId, PublishCatalogId 
			  FROM @TBL_PublishProductIds
			  END 

		--COMMIT TRAN InsertPublishProductIds;
		END TRY 
		BEGIN CATCH 
		 SELECT ERROR_MESSAGE()
	--	 ROLLBACK TRAN InsertPublishProductIds;
		END CATCH 
	END
GO
PRINT N'Altering [dbo].[Znode_GetPublishAssociatedAddons]...';


GO
ALTER  PROCEDURE [dbo].[Znode_GetPublishAssociatedAddons](@PublishCatalogId NVARCHAR(MAX) = 0,
                                                         @PimProductId     NVARCHAR(MAX) = '',
                                                         @VersionId        INT           = 0,
                                                         @UserId           INT)
AS 
   
/*
    Summary : If PimcatalogId is provided get all products with Addons and provide above mentioned data
              If PimProductId is provided get all Addons if associated with given product id and provide above mentioned data
    			Input: @PublishCatalogId or @PimProductId
    		    output should be in XML format
              sample xml5
              <AddonEntity>
              <ZnodeProductId></ZnodeProductId>
              <ZnodeCatalogId></ZnodeCatalogId>
              <AddonGroupName></AddonGroupName>
              <TempAsscociadedZnodeProductIds></TempAsscociadedZnodeProductIds>
              </AddonEntity>
    <AddonEntity>
      <ZnodeProductId>6</ZnodeProductId>
      <ZnodeCatalogId>2</ZnodeCatalogId>
      <AddonGroupName>RadioButton</AddonGroupName>
      <TempAsscociadedZnodeProductIds>53,54,55,56,57,82</TempAsscociadedZnodeProductIds>
      <ZnodeProductId>14</ZnodeProductId>
      <ZnodeCatalogId>2</ZnodeCatalogId>
      <AddonGroupName>RadioButton</AddonGroupName>
      <TempAsscociadedZnodeProductIds>6,7</TempAsscociadedZnodeProductIds>
      <ZnodeProductId>16</ZnodeProductId>
      <ZnodeCatalogId>2</ZnodeCatalogId>
      <AddonGroupName>RadioButton</AddonGroupName>
      <TempAsscociadedZnodeProductIds>7,14,54,6</TempAsscociadedZnodeProductIds>
    </AddonEntity>
    Unit Testing 
     SELECT * FROM ZnodePublishcatalog
	begin tran
     EXEC [dbo].[Znode_GetPublishAssociatedAddons] @PublishCatalogId = '0' ,@PimProductId=  '29' ,@UserId=2
	rollback tran
     EXEC [dbo].[Znode_GetPublishAssociatedAddons] @PublishCatalogId = 3 ,@PimProductId=  '' ,@UserId=2
     EXEC [dbo].[Znode_GetPublishAssociatedAddons] @PublishCatalogId =null ,@PimProductId=  6   
   
	*/

     BEGIN
        -- BEGIN TRANSACTION GetPublishAssociatedAddons;
         BEGIN TRY
          SET NOCOUNT ON 
			 DECLARE @GetDate DATETIME= dbo.Fn_GetDate();
             DECLARE @LocaleId INT, @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId()
			 , @Counter INT= 1
			 , @MaxRowId INT= 0;

            -- DECLARE @PimAddOnGroupId VARCHAR(MAX);

			 DECLARE @TBL_PublisshIds TABLE (PublishProductId INT , PimProductId INT , PublishCatalogId INT)

             DECLARE @TBL_LocaleId TABLE
             (RowId    INT IDENTITY(1, 1),
              LocaleId INT
             );


			 IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			 BEGIN 
			 		 
			   INSERT INTO @TBL_PublisshIds 
			   EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId,1
			   
			  -- SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			  -- SELECT 	@PimProductId	
			 END 
			
			
			 --SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN 0 = 0 OR 0 IS NULL THEN  MAX(PublishCatalogLogId) ELSE 0 END 
			 --FROM ZnodePublishProduct ZPP 
			 --INNEr JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
    --       WHERE zpp.PublishProductId  IN (218,214)
    --          GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
			  DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT , VersionId INT  );

			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @VersionId = 0 OR @VersionId IS NULL THEN  MAX(PublishCatalogLogId) ELSE @VersionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNEr JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_PublisshIds SP WHERE SP.PublishProductId = ZPP.PublishProductId  AND  @PublishCatalogId = '0' ) 
			 OR (ZPP.PublishCatalogId =  @PublishCatalogId ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId

             DECLARE @TBL_AddonGroupLocale TABLE
             (PimAddonGroupId INT,
              DisplayType     NVARCHAR(400),
              AddonGroupName  NVARCHAR(MAX),
			  LocaleId INT 
             );
           
             INSERT INTO @TBL_LocaleId(LocaleId)
                    SELECT LocaleId
                    FROM ZnodeLocale
                    WHERE IsActive = 1;

          
             SET @MaxRowId = ISNULL(
                                   (
                                       SELECT MAX(RowId)
                                       FROM @TBL_LocaleId
                                   ), 0);
    
             WHILE @Counter <= @MaxRowId
                 BEGIN
                     SET @LocaleId =
                     (
                         SELECT LocaleId
                         FROM @TBL_LocaleId
                         WHERE RowId = @Counter
                     );
                     INSERT INTO @TBL_AddonGroupLocale
                     (PimAddonGroupId,
                      DisplayType,
                      AddonGroupName					  
                     )
                     EXEC Znode_GetAddOnGroupLocale
                          '',
                          @LocaleId;

					UPDATE @TBL_AddonGroupLocale SET LocaleId = @LocaleId WHERE LocaleId IS NULL 

                    SET @Counter = @Counter + 1;
                 END;
				     
					  IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			           BEGIN 
			 		 
			         DELETE FROM ZnodePublishedXML WHERE IsAddOnXML =1  
					 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLV WHERE ZnodePublishedXML.PublishedId = TBLV.PublishProductId   AND ZnodePublishedXML.PublishCatalogLogId = TBLV.VersionId )
			    
			  
					 END 
					 ELSE 
					 BEGIN 

					 SET @versionid  =(SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId TBLV )

					 DELETE FROM ZnodePublishedXML WHERE IsAddOnXML =1 
					 AND PublishCatalogLogId  = @versionid 
					 END 
			
					--SELECT * FROM @TBL_PublishCatalogId
					 MERGE INTO ZnodePublishedXML TARGET 
					 USING (
					 SELECT   ZPPP.PublishProductId,ZPPP.PublishCatalogId,ZPPD.LocaleId,ZPPP.VersionId,'<AddonEntity><VersionId>'+CAST(ZPPP.VersionId AS VARCHAR(50))+'</VersionId><ZnodeProductId>'+CAST(ZPPP.[PublishProductId] AS VARCHAR(50))+'</ZnodeProductId><ZnodeCatalogId>'
				     +CAST(ZPPP.[PublishCatalogId] AS VARCHAR(50))+'</ZnodeCatalogId><AssociatedZnodeProductId>'+CAST(ZPP.PublishProductId  AS VARCHAR(50))
					 +'</AssociatedZnodeProductId><DisplayOrder>'+CAST( ISNULL(ZPOPD.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder><AssociatedProductDisplayOrder>'
					 +CAST(ISNULL(ZPAOP.DisplayOrder,'') AS VARCHAR(50))+'</AssociatedProductDisplayOrder><RequiredType>'+ISNULL(RequiredType,'')+'</RequiredType><DisplayType>'
					 + ISNULL(DisplayType,'')+'</DisplayType><GroupName>'+ISNULL(AddonGroupName,'')+'</GroupName><LocaleId>'+CAST(ZPPD.LocaleId AS VARCHAR(50))+'</LocaleId><IsDefault>'+CAST(ISNULL(IsDefault,0) AS VARCHAR(50))+'</IsDefault></AddonEntity>'  ReturnXML		   
				 
                      FROM [ZnodePimAddOnProductDetail] AS ZPOPD
                           INNER JOIN [ZnodePimAddOnProduct] AS ZPAOP ON ZPOPD.[PimAddOnProductId] = ZPAOP.[PimAddOnProductId]
						    INNER JOIN @TBL_PublishCatalogId ZPPP ON (ZPPP.PimProductId = ZPAOP.PimProductId )
                           INNER JOIN @TBL_PublishCatalogId ZPP ON(ZPP.PimProductId = ZPOPD.[PimChildProductId] AND ZPP.PublishCatalogId = ZPPP.PublishCatalogId )
						   INNER JOIN ZnodePublishProductDetail ZPPD ON (ZPPD.PublishProductId = ZPPP.PublishProductId)
						   INNER JOIN @TBL_AddonGroupLocale TBAG ON (TBAG.PimAddonGroupId   = ZPAOP.PimAddonGroupId AND TBAG.LocaleId = ZPPD.LocaleId )
						   
					) SOURCE 
					ON (
						 TARGET.PublishCatalogLogId = SOURCE.VersionId 
						 AND TARGET.PublishedId = SOURCE.PublishProductId
						 AND TARGET.IsAddonXML = 1 
						 AND TARGET.LocaleId = SOURCE.LocaleId 
					)
					WHEN MATCHED THEN 
					UPDATE 
					SET  PublishedXML = ReturnXML
					   , ModifiedBy = @userId 
					   ,ModifiedDate = @GetDate
					WHEN NOT MATCHED THEN 
					INSERT (PublishCatalogLogId
					,PublishedId
					,PublishedXML
					,IsAddonXML
					,LocaleId
					,CreatedBy
					,CreatedDate
					,ModifiedBy
					,ModifiedDate)
					
					VALUES (Source.VersionId , Source.publishProductid,Source.ReturnXML,1,SOURCE.localeid,@userId,@getDate,@userId,@getDate);
					
					
					SELECT PublishedXML ReturnXML
					FROM @TBL_PublishCatalogId TBLPP 
					INNER JOIN ZnodePublishedXML ZPX ON (ZPX.PublishCatalogLogId = TBLPP.VersionId AND ZPX.PublishedId = TBLPP.publishProductid )
					WHERE ZPX.IsAddonXML = 1
             --SELECT ReturnXML
             --FROM @TBL_AddonXML;
		
           --  COMMIT TRANSACTION GetPublishAssociatedAddons;
         END TRY
         BEGIN CATCH
		     SELECT ERROR_MESSAGE(),ERROR_PROCEDURE()
             DECLARE @Status BIT;
             SET @Status = 0;
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishAssociatedAddons @PublishCatalogId = '+@PublishCatalogId+',@PimProductId='+@PimProductId+',@VersionId='+CAST(@VersionId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
             SELECT 0 AS ID,
                    CAST(0 AS BIT) AS Status;
           --  ROLLBACK TRANSACTION GetPublishAssociatedAddons;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishAssociatedAddons',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishAssociatedProducts]...';


GO
ALTER  PROCEDURE [dbo].[Znode_GetPublishAssociatedProducts]
(   
	@PublishCatalogId VARCHAR(MAX) = '',
    @PimProductId     VARCHAR(MAX) = '',
    @ProductType      VARCHAR(300) = 'BundleProduct',
    @VersionId        INT          = 0,
    @UserId           INT
)
AS
  /*
    Summary : If PimcatalogId is provided then get all  Bundles / Group / Configurable product and  provide above mentioned data
              If PimProductId is provided then get all Bundles / Group / Configurable if associated with given product id and provide above mentioned data
    		 Input: @PublishCatalogId or @PimProductId
    		 Output should be in XML format
             Required o/p
    			<BundleProductEntity>
    			<ZnodeProductId></ZnodeProductId>
    			<ZnodeCatalogId></ZnodeCatalogId>
    			<AsscociadedZnodeProductIds></AsscociadedZnodeProductIds>
    			</BundleProductEntity>
    Unit Testing 
    BundleProduct
    EXEC [dbo].[Znode_GetPublishAssociatedProducts] @PublishCatalogId = 3 ,@PimProductId = '' , @ProductType = 'BundleProduct' ,@userId = 2 
    EXEC [dbo].[Znode_GetPublishAssociatedProducts] @PublishCatalogId =12 ,@PimProductId ='' , @ProductType = 'ConfigurableProduct',@userId = 2 
    Group Product
    EXEC [dbo].[Znode_GetPublishAssociatedProducts]  @PublishCatalogId ='2',@PimProductIdh =''  , @PimProducttType = 'GroupedProduct'
    EXEC [dbo].[Znode_GetPublishAssociatedProducts]  @PublishCatalogId ='',@PimProductId ='200066'  , @PimProducttType = 'GroupedProduct'
    EXEC [dbo].[Znode_GetPublishAssociatedProducts] @PimProductId ='200066'  , @PimProducttType = 'GroupedProduct'
   */
     BEGIN
         BEGIN TRAN GetPublishAssociatedProducts;
         BEGIN TRY
             SET NOCOUNT ON;

			  DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT , VersionId INT );
			  DECLARE @PimAttributeId INT = [dbo].[Fn_GetProductTypeAttributeId]()
					  ,@PimAttributeDefaultValueId INT = (SELECT TOP 1 PimAttributeDefaultValueId FROM ZnodePimAttributeDefaultValue WHERE AttributeDefaultValueCode = @ProductType)
					,@DefaultLocaleId INT = dbo.fn_getDefaultlocaleId() 
			 DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
			 
			 DECLARE @TBL_PublisshIds TABLE (PublishProductId INT , PimProductId INT , PublishCatalogId INT)
			 IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			 BEGIN 
			 		 
			   INSERT INTO @TBL_PublisshIds 
			   EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId,1
			   
			   SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			  -- SELECT 	@PimProductId	
			 END 




			 INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,ZPP.PimProductId,CASE WHEN @VersionId = 0 OR @VersionId IS NULL THEN  MAX(PublishCatalogLogId) ELSE @VersionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePimAttributeValue ZPV ON (ZPV.PimProductId = ZPP.PimProductId )
			 INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = ZPV.PimAttributeValueId)
			 LEFT JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_PublisshIds SP WHERE SP.PublishProductId = ZPP.PublishProductId  AND  @PublishCatalogId = '' ) 
			 OR (ZPP.PublishCatalogId =  @PublishCatalogId ))
			 AND ZPV.PimAttributeId  = @PimAttributeId
			 AND ZPAVL.PimAttributeDefaultValueId= @PimAttributeDefaultValueId
			 AND LocaleId = @DefaultLocaleId
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,ZPP.PimProductId
			
			--SELECT * FROM @TBL_PublishCatalogId

             DECLARE @TBL_ProductTypeXML TABLE
             (PublishProductId INT,
              PublishCatalogId INT,
              ReturnXML        XML,
              VersionId        INT
             );
             DECLARE @TBL_PimProductId TABLE
             ([PimProductId]   INT,
              PublishCatalogId INT,
              PublishProductId INT
             );
            
             DECLARE @TBL_PimAssociatedEntity TABLE
             (
			  ZnodeProductId                  INT,
              ZnodeCatalogId                  INT,
              AsscociadedZnodeProductIds  VARCHAR(MAX),
			  ConfigurableProductEntity       NVARCHAR(MAX),
              LocaleId                        INT,
			  DisplayOrder					  INT,
              VersionId                       INT
             );
			

		     SET @versionid  =(SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId TBLV )

             IF @ProductType = 'BundleProduct'
                 BEGIN
				    
					  IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			           BEGIN 
			 		 
			         DELETE FROM ZnodePublishedXML WHERE  IsBundleProductXML = 1 
					 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLV WHERE ZnodePublishedXML.PublishedId = TBLV.PublishProductId   AND ZnodePublishedXML.PublishCatalogLogId = TBLV.VersionId )
			           
			  -- SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			  -- SELECT 	@PimProductId	
					 END 
					 ELSE 
					 BEGIN 
					 SET @versionid  =(SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId TBLV )

					 DELETE FROM ZnodePublishedXML WHERE IsBundleProductXML = 1 
					 AND PublishCatalogLogId  = @versionid
					 END 

					 
				 	 MERGE INTO ZnodePublishedXML TARGET 
					 USING (        
				     SELECT TBP.PublishProductId, TBP.VersionId, '<BundleProductEntity><VersionId>'+CAST(TBP.VersionId AS VARCHAR(50))+'</VersionId><ZnodeCatalogId>'+CAST(TBP.PublishCatalogId AS VARCHAR(50))+'</ZnodeCatalogId><ZnodeProductId>'
					 +CAST(TBP.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><AssociatedZnodeProductId>'
					 +CAST(TBPU.PublishProductId AS VARCHAR(50))+'</AssociatedZnodeProductId><AssociatedProductDisplayOrder>'+CAST(ZPTA.DisplayOrder AS VARCHAR(50))+'</AssociatedProductDisplayOrder></BundleProductEntity>' ReturnXML 
					 FROM @TBL_PublishCatalogId TBP
					 INNER JOIN ZnodePimProductTypeAssociation ZPTA ON(ZPTA.PimParentProductId = TBP.PimProductId)
					 INNER JOIN ZnodePublishProduct TBPU ON (TBPU.PimProductId = ZPTA.PimProductId AND TBPU.PublishCatalogId = TBP.PublishCatalogId )
					 ) SOURCE 
					ON (
								 TARGET.PublishCatalogLogId = SOURCE.versionId 
								 AND TARGET.PublishedId = SOURCE.PublishProductId
								 AND TARGET.IsBundleProductXML = 1 
								 AND TARGET.LocaleId = 0 
							)
							WHEN MATCHED THEN 
							UPDATE 
							SET  PublishedXML = ReturnXML
							   , ModifiedBy = @userId 
							   ,ModifiedDate = @GetDate
							WHEN NOT MATCHED THEN 
							INSERT (PublishCatalogLogId
							,PublishedId
							,PublishedXML
							,IsBundleProductXML
							,LocaleId
							,CreatedBy
							,CreatedDate
							,ModifiedBy
							,ModifiedDate)

							VALUES (SOURCE.versionid , Source.PublishProductid,Source.ReturnXML,1,0,@userId,@getDate,@userId,@getDate);
						                                         
                 END;
             ELSE
             IF @ProductType = 'GroupedProduct'
                 BEGIN
				  
				     IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			           BEGIN 
			 		 
			         DELETE FROM ZnodePublishedXML WHERE  IsGroupProductXML = 1 
					 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLV WHERE ZnodePublishedXML.PublishedId = TBLV.PublishProductId   AND ZnodePublishedXML.PublishCatalogLogId = TBLV.VersionId )
			           
			  -- SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			  -- SELECT 	@PimProductId	
					 END 
					 ELSE 
					 BEGIN 
					 SET @versionid  =(SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId TBLV )

					 DELETE FROM ZnodePublishedXML WHERE IsGroupProductXML = 1 
					 AND PublishCatalogLogId  = @versionid
					 END 

				   

				 	 MERGE INTO ZnodePublishedXML TARGET 
					 USING (  
				     SELECT TBP.PublishProductId, TBP.VersionId, '<GroupProductEntity><VersionId>'+CAST(TBP.VersionId AS VARCHAR(50))+'</VersionId><ZnodeCatalogId>'+CAST(TBP.PublishCatalogId AS VARCHAR(50))+'</ZnodeCatalogId><ZnodeProductId>'
					 +CAST(TBP.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><AssociatedZnodeProductId>'
					 +CAST(TBPU.PublishProductId AS VARCHAR(50))+'</AssociatedZnodeProductId><AssociatedProductDisplayOrder>'+CAST(ZPTA.DisplayOrder AS VARCHAR(50))+'</AssociatedProductDisplayOrder></GroupProductEntity>'  ReturnXML
					 FROM @TBL_PublishCatalogId TBP
					 INNER JOIN ZnodePimProductTypeAssociation ZPTA ON(ZPTA.PimParentProductId = TBP.PimProductId)
					 INNER JOIN ZnodePublishProduct TBPU ON (TBPU.PimProductId = ZPTA.PimProductId AND TBPU.PublishCatalogId = TBP.PublishCatalogId )
					  ) SOURCE 
					ON (
								 TARGET.PublishCatalogLogId = SOURCE.versionId 
								 AND TARGET.PublishedId = SOURCE.PublishProductId
								 AND TARGET.IsGroupProductXML = 1 
								 AND TARGET.LocaleId = 0 
							)
							WHEN MATCHED THEN 
							UPDATE 
							SET  PublishedXML = ReturnXML
							   , ModifiedBy = @userId 
							   ,ModifiedDate = @GetDate
							WHEN NOT MATCHED THEN 
							INSERT (PublishCatalogLogId
							,PublishedId
							,PublishedXML
							,IsGroupProductXML
							,LocaleId
							,CreatedBy
							,CreatedDate
							,ModifiedBy
							,ModifiedDate)

							VALUES (SOURCE.versionid , Source.PublishProductid,Source.ReturnXML,1,0,@userId,@getDate,@userId,@getDate);
    
                 END;
             ELSE
             IF @ProductType = 'ConfigurableProduct'
                 BEGIN
				        IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			           BEGIN 
			 		 
			         DELETE FROM ZnodePublishedXML WHERE  IsConfigProductXML = 1 
					 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLV WHERE ZnodePublishedXML.PublishedId = TBLV.PublishProductId   AND ZnodePublishedXML.PublishCatalogLogId = TBLV.VersionId )
			           
			  -- SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			  -- SELECT 	@PimProductId	
					 END 
					 ELSE 
					 BEGIN 
					 SET @versionid  =(SELECT TOP 1 VersionId FROM @TBL_PublishCatalogId TBLV )

					 DELETE FROM ZnodePublishedXML WHERE  IsConfigProductXML = 1 
					 AND PublishCatalogLogId  = @versionid
					 END 

				   

				 	 MERGE INTO ZnodePublishedXML TARGET 
					 USING (  
				     SELECT TBP.PublishProductId, TBP.VersionId, '<ConfigurableProductEntity><VersionId>'+CAST(TBP.VersionId AS VARCHAR(50))+'</VersionId><ZnodeCatalogId>'+CAST(TBP.PublishCatalogId AS VARCHAR(50))+'</ZnodeCatalogId><ZnodeProductId>'
					 +CAST(TBP.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><AssociatedZnodeProductId>'
					 +CAST(TBPU.PublishProductId AS VARCHAR(50))+'</AssociatedZnodeProductId><AssociatedProductDisplayOrder>'+CAST(ZPTA.DisplayOrder AS VARCHAR(50))+'</AssociatedProductDisplayOrder>'
					 +(SELECT DISTINCT  ZPA.AttributeCode ConfigurableAttributeCode 
														FROM ZnodePimConfigureProductAttribute ZPCPA 
														LEFT JOIN ZnodePimAttribute ZPA ON (Zpa.PimAttributeId = ZPCPA.PimAttributeId) 
                                                        WHERE  ZPCPA.PimProductId = TBP.PimProductId 
                                                        FOR XML PATH('ConfigurableAttributeCodes')) +'</ConfigurableProductEntity>'  ReturnXML
					 FROM @TBL_PublishCatalogId TBP
					 INNER JOIN ZnodePimProductTypeAssociation ZPTA ON(ZPTA.PimParentProductId = TBP.PimProductId)
					 INNER JOIN ZnodePublishProduct TBPU ON (TBPU.PimProductId = ZPTA.PimProductId AND TBPU.PublishCatalogId = TBP.PublishCatalogId )
				    ) SOURCE 
					ON (
								 TARGET.PublishCatalogLogId = SOURCE.versionId 
								 AND TARGET.PublishedId = SOURCE.PublishProductId
								 AND TARGET.IsConfigProductXML = 1 
								 AND TARGET.LocaleId = 0 
							)
							WHEN MATCHED THEN 
							UPDATE 
							SET  PublishedXML = ReturnXML
							   , ModifiedBy = @userId 
							   ,ModifiedDate = @GetDate
							WHEN NOT MATCHED THEN 
							INSERT (PublishCatalogLogId
							,PublishedId
							,PublishedXML
							,IsConfigProductXML
							,LocaleId
							,CreatedBy
							,CreatedDate
							,ModifiedBy
							,ModifiedDate)

							VALUES (SOURCE.versionid , Source.PublishProductid,Source.ReturnXML,1,0,@userId,@getDate,@userId,@getDate);
    
                 END;

				 SELECT PublishedXML ReturnXML
				 FROM ZnodePublishedXML  ZPXM 
				 WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLP WHERE TBLP.VersionId = ZPXM.PublishCatalogLogId and TBLP.PublishProductid = ZPXm.PublishedId )
				 AND IsConfigProductXML = CASE WHEN @ProductType = 'ConfigurableProduct' THEN  1 ELSE 0 END 
				 AND IsGroupProductXML = CASE WHEN @ProductType = 'GroupedProduct' THEN  1 ELSE 0 END 
				 AND IsBundleProductXML = CASE WHEN @ProductType = 'BundleProduct' THEN  1 ELSE 0 END 
				  

				 -- Create Nonclustered index ind_ZnodePublishedXML_Bulk on ZnodePublishedXML(PublishCatalogLogId,IsConfigProductXML,IsGroupProductXML,IsBundleProductXML) 
				  				-- SELECT ReturnXML FROM @TBL_ProductTypeXML;
		
		    COMMIT TRAN GetPublishAssociatedProducts;
			
         END TRY
         BEGIN CATCH
		    SELECT ERROR_MESSAGE()
            DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishAssociatedProducts @PublishCatalogId = '+@PublishCatalogId+',@PimProductId='+@PimProductId+',@ProductType= '+@ProductType+',@VersionId='+CAST(@VersionId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRANSACTION GetPublishAssociatedProducts;
			EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPublishAssociatedProducts',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Refreshing [dbo].[Znode_GetPublishProducts]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPublishProducts]';


GO
PRINT N'Update complete.';


GO
DECLARE @pv binary(16)
BEGIN TRANSACTION
EXEC(N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting]=N''<?xml version="1.0" encoding="utf-16"?>
<columns>
  <column>
    <id>1</id>
    <name>PublishCatalogLogId</name>
    <headertext>ID</headertext>
    <width>20</width>
    <datatype>Int32</datatype>
    <columntype>Int32</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>2</id>
    <name>PublishStatus</name>
    <headertext>Publish Status</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>3</id>
    <name>UserName</name>
    <headertext>Username</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow'', [ModifiedDate]=''20170802 12:32:39.627'' WHERE ItemName = ''ZnodePublishCatalogLog''')
EXEC(N'DECLARE @pv binary(16)
'+N'UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>4</id>
    <name>PublishCategoryCount</name>
    <headertext>No. of Categories Published</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>5</id>
    <name>PublishProductCount</name>
    <headertext>No. of Products Published</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
   '',NULL,NULL) WHERE ItemName = ''ZnodePublishCatalogLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N'' <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>6</id>
    <name>LastPublishedDate</name>
    <headertext>Last Published Date</headertext>
    <width>40</width>
    <datatype>Date</datatype>
    <columntype>String</columntype>
    <allowsorting>false</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>7</id>
    <name>CreatedDate</name>
    <headertext>Start Time</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <vi'',NULL,NULL) WHERE ItemName = ''ZnodePublishCatalogLog''
UPDATE [dbo].[ZnodeApplicationSetting] SET [Setting].WRITE(N''ewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
  <column>
    <id>8</id>
    <name>ModifiedDate</name>
    <headertext>End Time</headertext>
    <width>40</width>
    <datatype>String</datatype>
    <columntype>String</columntype>
    <allowsorting>true</allowsorting>
    <allowpaging>false</allowpaging>
    <format>
    </format>
    <isvisible>y</isvisible>
    <mustshow>y</mustshow>
    <musthide>n</musthide>
    <maxlength>0</maxlength>
    <isallowsearch>n</isallowsearch>
    <isconditional>n</isconditional>
    <isallowlink>n</isallowlink>
    <islinkactionurl>
    </islinkactionurl>
    <islinkparamfield>
    </islinkparamfield>
    <ischeckbox>n</ischeckbox>
    <checkboxparamfield>
    </checkboxparamfield>
    <iscontrol>n</iscontrol>
    <controltype>
    </controltype>
    <controlparamfield>
    </controlparamfield>
    <displaytext>
    </displaytext>
    <editactionurl>
    </editactionurl>
    <editparamfield>
    </editparamfield>
    <deleteactionurl>
    </deleteactionurl>
    <deleteparamfield>
    </deleteparamfield>
    <viewactionurl>
    </viewactionurl>
    <viewparamfield>
    </viewparamfield>
    <imageactionurl>
    </imageactionurl>
    <imageparamfield>
    </imageparamfield>
    <manageactionurl>
    </manageactionurl>
    <manageparamfield>
    </manageparamfield>
    <copyactionurl>
    </copyactionurl>
    <copyparamfield>
    </copyparamfield>
    <xaxis>n</xaxis>
    <yaxis>n</yaxis>
    <isadvancesearch>n</isadvancesearch>
    <Class>
    </Class>
    <SearchControlType>--Select--</SearchControlType>
    <SearchControlParameters>
    </SearchControlParameters>
    <DbParamField>
    </DbParamField>
    <useMode>DataBase</useMode>
    <IsGraph>n</IsGraph>
    <allowdetailview>n</allowdetailview>
  </column>
</columns>'',NULL,NULL) WHERE ItemName = ''ZnodePublishCatalogLog''
')
COMMIT TRANSACTION
GO 
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>OrderNumber</name><headertext>Order Number</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>OrderCommission</name><headertext>Order Commission</headertext><width>0</width><datatype>Decimal</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>Name</name><headertext>Referral Commission Type</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>ReferralCommission</name><headertext>Referral Commission</headertext><width>0</width><datatype>Decimal</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>UserId</name><headertext>UserId</headertext><width>0</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>ReferralStatus</name><headertext>Referral Status</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>ReferralCommissionTypeId</name><headertext>ReferralCommissionTypeId</headertext><width>0</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>OmsReferralCommissionId</name><headertext>OmsReferralCommissionId</headertext><width>0</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName='View_CustomerReferralCommissionDetail'
GO 
ALTER PROCEDURE [dbo].[Znode_DeletePublishCatalogProduct]
(   
   	@PublishProductIds	Transferid READONLY 
	,@PublishCatalogId   INT = 0 
	
)
AS
   /*
    Summary:Delete the publish product from all related references 
    Unit Testing   
	begin tran
	SELECT * FROM ZnodePublishCatalog 
    EXEC Znode_DeletePublishCatalog @PublishCatalogIds =5 ,@IsDeleteCatalogId = 1 , @PublishCategoryIds = ''
	rollback tran
   */ 
     BEGIN
         BEGIN TRANSACTION A;
         BEGIN TRY
             SET NOCOUNT ON;
	
	         DECLARE @TBL_DeleteIds TABLE (PublishCatalogId INT ,PublishCategoryId INT ,PublishProductId INT )  
			 DECLARE @TBL_DeleteCategoryProduct TABLE (PublishCategoryProductId INT )			 
			 
			 INSERT INTO @TBL_DeleteIds (PublishCatalogId,PublishProductId,PublishCategoryId  )
			 SELECT ZPP.PublishCatalogId,ZPP.PublishProductId ,ZPCP.PublishCategoryId
			 FROM ZnodePublishProduct  ZPP 
			 INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = ZPP.PublishCatalogId) 
			 LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND ZPCP.PublishProductId = ZPP.PublishProductId )
			 LEFT JOIN ZnodePublishCategory  ZPPC ON (ZPPC.PublishCatalogId = ZPC.PublishCatalogId AND ZPPC.PublishCategoryId = ZPCP.PublishCategoryId)
			 WHERE EXISTS (SELECT TOP 1 1 FROM @PublishProductIds ZPCC WHERE ZPCC.Id = ZPP.PublishProductId )
			 
			 INSERT INTO @TBL_DeleteCategoryProduct 
			 SELECT PublishCategoryProductId 
			 FROM ZnodePublishCategoryProduct a 
			 INNER JOIN ZnodePublishProduct ZPP ON (ZPP.PublishProductId = a.PublishProductId AND ZPP.PublishCatalogId = a.PublishCatalogId)
			 INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = a.PublishCatalogId )
			 INNER JOIN ZnodePublishCategory ZPCC ON (ZPCC.PublishCategoryId = a.PublishCategoryId)
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ZPDF WHERE ZPDF.PimCatalogId = ZPC.PimCatalogId AND ZPDF.PimCategoryId = ZPCC.PimCategoryId AND ZPDF.PimProductId = ZPP.PimProductId  )
			 AND a.PublishCatalogId = @PublishCatalogId
					
						
		     UPDATE 	TBL 
			 SET PublishCategoryId = NULL 
			 FROM @TBL_DeleteIds TBL 
			 WHERE  EXISTS  (SELECT TOP 1 1 FROM ZnodePublishCategoryProduct ZPCC 
			 WHERE  TBL.PublishCatalogId = ZPCC.PublishCatalogId AND ZPCC.PublishCategoryId = TBL.PublishCategoryId   AND TBL.PublishProductId <> ZPCC.PublishProductId ) 			 

			 DELETE FROM [ZnodeCMSWidgetCategory]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodeCMSWidgetCategory].[PublishCategoryId]
             )
			
			 ;
         
             DELETE FROM [ZnodeCMSWidgetProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSWidgetProduct].[PublishProductId]
             );
             DELETE FROM [ZnodeCMSCustomerReview]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSCustomerReview].[PublishProductId]
             );
             DELETE FROM ZnodeUserWishList
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM ZnodePublishProductDetail ZPPD
                     WHERE ZPPD.SKU = ZnodeUserWishList.SKU
                           AND qw.[PublishProductId] = ZPPD.[PublishProductId]
                 )
             );
            

             DELETE FROM [ZnodePromotionProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePromotionProduct].[PublishProductId]
             );
             DELETE FROM [ZnodePromotionCategory]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePromotionCategory].[PublishCategoryId]
             );
             DELETE FROM [ZnodePublishCategoryDetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePublishCategoryDetail].[PublishCategoryId]
             );	
            
             DELETE FROM ZnodeCMSSEODetailLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM [ZnodeCMSSEODetail]
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_DeleteIds AS qw
                     WHERE qw.[PublishProductId] = [ZnodeCMSSEODetail].[SEOId]
                 )
                       AND EXISTS
                 (
                     SELECT TOP 1 1
                     FROM [ZnodeCMSSEOType] AS we
                     WHERE we.[CMSSEOTypeId] = [ZnodeCMSSEODetail].[CMSSEODetailId]
                           AND [Name] = 'Product'
                 )
                       AND [ZnodeCMSSEODetail].CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId
             );
             DELETE FROM [ZnodeCMSSEODetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSSEODetail].[SEOId]
             )
                   AND EXISTS
             (
                 SELECT TOP 1 1
                 FROM [ZnodeCMSSEOType] AS we
                 WHERE we.[CMSSEOTypeId] = [ZnodeCMSSEODetail].[CMSSEODetailId]
                       AND [Name] = 'Product'
             );
            
             DELETE FROM [ZnodePublishCategoryProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePublishCategoryProduct].[PublishProductId]
             )
			 OR 
			 EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteCategoryProduct AS qw
                 WHERE qw.PublishCategoryProductId = [ZnodePublishCategoryProduct].PublishCategoryProductId
             )
			 ;
             DELETE FROM [ZnodePublishCategoryProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePublishCategoryProduct].[PublishCategoryId]
             );
			  DELETE FROM dbo.ZnodeSearchGlobalProductBoost WHERE 
			 EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = ZnodeSearchGlobalProductBoost.[PublishProductId]
              );
             DELETE FROM [ZnodePublishProductDetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePublishProductDetail].[PublishProductId]
             );
             DELETE FROM [ZNodePublishProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZNodePublishProduct].[PublishProductId]
             
			 );
		
			 DELETE FROM ZnodePublishCategoryDetail 
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodePublishCategoryDetail.[PublishCategoryId]
              );
			
			DELETE FROM ZnodeSearchGlobalProductCategoryBoost 
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodeSearchGlobalProductCategoryBoost.[PublishCategoryId]
             
			 );
			 DELETE FROM ZnodePublishCategory
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodePublishCategory.[PublishCategoryId]
             
			 );

			 			 				
             COMMIT TRANSACTION A;
			 
         END TRY
         BEGIN CATCH
		      SELECT ERROR_MESSAGE() 
			 
         END CATCH;
     END;
GO 
GO

ALTER TABLE [dbo].[ZnodeERPTaskScheduler] DROP CONSTRAINT [FK_ZnodeERPTaskScheduler_ZnodeERPTaskSchedulerSetting]
GO

ALTER TABLE [dbo].[ZnodeERPTaskScheduler] DROP CONSTRAINT [FK_ZnodeERPTaskScheduler_ZnodeERPConfigurator]
GO

/****** Object:  Table [dbo].[ZnodeERPTaskScheduler]    Script Date: 8/3/2017 12:47:41 PM ******/
DROP TABLE [dbo].[ZnodeERPTaskScheduler]
GO

/****** Object:  Table [dbo].[ZnodeERPTaskScheduler]    Script Date: 8/3/2017 12:47:41 PM ******/


CREATE TABLE [dbo].[ZnodeERPTaskScheduler](
	[ERPTaskSchedulerId] [int] IDENTITY(1,1) NOT NULL,
	[ERPConfiguratorId] [int] NULL,
	[TaskSchedulerSettingId] [int] NOT NULL,
	[SchedulerName] [nvarchar](100) NULL,
	[SchedulerType] [varchar](20) NULL,
	[TouchPointName] [nvarchar](100) NOT NULL,
	[SchedulerFrequency] [nvarchar](50) NULL,
	[RepeatTaskEvery] [int] NULL,
	[RepeatTaskForDuration] [varchar](200) NULL,
	[StartDate] [datetime] NULL,
	[ExpireDate] [datetime] NULL,
	[IsEnabled] [bit] NOT NULL CONSTRAINT [DF_ZnodeERPTaskScheduler_IsEnabled]  DEFAULT ((1)),
	[SchedulerCallFor] [varchar](200) NULL,
	[CreatedBy] [int] NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[ModifiedBy] [int] NOT NULL,
	[ModifiedDate] [datetime] NOT NULL,
 CONSTRAINT [PK_ZnodeERPTaskScheduler] PRIMARY KEY CLUSTERED 
(
	[ERPTaskSchedulerId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING ON
GO

ALTER TABLE [dbo].[ZnodeERPTaskScheduler]  WITH CHECK ADD  CONSTRAINT [FK_ZnodeERPTaskScheduler_ZnodeERPConfigurator] FOREIGN KEY([ERPConfiguratorId])
REFERENCES [dbo].[ZnodeERPConfigurator] ([ERPConfiguratorId])
GO

ALTER TABLE [dbo].[ZnodeERPTaskScheduler] CHECK CONSTRAINT [FK_ZnodeERPTaskScheduler_ZnodeERPConfigurator]
GO

ALTER TABLE [dbo].[ZnodeERPTaskScheduler]  WITH CHECK ADD  CONSTRAINT [FK_ZnodeERPTaskScheduler_ZnodeERPTaskSchedulerSetting] FOREIGN KEY([TaskSchedulerSettingId])
REFERENCES [dbo].[ZnodeERPTaskSchedulerSetting] ([TaskSchedulerSettingId])
GO

ALTER TABLE [dbo].[ZnodeERPTaskScheduler] CHECK CONSTRAINT [FK_ZnodeERPTaskScheduler_ZnodeERPTaskSchedulerSetting]
GO
ALTER PROCEDURE [dbo].[Znode_GetERPTaskSchedulerDetail]
( @ERPTaskSchedulerId INT)
AS
  /*
    
    Summary:  List of erp task scheduler details by ERPTaskSchedulerId    		              
    Unit Testing         	
       EXEC Znode_GetERPTaskSchedulerDetail 1   
   */ 
	 BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             SELECT ERPTaskSchedulerId,isnull(ERPConfiguratorId,0) ERPConfiguratorId,ZETS.TaskSchedulerSettingId,SchedulerName,SchedulerType,TouchPointName,SchedulerFrequency,RepeatTaskEvery,RepeatTaskForDuration,StartDate,ExpireDate,WeekDays,Months,Days,OnDays,OnMonths,RecurEvery,ZETS.CreatedBy,ZETS.CreatedDate,ZETS.ModifiedBy,ZETS.ModifiedDate,ZETS.IsEnabled,IsMonthlyDays,SchedulerCallFor
             FROM ZnodeERPTaskScheduler AS ZETS
                  INNER JOIN ZnodeERPTaskSchedulerSetting AS ZETSS ON(ZETSS.TaskSchedulerSettingId = ZETS.TaskSchedulerSettingId)
             WHERE ZETS.ERPTaskSchedulerId = @ERPTaskSchedulerId;
         END TRY
         BEGIN CATCH
               DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetERPTaskSchedulerDetail @ERPTaskSchedulerId = '+CAST(@ERPTaskSchedulerId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetERPTaskSchedulerDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO 
	INSERT INTO ZnodeActions ( AreaName	,ControllerName	,ActionName,	IsGlobalAccess	,CreatedBy,	CreatedDate, ModifiedBy,	ModifiedDate)
	VALUES(	NULL	,'Account',	'SetDefaultProfile',	1	,2	,'2017-08-03 12:36:12.940',	2,	'2017-08-03 12:36:12.940' )
GO
ALTER TABLE ZnodePaymentSetting ADD PaymentDisplayName  NVARCHAR(1200)
GO 
ALTER PROCEDURE [dbo].[Znode_GetOmsOrderDetail]
( @WhereClause NVARCHAR(MAx),
  @Rows        INT            = 100,
  @PageNo      INT            = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT			,
  @UserId	   INT = 0 ,
  @IsFromAdmin int=0
  )
AS 
    /*  
     Summary : This procedure is used to get the oms order detils                 
			   Records are fetched for those users who placed the order i.e UserId is Present in ZnodeUser and  ZnodeOmsOrderDetails tables			  	 
	 Unit Testing:
	
     EXEC Znode_GetOmsOrderDetail '',@Order_BY = '',@RowsCount= 0, @UserId = 0 ,@Rows = 80, @PageNo = 1
	 	        
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX), @ProcessType  varchar(50)='Order'

             DECLARE @TBL_OrderList TABLE (OmsOrderId INT,OrderNumber VARCHAR(200),PortalId INT,StoreName NVARCHAR(MAX),CurrencyCode VARCHAR(100),OrderState NVARCHAR(MAX),ShippingId INT ,
				PaymentTypeId INT,PaymentSettingId INT,PaymentStatus NVARCHAR(MAX),PaymentType VARCHAR(100),ShippingStatus BIT ,OrderDate DATETIME,UserId INT,UserName VARCHAR(300),PaymentTransactionToken NVARCHAR(600),Total NUMERIC(28,6),
				OrderItem NVARCHAR(1000),OmsOrderDetailsId INT, ItemCount INT,PODocumentPath NVARCHAR(600),IsInRMA BIT,CreatedByName NVARCHAr(max),ModifiedByName NVARCHAR(max),RowId INT,CountNo INT,Email NVARCHAR(MAX),PhoneNumber NVARCHAR(MAX),
				SubTotal NUMERIC(28,6),TaxCost NUMERIC(28,6),ShippingCost NUMERIC(28,6),BillingPostalCode NVARCHAR(200),ShippingPostalCode NVARCHAR(200),OrderModifiedDate datetime, PaymentDisplayName nvarchar(1200))
				
             SET @SQL = '
			   	 
			;WIth  OrderList AS ( 

			  SELECT Zoo.OmsOrderId,Zoo.OrderNumber, Zp.PortalId,Zp.StoreName ,ZODD.CurrencyCode,case when ZOS.IsShowToCustomer=0 and '+cast( @IsFromAdmin as varchar(50))+' = 0 then ZOSC.Description else  ZOS.Description end  OrderState,ZODD.ShippingId,ZODD.
PaymentTypeId,ZODD.PaymentSettingId
				,ZOPS.Name PaymentStatus,ZPS.Name PaymentType,CAST(1 AS BIT) ShippingStatus ,ZODD.OrderDate,ZODD.UserId,ISNULL(ZU.FirstName,'''')
						+'' ''+ISNULL(ZU.LastName,'''') UserName ,ZODD.PaymentTransactionToken ,ZODD.Total ,ZODD.OmsOrderDetailsId,ZODD.PoDocument,ZVGD.UserName CreatedBy , ZVGDI.UserName ModifiedBy
						,ZU.Email ,ZU.PhoneNumber ,ZODD.SubTotal ,ZODD.TaxCost ,ZODD.ShippingCost,ZODD.BillingPostalCode,
						(select top 1 ShipToPostalCode from ZnodeOmsOrderShipment where OmsOrderShipmentId in  (select OmsOrderShipmentId from ZnodeOmsOrderLineItems where OmsOrderDetailsId = ZODD.OmsOrderDetailsId)) AS ShippingPostalCode,
						ZODD.ModifiedDate AS OrderModifiedDate, ZPSS.PaymentDisplayName
			  FROM ZnodeOmsOrder ZOO 
			  INNER JOIN ZnodeOmsOrderDetails ZODD ON (ZODD.OmsOrderId = ZOO.OmsOrderId)
			  INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZODD.portalId ) 
			  LEFT JOIN ZnodePaymentType ZPS ON (ZPS.PaymentTypeId = ZODD.PaymentTypeId )
			  LEFT JOIN  ZnodeOmsOrderStateShowToCustomer ZOSC ON (ZOSC.OmsOrderStateId = ZODD.OmsOrderStateId)
			  LEFT JOIN ZnodeOmsOrderState ZOS ON (ZOS.OmsOrderStateId = ZODD.OmsOrderStateId) 
			  LEFT JOIN ZnodeOmsPaymentState ZOPS ON (ZOPS.OmsPaymentStateId = ZODD.OmsPaymentStateId)
			  LEFT JOIN ZnodeUser ZU ON (ZU.UserId = ZODD.UserId) 
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZODD.CreatedBy )
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZODD.ModifiedBy)
			  LEFT JOIN ZnodeShipping ZS ON (ZS.ShippingId = ZODD.ShippingId)
			  LEFT OUTER JOIN ZnodePaymentSetting ZPSS ON (ZPSS.PaymentSettingId = ZODD.PaymentSettingId)
			  WHERE  ZODD.IsActive = 1 
		       AND (EXISTS (SELECT TOP 1 1 FROM dbo.Fn_GetRecurciveUserId ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''' ) FNRU WHERE FNRU.UserId = ZU.UserId ) OR '+CAST(@UserId AS VARCHAR(50))+' =0 ) 
		
			) 

		    , Cte_OrderLineItem AS 
		    (
     
			  SELECT ZOOLI.ProductName,ZOOLI.Price,Count(ZOOLI.OmsOrderLineItemsId)Over(PARTITION BY Ol.OmsOrderId Order by ZOOLI.OmsOrderDetailsId) CountId 
			  ,Row_Number()Over( PARTITION BY Ol.OmsOrderId Order BY ZOOLI.Price DESC, ZOOLI.ProductName) RowId,Ol.OmsOrderId
			  ,CAST(Case when ZRRLI.RmaRequestItemId IS NULL THEN 0 ELSE 1 END AS BIT )  IsInRMA  ,OL.CreatedBy ,OL.ModifiedBy
			  FROM ZnodeOmsOrderLineItems  ZOOLI 
			  LEFT JOIN OrderList OL ON ( OL.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId ) 
			  LEFT JOIN ZnodeRmaRequestItem ZRRLI ON (ZRRLI.OmsOrderLineItemsId = ZOOLI.OmsOrderLineItemsId ) 
			  WHERE ZOOLI.Quantity > 0
			--  AND ZOOLI.OrderLineItemRelationshipTypeId != 1 
			  
		    )
		    ,Cte_GetOrderData AS 
			(
			 
			SELECT distinct OL.*, CTOLI.ProductName,CountId ,IsInRMA 
			FROM OrderList OL 
			LEFT JOIN Cte_OrderLineItem CTOLI ON (CTOLI.OmsOrderId = OL.OmsOrderId AND CTOLI.RowId = 1 )
		
			
			)
			, Cte_OrderLineDescribe AS (
	
			SELECT distinct *,'+dbo.Fn_GetPagingRowId(@Order_BY,'OmsOrderId DESC,OmsOrderDetailsId DESC')+',Count(*)Over() CountNo
			FROM Cte_GetOrderData 
			WHERE 1= 1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
		    )
  		 
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			ProductName OrderItem,OmsOrderDetailsId,CountId ItemCount, PoDocument AS PODocumentPath,IsInRMA ,CreatedBy as CreatedByName ,ModifiedBy as ModifiedByName,RowId,CountNo,
			Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode, ShippingPostalCode,OrderModifiedDate,PaymentDisplayName
			FROM Cte_OrderLineDescribe 
			'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			
			PRINT @SQL 

			INSERT INTO @TBL_OrderList(OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,RowId,CountNo,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate,PaymentDisplayName  )           
		    EXEC(@SQL)

			SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_OrderList),0)
			
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate,PaymentDisplayName
			FROM @TBL_OrderList	
           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsOrderDetail @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetOmsOrderDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO 

ALTER PROCEDURE [dbo].[Znode_GetPaymentSetting]
(
  @WhereClause  NVARCHAR(Max)  = '',
  @Rows         INT            = 100,
  @PageNo       INT            = 1,
  @Order_BY     VARCHAR(1000)  = '',
  @RowsCount    INT OUT            ,
  @PortalId     INT            = 0 ,
  @ProfileId    INT            = 0 ,
  @UserId       INT			   = 0 , 
  @IsAssociated INT            = 0
)
AS 
 /*
   Summary :- This procedure is used to get the associated and Unassociated list of paymentsetting for portal and profile 

   Unit Testing 
  
   DECLARE @profilei int = 0 
   EXEC Znode_GetPaymentSetting @WhereClause = '', @RowsCount =  @profilei OUT ,@PortalId = 1 ,@ProfileId= 0 ,@IsAssociated = 0 ,@UserId= -1  SELECT  @profilei 

 */
 BEGIN 
  BEGIN TRY 
   SET NOCOUNT ON 
     DECLARE @SQL NVARCHAR(MAX)= '',@FilterWhereClause VARCHAR(2000) = '' ,@InternalOrderBy VARCHAR(2000)= ''

	 DECLARE @TBL_PaymentSetting TABLE (PaymentSettingId INT, PaymentApplicationSettingId INT,PaymentTypeId INT,PaymentGatewayId INT
										,PaymentName VARCHAR(600),IsActive BIT,DisplayOrder INT,IsTestMode BIT,IsPoDocUploadEnable BIT
										,IsPoDocRequire BIT,CreatedBy INT,CreatedDate DATETIME,ModifiedBy INT,ModifiedDate DATETIME 
										,PortalId INT,StoreName NVARCHAR(max),IsAssociated BIT,ProfileId int,ProfileName NVARCHAR(200),PaymentTypeName VARCHAr(500),GatewayName VARCHAR(300),RowId INT,CountNo INT 
										,PaymentDisplayName nvarchar(1200))
	 
	
     IF ISNULL(@UserId,0) <> 0  OR (ISNULL(@PortalId,0) > 0 AND ISNULL(@ProfileId,0) > 0)
	 BEGIN 
	  DECLARE  @PortalIds VARCHAR(2000) = '' ,@ProfileIds VARCHAR(2000) = '' ,@PaymentSettingIds VARCHAR(2000) 
	  IF ISNULL(@UserId,0) <> 0 
	  BEGIN 
	  SET @PortalIds = @PortalId
	  EXEC Znode_GetUserPortalAndProfile @UserId ,@PortalIds OUT,@ProfileIds OUT
	  END 
	  ELSE 
	  BEGIN 
	   SET @PortalIds = @PortalId 
	   SET @ProfileIds = @ProfileId
	  END 
	  EXEC Znode_GetCommonPaymentSetting @PortalIds,@ProfileIds,@PaymentSettingIds OUT

	  SET @FilterWhereClause = ' WHERE  PaymentSettingId IN ('+@PaymentSettingIds+') '

	 END 
		 
	IF ISNULL(@PortalId,0) > 0 AND ( ISNULL(@UserId,0) = 0 AND  ISNULL(@ProfileId,0) = 0)
	BEGIN  
	 SET @SQL = ' 
	             ;With Cte_PaymentSetting AS 
				 (
				 SELECT  ZPS.PaymentSettingId,ZPS.PaymentApplicationSettingId,ZPS.PaymentTypeId,ZPS.PaymentGatewayId,ZPS.PaymentName,ZPS.IsActive
						,ZPS.DisplayOrder,ZPS.IsTestMode,ZPS.IsPoDocUploadEnable,ZPS.IsPoDocRequire,ZPS.CreatedBy,ZPS.CreatedDate,ZPS.ModifiedBy,ZPS.ModifiedDate
						,ZP.PortalId,ZP.StoreName, CASE WHEN ZPPS.PortalPaymentId IS NULL THEN 0 ELSE 1 END IsAssociated, NULL ProfileId, NULL ProfileName,ZPT.Name PaymentTypeName,ZPG.GatewayName,ZPS.PaymentDisplayName				 
				 FROM ZnodePaymentSetting ZPS
				 INNER JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZPS.PaymentTypeId)
				 LEFT JOIN ZnodePaymentGateway ZPG ON (ZPG.PaymentGatewayId= ZPS.PaymentGatewayId)
				 CROSS APPLY ZnodePortal ZP 
				 LEFT JOIN ZnodePortalPaymentSetting ZPPS on ( ZPPS.PortalId = ZP.PortalId AND ZPPS.PaymentSettingId = ZPS.PaymentSettingId) 
				 )
				
				 '
	 SET @FilterWhereClause = ' WHERE PortalId = '+CAST(@PortalId AS VARCHAR(50))+' 
								AND  IsAssociated = '+CAST(@IsAssociated AS VARCHAR(50))+' '
	 SET @InternalOrderBy = ' PaymentSettingId,PortalId '
    END
	ELSE IF ISNULL(@ProfileId,0) > 0 AND ( ISNULL(@UserId,0) = 0 AND  ISNULL(@PortalId,0) = 0)
	BEGIN 
	  SET @SQL = ' 
	            ;With Cte_PaymenTSetting AS 
				 (
				 SELECT  ZPS.PaymentSettingId,ZPS.PaymentApplicationSettingId,ZPS.PaymentTypeId,ZPS.PaymentGatewayId,ZPS.PaymentName,ZPS.IsActive
						,ZPS.DisplayOrder,ZPS.IsTestMode,ZPS.IsPoDocUploadEnable,ZPS.IsPoDocRequire,ZPS.CreatedBy,ZPS.CreatedDate,ZPS.ModifiedBy,ZPS.ModifiedDate
						,NULL PortalId,NULL StoreName, CASE WHEN ZPPS.ProfilePaymentSettingId IS NULL THEN 0 ELSE 1 END IsAssociated ,ZP.ProfileId,ZP.ProfileName,ZPT.Name PaymentTypeName,ZPG.GatewayName,ZPS.PaymentDisplayName				 
				 FROM ZnodePaymentSetting ZPS
				 INNER JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZPS.PaymentTypeId)
				 LEFT JOIN ZnodePaymentGateway ZPG ON (ZPG.PaymentGatewayId= ZPS.PaymentGatewayId)
				 CROSS APPLY ZnodeProfile ZP 
				 LEFT JOIN ZnodeProfilePaymentSetting ZPPS on ( ZPPS.ProfileId = ZP.ProfileId AND ZPPS.PaymentSettingId = ZPS.PaymentSettingId) 
				 )
               '
	   SET @FilterWhereClause = ' WHERE ProfileId = '+CAST(@ProfileId AS VARCHAR(50))+' 
									AND  IsAssociated = '+CAST(@IsAssociated AS VARCHAR(50))+' '
	  SET @InternalOrderBy = ' PaymentSettingId,ProfileId '
	END 
	ELSE 
	BEGIN 
	  SET @SQL = ' 
	            ;With Cte_PaymenTSetting AS 
				 (
				 SELECT   ZPS.PaymentSettingId,ZPS.PaymentApplicationSettingId,ZPS.PaymentTypeId,ZPS.PaymentGatewayId,ZPS.PaymentName,ZPS.IsActive
						,ZPS.DisplayOrder,ZPS.IsTestMode,ZPS.IsPoDocUploadEnable,ZPS.IsPoDocRequire,ZPS.CreatedBy,ZPS.CreatedDate,ZPS.ModifiedBy,ZPS.ModifiedDate
						,NULL PortalId,NULL StoreName, NULL IsAssociated ,NULL ProfileId,NULL ProfileName,ZPT.Name PaymentTypeName,ZPG.GatewayName	,ZPS.PaymentDisplayName			 
				 FROM ZnodePaymentSetting ZPS
				 INNER JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZPS.PaymentTypeId)
				 LEFT JOIN ZnodePaymentGateway ZPG ON (ZPG.PaymentGatewayId= ZPS.PaymentGatewayId)
				  ) '
	 SET @FilterWhereClause = CASE WHEN @FilterWhereClause ='' THEN ' WHERE 1=1 ' ELSE @FilterWhereClause END 
	 SET @InternalOrderBy = ' PaymentSettingId '
	END 

	SET @SQL = @SQL+ ', Cte_PaymentSettingFilter AS 
				 (
				    
					SELECT PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName , PaymentTypeName,GatewayName,PaymentDisplayName
						,'+dbo.Fn_GetPagingRowId(@Order_BY,@InternalOrderBy)+',Count(*)Over() CountNo

					FROM Cte_PaymenTSetting 
				    '+@FilterWhereClause+'
					'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
				 ) 
				 
				 SELECT PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName,PaymentTypeName,GatewayName,PaymentDisplayName,RowId ,CountNo
				 FROM Cte_PaymentSettingFilter '
				 +[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)
    
	 INSERT INTO @TBL_PaymentSetting (PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName,PaymentTypeName,GatewayName,PaymentDisplayName,RowID ,CountNo)
	 EXEC (@SQL)

	 SET @RowsCount = ISNULL((SELECT Top 1 CountNo FROM @TBL_PaymentSetting),0)
    
	 SELECT PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName,PaymentTypeName,GatewayName,PaymentDisplayName
	 FROM @TBL_PaymentSetting


  END TRY 
  BEGIN CATCH 
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPaymentSetting @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@ProfileId='+CAST(@ProfileId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
         			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPaymentSetting',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
  END CATCH
 END
GO
UPDATE ZnodeApplicationSetting 
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>PaymentSettingId</name><headertext>Checkbox</headertext><width>40</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>ID</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>PaymentName</name><headertext>Payment Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>y</isallowlink><islinkactionurl>/Payment/Edit</islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>PaymentDisplayName</name><headertext>Payment Display Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentName</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Name</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>GatewayName</name><headertext>Payment Gateway</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentGatewayId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentGatewayId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Gateway</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>ProfileName</name><headertext>Profile Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>ProfileId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>ProfileId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Profile Name</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>IsActive</name><headertext>Enable</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>IsActive</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>IsActive</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Enable</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>DisplayOrder</name><headertext>Display Order</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>DisplayOrder</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>DisplayOrder</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Display Order</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>Manage</name><headertext>Action</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Edit|Delete</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId|</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentSettingId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Edit|Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Payment/Edit|/Payment/Delete</manageactionurl><manageparamfield>PaymentSettingId|PaymentSettingId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'ZnodePayment'
GO 
UPDATE ZnodeApplicationSetting 
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>OmsOrderId</name><headertext>Checkbox</headertext><width>30</width><datatype>String</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>OrderNumber</name><headertext>Order No</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>y</isallowlink><islinkactionurl>/Order/Manage</islinkactionurl><islinkparamfield>OmsOrderId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>UserName</name><headertext>Customer Name</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>Email</name><headertext>Email</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>PhoneNumber</name><headertext>Phone Number</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>StoreName</name><headertext>Store Name</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>OrderState</name><headertext>Order Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>orderState</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>PaymentStatus</name><headertext>Payment Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>paymentStatus</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>PaymentDisplayName</name><headertext>Payment Name</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>paymentType</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>10</id><name>OrderTotalWithCurrency</name><headertext>Total</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>11</id><name>SubTotalAmount</name><headertext>SubTotal</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>12</id><name>Tax</name><headertext>Tax</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>13</id><name>Shipping</name><headertext>Shipping</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>14</id><name>BillingPostalCode</name><headertext>Billing Zip Code</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>15</id><name>ShippingPostalCode</name><headertext>Shipping Zip Code</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>16</id><name>OrderDateWithTime</name><headertext>Order Date</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>17</id><name>CreatedByName</name><headertext>Created By</headertext><width>40</width><datatype>String</datatype><columntype>Boolean</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>18</id><name>ModifiedByName</name><headertext>Modified By</headertext><width>40</width><datatype>String</datatype><columntype>Boolean</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>19</id><name>Manage</name><headertext>Action</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format>View|void-payment</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>View</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Order/Manage</manageactionurl><manageparamfield>OmsOrderId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'ZnodeOrder'
GO 
UPDATE ZnodeApplicationSetting 
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>PaymentSettingId</name><headertext>Checkbox</headertext><width>40</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>ID</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>PaymentName</name><headertext>Payment Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentTypeId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Option</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>PaymentDisplayName</name><headertext>Payment Display Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentTypeId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Option</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>GatewayName</name><headertext>Payment Gateway</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentGatewayId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentGatewayId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Gateway</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>IsActive</name><headertext>Enable</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>IsActive</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>IsActive</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Enable</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>DisplayOrder</name><headertext>Display Order</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>DisplayOrder</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>DisplayOrder</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Display Order</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>Manage</name><headertext>Action</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Delete</format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentSettingId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Store/RemoveAssociatedPaymentSetting</manageactionurl><manageparamfield>PaymentSettingId,PortalId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'AssociatedPaymentListToPortal'
GO 
UPDATE ZnodeApplicationSetting 
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>PaymentSettingId</name><headertext>Checkbox</headertext><width>40</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>ID</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>PaymentName</name><headertext>Payment Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentTypeId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Option</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>PaymentDisplayName</name><headertext>Payment Display Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentTypeId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Option</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>GatewayName</name><headertext>Payment Gateway</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentGatewayId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentGatewayId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Gateway</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>IsActive</name><headertext>Enable</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>IsActive</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>IsActive</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Enable</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>DisplayOrder</name><headertext>Display Order</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>DisplayOrder</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>DisplayOrder</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Display Order</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>Manage</name><headertext>Action</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Edit|Delete</format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId|</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentSettingId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Edit|Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Payment/Edit|/Payment/Delete</manageactionurl><manageparamfield>PaymentSettingId|PaymentSettingId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'UnassociatedPaymentListToPortal'
GO 
CREATE PROCEDURE [dbo].[Znode_GetCategoryAttributeValueId]
( @PimCategoryId  TRANSFERID READONLY  ,
  @PimAttributeId VARCHAR(MAX),
  @LocaleId       INT)
AS 
/*
     Summary:- This Procedure is used to get the category attribute values 
     Unit Testing 
     EXEC Znode_GetCategoryAttributeValue 1,7,1	 
  */
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TBL_AttributeCode TABLE
             (PimAttributeId INT,
              AttributeCode  VARCHAR(300)
             );
             INSERT INTO @TBL_AttributeCode(PimAttributeId,AttributeCode)
                    SELECT PimAttributeId, AttributeCode         
                    FROM ZnodePimAttribute ZPA
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM dbo.split(@PimAttributeId, ',') SP
                        WHERE Sp.Item = ZPA.PimAttributeId
                    );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             WITH Cte_AttributeValueLocale
                  AS (SELECT ZPCAV.PimCategoryAttributeValueId,PimCategoryId,ZPCAVL.CategoryValue,AttributeCode,ZPA.PimAttributeId,ZPCAVL.LocaleId
                      FROM ZnodePimCategoryAttributeValue ZPCAV
                      INNER JOIN ZnodePimCategoryAttributeValueLocale ZPCAVL ON(ZPCAVL.PimCategoryAttributeValueId = ZPCAV.PimCategoryAttributeValueId)
                      INNER JOIN ZnodePimAttribute ZPA ON(ZPA.PimAttributeId = ZPCAV.PimAttributeId)
                      WHERE EXISTS
                      (
                          SELECT TOP 1 1
                          FROM @PimCategoryId SP
                          WHERE ZPCAV.PimCategoryId = SP.ID 
                      )
                           AND EXISTS
                      (
                          SELECT TOP 1 1
                          FROM @TBL_AttributeCode TBAC
                          WHERE ZPA.AttributeCode = TBAC.AttributeCode
                      )
                           AND ZPCAVL.LocaleId IN(@DefaultLocaleId, @LocaleId)),

                  Cte_AttributeValueFirstLocale
                  AS (SELECT PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId
                      FROM Cte_AttributeValueLocale CTAVL
                      WHERE LocaleId = @LocaleId),

                  Cte_AttributeValueSecondLocale
                  AS (
                  SELECT PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId
                  FROM Cte_AttributeValueFirstLocale
                  UNION ALL
                  SELECT PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId
                  FROM Cte_AttributeValueLocale CTAVL
                  WHERE LocaleId = @DefaultLocaleId
                        AND NOT EXISTS
                  (
                      SELECT TOP 1 1
                      FROM Cte_AttributeValueFirstLocale CTAVFL
                      WHERE CTAVFL.PimCategoryId = CTAVL.PimCategoryId
                            AND CTAVFL.AttributeCode = CTAVL.AttributeCode
                  )),

                  Cte_AddAttributeDefaultValue
                  AS (SELECT PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId
                      FROM Cte_AttributeValueSecondLocale CTAVS)

                  INSERT INTO @TBL_AttributeValue(PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
                         SELECT PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId
                         FROM Cte_AddAttributeDefaultValue;

              SELECT *  FROM @TBL_AttributeValue;
            
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCategoryAttributeValue @PimCategoryId = ,@PimAttributeId='+@PimAttributeId+',@LocaleId='+CAST(@LocaleId AS VARCHAR(10))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		 
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCategoryAttributeValue',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO 
ALTER PROCEDURE [dbo].[Znode_GetPublishCategory]
(   @PublishCatalogId INT,
    @UserId           INT,
    @VersionId        INT,
    @Status           BIT = 0 OUT,
    @IsDebug          BIT = 0)
AS 
/*
       Summary:Publish category with their respective products and details 
	            The result is fetched in xml form   
       Unit Testing   
       Begin transaction 
       SELECT * FROM ZnodePIMAttribute 
	   SELECT * FROM ZnodePublishCatalog 

       EXEC [Znode_GetPublishCategory] @PublishCatalogId = 5,@VersionId = 0 ,@UserId =2 ,@IsDebug = 1 
     


       Rollback Transaction 
	*/
     BEGIN
         BEGIN TRAN GetPublishCategory;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @LocaleId INT= 0, @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId(), @Counter INT= 1, @MaxId INT= 0, @CategoryIdCount INT;
             DECLARE @IsActive BIT= [dbo].[Fn_GetIsActiveTrue]();
             DECLARE @AttributeIds VARCHAR(MAX)= '', @PimCategoryIds VARCHAR(MAX)= '', @DeletedPublishCategoryIds VARCHAR(MAX)= '', @DeletedPublishProductIds VARCHAR(MAX);
             --get the pim catalog id 
			 DECLARE @PimCatalogId INT=(SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId); 

             DECLARE @TBL_AttributeIds TABLE
             (PimAttributeId       INT,
              ParentPimAttributeId INT,
              AttributeTypeId      INT,
              AttributeCode        VARCHAR(600),
              IsRequired           BIT,
              IsLocalizable        BIT,
              IsFilterable         BIT,
              IsSystemDefined      BIT,
              IsConfigurable       BIT,
              IsPersonalizable     BIT,
              DisplayOrder         INT,
              HelpDescription      VARCHAR(MAX),
              IsCategory           BIT,
              IsHidden             BIT,
              CreatedDate          DATETIME,
              ModifiedDate         DATETIME,
              AttributeName        NVARCHAR(MAX),
              AttributeTypeName    VARCHAR(300)
             );
             DECLARE @TBL_AttributeDefault TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder   INT
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             DECLARE @TBL_LocaleIds TABLE
             (RowId     INT IDENTITY(1, 1),
              LocaleId  INT,
              IsDefault BIT
             );
             DECLARE @TBL_PimCategoryIds TABLE
             (PimCategoryId       INT,
              PimParentCategoryId INT,
              DisplayOrder        INT,
              ActivationDate      DATETIME,
              ExpirationDate      DATETIME,
              CategoryName        NVARCHAR(MAX),
              ProfileId           VARCHAR(MAX),
              IsActive            BIT
             );
             DECLARE @TBL_PublishPimCategoryIds TABLE
             (PublishCategoryId       INT,
              PimCategoryId           INT,
              PublishProductId        varchar(max),
              PublishParentCategoryId INT 
             );
             DECLARE @TBL_DeletedPublishCategoryIds TABLE
             (PublishCategoryId INT,
              PublishProductId  INT
             );
             DECLARE @TBL_CategoryXml TABLE
             (PublishCategoryId INT,
              CategoryXml       XML,
              LocaleId          INT
             );
             INSERT INTO @TBL_LocaleIds
             (LocaleId,
              IsDefault
             )
			  -- here collect all locale ids
             SELECT LocaleId,IsDefault FROM ZnodeLocale WHERE IsActive = @IsActive;

             INSERT INTO @TBL_PimCategoryIds(PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive)
             SELECT PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive FROM ZnodePimCategoryHierarchy AS ZPCH WHERE ZPCH.PimCatalogId = @PimCatalogId; 
             -- AND IsActive = @IsActive ; -- As discussed with @anup active flag maintain on demo site 23/12/2016

			 -- here is find the deleted publish category id on basis of publish catalog
             INSERT INTO @TBL_DeletedPublishCategoryIds(PublishCategoryId,PublishProductId)
             SELECT ZPC.PublishCategoryId,ZPCP.PublishProductId FROM ZnodePublishCategoryProduct ZPCP
             INNER JOIN ZnodePublishCategory AS ZPC ON(ZPCP.PublishCategoryId = ZPC.PublishCategoryId AND ZPCP.PublishCatalogId = ZPC.PublishCatalogId)                                                  
             INNER JOIN ZnodePublishProduct ZPP ON(zpp.PublishProductId = zpcp.PublishProductId AND zpp.PublishCatalogId = zpcp.PublishCatalogId)
             INNER JOIN ZnodePublishCatalog ZPCC ON(ZPCC.PublishCatalogId = ZPCP.PublishCatalogId)
             WHERE ZPC.PublishCatalogId = @PublishCataLogId AND NOT EXISTS(SELECT TOP 1 1 FROM ZnodePimCatalogCategory AS TBPC WHERE TBPC.PimCategoryId = ZPC.PimCategoryId
			 AND TBPC.PimProductId = ZPP.PimProductId AND TBPC.PimCatalogId = ZPCC.PimCatalogId);

			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishCategoryIds = ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) FROM @TBL_DeletedPublishCategoryIds AS ZPC
                                              GROUP BY ZPC.PublishProductId FOR XML PATH('') ), 2, 4000), '');
			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishProductIds = '';
			 -- Delete the publish category id 
	
             EXEC Znode_DeletePublishCatalog @PublishCatalogIds = @PublishCatalogId,@PublishCategoryIds = @DeletedPublishCategoryIds,@PublishProductIds = @DeletedPublishProductIds; 
			 
			 		
             MERGE INTO ZnodePublishCategory TARGET USING @TBL_PimCategoryIds SOURCE ON(TARGET.PimCategoryId = SOURCE.PimCategoryId AND TARGET.PublishCatalogId = @PublishCataLogId)
			 WHEN MATCHED THEN UPDATE SET TARGET.PimParentCategoryId = SOURCE.PimParentCategoryId,TARGET.CreatedBy = @UserId,TARGET.CreatedDate = @GetDate,
             TARGET.ModifiedBy = @UserId,TARGET.ModifiedDate = @GetDate
             WHEN NOT MATCHED THEN INSERT(PimCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) VALUES(SOURCE.PimCategoryId,@PublishCatalogId,@UserId,@GetDate,@UserId,@GetDate)
             OUTPUT INSERTED.PublishCategoryId,INSERTED.PimCategoryId INTO @TBL_PublishPimCategoryIds(PublishCategoryId,PimCategoryId);

             UPDATE TBPC SET PublishParentCategoryId = TBPCS.PublishCategoryId FROM @TBL_PublishPimCategoryIds TBPC
             INNER JOIN @TBL_PimCategoryIds TBC ON(TBC.PimCategoryId = TBPC.PimCategoryId)
             INNER JOIN @TBL_PublishPimCategoryIds TBPCS ON(TBC.PimParentCategoryId = TBPCS.PimCategoryId) WHERE TBC.PimParentCategoryId IS NOT NULL;
           
		     -- here update the publish parent category id
             UPDATE ZPC SET [PublishParentCategoryId] = TBPC.[PublishParentCategoryId] FROM ZnodePublishCategory ZPC
             INNER JOIN @TBL_PublishPimCategoryIds TBPC ON(ZPC.PublishCategoryId = TBPC.PublishCategoryId) WHERE TBPC.[PublishParentCategoryId] IS NOT NULL;

			 -- product are published here 
            --  EXEC Znode_GetPublishProducts @PublishCatalogId,0,@UserId,1,0,0;

             SET @MaxId =(SELECT MAX(RowId)FROM @TBL_LocaleIds);
			 DECLARE @TransferID TRANSFERID 
			 INSERT INTO @TransferID 
			 SELECT PimCategoryId
			 FROM @TBL_PublishPimCategoryIds 

             SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(50)) FROM @TBL_PublishPimCategoryIds FOR XML PATH('')), 2, 4000);

             WHILE @Counter <= @MaxId -- Loop on Locale id 
                 BEGIN
                     SET @LocaleId =(SELECT LocaleId FROM @TBL_LocaleIds WHERE RowId = @Counter);
                   
				     SET @AttributeIds = SUBSTRING((SELECT ','+CAST(ZPCAV.PimAttributeId AS VARCHAR(50)) FROM ZnodePimCategoryAttributeValue ZPCAV 
										 WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC WHERE TBPC.PimCategoryId = ZPCAV.PimCategoryId) GROUP BY ZPCAV.PimAttributeId FOR XML PATH('')), 2, 4000);
                
				     SET @CategoryIdCount =(SELECT COUNT(1) FROM @TBL_PimCategoryIds);

					

                     INSERT INTO @TBL_AttributeIds (PimAttributeId,ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined,
					 IsConfigurable,IsPersonalizable,DisplayOrder,HelpDescription,IsCategory,IsHidden,CreatedDate,ModifiedDate,AttributeName,AttributeTypeName)
                     EXEC [Znode_GetPimAttributesDetails] @AttributeIds,@LocaleId;

                     INSERT INTO @TBL_AttributeDefault (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
                     EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @AttributeIds,@LocaleId;

                     INSERT INTO @TBL_AttributeValue (PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
                     EXEC [dbo].[Znode_GetCategoryAttributeValueId] @TransferID,@AttributeIds,@LocaleId;

					-- SELECT * FROM @TBL_AttributeValue WHERE PimCategoryId = 281


                     ;WITH Cte_UpdateDefaultAttributeValue
                     AS (SELECT TBAV.PimCategoryId,TBAV.PimAttributeId,SUBSTRING((SELECT ','+AttributeDefaultValue FROM @TBL_AttributeDefault TBD WHERE TBAV.PimAttributeId = TBD.PimAttributeId
						AND EXISTS(SELECT TOP 1 1 FROM Split(TBAV.CategoryValue, ',') SP WHERE SP.Item = TBD.AttributeDefaultValueCode)FOR XML PATH('')), 2, 4000) DefaultCategoryAttributeValue
						FROM @TBL_AttributeValue TBAV WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_AttributeDefault TBAD WHERE TBAD.PimAttributeId = TBAV.PimAttributeId))
					 
					 -- update the default value with locale 
                     UPDATE TBAV SET CategoryValue = CTUDFAV.DefaultCategoryAttributeValue FROM @TBL_AttributeValue TBAV 
					 INNER JOIN Cte_UpdateDefaultAttributeValue CTUDFAV ON(CTUDFAV.PimCategoryId = TBAV.PimCategoryId AND CTUDFAV.PimAttributeId = TBAV.PimAttributeId)
					 WHERE CategoryValue IS NULL ;
					 
					 -- here is update the media path  
                     WITH Cte_productMedia
                     AS (SELECT TBA.PimCategoryId,TBA.PimAttributeId,[dbo].[FN_GetThumbnailMediaPathPublish](SUBSTRING((SELECT ','+zm.PATH FROM ZnodeMedia ZM WHERE EXISTS
					    (SELECT TOP 1 1 FROM dbo.split(TBA.CategoryValue, ',') SP WHERE SP.Item = CAST(Zm.MediaId AS VARCHAR(50)))FOR XML PATH('')), 2, 4000)) CategoryValue
						FROM @TBL_AttributeValue TBA WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetProductMediaAttributeId]() FNMA WHERE FNMA.PImAttributeId = TBA.PimATtributeId))
                         
					 UPDATE TBAV SET CategoryValue = CTCM.CategoryValue FROM @TBL_AttributeValue TBAV INNER JOIN Cte_productMedia CTCM ON(CTCM.PimCategoryId = TBAV.PimCategoryId
					 AND CTCM.PimAttributeId = TBAV.PimAttributeId);

                     WITH Cte_PublishProductIds
					 AS (SELECT TBPC.PublishcategoryId,SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) FROM ZnodePublishCategoryProduct ZPCP WHERE ZPCP.PublishCategoryId = TBPC.publishCategoryId
                        AND ZPCP.PublishCatalogId = @PublishCatalogId FOR XML PATH('')), 2, 8000) PublishProductId FROM @TBL_PublishPimCategoryIds TBPC)
                          
					 UPDATE TBPPC SET PublishProductId = CTPP.PublishProductId FROM @TBL_PublishPimCategoryIds TBPPC INNER JOIN Cte_PublishProductIds CTPP ON(TBPPC.PublishCategoryId = CTPP.PublishCategoryId);

                     WITH Cte_CategoryProfile
                     AS (SELECT PimCategoryId,SUBSTRING(( SELECT ','+CAST(ProfileId AS VARCHAR(50)) FROM ZnodeProfileCatalog ZPC INNER JOIN ZnodeProfileCategoryHierarchy ZPRCC ON(ZPRCC.PimCategoryHierarchyId = ZPCC.PimCategoryHierarchyId
                        AND ZPRCC.ProfileCatalogId = ZPC.ProfileCatalogId) WHERE ZPC.PimCatalogId = ZPCC.PimCatalogId FOR XML PATH('')), 2, 4000) ProfileIds
                        FROM ZnodePimCategoryHierarchy ZPCC WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC WHERE TBPC.PimCategoryId = ZPCC.PimCategoryId AND ZPCC.PimCatalogId = @PimCatalogId))
                          
				     UPDATE TBPC SET TBPC.ProfileId = CTCP.ProfileIds FROM @TBL_PimCategoryIds TBPC LEFT JOIN Cte_CategoryProfile CTCP ON(CTCP.PimCategoryId = TBPC.PimCategoryId);
                     
					 UPDATE TBPC SET TBPC.CategoryName = TBAV.CategoryValue FROM @TBL_PimCategoryIds TBPC INNER JOIN @TBL_AttributeValue TBAV ON(TBAV.PimCategoryId = TBPC.PimCategoryId
                     AND EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetCategoryNameAttribute]() FNGCNA WHERE FNGCNA.PimAttributeId = TBAV.PimAttributeId));

					-- SELECT * FROM @TBL_AttributeValue WHERE pimCategoryId = 369

					 -- here update the publish category details 
                     ;WITH Cte_UpdateCategoryDetails
                     AS (SELECT TBC.PimCategoryId,PublishCategoryId,CategoryName FROM @TBL_PimCategoryIds TBC
                        INNER JOIN @TBL_PublishPimCategoryIds TBPPC ON(TBC.PimCategoryId = TBPPC.PimCategoryId))

						
                     MERGE INTO ZnodePublishCategoryDetail TARGET USING Cte_UpdateCategoryDetails SOURCE ON(TARGET.PublishCategoryId = SOURCE.PublishCategoryId
                     AND TARGET.LocaleId = @LocaleId)
                     WHEN MATCHED THEN UPDATE SET PublishCategoryId = SOURCE.PublishcategoryId,PublishCategoryName = SOURCE.CategoryName,LocaleId = @LocaleId,ModifiedBy = @userId,ModifiedDate = @GetDate
                     WHEN NOT MATCHED THEN INSERT(PublishCategoryId,PublishCategoryName,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) VALUES
                     (SOURCE.PublishCategoryId,SOURCE.CategoryName,@LocaleId,@userId,@GetDate,@userId,@GetDate);

                     WITH Cte_CategoryXML
                     AS (SELECT PublishcategoryId,PimCategoryId,(SELECT @VersionId VersionId,PublishCategoryId ZnodeCategoryId,@PublishCatalogId ZnodeCatalogId
																		,PublishParentCategoryId TempZnodeParentCategoryIds,ZPC.CatalogName ,
																		 ISNULL(DisplayOrder, '0') DisplayOrder,@LocaleId LocaleId,ActivationDate 
																		 ,ExpirationDate,TBC.IsActive,ISNULL(CategoryName, '') Name,ProfileId TempProfileIds,ISNULL(PublishProductId, '') TempProductIds
                        FROM @TBL_PublishPimCategoryIds TBPC 
						INNER JOIN ZnodePublishCatalog ZPC ON (PublishCatalogId= @PublishCatalogId)
						INNER JOIN @TBL_PimCategoryIds TBC ON(TBC.PimCategoryId = TBPC.PimCategoryId) WHERE TBPC.PublishCategoryId = TBPCO.PublishCategoryId 
						FOR XML PATH('')) CategoryXml FROM @TBL_PublishPimCategoryIds TBPCO),

                     Cte_CategoryAttributeXml
                     AS (SELECT CTCX.PublishCategoryId,'<CategoryEntity>'+ISNULL(CategoryXml, '')+ISNULL((SELECT(SELECT TBA.AttributeCode,TBA.AttributeName,ISNULL(IsUseInSearch, 0) IsUseInSearch,
                        ISNULL(IsHtmlTags, 0) IsHtmlTags,ISNULL(IsComparable, 0) IsComparable,TBAV.CategoryValue AttributeValues,TBA.AttributeTypeName FROM @TBL_AttributeValue TBAV
                        INNER JOIN @TBL_AttributeIds TBA ON(TBAV.PimAttributeId = TBA.PimAttributeId) LEFT JOIN ZnodePimFrontendProperties ZPFP ON(ZPFP.PimAttributeId = TBA.PimAttributeId)
                        WHERE CTCX.PimCategoryId = TBAV.PimCategoryId AND TBAO.PimAttributeId = TBA.PimAttributeId FOR XML PATH('AttributeEntity'), TYPE) FROM @TBL_AttributeIds TBAO
                        FOR XML PATH('Attributes')), '')+'</CategoryEntity>' CategoryXMl FROM Cte_CategoryXML CTCX)

                     INSERT INTO @TBL_CategoryXml(PublishCategoryId,CategoryXml,LocaleId)
                     SELECT PublishCategoryId,CategoryXml,@LocaleId LocaleId FROM Cte_CategoryAttributeXml;
                   
				     DELETE FROM @TBL_AttributeIds;
                     DELETE FROM @TBL_AttributeDefault;
                     DELETE FROM @TBL_AttributeValue;
                     SET @Counter = @Counter + 1;
                 END;

             UPDATE ZnodePublishCatalogLog SET PublishCategoryId = SUBSTRING((SELECT ','+CAST(PublishCategoryId AS VARCHAR(50)) FROM @TBL_CategoryXml
			 GROUP BY PublishCategoryId																				
             FOR XML PATH('')), 2, 4000), IsCategoryPublished = 1 WHERE PublishCatalogLogId = @VersionId;

             DELETE FROM ZnodePublishedXml WHERE PublishCataloglogId = @VersionId;
            
             INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsCategoryXML,IsProductXML,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
             SELECT @VersionId PublishCataloglogId,PublishCategoryId,CategoryXml,1,0,LocaleId,@UserId,@GetDate,@UserId,@GetDate FROM @TBL_CategoryXml WHERE @VersionId <> 0;
             
			 SELECT CategoryXml  
			 FROM @TBL_CategoryXml 
			 
              
             COMMIT TRAN GetPublishCategory;
			 
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE();
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishCategory @PublishCatalogId = '+CAST(@PublishCatalogId AS VARCHAR(50))+',@UserId ='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             ROLLBACK TRAN GetPublishCategory;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishCategory',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO 
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>OmsOrderId</name><headertext>Checkbox</headertext><width>30</width><datatype>String</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>OrderNumber</name><headertext>Order Number</headertext><width>15</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>y</isallowlink><islinkactionurl>/User/OrderReceipt</islinkactionurl><islinkparamfield>OmsOrderId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield>OmsOrderId</controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>OrderState</name><headertext>Order Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>PaymentStatus</name><headertext>Payment Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>PaymentDisplayName</name><headertext>Payment Type</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>z-paymenttype</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>OrderDate</name><headertext>Created Date</headertext><width>30</width><datatype>Date</datatype><columntype>DateTime</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>TotalWithCurrencyCode</name><headertext>Order Amount</headertext><width>30</width><datatype>Decimal</datatype><columntype>Decimal</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>Manage</name><headertext>Action</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format>View|Manage</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>View|Manage</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/User/OrderReceipt|/User/ReorderProducts</manageactionurl><manageparamfield>OmsOrderId,portalId|OmsOrderId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>PODocumentPath</name><headertext>PODocumentPath</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class>z-podocument</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>' 
WHERE ItemName = 'ZnodeWebStoreOrder' 
GO 
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>OmsOrderId</name><headertext>Checkbox</headertext><width>30</width><datatype>String</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>OrderNumber</name><headertext>Order No</headertext><width>0</width><datatype>String</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>y</isallowlink><islinkactionurl>/Order/Manage</islinkactionurl><islinkparamfield>OmsOrderId,accountId,updatePageType</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>OrderState</name><headertext>Order Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>PaymentStatus</name><headertext>Payment Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>paymentStatus</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>PaymentDisplayName</name><headertext>Payment Type</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>UserName</name><headertext>Username</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>OrderTotalWithCurrency</name><headertext>Order Amount</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>OrderDate</name><headertext>Order Date</headertext><width>30</width><datatype>Date</datatype><columntype>DateTime</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>IsInRMA</name><headertext>IsInRMA</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>IsInRMA</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Guest User</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>IsInRMA</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>10</id><name>Manage</name><headertext>Action</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format>View</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>View</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Order/Manage</manageactionurl><manageparamfield>OmsOrderId,accountId,updatePageType</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'AccountUserOrderList' 
GO 
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>OrderNumber</name><headertext>Order No</headertext><width>0</width><datatype>String</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>y</isallowlink><islinkactionurl>/Order/Manage</islinkactionurl><islinkparamfield>OmsOrderId,accountId,updatePageType</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>StoreName</name><headertext>Store Name</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>OrderDate</name><headertext>Order Date</headertext><width>30</width><datatype>Date</datatype><columntype>DateTime</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>OrderTotalWithCurrency</name><headertext>Order Amount</headertext><width>30</width><datatype>Decimal</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>OrderState</name><headertext>Order Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>PaymentStatus</name><headertext>Payment Status</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>PaymentDisplayName</name><headertext>Payment Type</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>paymentType</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'CustomerOrderHistory' 
GO 
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>PaymentSettingId</name><headertext>Checkbox</headertext><width>40</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>ID</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>n</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>PaymentName</name><headertext>Payment Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentTypeId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Option</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>PaymentDisplayName</name><headertext>Payment Display Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentTypeId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentTypeId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Option</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>GatewayName</name><headertext>Payment Gateway</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentGatewayId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentGatewayId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Payment Gateway</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>IsActive</name><headertext>Enable</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>IsActive</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>IsActive</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Enable</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>DisplayOrder</name><headertext>Display Order</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>DisplayOrder</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>DisplayOrder</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Display Order</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>Manage</name><headertext>Action</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Delete</format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PaymentSettingId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PaymentSettingId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Profiles/RemoveAssociatedPaymentSetting</manageactionurl><manageparamfield>PaymentSettingId,ProfileId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'AssociatedPaymentListToProfile' 
GO 
ALTER PROCEDURE [dbo].[Znode_GetOmsAccountOrderList]
( @WhereClause NVARCHAR(MAX),
  @Rows        INT           = 100,
  @PageNo      INT           = 1,
  @Order_BY    VARCHAR(100)  = '',
  @RowsCount   INT OUT,
  @AccountId   INT)
AS 
 /*
  Summary :- This procedure is used to get the Quote list of account and Users 
			 Fn_GetRecurciveAccounts is used to fetch AccountId and Its recursive ParentId 
			 The result id fetched on the basis of AccountId of the User
     Unit Testing 	
     EXEC Znode_GetOmsAccountOrderList '' ,@RowsCount = 0 ,@AccountId = 1
	
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);

             DECLARE @TBL_QuoteDetails TABLE (OmsOrderId INT,UserName NVARCHAR(300),OrderAmount NUMERIC(28, 6),[Status] VARCHAR(300),CreatedDate DATETIME,OmsPaymentStateId INT,OmsPaymentState NVARCHAR(MAX),
                     PaymentTypeId INT,PaymentType VARCHAR(50),OrderNumber VARCHAR(200),IsInRMA BIT ,RowId INT,CountNo INT,CurrencyCode VARCHAR(100),PaymentDisplayName Nvarchar(1200));
            
			 SET @Order_BY = REPLACE(@Order_BY,'OmsOrderId','CTEQD.OmsOrderId')
			 SET @SQL = '

	  ;With Cte_GetQuoteDetail AS 
	  (

	  SELECT Zu.UserId ,ZOO.OmsOrderId,APZU.UserName UserName ,Total  OrderTotal , ZOOS.OrderStateName OrderState
				,ZOOD.OrderDate ,ZOPS.OmsPaymentStateId,ZOPS.Name PaymentStatus  ,ZOOD.PaymentTypeId , ZPT.Name PaymentType,ZOO.OrderNumber,ZOOD.CurrencyCode,ZPS.PaymentDisplayName
	  FROM ZnodeOmsOrder ZOO
	  INNER JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderId = ZOO.OmsOrderId AND ZOOD.IsActive = 1 )
	  LEFT JOIN ZnodePaymentSetting ZPS ON (ZPS.PaymentSettingId = ZOOD.PaymentSettingId)
	  INNER JOIN ZnodeUser ZU ON (ZU.UserId = ZOOD.UserId)
	  LEFT JOIN ZnodeOmsPaymentState ZOPS ON (ZOPS.OmsPaymentStateId = ZOOD.OmsPaymentStateId )
	  LEFT JOIN ZnodeOmsOrderState ZOOS ON (ZOOS.OmsOrderStateId = ZOOD.OmsOrderStateId )
	  LEFT JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZOOD.PaymentTypeId)
	  LEFT JOIN AspNetUsers ASNU ON (ASNU.Id =ZU.AspNetUserId  )
	  LEFT JOIN AspNetZnodeUser  APZU ON (APZU.AspNetZnodeUserId = ASNU.UserName AND (APZU.PortalId = ZOOD.PortalId OR APZU.PortalId IS NULL  ))
	
	  WHERE EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveAccounts]('+CAST(@AccountId AS VARCHAR(100))+') FNRA WHERE FNRA.AccountId= ZU.AccountId) 
	  
	  )
	  ,Cte_GetRMAdetails AS
	  (
	    SELECT OmsOrderId 
		FROM ZnodeOmsOrderDetails ZOOD 
		INNER JOIN ZnodeOmsOrderLIneItems ZOODLI ON (ZOODLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId )
		INNER JOIN ZnodeRmaRequestItem ZRRI ON (ZRRI.OmsOrderLineItemsId = ZOODLI.OmsOrderLineItemsId )
	  
	  )
	  , Cte_GetQuote AS 
	  (
	   SELECT CTEQD.*,CASE WHEN CTERD.OmsOrderid IS NULL THEN 0 ELSE 1 END IsInRMA   ,'+dbo.Fn_GetPagingRowId(@Order_BY,'CTEQD.OmsOrderId DESC')+',Count(*)Over() CountNo 
	   FROM Cte_GetQuoteDetail CTEQD 
	   LEFT JOIN Cte_GetRMAdetails CTERD ON (CTERD.OmsOrderId = CTEQD.OmsOrderid )
       WHERE 1=1 
	   '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
	  )

	  SELECT OmsOrderId,UserName , OrderTotal QuoteAmount, OrderState Status ,OrderDate,OmsPaymentStateId  ,PaymentStatus,PaymentTypeId,PaymentType,OrderNumber,IsInRMA,RowId,CountNo,CurrencyCode,PaymentDisplayName
	  FROM Cte_GetQuote 
	  WHERE '+dbo.Fn_GetRowsForPagination(@PageNo, @Rows, ' RowId ');
          
		    PRINT @SQL
			 INSERT INTO @TBL_QuoteDetails 
             EXEC (@SQL);
             SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_QuoteDetails ), 0);

             SELECT OmsOrderId,UserName,OrderAmount,[Status] AS 'OrderState',CreatedDate AS 'OrderDate',OmsPaymentStateId,OmsPaymentState AS 'PaymentStatus',PaymentTypeId,PaymentType,OrderNumber,IsInRMA,CurrencyCode,PaymentDisplayName
             FROM @TBL_QuoteDetails;
			 
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsAccountOrderList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@AccountId = '+CAST(@AccountId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetOmsAccountOrderList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;