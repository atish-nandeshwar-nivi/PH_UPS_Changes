@model Znode.Engine.WebStore.ViewModels.ProductViewModel
@using Znode.Libraries.ECommerce.Utilities
@using Znode.Engine.WebStore.Agents;
@using System.Reflection
@using Znode.Engine.WebStore.ViewModels

@{
    var CustomeFields = Model.Attributes?.Where(x => x.IsCustomField)?.OrderBy(x => x.DisplayOrder)?.ToList();
    int productId = Model.ConfigurableProductId > 0 ? Model.ConfigurableProductId : Model.PublishProductId;
    string productSpecsAttributes = PortalAgent.CurrentPortal?.GlobalAttributes?.Attributes?.FirstOrDefault(x => x.AttributeCode.Equals("ProductDetailsSpecifications"))?.AttributeValue;
    bool hasProductSpecs = false;

    if (!string.IsNullOrEmpty(productSpecsAttributes))
    {
        List<string> productSpecificationsAttr = productSpecsAttributes.Split(',').ToList();

        foreach (var attr in productSpecificationsAttr)
        {
            string propertyName = attr.Replace(" ", string.Empty);
            string propertyValue = null;

            if (Model.GetType().GetProperty(propertyName) != null)
            {
                PropertyInfo property = Model.GetType().GetProperty(propertyName);
                propertyValue = property.GetValue(Model, null)?.ToString();
            }
            else if (!Equals(Model.Attributes?.Value(propertyName), null))
            {
                AttributesViewModel attributeViewModel = Model.Attributes.FirstOrDefault(x => x.AttributeCode.Equals(propertyName, StringComparison.OrdinalIgnoreCase));

                propertyValue = attributeViewModel.AttributeTypeName.Equals("Simple Select", StringComparison.OrdinalIgnoreCase) ?
                    attributeViewModel.SelectValues.FirstOrDefault()?.Value : attributeViewModel.AttributeValues;
            }

            if (!string.IsNullOrEmpty(propertyValue))
            {
                hasProductSpecs = true;
                break;
            }
        }
    }
}

@*"aria-owns" attribute added for ADA compliant*@
<div class="col-12 p-0" id="product-content">
    <div class="product-details-tab d-flex flex-wrap">
        <ul id="myTab" class="col-12 p-0 nav nav-tabs d-lg-flex" role="tablist" aria-owns="tab-1 tab-2 tab-3 tab-4 tab-reviews tab-youtbevideos">
            @if (Model.Attributes?.Value("FrequentlyBought") != null)
            {
                <li class="active"><a id="tab-1" href="#panel-1" data-toggle="tab" role="tab" class="tabs">@Html.RenderMessage("FrequentlyBoughtPDP")</a></li>}
            <li><a id="tab-2" href="#panel-2" data-toggle="tab" role="tab" class="tabs">@WebStore_Resources.TextOverview</a></li>
            <li><a id="tab-3" href="#panel-3" data-toggle="tab" role="tab" class="tabs">@WebStore_Resources.TextProductSpecifications</a></li>
            <li><a id="tab-reviews" href="#panel-5" data-toggle="tab" role="tab" class="tabs">@WebStore_Resources.TextCustomerReviews</a></li>          
        </ul>
        <div id="myTabContent" class="col-12 p-0 tab-content scroll-default" role="tablist" aria-owns="panel-1 panel-3 panel-4 panel-5 panel-6">
            <!--Panels 1-->
            @if (Model.Attributes?.Value("FrequentlyBought") != null)
            {
                <div id="panel-1" class="card tab-pane fade show active" role="tab" aria-labelledby="tab-1">
                    <div class="card-header" role="tab" id="heading-1">
                        <h5 class="mb-0">
                            <a data-toggle="collapse" href="#collapse-1" aria-expanded="true" aria-controls="collapse-1">
                                @Html.RenderMessage("FrequentlyBoughtPDP")
                            </a>
                        </h5>
                    </div>
                    <div id="collapse-1" class="collapse show" data-parent="#myTabContent" role="tabpanel" aria-labelledby="heading-1">
                        <div class="card-body">
                            <div class="col-12 p-0 product-extras">
                                @Html.Partial("_ProductExtras", Model)
                            </div>
                        </div>
                    </div>
                </div>
            }
            <!--Panels 2-->
            @if (Model.Attributes?.Value("FrequentlyBought") != null)
            {
                <div id="panel-2" class="card tab-pane" role="tabpanel" aria-labelledby="tab-2">
                    <div class="card-header" role="tab" id="heading-2">
                        <h5 class="mb-0">
                            <a data-toggle="collapse" href="#collapse-2" aria-expanded="true" aria-controls="collapse-2">
                                @WebStore_Resources.TextOverview
                            </a>
                        </h5>
                    </div>
                    <div id="collapse-2" class="collapse" data-parent="#myTabContent" role="tabpanel" aria-labelledby="heading-2">
                        <div class="card-body">
                            @Html.RenderBlock(@WebUtility.HtmlDecode(Model.Attributes?.Value("LongDescription")))
                        </div>
                    </div>
                </div>}
            else
            {
                <div id="panel-2" class="card tab-pane active" role="tabpanel" aria-labelledby="tab-2">
                    <div class="card-header" role="tab" id="heading-2">
                        <h5 class="mb-0">
                            <a data-toggle="collapse" href="#collapse-2" aria-expanded="true" aria-controls="collapse-2">
                                @WebStore_Resources.TextOverview
                            </a>
                        </h5>
                    </div>
                    <div id="collapse-2" class="collapse" data-parent="#myTabContent" role="tabpanel" aria-labelledby="heading-2">
                        <div class="card-body">
                            @Html.RenderBlock(@WebUtility.HtmlDecode(Model.Attributes?.Value("LongDescription")))
                        </div>
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.Attributes?.Value("ProductSpecification")) || hasProductSpecs)
            {
                <!--Panels 3-->
                <div id="panel-3" class="card tab-pane fade" role="tab" aria-labelledby="tab-3">
                    <div class="card-header" role="tab" id="heading-3">
                        <h5 class="mb-0">
                            <a data-toggle="collapse" href="#collapse-3" aria-expanded="true" aria-controls="collapse-3">
                                @WebStore_Resources.TextProductSpecifications
                            </a>
                        </h5>
                    </div>
                    <div id="collapse-3" class="collapse" data-parent="#myTabContent" role="tabpanel" aria-labelledby="heading-3">
                        @if (!string.IsNullOrEmpty(Model.Attributes?.Value("ProductSpecification")))
                        {
                            <div class="card-body">
                                @Html.RenderBlock(@WebUtility.HtmlDecode(Model.Attributes?.Value("ProductSpecification")))
                            </div>
                        }

                        <div class="p-3">
                            @if (!string.IsNullOrEmpty(productSpecsAttributes) && string.IsNullOrEmpty(Model.Attributes?.Value("ProductSpecification")))
                            {
                                List<string> productSpecificationsAttr = productSpecsAttributes.Split(',').ToList();

                                foreach (var attr in productSpecificationsAttr)
                                {
                                    string propertyName = attr.Replace(" ", string.Empty);
                                    string propertyValue = null;

                                    if (Model.GetType().GetProperty(propertyName) != null)
                                    {
                                        PropertyInfo property = Model.GetType().GetProperty(propertyName);
                                        propertyValue = property.GetValue(Model, null)?.ToString();
                                    }
                                    else if (!Equals(Model.Attributes?.Value(propertyName), null))
                                    {
                                        AttributesViewModel attributeViewModel = Model.Attributes.FirstOrDefault(x => x.AttributeCode.Equals(propertyName, StringComparison.OrdinalIgnoreCase));
                                        propertyName = attributeViewModel.AttributeName;
                                        propertyValue = attributeViewModel.AttributeTypeName.Equals("Simple Select", StringComparison.OrdinalIgnoreCase) ?
                                                        attributeViewModel.SelectValues.FirstOrDefault()?.Value : attributeViewModel.AttributeValues;
                                    }

                                    if (!string.IsNullOrEmpty(propertyValue))
                                    {
                                        <div>
                                            <span><strong>@propertyName: </strong>@propertyValue</span>
                                        </div>
                                        <input type="hidden" id="custId" name="custId" value=@propertyName )>
                                        <input type="hidden" id="custId" name="custId" value=@propertyValue )>
                                    }

                                }
                            }
                        </div>
                    </div>
                </div>
            }

            <!--Panels 5-->
            <div id="panel-5" class="card tab-pane fade" role="tab" aria-labelledby="tab-reviews">
                <div class="card-header" role="tab" id="heading-5">
                    <h5 class="mb-0">
                        <a data-toggle="collapse" href="#collapse-5" aria-expanded="true" aria-controls="collapse-5">
                            @WebStore_Resources.TextCustomerReviews
                        </a>
                    </h5>
                </div>
                <div id="collapse-5" class="collapse" data-parent="#myTabContent" role="tabpanel" aria-labelledby="heading-5">
                    <div class="card-body">
                        <div class="col-12 p-0 mb-3 text-right">
                            <a href="/Product/writereview?id=@productId&name=@Model.Name" id="button-writeReview" class="btn btn-primary d-block d-md-inline-block">@WebStore_Resources.LinkTextWriteReview</a>
                        </div>
                        <div class="col-12 p-0">
                            @Html.Partial("_ProductReviews", Model.ProductReviews)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
