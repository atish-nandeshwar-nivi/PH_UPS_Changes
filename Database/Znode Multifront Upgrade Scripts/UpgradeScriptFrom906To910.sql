IF EXISTS (SELECT TOP 1 1 FROM Sys.Tables WHERE Name = 'ZnodeMultifront')
BEGIN 
 IF EXISTS (SELECT TOP 1 1 FROM ZnodeMultifront where BuildVersion =   910  )
 BEGIN 
 PRINT 'Script is already executed....'
  SET NOEXEC ON 
 END 
END
ELSE 
BEGIN 
   SET NOEXEC ON
END 
INSERT INTO [dbo].[ZnodeMultifront] ( [VersionName], [Descriptions], [MajorVersion], [MinorVersion], [LowerVersion], [BuildVersion], [PatchIndex], [CreatedBy], 
[CreatedDate], [ModifiedBy], [ModifiedDate]) 
VALUES ( N'Znode_Multifront_9_1_0', N'Upgrade GA Release by 910',9,1,0,910,0,2, GETDATE(),2, GETDATE())
GO 
SET ANSI_NULLS ON
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ManageLinkProductList')
BEGIN 
	DROP PROCEDURE Znode_ManageLinkProductList
END
GO

CREATE PROCEDURE [dbo].[Znode_ManageLinkProductList]
(   @WhereClause      XML,
    @Rows             INT          = 100,
    @PageNo           INT          = 1,
    @Order_BY         VARCHAR(100) = '',
    @RowsCount        INT OUT,
    @LocaleId         INT          = 1,
    @RelatedProductId INT          = 0,
    @PimAttributeId   INT          = 0)
AS
   /*  Summary :- This Procedure is used to find the link product Detail 
     Unit Testing 
     EXEC Znode_ManageLinkProductList '' , @RowsCount = 0 ,@RelatedProductId=128
   */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds TransferId,  
					 @PimAttributeIds VARCHAR(MAX),
					 @OutPimProductIds VARCHAR(max);
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

		     DECLARE @TBL_LinkProductDetail TABLE
             (PimProductId           INT,
              PimLinkProductDetailId INT,
              RelatedProductId       INT,
              PimAttributeId         INT
             );
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @DefaultAttributeFamily INT=
             (
                 SELECT PimAttributeFamilyId
                 FROM ZnodePimAttributeFamily
                 WHERE IsCategory = 0
                       AND IsDefaultFamily = 1
             );
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
             INSERT INTO @TBL_LinkProductDetail
             (PimProductId,
              PimLinkProductDetailId,
              RelatedProductId,
              PimAttributeId
             )
                    SELECT PimProductId,
                           PimLinkProductDetailId,
                           PimParentProductId,
                           PimAttributeId
                    FROM ZnodePimLinkProductDetail
                    WHERE PimParentProductId = @RelatedProductId
                          AND PimAttributeId = @PimAttributeId;
                
				INSERT INTO @TransferPimProductId 
                SELECT PimProductId 
                FROM @TBL_LinkProductDetail
             
			 IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId) 
			 BEGIN 
			  INSERT INTO @TransferPimProductId 
			  SELECT '-1'
			                                  
             END 
			 DECLARE @AttributeCode NVARCHAR(max)
			 SET @AttributeCode = SUBSTRING ((SELECT ','+AttributeCode FROM [dbo].[Fn_GetProductGridAttributes]() WHERE AttributeCode NOT IN ('AttributeFamily') FOR XML PATH('') ),2,4000)

			 EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = @Rows,
                  @PageNo = @PageNo,
                  @Order_BY = @Order_BY,
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = @AttributeCode,
                  @PimProductId = @TransferPimProductId,
                  @IsProductNotIn = 0,
				  @OutProductId = @OutPimProductIds OUT;

			
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 
	
			
			INSERT INTO @PimProductIds ( Id )
			SELECT item 
			FROM dbo.split(@OutPimProductIds,',') SP

             SET @PimAttributeIds = SUBSTRING( (SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000);
            
			 INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder 
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeIds,
                  @LocaleId;
             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC [Znode_GetProductsAttributeValue]
                  @PimProductIds,
                  @PimAttributeIds,
                  @localeId;
             WITH Cte_UpdateDefaultAttributeValue
                  AS (SELECT PimProductId,
                             AttributeCode,
                             AttributeValue,
                             SUBSTRING(
                                      (
                                          SELECT ','+TBADV.AttributeDefaultValue
                                          FROM @TBL_AttributeDefaultValue TBADV
                                               INNER JOIN ZnodePimAttribute TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
                                          WHERE TBAC.AttributeCode = TBAD.AttributeCode
                                                AND EXISTS
                                          (
                                              SELECT TOP 1 1
                                              FROM dbo.split(TBAD.AttributeValue, ',') SP
                                              WHERE Sp.item = TBADV.AttributeDefaultValueCode
                                          )
                                          FOR XML PATH('')
                                      ), 2, 4000) AttributeDefaultValue
                      FROM @TBL_AttributeDetails TBAD)
                  UPDATE TBAD
                    SET AttributeValue = CTUDAV.AttributeDefaultValue
                  FROM @TBL_AttributeDetails TBAD
                       INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
                                                                            AND CTUDAV.AttributeCode = TBAD.AttributeCode)
                  WHERE AttributeDefaultValue IS NOT NULL;
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
            
			 ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;


				
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
				
				-- LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
             --- Update the  product families name locale wise   
        UPDATE  @TBL_AttributeDetails SET PimAttributeId = 0 WHERE PimAttributeId IS nULL 
	     DECLARE @ProductXML XML 

		--SELECT * FROM @TBL_AttributeDetails

	   	 SET @ProductXML =   '<MainProduct>'+ STUFF( (  SELECT '<Product>'
		                                                    +'<PimLinkProductDetailId>'+CAST(ISNULL(TBLPD.PimLinkProductDetailId,'') AS VARCHAR(50))+'</PimLinkProductDetailId>'
															+'<PimProductId>'+CAST(zpp.PimProductId AS VARCHAR(50))+'</PimProductId>'
															+'<RelatedProductId>'+CAST(ISNULL(TBLPD.RelatedProductId,'') AS VARCHAR(50))+'</RelatedProductId>'
		
		 + STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetails TBADI      
															 WHERE TBADI.PimProductId = zpp.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

			 FROM @ProductIdTable AS zpp
             LEFT JOIN @TBL_LinkProductDetail AS TBLPD ON(TBLPD.PimProductId = ZPP.PimProductId)
             ORDER BY zpp.RowId
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'


			SELECT @RowsCount AS RowsCount;


			 --SELECT zpp.PimProductid AS ProductId,
    --                [ProductName],
    --                ProductType,
    --                ISNULL(zf.FamilyName, '') AS AttributeFamily,
    --                [SKU],
    --                [Price],
    --                [Quantity],
    --                CASE
    --                    WHEN [IsActive] IS NULL
    --                    THEN CAST(0 AS BIT)
    --                    ELSE CAST([IsActive] AS BIT)
    --                END AS [IsActive],
    --                PimLinkProductDetailId,
    --                RelatedProductId,
    --                TBLPD.PimAttributeId,
    --                [dbo].FN_GetMediaThumbnailMediaPath(zm.Path) AS ImagePath,
    --                [Assortment],
    --                @LocaleId AS LocaleId,
    --                [DisplayOrder]
    --         FROM @ProductIdTable AS zpp
    --              INNER JOIN @TBL_LinkProductDetail AS TBLPD ON(TBLPD.PimProductId = ZPP.PimProductId)
    --              LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
    --              INNER JOIN
    --         (
    --             SELECT PimProductId,
    --                    AttributeValue,
    --                    AttributeCode
    --             FROM @TBL_AttributeDetails
    --         ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
    --                                                             [SKU],
    --                                                             [Price],
    --                                                             [Quantity],
    --                                                             [IsActive],
    --                                                             [ProductType],
    --                                                             [ProductImage],
    --                                                             [Assortment],
    --                                                             [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
    --              LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
    --         ORDER BY zpp.RowId;
         END TRY
         BEGIN CATCH
		     
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageLinkProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@RelatedProductId='+CAST(@RelatedProductId AS VARCHAR(50))+',@PimAttributeId='+CAST(@PimAttributeId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageLinkProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;   

GO

UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>PimProductId</name><headertext>Checkbox</headertext><width>20</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield>PimProductId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>RelatedProductId</name><headertext>RelatedProductId</headertext><width>20</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>n</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield>PimProductId</checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>PimProductId</name><headertext>ID</headertext><width>30</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>Image</name><headertext>Image</headertext><width>20</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield>ProductImage,ProductName</imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class>imageicon</Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>ProductName</name><headertext>Product Name</headertext><width>60</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>ProductType</name><headertext>Product Type</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>Assortment</name><headertext>Assortment</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>SKU</name><headertext>SKU</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>SKU</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>AvailableInventory</name><headertext>Available Inventory</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>10</id><name>Manage</name><headertext>Action</headertext><width>30</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Edit|Delete</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Edit|Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/PIM/Products/UpdateAssociatedProducts|/PIM/Products/UnassociateProducts</manageactionurl><manageparamfield>PimProductId,PimProductId,RelatedProductId|PimProductId,PimProductId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ITEMNAME = 'View_ManageProductTypeListForToBeAssociated'

GO
UPDATE ZnodeActions
SET IsGlobalAccess = 1
WHERE ActionName = 'GetStates' AND ControllerName = 'Customer'

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishProductbulk')
BEGIN 
	DROP PROCEDURE Znode_GetPublishProductbulk
END
GO

CREATE PROCEDURE [dbo].[Znode_GetPublishProductbulk]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    TransferId Readonly
,@UserId		  INT = 0 
,@PimCategoryHierarchyId  INT = 0 
,@PimCatalogId INT = 0 
,@LocaleIds TransferId READONLY
,@PublishStateId INT = 0 
)
With RECOMPILE
AS
-- EXEC Znode_GetPublishProductbulk @PublishCatalogId=6, @VersionId=0 ,@UserId= 2 
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

  --DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )

   IF OBJECT_ID('tempdb..#PimProductAttributeXML') is not null
   BEGIN 
	 DROP TABLE #PimProductAttributeXML
   END
   IF OBJECT_ID('tempdb..#PimDefaultValueLocale') is not null
   BEGIN 
    DROP TABLE #PimDefaultValueLocale
   END
   IF OBJECT_ID('tempdb..#TBL_CategoryCategoryHierarchyIds') is not null
   BEGIN 
    DROP TABLE #TBL_CategoryCategoryHierarchyIds
   END

   CREATE TABLE #PimProductAttributeXML (PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
  	
   CREATE TABLE #TBL_CategoryCategoryHierarchyIds  (CategoryId int , ParentCategoryId int ) 
	
   If (@PimCategoryHierarchyId <> 0 AND @PimCatalogId <> 0 )
		INSERT INTO #TBL_CategoryCategoryHierarchyIds(CategoryId , ParentCategoryId )
			Select Distinct PimCategoryId , Null FROM (
				SELECT PimCategoryId,ParentPimCategoryId from DBO.[Fn_GetRecurciveCategoryIds](@PimCategoryHierarchyId,@PimCatalogId)
				Union 
				Select PimCategoryId , null  from ZnodePimCategoryHierarchy where PimCategoryHierarchyId = @PimCategoryHierarchyId 
				Union 
				Select PimCategoryId , null  from [Fn_GetRecurciveCategoryIds_new] (@PimCategoryHierarchyId,@PimCatalogId) ) Category  


   CREATE TABLE #PimDefaultValueLocale  (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
   DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
   DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
   DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale MT 
			WHERE IsActive = 1
			AND (EXISTS (SELECT TOP 1 1  FROM @LocaleIds RT WHERE RT.Id = MT.LocaleId )
			OR NOT EXISTS (SELECT TOP 1 1 FROM @LocaleIds )) 

  DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 
 
 --DECLARE #TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

 CREATE TABLE #TBL_PublishCatalogId (PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT, PublishCategoryId int ,LocaleId INT )

 CREATE INDEX idx_#TBL_PublishCatalogIdPimProductId on #TBL_PublishCatalogId(PimProductId)

  CREATE INDEX idx_#TBL_PublishCatalogIdPimPublishCatalogId on #TBL_PublishCatalogId(PublishCatalogId)

  If (@PimCategoryHierarchyId <> 0 AND @PimCatalogId <> 0 )
  BEGIN
			 INSERT INTO #TBL_PublishCatalogId(PublishCatalogId ,PublishProductId ,PimProductId  , VersionId ,PublishCategoryId ,LocaleId)  
			 SELECT distinct ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,MAX(ZPCP.PublishCataloglogId ) VersionId ,ZPC.PublishCategoryId,ZPCP.LocaleId
				 FROM ZnodePublishProduct ZPP INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
				 INNER JOIN ZnodePublishCategoryProduct ZPPP ON ZPP.PublishProductId  = ZPPP.PublishProductId  
				 AND ZPCP.PublishCatalogId = ZPPP.PublishCatalogId
				 INNER JOIN ZnodePublishCategory ZPC ON ZPC.PublishCatalogId = ZPPP.PublishCatalogId AND ZPPP.PublishCategoryId = ZPC.PublishCategoryId 
				 WHERE ZPP.PublishCatalogId = @PublishCatalogId  and ZPCP.PublishStateId =  @PublishStateId
				 AND 
				 ZPC.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds )
				 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId ,ZPC.PublishCategoryId,ZPCP.LocaleId	

			INSERT INTO #TBL_PublishCatalogId(PublishCatalogId ,PublishProductId ,PimProductId  , VersionId ,PublishCategoryId ,LocaleId)
			SELECT DISTINCT ZPP.PublishCatalogId,ZPP.PublishProductId,PimProductId,MAX(ZPCP.PublishCatalogLogId) VersionId,NULL, ZPCP.LocaleId
				 FROM ZnodePublishProduct ZPP 
				 INNER JOIN ZnodePublishCatalogLog ZPCP ON 
				 (ZPCP.PublishCatalogId = ZPP.PublishCatalogId) 
				 WHERE				 (EXISTS (SELECT TOP 1 1 FROM @pimProductId SP WHERE SP.Id = ZPP.PimProductId ))
				 AND (ZPP.PublishCatalogId = @publishCatalogId )
				 AND NOT Exists (Select TOP 1 1 from #TBL_PublishCatalogId TPL where TPL.PublishProductId = ZPP.PublishProductId)
				 AND ZPCP.PublishStateId =  @PublishStateId
			GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId , ZPCP.LocaleId



  END
  ELSE 
  BEGIN
			INSERT INTO #TBL_PublishCatalogId(PublishCatalogId ,PublishProductId,PimProductId ,VersionId,LocaleId  ) 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,  
											MAX(PublishCatalogLogId) ,ZPCP.LocaleId
				 FROM ZnodePublishProduct ZPP 
				 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
				 WHERE (EXISTS (SELECT TOP 1 1 FROM @PimProductId SP 
				 WHERE SP.Id = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
				 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
				 --AND  ZPCP.PublishStateId =  @PublishStateId
				 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId ,ZPCP.LocaleId
  END
           
		     DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )


WHILE @Counter <= @maxCountId
BEGIN
 
 SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId MT 
  WHERE  RowId = @Counter)
 
  INSERT INTO #PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId
  
  IF( @LocaleId <> @DefaultLocaleId )
  BEGIN
	INSERT INTO #PimProductAttributeXML 
	SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
	FROM ZnodePimAttributeXML ZPAX
	WHERE ZPAX.LocaleId = @DefaultLocaleId  
	AND NOT EXISTS (SELECT TOP 1 1 FROM #PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )
  END

  INSERT INTO #PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  IF( @LocaleId <> @DefaultLocaleId )
  BEGIN
	INSERT INTO #PimDefaultValueLocale 
	SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
	FROM ZnodePimAttributeDefaultXML ZX
	WHERE localeId = @DefaultLocaleId
	AND NOT EXISTS (SELECT TOP 1 1 FROM #PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  END
  
  CREATE TABLE #TBL_CustomeFiled  (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO #TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,RTR.LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId AND RTR.LocaleID = ZPP.LocaleId)
  WHERE RTR.LocaleId = @LocaleId
 
 
  INSERT INTO #TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,ITR.LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId AND ITR.LocaleID = ZPP.LocaleId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM #TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
       
       

	 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId , VIR.AttributeValue, VIR.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE ( LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  UNION ALL 
	 SELECT VIR.PimProductId,VIR.PimAttributeId,ZPDE.PimProductAttributeMediaId,ZPDE.LocaleId ,ZPDE.MediaPath AS AttributeValue, d.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,VIR.PimAttributeId ORDER BY VIR.PimProductId,VIR.PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
	 INNER JOIN ZnodePimAttribute d ON ( d.PimAttributeId=VIR.PimAttributeId )
	 WHERE ( ZPDE.LocaleId = @DefaultLocaleId OR ZPDE.LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  Union All
	 SELECT VIR.PimProductId,VIR.PimAttributeId,ZPDVL.PimAttributeDefaultValueLocaleId,ZPDVL.LocaleId ,ZPDVL.AttributeDefaultValue AS AttributeValue, d.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,VIR.PimAttributeId ORDER BY VIR.PimProductId,VIR.PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimAttribute D ON ( D.PimAttributeId=VIR.PimAttributeId AND D.IsPersonalizable =1  )
	 INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON ZPADV.PimAttributeId = D.PimAttributeId
	 INNER JOIN ZnodePimAttributeDefaultValueLocale ZPDVL   on (ZPADV.PimAttributeDefaultValueId = ZPDVL.PimAttributeDefaultValueId)
	 --INNER JOIN ZnodePimProductAttributeDefaultValue ZPDVP ON (ZPDVP.PimAttributeValueId = VIR.PimAttributeValueId AND ZPADV.PimAttributeDefaultValueId = ZPDVP.PimAttributeDefaultValueId )
	 WHERE ( ZPDVL.LocaleId = @DefaultLocaleId OR ZPDVL.LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )

	 UPDATE #TBL_AttributeVAlue SET rowid = (SELECT MAX(rowid) from #TBL_AttributeVAlue b where a.PimProductId=b.PimProductId and a.PimAttributeId = b.PimAttributeId )
	 from #TBL_AttributeVAlue a

	 --select * from #TBL_AttributeVAlue
	 --return
  SET @versionId = (SELECT TOP 1 VersionId FROM #TBL_PublishCatalogId) 
  

 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END 

 create table #Cte_GetData (PimProductId int,AttributeCode varchar(600),AttributeValue nvarchar(max),VersionId INT)

 create index idx_#Cte_GetDataPimProductId on #Cte_GetData(PimProductId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue,VersionId
FROM #TBL_AttributeVAlue a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN #PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId)
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
where a.LocaleId  = CASE WHEN a.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END
AND NOT EXISTS (SELECT TOP 1 1 FROM Fn_GetProductMediaAttributeId() TY WHERE TY.PimAttributeId = c.PimAttributeId)
 

INSERT INTO #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML+'</AttributeEntity></Attributes>' ,VersionId
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN #TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = THB.PimProductId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN #PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue ,VersionId
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)


insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT  ',' +ZPPG.MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     INNER JOIN #TBL_AttributeVAlue FTRE ON (FTRE.PimProductId = ZPAV.PimProductId AND FTRE.PimAttributeId = ZPAV.PimAttributeId  AND FTRE.LocaleId  = CASE WHEN FTRE.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
	 WHERE ZPPG.PimProductAttributeMediaId = FTRE.ZnodePimAttributeValueLocaleId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue ,VersionId	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM #TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue ,ZPP.VersionId
							
FROM ZnodePimLinkProductDetail ZPLP  
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
where exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId,ZPP.VersionId

SELECT a.PimProductId ,CAST((SELECT ''+dbo.FN_trim(b.AttributeValue) FOR XML PATH(''))  AS NVARCHAR(max)) AttributeValue , b.LocaleId  ,a.PimAttributeId,c.AttributeCode ,b.ZnodePimAttributeValueLocaleId
into #View_LoadManageProductInternal
FROM ZnodePimAttributeValue a 
INNER JOIN  ZnodePimAttributeValueLocale b ON ( b.PimAttributeValueId = a.PimAttributeValueId )
INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )
where c.AttributeCode = 'SKU'

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT ZPAV.PimProductId,'DefaultSkuForConfigurable' ,'<Attributes><AttributeEntity>'+REPLACE(REPLACE (c.AttributeXML,'ProductType','DefaultSkuForConfigurable'),'Product Type','Default Sku For Configurable')+'<AttributeValues>'+
 (SELECT TOP 1 AttributeValue FROM #View_LoadManageProductInternal ad 
 INNER JOIN ZnodePimProductTypeAssociation yt ON (yt.PimProductId = ad.PimProductId)
 WHERE Ad.AttributeCode = 'SKU'
 AND yt.PimParentProductId = ZPAV.PimProductId
 ORDER BY yt.DisplayOrder , yt.PimProductTypeAssociationId ASC)
+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue ,ZPP.VersionId
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL 
INNER JOIN ZnodePimAttributeDefaultValue dr ON (dr.PimAttributeDefaultValueId = ZPADVL.PimAttributeDefaultValueId)
 WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId
 AND dr.AttributeDefaultValueCode= 'ConfigurableProduct' 
)
AND EXISTS (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)
AND c.AttributeCode = 'ProductType' 

---------brand details 
CREATE TABLE #Cte_BrandData (PimProductId int,BrandXML nvarchar(max))

INSERT INTO #Cte_BrandData ( PimProductId, BrandXML )
SELECT  DISTINCT ZBP.PimProductId,'<Brands><BrandEntity><BrandId>'+CAST(ZBD.BrandId AS VARCHAR(50))+'</BrandId><BrandCode>'+ZBD.BrandCode+'</BrandCode><BrandName>'+ZBDL.BrandName+'</BrandName></BrandEntity></Brands>' as BrandXML					   		   
FROM [ZnodeBrandDetails] AS ZBD
INNER JOIN ZnodeBrandDetaillocale ZBDL ON ZBD.BrandId = ZBDL.BrandId
INNER JOIN [ZnodeBrandProduct] AS ZBP ON ZBD.BrandId = ZBP.BrandId

--  --CREATE INDEX IND_Znode

  DELETE tu FROM ZnodePublishedXml tu  WHERE 
  EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId TY WHERE TY.VersionId = tu.PublishCatalogLogId AND Tu.PublishedId = ty.PublishProductId  )
  AND IsProductXML = 1   AND LocaleId = @LocaleId 

  
--  --ALTER INDEX ALL ON ZnodePublishedXml  REBUILD WITH (FILLFACTOR = 80 ) 
  If (@PimCategoryHierarchyId <> 0 AND @PimCatalogId <> 0 )
  BEGIN
		
		--Collect index of other categorys
		IF OBJECT_ID('tempdb..#Index') is not null
		BEGIN 
			DROP TABLE #Index
		END 
		CREATE TABLE #Index (RowIndex int ,PublishCategoryId int , PublishProductId  int )		
		insert into  #Index ( RowIndex ,PublishCategoryId , PublishProductId )
		Select CAST(ROW_NUMBER()Over(Partition BY ZPC.PublishProductId 
		Order BY ISNULL(ZPC.PublishCategoryId,'0') desc )   AS VARCHAR(100)),
		ZPC.PublishCategoryId , ZPC.PublishProductId
		FROM ZnodePublishCategoryProduct ZPC where ZPC.PublishCatalogId = @PublishCatalogId
		
		--Publish parent products with index number 
		INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsProductXML,LocaleId
		,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,PublishCategoryId)
		SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPCP.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
		+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
		+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPFC 
						INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
						WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+
						'</TempProfileIds>
						 <ProductIndex>'+ 
								--CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPCP.PublishCategoryId,'0') desc ) 
								CAST(Isnull((select RowIndex from #Index WHERE PublishProductId = zpp.PublishProductId
								AND PublishCategoryId = ZPCP.PublishCategoryId ) ,0)
								AS VARCHAr(100))+
						'</ProductIndex>
						<IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
		'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
		ISNULL(STUFF(( SELECT '  '+ BrandXML  FROM #Cte_BrandData BD WHERE BD.PimProductId = ZPP.PimProductId   
				FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, ''),'')+
		STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId AND TY.VersionId = ZPP.VersionId   
		FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
		,ZPCP.PublishCategoryId
		FROM  #TBL_PublishCatalogId zpp
		INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
		INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
		LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
		LEFT JOIN ZnodePublishCategory ZPC ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId 
		AND ZPP.PublishCategoryId = ZPC.PublishCategoryId 
		)
		LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId AND  ZPCCF.PimCategoryHierarchyId =  ZPC.PimCategoryHierarchyId
		)
		LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ISNULL(ZPCP.PublishCategoryId,0) AND ZPCD.LocaleId = @LocaleId )
		WHERE ZPPDFG.LocaleId = @LocaleId AND ZPP.LocaleId = @LocaleId AND  ZPC.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds ) 
		and zpp.PublishCategoryId IS NOT NULL


	 --Publish only associate product 
	 INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsProductXML,LocaleId
		,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,PublishCategoryId)
		SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPCP.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
		+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
		+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPFC 
						INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
						WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+
						'</TempProfileIds>
						 <ProductIndex>'+ 
								--CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPCP.PublishCategoryId,'0') desc ) 
								CAST(Isnull((select RowIndex from #Index WHERE PublishProductId = zpp.PublishProductId
								AND   (PublishCategoryId = ZPCP.PublishCategoryId  OR PublishCategoryId is null ) ) ,0)
								AS VARCHAr(100))+
						'</ProductIndex>
						<IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
		'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
		STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   AND TY.VersionId= ZPP.VersionId
		FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
		,ZPCP.PublishCategoryId
		FROM  #TBL_PublishCatalogId zpp
		INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
		INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
		LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
		LEFT JOIN ZnodePublishCategory ZPC ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId 
		AND ZPP.PublishCategoryId = ZPC.PublishCategoryId 
		AND ZPC.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds ))
		LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId AND  ZPCCF.PimCategoryHierarchyId =  ZPC.PimCategoryHierarchyId
		AND ZPCCF.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds ))
		LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ISNULL(ZPCP.PublishCategoryId,0) AND ZPCD.LocaleId = @LocaleId )
		WHERE ZPPDFG.LocaleId = @LocaleId AND ZPP.LocaleId = @LocaleId AND zpp.PublishCategoryId IS NULL
		
  END
  ELSE
  BEGIN

      INSERT INTO ZnodePublishedXml (PublishCatalogLogId
		,PublishedId
		,PublishedXML
		,IsProductXML
		,LocaleId
		,CreatedBy
		,CreatedDate
		,ModifiedBy
		,ModifiedDate
		,PublishCategoryId)
		SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPCP.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
		+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
		+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPFC 
						INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
						WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
		'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
		STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   AND TY.VersionId = ZPP.VersionId
		FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
		,ZPCP.PublishCategoryId
		FROM  #TBL_PublishCatalogId zpp
		INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
		INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
		LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
		LEFT JOIN ZnodePublishCategory ZPC ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId )
		LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId AND  ZPCCF.PimCategoryHierarchyId =  ZPC.PimCategoryHierarchyId)
		LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ISNULL(ZPCP.PublishCategoryId,0) AND ZPCD.LocaleId = @LocaleId )
		WHERE ZPPDFG.LocaleId = @LocaleId AND ZPP.LocaleId = @LocaleId
END 
 


--DELETE FROM @PimProductAttributeXML
DELETE FROM #TBL_CustomeFiled
DELETE FROM #PimDefaultValueLocale
 IF OBJECT_ID('tempdb..#PimProductAttributeXML') is not null
 BEGIN 
 DELETE FROM #PimProductAttributeXML
 END
 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END
   IF OBJECT_ID('tempdb..#Cte_BrandData') is not null
 BEGIN 
 DROP TABLE #Cte_BrandData
 END
  IF OBJECT_ID('tempdb..#TBL_AttributeVAlue') is not null
 BEGIN 
 DROP TABLE #TBL_AttributeVAlue
 END
 IF OBJECT_ID('tempdb..#View_LoadManageProductInternal') is not null
 BEGIN 
 DROP TABLE #View_LoadManageProductInternal
 END
 IF OBJECT_ID('tempdb..#TBL_CustomeFiled') is not null
 BEGIN 
 DROP TABLE #TBL_CustomeFiled
 END
SET @Counter = @counter + 1 
END 

END

GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Split')
BEGIN
DROP FUNCTION dbo.Split
END
GO

CREATE FUNCTION [dbo].[Split] (
      @InputString                  VARCHAR(max),
      @Delimiter                    VARCHAR(50)
)

RETURNS @Items TABLE ( Id int Identity(1,1)
      ,Item                          VARCHAR(8000)
)

AS
BEGIN
      IF @Delimiter = ' '
      BEGIN
            SET @Delimiter = ','
            SET @InputString = REPLACE(@InputString, ' ', @Delimiter)
      END

	  DECLARE @StartIndex INT, @EndIndex INT
 
      SET @StartIndex = 1
      IF SUBSTRING(@InputString, LEN(@InputString) - 1, LEN(@InputString)) <> @Delimiter
      BEGIN
            SET @InputString = @InputString + @Delimiter
      END
 
      WHILE CHARINDEX(@Delimiter, @InputString) > 0
      BEGIN
            SET @EndIndex = CHARINDEX(@Delimiter, @InputString)
           
            INSERT INTO @Items(Item)
            SELECT SUBSTRING(@InputString, @StartIndex, @EndIndex - 1)
           
            SET @InputString = SUBSTRING(@InputString, @EndIndex + 1, LEN(@InputString))
      END
 
      RETURN
END -- End Function

GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCatalogProductSEODetail')
BEGIN 
	DROP PROCEDURE Znode_GetCatalogProductSEODetail
END
GO
CREATE PROCEDURE [dbo].[Znode_GetCatalogProductSEODetail]
( 
  @WhereClause      NVARCHAR(MAX),
  @Rows             INT           = 100,
  @PageNo           INT           = 1,
  @Order_BY         VARCHAR(1000) = '',
  @RowsCount        INT OUT,
  @LocaleId         INT           = 1,
  @PortalId			INT
 
  )
AS
   
/*
	   Summary:  Get product List  Catalog / category / respective product list   		   
	   Unit Testing   
	   begin tran
	   declare @p7 int = 0  
	   EXEC Znode_GetCatalogProductSEODetail @WhereClause=N'',@Rows=100,@PageNo=1,@Order_By=N'',
	   @RowsCount=@p7 output,@PortalId= 1 ,@LocaleId=1 
	   rollback tran
	  
	     declare @p7 int = 0  
	   EXEC Znode_GetCatalogProductSEODetail @WhereClause=N'',@Rows=10,@PageNo=1,@Order_By=N'',
	   @RowsCount=@p7 output,@PortalId= 5 ,@LocaleId=1 


    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE  @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @SQL NVARCHAR(MAX), 
					 @PimProductId TransferId,
					 @PimAttributeId VARCHAR(MAX)
					
             DECLARE @TransferPimProductId TransferId 
		
	
			IF OBJECT_ID('TEMPDB..#ProductDetail') IS NOT NULL
			DROP TABLE #ProductDetail

			IF OBJECT_ID('TEMPDB..##TempProductDetail') IS NOT NULL
			DROP TABLE ##TempProductDetail

			IF OBJECT_ID('TEMPDB..#znodeCatalogProduct') IS NOT NULL
			DROP TABLE #znodeCatalogProduct

			IF OBJECT_ID('TEMPDB..#ProductAttributeDetailS') IS NOT NULL
			DROP TABLE #ProductAttributeDetailS

			IF OBJECT_ID('TEMPDB..#ProductDetail') IS NOT NULL
			DROP TABLE #ProductDetail

			Declare @PimCatalogId INT

			SELECT @PimCatalogId = PimCatalogId 
			FROM ZnodePortalCatalog ZPC
			INNER JOIN ZnodePublishCatalog PC ON ZPC.PublishCatalogId = pc.PublishCatalogId WHERE PortalId = @PortalId
				
    --            SELECT  PimProductid,SKU,ProductName,ProductImage,IsActive,LocaleId --,PublishState
				--INTO #ProductDetail
				-- FROM 
				-- (
				-- SELECT c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId--, ZPS.DisplayName  PublishState
				-- FROM
				-- znodePimProduct c 
				-- inner join ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
				-- inner join ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
				-- inner join ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
				-- --INNER JOIN ZnodePublishState ZPS ON (ZPS.PublishStateId = c.PublishStateId)
				-- where  PA.Attributecode IN ('SKU','ProductName','ProductImage','IsActive')
				---- AND e.localeid = @LocaleId
				-- ) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,ProductImage,IsActive))AS PVT
				-----------------------------------========
				SELECT c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId--, ZPS.DisplayName  PublishState
				 INTO #ProductAttributeDetailS
				 FROM
				 znodePimProduct c 
				 inner join ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
				 inner join ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
				 inner join ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
				 --INNER JOIN ZnodePublishState ZPS ON (ZPS.PublishStateId = c.PublishStateId)
				 where  PA.Attributecode IN ('SKU','ProductName','ProductImage','IsActive')

				  CREATE TABLE #ProductDetail( PimProductid INT,SKU VARCHAR(1000),ProductName VARCHAR(1000),ProductImage VARCHAR(1000),IsActive VARCHAR(1000),LocaleId  INT)
			
				 INSERT INTO #ProductDetail(pimproductId, LocaleId)
				  select distinct PimProductId,LocaleId from #ProductAttributeDetailS

				  update b set b.SKU = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'SKU'

				 update b set b.ProductName = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'ProductName'

				 update b set b.ProductImage = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'ProductImage'

				 update b set b.IsActive = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'IsActive'
			     -----------------------------------========

		SET @SQL = 
		'
		--DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
		--INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
		--	 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

		select distinct PimCatalogId,PimProductId into #znodeCatalogProduct
	FROm ZnodePimCatalogCategory

		DECLARE @TBL_MediaValue TABLE (PimAttributeValueId INT,PimProductId INT,MediaPath INT,PimAttributeId INt,LocaleId INT )
		INSERT INTO @TBL_MediaValue
		SELECT ZPAV.PimAttributeValueId	,ZPAV.PimProductId	,ZPPAM.MediaId MediaPath,ZPAV.PimAttributeId , 	ZPPAM.LocaleId
					FROM ZnodePimAttributeValue ZPAV
					INNER JOIN ZnodePimProductAttributeMedia ZPPAM ON ( ZPPAM.PimAttributeValueId = ZPAV.PimAttributeValueId)
					INNER JOIN #ProductDetail PD ON (PD.PimProductId = ZPAV.PimProductId)
					LEFT JOIN ZnodeMedia ZM ON (Zm.Path = ZPPAM.MediaPath) 
					WHERE  ZPAV.PimAttributeId = (select PimAttributeId from ZnodePimAttribute pa where attributecode = ''ProductImage'') 

		;WITH Cte_ProductMedia
               AS (SELECT PD.PimProductId  , 
			   URL+ZMSM.ThumbnailFolderName+''/''+ zm.PATH  AS ProductImagePath 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_MediaValue PD ON (PD.MediaPath = CAST(ZM.MediaId AS VARCHAR(50)))
			   --INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = PD.PimATtributeId )
			   
			   )

		, CTE_ProductDetail AS
	(
		SELECT DISTINCT  CD.pimproductId, SKU,ProductName,
		case WHEN  CD.IsActive = ''true'' THEN 1 ELSE 0 END IsActive, ISNULL(CSD.SEOCode,SKU) as SEOCode, CSD.SEOUrl, CSDL.SEOTitle, CSDL.SEODescription, CSDL.SEOKeywords,
		case when  ZPS.DisplayName IS NULL THEN '''' ELSE ZPS.DisplayName END IsPublish  , CPM.ProductImagePath, PC.CatalogName, CD.LocaleId
		FROM #ProductDetail CD
		INNER JOIN #znodeCatalogProduct PCC on CD.PimProductId = PCC.PimProductId
		INNER JOIN ZnodePimCatalog PC on PCC.PimCatalogId = PC.PimCatalogId
		LEFT JOIN ZnodeCMSSEOType CST ON CST.Name = ''Product''
		LEFT JOIN ZnodeCMSSEODetail CSD on LTRIM(RTRIM(CD.SKU)) = LTRIM(RTRIM(CSD.SEOCode)) and CSD.CMSSEOTypeId = CST.CMSSEOTypeId AND CSD.PortalId = '+CAST(@PortalId AS VARCHAR(10))+'
		LEFT JOIN ZnodeCMSSEODetailLocale CSDL ON  CSD.CMSSEODetailId = CSDL.CMSSEODetailId AND CSDL.LocaleId =  '+CAST(@LocaleId AS VARCHAR(10))+'
		LEFT JOIN ZnodePublishState ZPS ON (ZPS.PublishStateId = CSD.PublishStateId)
		
		LEFT JOIN Cte_ProductMedia CPM ON (CPM.PimProductId = CD.PimProductId)
		WHERE PCC.PimCatalogId = '+CAST(@PimCatalogId AS VARCHAR(10))+' AND CD.LocaleId IN ('+CAST(@LocaleId AS VARCHAR(50))+', '+CAST(@DefaultLocaleId AS VARCHAR(50))+')
	)

	, CTE_ProductLocale AS
	(
	SELECT pimproductId, SKU,ProductName,IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName, LocaleId
	FROM CTE_ProductDetail CPD
	WHERE CPD.LocaleId ='+CAST(@LocaleId AS VARCHAR(50))+'	
	)

	, CTE_ProductBothLocale AS
	(
	SELECT pimproductId, SKU,ProductName,IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName
	FROM CTE_ProductLocale PL
	UNION ALL 
	SELECT pimproductId, SKU,ProductName,IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName
	FROM CTE_ProductDetail PD 
	WHERE LocaleId ='+CAST(@DefaultLocaleId AS VARCHAR(50))+' AND
	NOT EXISTS (select TOP 1 1 from CTE_ProductLocale PCL WHERE PCL.pimproductId = PD.pimproductId AND PCL.CatalogName = PD.CatalogName )
	)

	,CTE_ProductDetail_WhereClause AS
	(
		SELECT  pimproductId, SKU,ProductName,
		cast(IsActive as bit) IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName,'+[dbo].[Fn_GetPagingRowId](@Order_BY, 'PimProductId')+',Count(*)Over() CountId
		FROM CTE_ProductBothLocale CD
		WHERE 1 = 1  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
	)
	SELECT  pimproductId, SKU,ProductName,IsActive, SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords,IsPublish,ProductImagePath,CatalogName, CountId
	INTO ##TempProductDetail
	FROM CTE_ProductDetail_WhereClause
	'+[dbo].[Fn_GetPaginationWhereClause](@PageNo, @Rows);
	print @SQL
	EXEC (@SQL)

	SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM ##TempProductDetail ),0)

	SELECT  pimproductId,LTRIM(RTRIM(SKU)) AS SKU,ProductName,IsActive,LTRIM(RTRIM(SEOCode)) AS SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords,IsPublish,ProductImagePath 
	FROM ##TempProductDetail
	--GROUP by pimproductId, SKU,ProductName,IsActive, SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords,IsPublish,ProductImagePath 

  
		

			IF OBJECT_ID('TEMPDB..#ProductDetail') IS NOT NULL
			DROP TABLE #ProductDetail

			IF OBJECT_ID('TEMPDB..##TempProductDetail') IS NOT NULL
			DROP TABLE ##TempProductDetail

			
			IF OBJECT_ID('TEMPDB..#znodeCatalogProduct') IS NOT NULL
		DROP TABLE #znodeCatalogProduct


         END TRY
         BEGIN CATCH
		   
             DECLARE @Status BIT ;
		     SET @Status = 0;
		 --    DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			-- @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCatalogCategoryProducts @WhereClause = '''+ISNULL(CAST(@WhereClause AS VARCHAR(MAX)),'''''')+''',@Rows='+ISNULL(CAST(@Rows AS
			--VARCHAR(50)),'''''')+',@PageNo='+ISNULL(CAST(@PageNo AS VARCHAR(50)),'''')+',@Order_BY='''+ISNULL(@Order_BY,'''''')+''',@RowsCount='+ISNULL(CAST(@RowsCount AS VARCHAR(50)),'''')+',
			--@LocaleId = '+ISNULL(CAST(@LocaleId AS VARCHAR(50)),'''')+',@PimCategoryId='+ISNULL(CAST(@PimCategoryId AS VARCHAR(50)),'''')+',@PimCatalogId='+ISNULL(CAST(@PimCatalogId AS VARCHAR(50)),'''')+',@IsAssociated='+ISNULL(CAST(@IsAssociated AS VARCHAR(50)),'''')+',
			--@ProfileCatalogId='+ISNULL(CAST(@ProfileCatalogId AS VARCHAR(50)),'''')+',@AttributeCode='''+ISNULL(CAST(@AttributeCode AS VARCHAR(50)),'''''')+''',@PimCategoryHierarchyId='+ISNULL(CAST(@PimCategoryHierarchyId AS VARCHAR(10)),'''');
              			 
   --          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
   --          EXEC Znode_InsertProcedureErrorLog
			--	@ProcedureName = 'Znode_GetCatalogCategoryProducts',
			--	@ErrorInProcedure = 'Znode_GetCatalogCategoryProducts',
			--	@ErrorMessage = @ErrorMessage,
			--	@ErrorLine = @ErrorLine,
			--	@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
	 
UPDATE ZnodeActions
SET IsGlobalAccess = 1
WHERE ActionName = 'UpdateAccountQuote' AND ControllerName = 'Account'

GO

UPDATE ZnodeActions
SET IsGlobalAccess = 1
WHERE ActionName = 'list' AND ControllerName = 'MediaManager'

GO
Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Account','GetCountryBasedOnPortalId',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Account' and ActionName = 'GetCountryBasedOnPortalId')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Accounts' AND ControllerName = 'Account')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Account' and ActionName= 'GetCountryBasedOnPortalId')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Accounts' AND ControllerName = 'Account') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Account' and ActionName= 'GetCountryBasedOnPortalId'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Accounts' AND ControllerName = 'Account'),
(select ActionId from ZnodeActions where ControllerName = 'Account' and ActionName= 'GetCountryBasedOnPortalId')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Accounts' AND ControllerName = 'Account') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Account' and ActionName= 'GetCountryBasedOnPortalId'))

GO

update ZnodeApplicationSetting set OrderByFields='CountryName|DESC' where ItemName='ZnodeCountry'

GO
IF EXISTS (SELECT * FROM sys.views where name = 'View_LoadManageProductInternal')
	drop view View_LoadManageProductInternal
go

CREATE  View [dbo].[View_LoadManageProductInternal]
AS 

SELECT a.PimProductId ,CAST((SELECT ''+ltrim(rtrim((b.AttributeValue))) FOR XML PATH(''))  AS NVARCHAR(max)) AttributeValue , b.LocaleId  ,a.PimAttributeId,c.AttributeCode ,b.ZnodePimAttributeValueLocaleId
FROM ZnodePimAttributeValue a 
INNER JOIN  ZnodePimAttributeValueLocale b ON ( b.PimAttributeValueId = a.PimAttributeValueId )
INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )

UNION ALL

SELECT a.PimProductId,CAST((SELECT ''+ltrim(rtrim((ZPPATAV.AttributeValue))) FOR XML PATH(''),TYPE) AS NVARCHAR(max)) AS     AttributeValue  

,ZPPATAV.LocaleId,a.PimAttributeId,c.AttributeCode  ,ZPPATAV.PimProductAttributeTextAreaValueId
FROM ZnodePimAttributeValue a 
INNER JOIN ZnodePimProductAttributeTextAreaValue ZPPATAV ON (ZPPATAV.PimAttributeValueId = a.PimAttributeValueId )
INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCatalogProductSEODetail')
BEGIN 
	DROP PROCEDURE Znode_GetCatalogProductSEODetail
END
GO

CREATE PROCEDURE [dbo].[Znode_GetCatalogProductSEODetail]
( 
  @WhereClause      NVARCHAR(MAX),
  @Rows             INT           = 100,
  @PageNo           INT           = 1,
  @Order_BY         VARCHAR(1000) = '',
  @RowsCount        INT OUT,
  @LocaleId         INT           = 1,
  @PortalId			INT
 
  )
AS
   
/*
	   Summary:  Get product List  Catalog / category / respective product list   		   
	   Unit Testing   
	   begin tran
	   declare @p7 int = 0  
	   EXEC Znode_GetCatalogProductSEODetail @WhereClause=N'',@Rows=100,@PageNo=1,@Order_By=N'',
	   @RowsCount=@p7 output,@PortalId= 1 ,@LocaleId=1 
	   rollback tran
	  
	     declare @p7 int = 0  
	   EXEC Znode_GetCatalogProductSEODetail @WhereClause=N'',@Rows=10,@PageNo=1,@Order_By=N'',
	   @RowsCount=@p7 output,@PortalId= 5 ,@LocaleId=1 


    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE  @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @SQL NVARCHAR(MAX), 
					 @PimProductId TransferId,
					 @PimAttributeId VARCHAR(MAX)
					
             DECLARE @TransferPimProductId TransferId 
		
	
			IF OBJECT_ID('TEMPDB..#ProductDetail') IS NOT NULL
			DROP TABLE #ProductDetail

			IF OBJECT_ID('TEMPDB..##TempProductDetail') IS NOT NULL
			DROP TABLE ##TempProductDetail

			IF OBJECT_ID('TEMPDB..#znodeCatalogProduct') IS NOT NULL
			DROP TABLE #znodeCatalogProduct

			IF OBJECT_ID('TEMPDB..#ProductAttributeDetailS') IS NOT NULL
			DROP TABLE #ProductAttributeDetailS

			IF OBJECT_ID('TEMPDB..#ProductDetail') IS NOT NULL
			DROP TABLE #ProductDetail

			IF OBJECT_ID('TEMPDB..#TBL_MediaValue') IS NOT NULL
			DROP TABLE #TBL_MediaValue

			
			
			Declare @PimCatalogId INT

			SELECT @PimCatalogId = PimCatalogId 
			FROM ZnodePortalCatalog ZPC
			INNER JOIN ZnodePublishCatalog PC ON ZPC.PublishCatalogId = pc.PublishCatalogId WHERE PortalId = @PortalId
				
    --            SELECT  PimProductid,SKU,ProductName,ProductImage,IsActive,LocaleId --,PublishState
				--INTO #ProductDetail
				-- FROM 
				-- (
				-- SELECT c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId--, ZPS.DisplayName  PublishState
				-- FROM
				-- znodePimProduct c 
				-- inner join ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
				-- inner join ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
				-- inner join ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
				-- --INNER JOIN ZnodePublishState ZPS ON (ZPS.PublishStateId = c.PublishStateId)
				-- where  PA.Attributecode IN ('SKU','ProductName','ProductImage','IsActive')
				---- AND e.localeid = @LocaleId
				-- ) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,ProductImage,IsActive))AS PVT
				-----------------------------------========
				SELECT c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId--, ZPS.DisplayName  PublishState
				 INTO #ProductAttributeDetailS
				 FROM
				 znodePimProduct c 
				 inner join ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
				 inner join ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
				 inner join ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
				 --INNER JOIN ZnodePublishState ZPS ON (ZPS.PublishStateId = c.PublishStateId)
				 where  PA.Attributecode IN ('SKU','ProductName','ProductImage','IsActive')


				 CREATE TABLE #ProductDetail( PimProductid INT,SKU VARCHAR(1000),ProductName VARCHAR(1000),ProductImage VARCHAR(1000),IsActive VARCHAR(1000),LocaleId  INT)

				 INSERT INTO #ProductDetail(pimproductId, LocaleId)
				  select distinct PimProductId,LocaleId from #ProductAttributeDetailS

				 update b set b.SKU = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'SKU'

				 update b set b.ProductName = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'ProductName'
				 				 
				 update b set b.ProductImage = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'ProductImage'
				 
				 update b set b.IsActive = a.AttributeValue
				 FROM #ProductAttributeDetailS A
				 INNER JOIN #ProductDetail B ON A.PimProductid = B.PimProductid
				 WHERE A.attributecode = 'IsActive'
			     -----------------------------------========
				 
				 --select * into abbcc from #ProductDetail

				 --select * from #ProductAttributeDetailS
		SET @SQL = 
		'		
		select distinct PimCatalogId,PimProductId into #znodeCatalogProduct
	FROm ZnodePimCatalogCategory
		--DECLARE @TBL_MediaValue TABLE (PimAttributeValueId INT,PimProductId INT,MediaPath INT,PimAttributeId INt,LocaleId INT )
		create  TABLE #TBL_MediaValue(PimAttributeValueId INT,PimProductId INT,MediaPath INT,PimAttributeId INt,LocaleId INT )
		INSERT INTO #TBL_MediaValue
		SELECT ZPAV.PimAttributeValueId	,ZPAV.PimProductId	,ZPPAM.MediaId MediaPath,ZPAV.PimAttributeId , 	ZPPAM.LocaleId
					FROM ZnodePimAttributeValue ZPAV
					INNER JOIN ZnodePimProductAttributeMedia ZPPAM ON ( ZPPAM.PimAttributeValueId = ZPAV.PimAttributeValueId)
					INNER JOIN #ProductDetail PD ON (PD.PimProductId = ZPAV.PimProductId)
					LEFT JOIN ZnodeMedia ZM ON (Zm.Path = ZPPAM.MediaPath) 
					WHERE  ZPAV.PimAttributeId = (select PimAttributeId from ZnodePimAttribute pa where attributecode = ''ProductImage'') 
		;WITH Cte_ProductMedia
               AS (SELECT PD.PimProductId  , 
			   URL+ZMSM.ThumbnailFolderName+''/''+ zm.PATH  AS ProductImagePath 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN #TBL_MediaValue PD ON (PD.MediaPath = ZM.MediaId)--CAST(ZM.MediaId AS VARCHAR(50)))
			   --INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = PD.PimATtributeId ) 
			   )
		, CTE_ProductDetail AS
		(
		SELECT DISTINCT  CD.pimproductId, SKU,ProductName,
		case WHEN  CD.IsActive = ''true'' THEN 1 ELSE 0 END IsActive, ISNULL(CSD.SEOCode,SKU) as SEOCode, CSD.SEOUrl, CSDL.SEOTitle, CSDL.SEODescription, CSDL.SEOKeywords,
		case when  ZPS.DisplayName IS NULL THEN '''' ELSE ZPS.DisplayName END IsPublish  , CPM.ProductImagePath, PC.CatalogName, CD.LocaleId
		FROM #ProductDetail CD
		INNER JOIN #znodeCatalogProduct PCC on CD.PimProductId = PCC.PimProductId
		INNER JOIN ZnodePimCatalog PC on PCC.PimCatalogId = PC.PimCatalogId
		LEFT JOIN ZnodeCMSSEOType CST ON CST.Name = ''Product''
		LEFT JOIN ZnodeCMSSEODetail CSD on LTRIM(RTRIM(CD.SKU)) = LTRIM(RTRIM(CSD.SEOCode)) and CSD.CMSSEOTypeId = CST.CMSSEOTypeId AND CSD.PortalId = '+CAST(@PortalId AS VARCHAR(10))+'
		LEFT JOIN ZnodeCMSSEODetailLocale CSDL ON  CSD.CMSSEODetailId = CSDL.CMSSEODetailId AND CSDL.LocaleId =  '+CAST(@LocaleId AS VARCHAR(10))+'
		LEFT JOIN ZnodePublishState ZPS ON (ZPS.PublishStateId = CSD.PublishStateId)
		LEFT JOIN Cte_ProductMedia CPM ON (CPM.PimProductId = CD.PimProductId)
		WHERE PCC.PimCatalogId = '+CAST(@PimCatalogId AS VARCHAR(10))+' AND CD.LocaleId IN ('+CAST(@LocaleId AS VARCHAR(50))+', '+CAST(@DefaultLocaleId AS VARCHAR(50))+')
	)
	, CTE_ProductLocale AS
	(
	SELECT pimproductId, SKU,ProductName,IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName, LocaleId
	FROM CTE_ProductDetail CPD
	WHERE CPD.LocaleId ='+CAST(@LocaleId AS VARCHAR(50))+'	
	)
	, CTE_ProductBothLocale AS
	(
	SELECT pimproductId, SKU,ProductName,IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName
	FROM CTE_ProductLocale PL
	UNION ALL 
	SELECT pimproductId, SKU,ProductName,IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName
	FROM CTE_ProductDetail PD 
	WHERE LocaleId ='+CAST(@DefaultLocaleId AS VARCHAR(50))+' AND
	NOT EXISTS (select TOP 1 1 from CTE_ProductLocale PCL WHERE PCL.pimproductId = PD.pimproductId AND PCL.CatalogName = PD.CatalogName )
	)
	,CTE_ProductDetail_WhereClause AS
	(
		SELECT  pimproductId, SKU,ProductName,
		cast(IsActive as bit) IsActive , SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords, IsPublish,ProductImagePath,CatalogName,'+[dbo].[Fn_GetPagingRowId](@Order_BY, 'PimProductId')+',Count(*)Over() CountId
		FROM CTE_ProductBothLocale CD
		WHERE 1 = 1  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
	)
	SELECT  pimproductId, SKU,ProductName,IsActive, SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords,IsPublish,ProductImagePath,CatalogName, CountId
	INTO ##TempProductDetail
	FROM CTE_ProductDetail_WhereClause
	'+[dbo].[Fn_GetPaginationWhereClause](@PageNo, @Rows);
	--select @SQL for xml path,type
	EXEC (@SQL)

	SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM ##TempProductDetail ),0)

	SELECT  pimproductId,LTRIM(RTRIM(SKU)) AS SKU,ProductName,IsActive,LTRIM(RTRIM(SEOCode)) AS SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords,IsPublish,ProductImagePath 
	FROM ##TempProductDetail
	--GROUP by pimproductId, SKU,ProductName,IsActive, SEOCode, SEOUrl, SEOTitle, SEODescription, SEOKeywords,IsPublish,ProductImagePath 
			

			IF OBJECT_ID('TEMPDB..#ProductDetail') IS NOT NULL
			DROP TABLE #ProductDetail

			IF OBJECT_ID('TEMPDB..##TempProductDetail') IS NOT NULL
			DROP TABLE ##TempProductDetail

			
			IF OBJECT_ID('TEMPDB..#znodeCatalogProduct') IS NOT NULL
		    DROP TABLE #znodeCatalogProduct

			IF OBJECT_ID('TEMPDB..#TBL_MediaValue') IS NOT NULL
		    DROP TABLE #TBL_MediaValue

         END TRY
         BEGIN CATCH
		    SELECT ERROR_message()
             DECLARE @Status BIT ;
		     SET @Status = 0;
		 --    DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			-- @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCatalogCategoryProducts @WhereClause = '''+ISNULL(CAST(@WhereClause AS VARCHAR(MAX)),'''''')+''',@Rows='+ISNULL(CAST(@Rows AS
			--VARCHAR(50)),'''''')+',@PageNo='+ISNULL(CAST(@PageNo AS VARCHAR(50)),'''')+',@Order_BY='''+ISNULL(@Order_BY,'''''')+''',@RowsCount='+ISNULL(CAST(@RowsCount AS VARCHAR(50)),'''')+',
			--@LocaleId = '+ISNULL(CAST(@LocaleId AS VARCHAR(50)),'''')+',@PimCategoryId='+ISNULL(CAST(@PimCategoryId AS VARCHAR(50)),'''')+',@PimCatalogId='+ISNULL(CAST(@PimCatalogId AS VARCHAR(50)),'''')+',@IsAssociated='+ISNULL(CAST(@IsAssociated AS VARCHAR(50)),'''')+',
			--@ProfileCatalogId='+ISNULL(CAST(@ProfileCatalogId AS VARCHAR(50)),'''')+',@AttributeCode='''+ISNULL(CAST(@AttributeCode AS VARCHAR(50)),'''''')+''',@PimCategoryHierarchyId='+ISNULL(CAST(@PimCategoryHierarchyId AS VARCHAR(10)),'''');
              			 
   --          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
   --          EXEC Znode_InsertProcedureErrorLog
			--	@ProcedureName = 'Znode_GetCatalogCategoryProducts',
			--	@ErrorInProcedure = 'Znode_GetCatalogCategoryProducts',
			--	@ErrorMessage = @ErrorMessage,
			--	@ErrorLine = @ErrorLine,
			--	@ErrorCall = @ErrorCall;
         END CATCH;
     END;

	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetContentFeedList')
BEGIN 
	DROP PROCEDURE Znode_GetContentFeedList
END
GO

CREATE PROCEDURE [dbo].[Znode_GetContentFeedList]
( @PortalId NVARCHAR(MAX) = NULL,
  @LocaleId INT)
AS
/*
	Summary : This procedure is used to get effective keyword feeding of content list
	Unit Testing:
	EXEC Znode_GetContentFeedList 4,1
	
*/
     BEGIN
         SET NOCOUNT ON;
		 BEGIN TRY
         DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
         DECLARE @TBL_DomainName TABLE
         (PortalId   INT,
          DomainName NVARCHAR(300),
          RowId      INT
         );

         DECLARE @TBL_PortalIds TABLE(PortalId INT);
         DECLARE @TBL_SEODetails TABLE
         (loc                   NVARCHAR(MAX),
          lastmod               DATETIME,
          [g:condition]         VARCHAR(100),
          [description]         NVARCHAR(MAX),
          [g:id]                INT,
          link                  VARCHAR(100),
          [g:identifier_exists] VARCHAR(200),
          DomainName            NVARCHAR(300),
          PortalId              INT,
		   SEOCode               NVARCHAR(4000)
         );

		 if object_id('tempdb..#CMSSEOData') is not null
			drop table #CMSSEOData

		 CREATE TABLE #CMSSEOData 
		 (loc varchar(max),lastmod DateTime,DomainName varchar(200),[image] varchar(1000),Name varchar(500), CMSContentPagesId Int,PortalId Int, SEOCode NVARCHAR(4000))

         INSERT INTO @TBL_PortalIds
                SELECT Zp.PortalId
                FROM Znodeportal AS ZP
                INNER JOIN ZnodeCMSContentPages AS ZPC ON(ZPC.PortalId = Zp.PortalId)
                WHERE EXISTS
                (
                    SELECT TOP 1 1
                    FROM DBO.Split(@PortalID, ',') AS Sp
                    WHERE(CAST(sp.Item AS INT) = ZP.PortalId
                          OR @PortalID = '0' )
                )
                GROUP BY Zp.PortalId;


         INSERT INTO @TBL_DomainName
                SELECT ZD.PortalId,ZD.DomainName,                     
                       ROW_NUMBER() OVER(PArtition BY ZD.DomainName,
                                                  ZD.PortalId ORDER BY ZD.DomainName,
                                                  ZD.PortalId) RowId
                FROM ZnodeDomain ZD
                WHERE EXISTS
                (
                    SELECT TOP 1 1
                    FROM @TBL_PortalIds TBP
                    WHERE TBP.PortalId = ZD.PortalId
                )
			AND IsActive =1 
			AND applicationType = 'Webstore'
			--AND ZD.DomainName in ('www.windycitynovelties.com','www.nightflyer.com')
				

         ;WITH Cte_SeoDetailsWithLocale
              AS (SELECT DISTINCT ZCSD.CMSSEODetailId,ZCSD.SEOURL AS loc,ZCSD.ModifiedDate AS lastmod,'new' AS [g:condition],ZCSDL.SEODescription AS [description],ZPCC.CMSContentPagesId AS [g:id],'' AS link,'false' AS [g:identifier_exists],TBDN.DomainName,ZPCC.PortalId,ISNULL(ZCSDL.LocaleId, @DefaultLocaleId) AS LocaleId,ZCSD.SEOCode
                 FROM ZnodeCMSContentPages AS ZPCC 
                 LEFT JOIN ZnodeCMSSEODetail AS ZCSD ON(ZPCC.PageName = ZCSD.SEOCode AND EXISTS ( SELECT TOP 1 1 FROM ZnodeCMSSEOType AS ZCST WHERE ZCST.CMSSEOTypeId = ZCSD.CMSSEOTypeId
                                                   AND ZCST.Name = 'Content Page') )
                 LEFT JOIN ZnodeCMSSEODetailLocale AS ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSD.CMSSEODetailId
                                                            AND LocaleId IN(@LocaleId, @DefaultLocaleId))
                 LEFT JOIN @TBL_DomainName AS TBDN ON(TBDN.RowId = 1 AND TBDN.PortalId = ZPCC.PortalId )
                  WHERE EXISTS
                  (
                      SELECT TOP 1 1
                      FROM @TBL_PortalIds TBP
                      WHERE ZPCC.PortalId = TBP.PortalId
                  )
				  AND EXISTS (SELECT TOP 1 1 FROM   @TBL_PortalIds TBPL
                      WHERE ZCSD.PortalId = TBPL.PortalId)
				  )

             ,Cte_SeoDetailsWithFirstLocale
              AS (SELECT *
                  FROM Cte_SeoDetailsWithLocale
                  WHERE LocaleId = @LocaleId),

              Cte_SeoDetailsWithDefaultLocale
              AS (
              SELECT *
              FROM Cte_SeoDetailsWithFirstLocale
              UNION ALL
              SELECT *
              FROM Cte_SeoDetailsWithLocale AS CTSDWL
              WHERE LocaleId = @DefaultLocaleId
                    AND NOT EXISTS
              (
                  SELECT TOP 1 1
                  FROM Cte_SeoDetailsWithFirstLocale AS CTSDWDL
                  WHERE CTSDWDL.CMSSEODetailId = CTSDWL.CMSSEODetailId
              ))

              INSERT INTO @TBL_SEODetails
                     SELECT loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,SEOCode
                     FROM Cte_SeoDetailsWithDefaultLocale;

         WITH Cte_ContentPages
              AS (SELECT ZCCP.CMSContentPagesId,ZCCPl.PageTitle,ZCCPL.LocaleId,ZCCP.PageName
                  FROM ZnodeCMSContentPages ZCCP
                  INNER JOIN ZnodeCMSContentPagesLocale ZCCPL ON(ZCCPL.CMSContentPagesId = ZCCP.CMSContentPagesId)
                  WHERE EXISTS
                  (
                      SELECT TOP 1 1
                      FROM @TBL_SEODetails TBSD
                      WHERE TBSD.[g:id] = ZCCP.CMSContentPagesId
                  )
                        AND LocaleID IN(@LocaleId, @DefaultLocaleId)),

              Cte_ContentPageFirstLocale
              AS (SELECT *
                  FROM Cte_ContentPages CTCP
                  WHERE LocaleId = @LocaleId),

              Cte_ContentPageSecondLocale
              AS (
              SELECT *
              FROM Cte_ContentPageFirstLocale CTPFL
              UNION ALL
              SELECT *
              FROM Cte_ContentPages CTCP
              WHERE LocaleId = @LocaleId
                    AND NOT EXISTS
              (
                  SELECT TOP 1 1
                  FROM Cte_ContentPageFirstLocale CTCPFL
                  WHERE CTCPFL.CMSContentPagesId = CTCP.CMSContentPagesId
              ))
			  INSERT INTO #CMSSEOData(loc,lastmod,DomainName,[image], Name, CMSContentPagesId,PortalId,SEOCode)
              SELECT loc,lastmod,DomainName,'' AS [image],PageName Name,[g:id] CMSContentPagesId,PortalId,SEOCode
              FROM @TBL_SEODetails TBSD
              LEFT JOIN Cte_ContentPageSecondLocale CTCPSL ON(TBSD.[g:id] = CTCPSL.CMSContentPagesId);

			  ---- CMS SEO Blog News Details
			  INSERT INTO #CMSSEOData(loc,lastmod,DomainName,[image], Name, CMSContentPagesId,PortalId,SEOCode)
			  EXEC [Znode_GetBlogFeedList] @PortalId, @LocaleId

			  SELECT loc, REPLACE(CONVERT(VARCHAR(30),lastmod,102),'.','-') AS lastmod,DomainName,[image], Name, CMSContentPagesId,PortalId FROM #CMSSEOData

		END TRY
		BEGIN CATCH
		  DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetContentFeedList @PortalId = '+@PortalId+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetContentFeedList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH

     END;

	 GO
	 
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>ProductTypeAssociationId</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Vendor/UnAssociateVendorProducts</manageactionurl>      <manageparamfield>PimProductId,attributeValue</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'AssociatedTaxClassProductList'

GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>ProductTypeAssociationId</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Vendor/UnAssociateVendorProducts</manageactionurl>      <manageparamfield>PimProductId,attributeValue</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'AssociatedVendorProductList'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PimProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>IsActive</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Status</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'AssociatedProductList'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>AddonGroupProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>AddonGroupProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/AddonGroup/DeleteAddonGroupProducts</manageactionurl>      <manageparamfield>AddonGroupProductId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'ZnodePimAddonGroupProduct'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>AvailableInventory</name>      <headertext>Available Inventory</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'UnassociatedProducts'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimLinkProductDetailId</name>      <headertext>Checkbox</headertext>      <width>40</width>      <datatype>Int32</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PimLinkProductDetailId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>40</width>      <datatype>Int32</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimLinkProductDetailId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Products/UnAssignLinkProducts</manageactionurl>      <manageparamfield>PimLinkProductDetailId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'View_ManageLinkProductList'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>Product ID</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Brand/UnAssociateBrandProducts</manageactionurl>      <manageparamfield>PimProductId,BrandId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'AssociatedBrandProductList'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>ProductTypeAssociationId</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Highlight/UnAssociateHighlightProducts</manageactionurl>      <manageparamfield>PimProductId,AttributeValue</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'ZnodeHighlightProduct'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimCategoryProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>40</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Image</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ImagePath,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>DisplayOrder</name>      <headertext>Display Order</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Status</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Category/DeleteAssociatedProducts</manageactionurl>      <manageparamfield>PimCategoryProductId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'AssociatedCategoryProducts'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ImagePath,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>IsActive</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'UnAssociatedCategoryProducts'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>RelatedProductId</name>      <headertext>RelatedProductId</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ImagePath,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>AvailableInventory</name>      <headertext>Available Inventory</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>DisplayOrder</name>      <headertext>Display Order</headertext>      <width>10</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>3</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>Text</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Products/UpdateAssociatedProducts|/PIM/Products/UnassociateProducts</manageactionurl>      <manageparamfield>PimProductTypeAssociationId,ProductId,RelatedProductId|PimProductTypeAssociationId,ProductId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'View_ManageProductTypeList'
GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>RelatedProductId</name>      <headertext>RelatedProductId</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>AvailableInventory</name>      <headertext>Available Inventory</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>DisplayOrder</name>      <headertext>Display Order</headertext>      <width>10</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>3</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>Text</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Products/UpdateAssociatedProducts|/PIM/Products/UnassociateProducts</manageactionurl>      <manageparamfield>PimProductTypeAssociationId,PimProductId,RelatedProductId|PimProductTypeAssociationId,PimProductId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'View_ManageProductTypeList_GroupProduct'
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemBundle')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemBundle
END
GO
CREATE  PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemBundle]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, BundleProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdBundle, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE BundleProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, BundleProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,Quantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,Quantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 
		 --select * from #tempoi

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.BundleProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 


		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon	

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
	 

		 DECLARE @parenTofAddon INT  = 0 
		 SET @parenTofAddon = (SELECT TOP 1 ParentOmsSavedCartLineItemId 
		 FROM #OldValue a
		 WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  )

		 DELETE FROM #OldValue WHERE ParentOmsSavedCartLineItemId <> @parenTofAddon  AND ParentOmsSavedCartLineItemId IS NOT NULL  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId =@parenTofAddon AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		 END 
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		   ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 

		END 
		 

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		    DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		 
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  AddOnQuantity FROM @SaveCartLineItemType ty  ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


		 UPDATE Ab SET ab.Quantity = a.Quantity   
         FROM ZnodeOmsSavedCartLineItem a  
         INNER JOIN ZnodeOmsSavedCartLineItem ab ON (ab.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)  
         INNER JOIN @SaveCartLineItemType b ON (a.OmsSavedCartId = b.OmsSavedCartId  )   
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdBundle  

		END 
	    ELSE 
		BEGIN 
			
		UPDATE #tempoi
			SET ParentSKU = (SELECT TOP 1 SKU FROM #tempoi WHERE OrderLineItemRelationshipTypeID IS NULL )
			WHERE OrderLineItemRelationshipTypeID  = @OrderLineItemRelationshipTypeIdAddon 
			AND EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) 
		   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
   
	DELETE FROM #yuuete WHERE Quantity <=0  

	;WITH Add_Dup AS
	(
		SELECT  Min(NewRowId)NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID 
		FROM  #yuuete
		GROUP BY SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID
		HAVING OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon	
	)

	DELETE FROM #yuuete
	WHERE NOT EXISTS (SELECT TOP 1 1 FROM Add_Dup WHERE Add_Dup.NewRowId = #yuuete.NewRowId)
	AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID IN ( @OrderLineItemRelationshipTypeIdAddon , @OrderLineItemRelationshipTypeIdBundle)   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
      
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID   
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL  
	AND  EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId ) 
  
  --------------------------------------------------------------------------------------------------------

   ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )

	UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon   
	AND  EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId ) 
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 


 -----------------------------------------------------------------------------------------------------

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY a.OmsSavedCartLineItemId DESC )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( CASE WHEN EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) THEN 0 ELSE 1 END = b.id OR b.Id = 1  ))  
    WHERE ( CASE WHEN EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) THEN 0 ELSE 1 END = ISNULL(a.ParentOmsSavedCartLineItemId,0) OR ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  
   -- SELECT * FROM #Cte_newAddon

   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	
    -- SELECT * FROM ZnodeOmsSavedCartLineItem WHERE OmsSavedCartId = 1709
  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE Ab SET ab.Quantity = a.Quantity   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN ZnodeOmsSavedCartLineItem ab ON (ab.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)  
    INNER JOIN @SaveCartLineItemType b ON (a.OmsSavedCartId = b.OmsSavedCartId  )   
    WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdBundle  
  
    

    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
	WHERE b.ParentOmsSavedCartLineItemId IS nULL 
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		  -- WHEN MATCHED THEN 
		  -- UPDATE SET 
		  --   TARGET.ModifiedBy = SOURCE.ModifiedBy
			 --,TARGET.ModifiedDate = SOURCE.ModifiedDate
			 --,TARGET.PersonalizeCode = SOURCE.PersonalizeCode
			 --,TARGET.PersonalizeValue = SOURCE.PersonalizeValue
			 --,TARGET.DesignId = SOURCE.DesignId
			 --,TARGET.ThumbnailURL = SOURCE.ThumbnailURL
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 
END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemConfigurable')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemConfigurable
END
GO

--DROP PROC Znode_InsertUpdateSaveCartLineItemConfigurable

CREATE  PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemConfigurable]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, ConfigurableProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdConfigurable, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE ConfigurableProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, ConfigurableProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,Quantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,Quantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.ConfigurableProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

	

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue a  WHERE a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId IN (SELECT ParentOmsSavedCartLineItemId FROM @parenTofAddon)AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		    AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END  
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 

		END 

		


		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		  IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		    DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		 
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
	
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon
		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  AddOnQuantity FROM @SaveCartLineItemType ty  ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )   
	
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
    AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )

	---------------------------------------------------------------------------------------------------------------------

	 ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
	-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    ) 

	UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon     
    AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 
 
	---------------------------------------------------------------------------------------------------------------------------
    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY a.OmsSavedCartLineItemId DESC )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET  
    --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 

    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
	WHERE b.ParentOmsSavedCartLineItemId IS nULL 
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		  -- WHEN MATCHED THEN 
		  -- UPDATE SET 
		  --   TARGET.ModifiedBy = SOURCE.ModifiedBy
			 --,TARGET.ModifiedDate = SOURCE.ModifiedDate
			 --,TARGET.PersonalizeCode = SOURCE.PersonalizeCode
			 --,TARGET.PersonalizeValue = SOURCE.PersonalizeValue
			 --,TARGET.DesignId = SOURCE.DesignId
			 --,TARGET.ThumbnailURL = SOURCE.ThumbnailURL
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 

END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemGroup')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemGroup
END
GO
--DROP PROC Znode_InsertUpdateSaveCartLineItemGroup

CREATE  PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemGroup]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, GroupProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdGroup, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE GroupProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, GroupProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,Quantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,Quantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.GroupProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

		

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue a
		 WHERE a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  
		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 

		  IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId IN (SELECT ParentOmsSavedCartLineItemId FROM @parenTofAddon)AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		     AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		   ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
			 BEGIN 
			   DELETE FROM #OldValue
			 END  
		END 

	


		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		 
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 
		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon

		  UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  AddOnQuantity FROM @SaveCartLineItemType ty  ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	    --select * from #yuuete
			
			 
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU, OrderLineItemRelationshipTypeId 
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeId
	HAVING SKU = ParentSKU AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
   --select * from VTRET

    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID	  )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  
  -----------------------------------------------------------------------------------------------------------------------------------

  	 ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID	  )

	 UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon   
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 


----------------------------------------------------------------------------------------------------------------------------

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY a.OmsSavedCartLineItemId DESC )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET  
    --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	
   
  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
	WHERE b.ParentOmsSavedCartLineItemId IS nULL 
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		  -- WHEN MATCHED THEN 
		  -- UPDATE SET 
		  --   TARGET.ModifiedBy = SOURCE.ModifiedBy
			 --,TARGET.ModifiedDate = SOURCE.ModifiedDate
			 --,TARGET.PersonalizeCode = SOURCE.PersonalizeCode
			 --,TARGET.PersonalizeValue = SOURCE.PersonalizeValue
			 --,TARGET.DesignId = SOURCE.DesignId
			 --,TARGET.ThumbnailURL = SOURCE.ThumbnailURL
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 

END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END

GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemQuantity')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemQuantity
END
GO

CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemQuantity](
	  @CartLineItemXML xml, @UserId int,@Status bit OUT )
AS 
   /* 
    Summary: THis Procedure is USed to save and edit the saved cart line item      
    Unit Testing 
	begin tran  
    Exec Znode_InsertUpdateSaveCartLineItem @CartLineItemXML= '<ArrayOfSavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>BlueGreenYellow</SKU>
    <Quantity>1.000000</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>1</Sequence>
    <AddonProducts>YELLOW</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts>GREEN</ConfigurableProducts>
  </SavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>ap1534</SKU>
    <Quantity>1.0</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>2</Sequence>
    <AddonProducts >PINK</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts />
    <PersonaliseValuesList>Address~Hello</PersonaliseValuesList>
  </SavedCartLineItemModel>
</ArrayOfSavedCartLineItemModel>' , @UserId=1 ,@Status=0
	rollback tran
*/
BEGIN
	BEGIN TRAN InsertUpdateSaveCartLineItem;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		DECLARE @AddOnQuantity numeric(28, 6)= 0;
		DECLARE @IsAddProduct   BIT = 0 
		DECLARE @OmsSavedCartLineItemId INT = 0
		DECLARE @TBL_SavecartLineitems TABLE
		( 
			RowId int , OmsSavedCartLineItemId int, ParentOmsSavedCartLineItemId int, OmsSavedCartId int, SKU nvarchar(600), Quantity numeric(28, 6), OrderLineItemRelationshipTypeID int, CustomText nvarchar(max), 
			CartAddOnDetails nvarchar(max), Sequence int, AddOnValueIds varchar(max), BundleProductIds varchar(max), ConfigurableProductIds varchar(max), GroupProductIds varchar(max), PersonalisedAttribute XML, 
			AutoAddon varchar(max), OmsOrderId int, ItemDetails nvarchar(max),
			Custom1	nvarchar(max),Custom2 nvarchar(max),Custom3 nvarchar(max),Custom4
			nvarchar(max),Custom5 nvarchar(max),GroupId NVARCHAR(max) ,ProductName Nvarchar(1000) , Description NVARCHAR(max),AddOnQuantity NVARCHAR(max)
		);

		DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
		DECLARE @OrderLineItemRelationshipTypeIdSimple int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Simple'
		);
		DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
		DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
		 DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
		INSERT INTO @TBL_SavecartLineitems( RowId,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence, AddOnValueIds, BundleProductIds, ConfigurableProductIds, GroupProductIds, PersonalisedAttribute, AutoAddon, OmsOrderId, ItemDetails,
		Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,Description,AddOnQuantity )
			   SELECT DENSE_RANK()Over(Order BY Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' )) RowId ,Tbl.Col.value( 'OmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartLineItemId, Tbl.Col.value( 'ParentOmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS ParentOmsSavedCartLineItemId, Tbl.Col.value( 'OmsSavedCartId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartId, Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' ) AS SKU, Tbl.Col.value( 'Quantity[1]', 'NVARCHAR(2000)' ) AS Quantity
			   , Tbl.Col.value( 'OrderLineItemRelationshipTypeID[1]', 'NVARCHAR(2000)' ) AS OrderLineItemRelationshipTypeID, Tbl.Col.value( 'CustomText[1]', 'NVARCHAR(2000)' ) AS CustomText, Tbl.Col.value( 'CartAddOnDetails[1]', 'NVARCHAR(2000)' ) AS CartAddOnDetails, Tbl.Col.value( 'Sequence[1]', 'NVARCHAR(2000)' ) AS Sequence, Tbl.Col.value( 'AddonProducts[1]', 'NVARCHAR(2000)' ) AS AddOnValueIds, ISNULL(Tbl.Col.value( 'BundleProducts[1]', 'NVARCHAR(2000)' ),'') AS BundleProductIds, ISNULL(Tbl.Col.value( 'ConfigurableProducts[1]', 'NVARCHAR(2000)' ),'') AS ConfigurableProductIds, ISNULL(Tbl.Col.value( 'GroupProducts[1]', 'NVARCHAR(Max)' ),'') AS GroupProductIds, 
			          Tbl.Col.query('(PersonaliseValuesDetail/node())') AS PersonaliseValuesDetail, Tbl.Col.value( 'AutoAddon[1]', 'NVARCHAR(Max)' ) AS AutoAddon, Tbl.Col.value( 'OmsOrderId[1]', 'NVARCHAR(Max)' ) AS OmsOrderId,
					  Tbl.Col.value( 'ItemDetails[1]', 'NVARCHAR(Max)' ) AS ItemDetails,
					  Tbl.Col.value( 'Custom1[1]', 'NVARCHAR(Max)' ) AS Custom1,
					  Tbl.Col.value( 'Custom2[1]', 'NVARCHAR(Max)' ) AS Custom2,
					  Tbl.Col.value( 'Custom3[1]', 'NVARCHAR(Max)' ) AS Custom3,
					  Tbl.Col.value( 'Custom4[1]', 'NVARCHAR(Max)' ) AS Custom4,
					  Tbl.Col.value( 'Custom5[1]', 'NVARCHAR(Max)' ) AS Custom5,
					  Tbl.Col.value( 'GroupId[1]', 'NVARCHAR(Max)' ) AS GroupId,
					  Tbl.Col.value( 'ProductName[1]', 'NVARCHAR(Max)' ) AS ProductName,
					  Tbl.Col.value( 'Description[1]', 'NVARCHAR(Max)' ) AS Description, 
					  Tbl.Col.value( 'AddOnQuantity[1]', 'NVARCHAR(2000)' ) AS AddOnQuantity
			   FROM @CartLineItemXML.nodes( '//ArrayOfSavedCartLineItemModel/SavedCartLineItemModel' ) AS Tbl(Col);
			  

			  --select * from @TBL_SavecartLineitems


			  UPDATE  @TBL_SavecartLineitems
			  SET 	Description = ISNUll(Description,'') 

			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' )
			 BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				    SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0 )

					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ( OmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					OR ParentOmsSavedCartLineItemId =  @OmsSavedCartLineItemId   ) 
					 
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_bundleProduct TT_SavecartLineitems 
				  INSERT INTO @TBL_bundleProduct 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(BundleProductIds,'') <> '' 
				
				  EXEC Znode_InsertUpdateSaveCartLineItemBundle @TBL_bundleProduct,@userId
				 
				  DELETE FROM  @TBL_SavecartLineitems WHERE ISNULL(BundleProductIds,'') <> '' 
				  SET @OmsSavedCartLineItemId = 0 
				END 
			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Configurable TT_SavecartLineitems 
				  INSERT INTO @TBL_Configurable 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> '' 

				  EXEC Znode_InsertUpdateSaveCartLineItemConfigurable @TBL_Configurable,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND  OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Group TT_SavecartLineitems 
				  INSERT INTO @TBL_Group 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> '' 

				
				  EXEC Znode_InsertUpdateSaveCartLineItemGroup @TBL_Group,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				 
                IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
				
				    UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


					DELETE	FROM @TBL_SavecartLineitems WHERE OmsSavedCartLineItemId <> 0
				 END 
			 
			

			  DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT )
			  DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
			  INSERT INTO @TBL_Personalise
			  SELECT  NULL 
							,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		  ,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					  ,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					  ,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			  FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @TBL_SavecartLineitems TRTR  ) a 
			  CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 
			  
			   
		   
			
			  CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
				   
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @TBL_SavecartLineitems a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, @OrderLineItemRelationshipTypeIdSimple, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE ISNULL(BundleProductIds,'') =  '' 
			   AND  ISNULL(GroupProductIds,'') = ''	AND ISNULL(	ConfigurableProductIds,'') = ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity,  CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
     		   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,Quantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
					,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
					WHEN  GroupProductIds <> '' THEN GroupProductIds 
					WHEN BundleProductIds <> '' THEN BundleProductIds 
					 ELSE SKU END     ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE AddOnValueIds <> ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,Quantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
				 
            
		
		 CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.SKU,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple   

			

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

			

		IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_SavecartLineitems ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
	    
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 
		END 
			
	

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		

		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		   
		
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   

		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		   
		  
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 

	  
		END 

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)

		END 
		ELSE 
		BEGIN 
			
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	
			     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
  	

     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
	
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId) NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdSimple
    )   
    
    DELETE FROM #yuuete WHERE NewRowId IN (SELECT NewRowId FROM VTRET)  
	
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  

 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID
				
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
  

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY a.OmsSavedCartLineItemId DESC )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
   )

     UPDATE a SET  
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
	WHERE b.ParentOmsSavedCartLineItemId IS nULL 
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		  -- WHEN MATCHED THEN 
		  -- UPDATE SET 
		  --   TARGET.ModifiedBy = SOURCE.ModifiedBy
			 --,TARGET.ModifiedDate = SOURCE.ModifiedDate
			 --,TARGET.PersonalizeCode = SOURCE.PersonalizeCode
			 --,TARGET.PersonalizeValue = SOURCE.PersonalizeValue
			 --,TARGET.DesignId = SOURCE.DesignId
			 --,TARGET.ThumbnailURL = SOURCE.ThumbnailURL
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  		
		 
END 
	SET @Status = 1;
	COMMIT TRAN InsertUpdateSaveCartLineItem;
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE()	
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_InsertUpdateSaveCartLineItem @CartLineItemXML = '+CAST(@CartLineItemXML
 AS varchar(max))+',@UserId = '+CAST(@UserId AS varchar(50))+',@Status='+CAST(@Status AS varchar(10));

		SELECT 0 AS ID, CAST(0 AS bit) AS Status,ERROR_MESSAGE();
		ROLLBACK TRAN InsertUpdateSaveCartLineItem;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_InsertUpdateSaveCartLineItem', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportPimProductData')
BEGIN 
	DROP PROCEDURE Znode_ImportPimProductData
END
GO

CREATE PROCEDURE [dbo].[Znode_ImportPimProductData]
(   @TableName          VARCHAR(200),
    @NewGUID            NVARCHAR(200),
    @TemplateId         NVARCHAR(200),
    @ImportProcessLogId INT,
    @UserId             INT,
    @LocaleId           INT,
    @DefaultFamilyId    INT)
AS
    
	/*
      Summary : Finally Import data into ZnodePimProduct, ZnodePimAttributeValue and ZnodePimAttributeValueLocale Table 
      Process : Flat global temporary table will split into cloumn wise and associted with Znode Attributecodes,
    		      Create group of product with their attribute code and values and inserted one by one products. 	   
    
      SourceColumnName : CSV file column headers
      TargetColumnName : Attributecode from ZnodePimAttribute Table 

	 ***  Need to log error if transaction failed during insertion of records into table.
    */

     BEGIN
		 SET NOCOUNT ON
         BEGIN TRY
             --BEGIN TRAN ImportProducts;
             DECLARE @SQLQuery NVARCHAR(MAX);
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @AttributeTypeName NVARCHAR(10), @AttributeCode NVARCHAR(300), @AttributeId INT, @IsRequired BIT, @SourceColumnName NVARCHAR(600), @PimAttributeFamilyId INT, @NewProductId INT, @PimAttributeValueId INT, @status BIT= 0; 
             --Declare error Log Table 


			 DECLARE @FamilyAttributeDetail TABLE
			 ( 
				PimAttributeId int, AttributeTypeName varchar(300), AttributeCode varchar(300), SourceColumnName nvarchar(600), IsRequired bit, PimAttributeFamilyId int
			 );
             IF @DefaultFamilyId = 0
                 BEGIN
					INSERT INTO @FamilyAttributeDetail( PimAttributeId, AttributeTypeName, AttributeCode, SourceColumnName, IsRequired, PimAttributeFamilyId )
					--Call Process to insert data of defeult family with cource column name and target column name 
					EXEC Znode_ImportGetTemplateDetails @TemplateId = @TemplateId, @IsValidationRules = 0, @IsIncludeRespectiveFamily = 1,@DefaultFamilyId = @DefaultFamilyId;
                    UPDATE @FamilyAttributeDetail SET PimAttributeFamilyId = DBO.Fn_GetCategoryDefaultFamilyId();
                 END;
             ELSE
                 BEGIN
                     INSERT INTO @FamilyAttributeDetail(PimAttributeId,AttributeTypeName,AttributeCode,SourceColumnName,IsRequired,PimAttributeFamilyId)
                     --Call Process to insert data of defeult family with cource column name and target column name 
                     EXEC Znode_ImportGetTemplateDetails @TemplateId = @TemplateId,@IsValidationRules = 0,@IsIncludeRespectiveFamily = 1,@DefaultFamilyId = @DefaultFamilyId;
                 END;  

            -- Retrive PimProductId on the basis of SKU for update product 
			SET @SQLQuery = 'UPDATE tlb SET tlb.PimProductId = ZPAV.PimProductId 
							FROM ZnodePimAttributeValue AS ZPAV INNER JOIN ZnodePimAttributeValueLocale AS ZPAVL ON 
							(ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId) 
							INNER JOIN [dbo].[ZnodePimAttribute] ZPA on ZPAV.PimAttributeId = ZPA.PimAttributeId AND ZPA.AttributeCode= ''SKU'' 
							INNER JOIN '+@TableName+' tlb ON ZPAVL.AttributeValue = ltrim(rtrim(tlb.SKU)) ';
			EXEC sys.sp_sqlexec	@SQLQuery	 	
				 	
					
             --Read all attribute details with their datatype 
			 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '#DefaultAttributeValue')
				BEGIN
					   CREATE TABLE #DefaultAttributeValue (AttributeTypeName  VARCHAR(300),PimAttributeDefaultValueId INT,PimAttributeId INT,
					   AttributeDefaultValueCode  VARCHAR(100));
					   -- ELSE 
					   -- CREATE TABLE #DefaultAttributeValue (AttributeTypeName  VARCHAR(300),PimAttributeDefaultValueId INT,PimAttributeId INT,
					   -- AttributeDefaultValueCode  VARCHAR(100)
					   -- Index Ix_Default (PimAttributeId, AttributeDefaultValueCode));
					   --IF @@VERSION LIKE '%Azure%' OR @@VERSION LIKE '%Express Edition%'
					   --Begin
						  --Select 'Without Index'
					   --END
					   --Else
						  --Alter TABLE #DefaultAttributeValue ADD Index Ix_Default (PimAttributeId, AttributeDefaultValueCode);
					


					INSERT INTO #DefaultAttributeValue(AttributeTypeName,PimAttributeDefaultValueId,PimAttributeId,AttributeDefaultValueCode)
					--Call Process to insert default data value 
					EXEC Znode_ImportGetPimAttributeDefaultValue;
				END;
             ELSE
                BEGIN
                    DROP TABLE #DefaultAttributeValue;
                END;
             EXEC sys.sp_sqlexec
                  @SQLQuery;
          
             -- Split horizontal table into verticle table by column name and attribute Value with their 
             -- corresponding AttributeId, Default family , Default AttributeValue Id  
    --         DECLARE @PimProductDetail TABLE 
			 --(
			      
				-- PimAttributeId INT, PimAttributeFamilyId INT,ProductAttributeCode VARCHAR(300) NULL,
				--  ProductAttributeDefaultValueId INT NULL,PimAttributeValueId  INT NULL,LocaleId INT,
				--  PimProductId INT NULL,AttributeValue NVARCHAR(MAX) NULL,AssociatedProducts NVARCHAR(4000) NULL,ConfigureAttributeIds VARCHAR(2000) NULL,
				--  ConfigureFamilyIds VARCHAR(2000) NULL,RowNumber INT  INDEX Ix CLUSTERED (RowNumber) 
    --            );

			DECLARE @PimProductDetail TABLE 
			 (
			      
				  PimAttributeId INT, PimAttributeFamilyId INT,ProductAttributeCode VARCHAR(300) NULL,
				  ProductAttributeDefaultValueId INT NULL,PimAttributeValueId  INT NULL,LocaleId INT,
				  PimProductId INT NULL,AttributeValue NVARCHAR(MAX) NULL,AssociatedProducts NVARCHAR(4000) NULL,ConfigureAttributeIds VARCHAR(2000) NULL,
				  ConfigureFamilyIds VARCHAR(2000) NULL,RowNumber INT  
                );

		-- Update Record count in log 
       DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		SET @SQLQuery = ' Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM '+ @TableName ;
		EXEC	sp_executesql @SQLQuery, N'@SuccessRecordCount BIGINT out' , @SuccessRecordCount=@SuccessRecordCount OUTPUT
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount, TotalProcessedRecords = (ISNULL(@FailedRecordCount,0) + ISNULL(@SuccessRecordCount,0))
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End

			
             -- Column wise split data from source table ( global temporary table ) and inserted into temporary table variable @PimProductDetail
             -- Add PimAttributeDefaultValue 
             DECLARE Cr_AttributeDetails CURSOR LOCAL FAST_FORWARD
             FOR SELECT PimAttributeId,AttributeTypeName,AttributeCode,IsRequired,SourceColumnName,PimAttributeFamilyId FROM @FamilyAttributeDetail  WHERE ISNULL(SourceColumnName, '') <> '';
             OPEN Cr_AttributeDetails;
             FETCH NEXT FROM Cr_AttributeDetails INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @PimAttributeFamilyId;
             WHILE @@FETCH_STATUS = 0
                 BEGIN
                    SET @NewProductId = 0;
                    SET @SQLQuery = ' SELECT '''+CONVERT(VARCHAR(100), @PimAttributeFamilyId)+''' PimAttributeFamilyId , PimProductId PimProductId,'''+@AttributeCode+''' ProductAttributeCode ,'''+CONVERT(VARCHAR(100), @AttributeId)+''' AttributeId ,
									(SELECT TOP 1  PimAttributeDefaultValueId FROM #DefaultAttributeValue Where PimAttributeId =  '
									+ CONVERT(VARCHAR(100), @AttributeId)+'AND  AttributeDefaultValueCode = TN.'+@SourceColumnName+' ) PimAttributeDefaultValueId ,'
									+ @SourceColumnName+','+CONVERT(VARCHAR(100), @LocaleId)+'LocaleId
								, RowNumber FROM '+@TableName+' TN';
                    INSERT INTO @PimProductDetail( PimAttributeFamilyId, PimProductId,ProductAttributeCode, PimAttributeId, ProductAttributeDefaultValueId, AttributeValue, LocaleId, RowNumber )
					EXEC sys.sp_sqlexec @SQLQuery;
                    FETCH NEXT FROM Cr_AttributeDetails INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @PimAttributeFamilyId;
                 END;
             CLOSE Cr_AttributeDetails;
             DEALLOCATE Cr_AttributeDetails;
			 
			 if object_id('tempdb..#PimProductDetail1') is not null
				drop table #PimProductDetail1

			 Select * into #PimProductDetail1 from @PimProductDetail

			 UPDATE a 
			 SET ConfigureAttributeIds =  SUBSTRING((SELECT ','+CAST(c.PimAttributeId As VARCHAR(100)) 
			 FROM #PimProductDetail1 c 
			 INNER JOIN ZnodePimAttribute b ON (b.PimAttributeId = c.PimAttributeId)
			 WHERE IsConfigurable =1  AND c.RowNumber = a.RowNumber  FOR XML PATH('')),2,4000) 
			 FROM #PimProductDetail1 a 
			WHERE EXISTS (SELECT TOP 1 1 FROM #PimProductDetail1 ab  WHERE ab.RowNumber = a.RowNumber AND	ab.ProductAttributeCode = 'ProductType' 
			 AND ab.AttributeValue = 'ConfigurableProduct' )
				
             -- In case of Yes/No : If value is not TRUE OR  1 then it will be  False else True
			 --If default Value set not need of hard code for IsActive
			 UPDATE ppdti SET ppdti.AttributeValue = CASE WHEN Upper(ISNULL(ppdti.AttributeValue, '')) in ( 'TRUE','1')  THEN 'true'  ELSE 'false' END FROM #PimProductDetail1 ppdti
                INNER JOIN #DefaultAttributeValue dav ON ppdti.PimAttributeId = dav.PimAttributeId WHERE   dav.AttributeTypeName = 'Yes/No';
             -- Pass product records one by one 
             DECLARE @IncrementalId INT= 1;
             DECLARE @SequenceId INT=
             (
                 SELECT MAX(RowNumber) FROM #PimProductDetail1
             );
             DECLARE @PimProductDetailToInsert PIMPRODUCTDETAIL;  --User define table type to pass multiple records of product in single step

             WHILE @IncrementalId <= @SequenceId
                 BEGIN
					   	INSERT INTO @PimProductDetailToInsert(PimAttributeId,PimAttributeFamilyId,ProductAttributeCode,ProductAttributeDefaultValueId,
						PimAttributeValueId,LocaleId,PimProductId,AttributeValue,AssociatedProducts,ConfigureAttributeIds,ConfigureFamilyIds)
						SELECT PimAttributeId,PimAttributeFamilyId,ProductAttributeCode,ProductAttributeDefaultValueId,PimAttributeValueId,LocaleId,
						PimProductId,AttributeValue,AssociatedProducts,ConfigureAttributeIds,ConfigureFamilyIds FROM #PimProductDetail1
						WHERE [#PimProductDetail1].RowNumber = @IncrementalId; --AND RTRIM(LTRIM(AttributeValue)) <> '';

						Delete from @PimProductDetailToInsert where RTRIM(LTRIM(ISNULL(AttributeValue,''))) = '';
	                    --ORDER BY [@PimProductDetail].RowNumber;
                        ----Call process to finally insert data into 
                        ----------------------------------------------------------
						--1. [dbo].[ZnodePimProduct]
						--2. [dbo].[ZnodePimAttributeValue]
						--3. [dbo].[ZnodePimAttributeValueLocale]
						if Exists (select TOP 1 1 from @PimProductDetailToInsert)
							EXEC [Znode_ImportInsertUpdatePimProduct] @PimProductDetail = @PimProductDetailToInsert,@UserID = @UserID,@status = @status OUT,@IsNotReturnOutput = 1;
						DELETE FROM @PimProductDetailToInsert;
						SET @IncrementalId = @IncrementalId + 1;
						
                 END;

				 DELETE FROM ZnodePimConfigureProductAttribute  
						WHERE NOT EXISTS (SELECT TOP 1 1  FROM ZnodePimAttributeValue  a WHERE a.PimProductId = ZnodePimConfigureProductAttribute.PimProductId AND a.PimAttributeID = ZnodePimConfigureProductAttribute.PimAttributeID )
						AND EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValue a 
						INNER JOIN ZnodePimAttribute ty ON (ty.PimAttributeId = a.PimAttributeId)
						INNER JOIN ZnodePimProductAttributeDefaultValue t ON (t.PimAttributeValueId = a.PimAttributeValueId )
						INNER JOIN ZnodePimAttributeDefaultValue y ON (y.PimAttributeDefaultValueId = t.PimAttributeDefaultValueId)
						INNER JOIN View_loadmanageProductInternal  TU ON (TU.AttributeCode = 'SKU' AND TU.PimProductId = a.PimProductId  )
						WHERE ty.AttributeCode = 'ProductType' AND y.AttributeDefaultValueCode = 'ConfigurableProduct'
						AND a.PimProductId = ZnodePimConfigureProductAttribute.PimProductId
						AND EXISTS (SELECT TOP 1 1 FROM #PimProductDetail1 TM WHERE TM.PimAttributeID = (SELECT TOP 1 PimAttributeId FROM ZnodePimAttribute WHERE AttributeCode = 'SKU') AND TM.AttributeValue = TU.AttributeValue )) 
					   
						
					   
					    DELETE FROM ZnodePimConfigureProductAttribute 
						WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValue a 
						INNER JOIN ZnodePimAttribute ty ON (ty.PimAttributeId = a.PimAttributeId)
						INNER JOIN ZnodePimProductAttributeDefaultValue t ON (t.PimAttributeValueId = a.PimAttributeValueId )
						INNER JOIN ZnodePimAttributeDefaultValue y ON (y.PimAttributeDefaultValueId = t.PimAttributeDefaultValueId)
						WHERE ty.AttributeCode = 'ProductType' AND y.AttributeDefaultValueCode = 'SimpleProduct'
						AND a.PimProductId = ZnodePimConfigureProductAttribute.PimProductId
						)
			 UPDATE ZnodePimConfigureProductAttribute 
			 SET PimFamilyId = b.PimAttributeFamilyId
			 FROM ZnodePimConfigureProductAttribute a
			 INNER JOIN ZnodePimProduct b ON a.PimProductId = b.PimProductId
              

             UPDATE ZnodeImportProcessLog SET Status = dbo.Fn_GetImportStatus(2), ProcessCompletedDate =  Getdate()  WHERE ImportProcessLogId = @ImportProcessLogId;
            -- COMMIT TRAN ImportProducts;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE(),ERROR_LINE(),ERROR_PROCEDURE();
            -- UPDATE ZnodeImportProcessLog SET Status = dbo.Fn_GetImportStatus(3), ProcessCompletedDate = @GetDate WHERE ImportProcessLogId = @ImportProcessLogId;
            -- ROLLBACK TRAN ImportProducts;
         END CATCH;
     END;

	 GO

UPDATE ZnodeActions
SET IsGlobalAccess = 1
WHERE ActionName = 'GetStates' AND ControllerName = 'Customer'

GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetContentFeedList')
BEGIN 
	DROP PROCEDURE Znode_GetContentFeedList
END
GO
CREATE PROCEDURE [dbo].[Znode_GetContentFeedList]
( @PortalId NVARCHAR(MAX) = NULL,
  @LocaleId INT)
AS
/*
	Summary : This procedure is used to get effective keyword feeding of content list
	Unit Testing:
	EXEC Znode_GetContentFeedList 4,1
	
*/
     BEGIN
         SET NOCOUNT ON;
		 BEGIN TRY
         DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
         DECLARE @TBL_DomainName TABLE
         (PortalId   INT,
          DomainName NVARCHAR(300),
          RowId      INT
         );

         DECLARE @TBL_PortalIds TABLE(PortalId INT);
         DECLARE @TBL_SEODetails TABLE
         (loc                   NVARCHAR(MAX),
          lastmod               DATETIME,
          [g:condition]         VARCHAR(100),
          [description]         NVARCHAR(MAX),
          [g:id]                INT,
          link                  VARCHAR(100),
          [g:identifier_exists] VARCHAR(200),
          DomainName            NVARCHAR(300),
          PortalId              INT,
		   SEOCode               NVARCHAR(4000)
         );

		 if object_id('tempdb..#CMSSEOData') is not null
			drop table #CMSSEOData

		 CREATE TABLE #CMSSEOData 
		 (loc varchar(max),lastmod DateTime,DomainName varchar(200),[image] varchar(1000),Name varchar(500), CMSContentPagesId Int,PortalId Int, SEOCode NVARCHAR(4000))

         INSERT INTO @TBL_PortalIds
                SELECT Zp.PortalId
                FROM Znodeportal AS ZP
                INNER JOIN ZnodeCMSContentPages AS ZPC ON(ZPC.PortalId = Zp.PortalId)
                WHERE EXISTS
                (
                    SELECT TOP 1 1
                    FROM DBO.Split(@PortalID, ',') AS Sp
                    WHERE(CAST(sp.Item AS INT) = ZP.PortalId
                          OR @PortalID = '0' )
                )
                GROUP BY Zp.PortalId;

				--select * from @TBL_PortalIds

         INSERT INTO @TBL_DomainName
                SELECT ZD.PortalId,ZD.DomainName,                     
                       ROW_NUMBER() OVER(PArtition BY ZD.DomainName,
                                                  ZD.PortalId ORDER BY ZD.DomainName,
                                                  ZD.PortalId) RowId
                FROM ZnodeDomain ZD
                WHERE EXISTS
                (
                    SELECT TOP 1 1
                    FROM @TBL_PortalIds TBP
                    WHERE TBP.PortalId = ZD.PortalId
                )
			AND IsActive =1 
			AND applicationType = 'Webstore'
			--AND ZD.DomainName in ('www.windycitynovelties.com','www.nightflyer.com')
				

         ;WITH Cte_SeoDetailsWithLocale
              AS (SELECT DISTINCT ZCSD.CMSSEODetailId,  ZCSD.SEOURL AS loc,ZCSD.ModifiedDate AS lastmod,'new' AS [g:condition],ZCSDL.SEODescription AS [description],ZPCC.CMSContentPagesId AS [g:id],'' AS link,'false' AS [g:identifier_exists],TBDN.DomainName,ZPCC.PortalId,ISNULL(ZCSDL.LocaleId, @DefaultLocaleId) AS LocaleId,ZCSD.SEOCode
                 FROM ZnodeCMSContentPages AS ZPCC 
                 LEFT JOIN ZnodeCMSSEODetail AS ZCSD ON(ZPCC.PageName = ZCSD.SEOCode AND EXISTS ( SELECT TOP 1 1 FROM ZnodeCMSSEOType AS ZCST WHERE ZCST.CMSSEOTypeId = ZCSD.CMSSEOTypeId
                                                   AND ZCST.Name = 'Content Page') AND ZCSD.PortalId = ZPCC.PortalId )
                 LEFT JOIN ZnodeCMSSEODetailLocale AS ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSD.CMSSEODetailId
                                                            AND LocaleId IN(@LocaleId, @DefaultLocaleId))
                 LEFT JOIN @TBL_DomainName AS TBDN ON(TBDN.RowId = 1 AND TBDN.PortalId = ZPCC.PortalId )
                  WHERE EXISTS
                  (
                      SELECT TOP 1 1
                      FROM @TBL_PortalIds TBP
                      WHERE ZPCC.PortalId = TBP.PortalId
                  )
				  AND EXISTS (SELECT TOP 1 1 FROM   @TBL_PortalIds TBPL
                      WHERE ZCSD.PortalId = TBPL.PortalId  
					  )
				  )
				   
				  --select  * from Cte_SeoDetailsWithLocale

             ,Cte_SeoDetailsWithFirstLocale
              AS (SELECT *
                  FROM Cte_SeoDetailsWithLocale
                  WHERE LocaleId = @LocaleId),

              Cte_SeoDetailsWithDefaultLocale
              AS (
              SELECT *
              FROM Cte_SeoDetailsWithFirstLocale
              UNION ALL
              SELECT *
              FROM Cte_SeoDetailsWithLocale AS CTSDWL
              WHERE LocaleId = @DefaultLocaleId
                    AND NOT EXISTS
              (
                  SELECT TOP 1 1
                  FROM Cte_SeoDetailsWithFirstLocale AS CTSDWDL
                  WHERE CTSDWDL.CMSSEODetailId = CTSDWL.CMSSEODetailId
              ))

              INSERT INTO @TBL_SEODetails
                     SELECT loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,SEOCode
                     FROM Cte_SeoDetailsWithDefaultLocale;

         WITH Cte_ContentPages
              AS (SELECT ZCCP.CMSContentPagesId,ZCCPl.PageTitle,ZCCPL.LocaleId,ZCCP.PageName
                  FROM ZnodeCMSContentPages ZCCP
                  INNER JOIN ZnodeCMSContentPagesLocale ZCCPL ON(ZCCPL.CMSContentPagesId = ZCCP.CMSContentPagesId)
                  WHERE EXISTS
                  (
                      SELECT TOP 1 1
                      FROM @TBL_SEODetails TBSD
                      WHERE TBSD.[g:id] = ZCCP.CMSContentPagesId
                  )
                        AND LocaleID IN(@LocaleId, @DefaultLocaleId)),

              Cte_ContentPageFirstLocale
              AS (SELECT *
                  FROM Cte_ContentPages CTCP
                  WHERE LocaleId = @LocaleId),

              Cte_ContentPageSecondLocale
              AS (
              SELECT *
              FROM Cte_ContentPageFirstLocale CTPFL
              UNION ALL
              SELECT *
              FROM Cte_ContentPages CTCP
              WHERE LocaleId = @LocaleId
                    AND NOT EXISTS
              (
                  SELECT TOP 1 1
                  FROM Cte_ContentPageFirstLocale CTCPFL
                  WHERE CTCPFL.CMSContentPagesId = CTCP.CMSContentPagesId
              ))
			  INSERT INTO #CMSSEOData(loc,lastmod,DomainName,[image], Name, CMSContentPagesId,PortalId,SEOCode)
              SELECT loc,lastmod,DomainName,'' AS [image],PageName Name,[g:id] CMSContentPagesId,PortalId,SEOCode
              FROM @TBL_SEODetails TBSD
              LEFT JOIN Cte_ContentPageSecondLocale CTCPSL ON(TBSD.[g:id] = CTCPSL.CMSContentPagesId);

			  ---- CMS SEO Blog News Details
			  INSERT INTO #CMSSEOData(loc,lastmod,DomainName,[image], Name, CMSContentPagesId,PortalId,SEOCode)
			  EXEC [Znode_GetBlogFeedList] @PortalId, @LocaleId

			  SELECT loc, REPLACE(CONVERT(VARCHAR(30),lastmod,102),'.','-') AS lastmod,DomainName,[image], Name, CMSContentPagesId,PortalId FROM #CMSSEOData

		END TRY
		BEGIN CATCH
		  DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetContentFeedList @PortalId = '+@PortalId+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetContentFeedList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH

     END;

	 GO
	delete 
	from ZnodeActionMenu
	where ActionMenuId =  (select ActionMenuId from ZnodeActionMenu where MenuId = 
	(select MenuId from ZnodeMenu where MenuName = 'Menu List' AND ControllerName = 'RoleAndAccessRight') and ActionId = 
	(select ActionId from ZnodeActions where ControllerName = 'RoleAndAccessRight' and ActionName= 'Role'))

	GO
	IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetFilterPimProductId')
	BEGIN 
	DROP PROCEDURE Znode_GetFilterPimProductId
	END
	GO
	
CREATE  PROCEDURE [dbo].[Znode_GetFilterPimProductId]
(
  @WhereClause XML 
 ,@PimProductId TransferId Readonly 
 ,@LocaleId   INT 
)
AS 
BEGIN 
SET NOCOUNT ON 

DECLARE  @DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleID()
		,@SQL NVARCHAR(max)
		,@InternalProductWhereClause NVARCHAR(max)

DECLARE @WorkingProcess INT = 0 

DECLARE @TBL_FilterClause TABLE (ID INT IDENTITY(1,1),AttributeValue NVARCHAR(max),AttributeCode NVARCHAr(max),PimAttributeId INT ,AttributeTypeName VARCHAR(300),AttributeCodeOrg VARCHAR(600))

DECLARE @WhereClauseXML XML = @WhereClause 


IF EXISTS (SELECT TOP 1 1 FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col) 
WHERE Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)')  LIKE  '% in (%')
BEGIN 
 SET @WorkingProcess = 1
 INSERT INTO @TBL_FilterClause (AttributeValue,AttributeCode,AttributeTypeName,PimAttributeId,AttributeCodeOrg)
SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeValue,ZTY.AttributeTypeName,ZPA.PimAttributeId,AttributeCode AttributeCodeOrg
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
LEFT JOIN  ZnodePimAttribute ZPA  ON ((Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)')  LIKE '%in (%' OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''','')) 
									= ZPA.AttributeCode ) AND IsCategory = 0 
AND ( ZPA.IsShowOnGrid = 1 OR ZPA.IsConfigurable =1  )  )
LEFT JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)

END 
ELSE 
BEGIN 

INSERT INTO @TBL_FilterClause (AttributeValue,AttributeCode,AttributeTypeName,PimAttributeId,AttributeCodeOrg)
SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeValue,ZTY.AttributeTypeName,ZPA.PimAttributeId,AttributeCode AttributeCodeOrg
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
LEFT JOIN ZnodePimAttribute ZPA  ON (dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''','')) 
									= ZPA.AttributeCode AND ZPA.IsCategory = 0 
AND ( ZPA.IsShowOnGrid = 1 OR ZPA.IsConfigurable =1  )  )
LEFT JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)


END 



CREATE TABLE #TBL_PimProductId (PimProductId INT)

CREATE TABLE #TBL_PimProductIdDelete (PimProductId INT )

  INSERT INTO #TBL_PimProductId (PimProductId )
  SELECT Id 
  FROM @PimProductId

  SELECT ZPAV.PimProductId ,PimAttributeValueId 
			,ZPAV.CreatedDate,ZPAV.ModifiedDate,TBLA.AttributeCodeOrg AttributeCode
  INTO #TBL_AttributeValueId 
  FROM  ZnodePimAttributeValue ZPAV 
  INNER JOIN @TBL_FilterClause TBLA ON (TBLA.PimAttributeId = ZPAV.PimAttributeId)
  INNER JOIN #TBL_PimProductId YT ON (YT.PimProductId = ZPAV.PimProductId OR NOT EXISTS (SELECT TOP 1 1 #TBL_PimProductId))
 

 --select * from #TBL_AttributeValueId


IF @WorkingProcess =1 
BEGIN 
 DECLARE @PimAttributeId_in TransferId 

 INSERT INTO @PimAttributeId_in 
 SELECT PimAttributeId
 FROM  @TBL_FilterClause 
 WHERE AttributeTypeName IN ('Simple Select','Multi Select') 
 AND AttributeCode LIKE '%in (%'

 --select * from @TBL_FilterClause

 --select * from @PimAttributeId_in

 CREATE TABLE #TBL_AttributeDefaultValue_in ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue_in(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId_in, @LocaleId;
 
 DECLARE @WhereClauseInCom NVARCHAR(max) = (SELECT TOP 1 AttributeValue FROM @TBL_FilterClause WHERE AttributeCode LIKE '%in (%') 


SET @SQL = '
   ;With Cte_AttributeValue AS 
   (
   SELECT PimAttributeValueId 
   FROM ZnodePimAttributeValueLocale 
   WHERE AttributeValue '+@WhereClauseInCom+'
   UNION ALL 
   SELECT PimAttributeValueId 
   FROM ZnodePimProductAttributeTextAreaValue   
   WHERE AttributeValue '+@WhereClauseInCom+'
   UNION ALL 
   SELECT ZPADV.PimAttributeValueID 
   FROM ZnodePimProductAttributeDefaultValue ZPADV 
   INNER JOIN #TBL_AttributeDefaultValue_in TBL ON (TBL.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
   WHERE TBL.AttributeDefaultValue '+@WhereClauseInCom+'
   )
   
   SELECT PimProductId 
   FROM #TBL_AttributeValueId ZPAV 
   INNER JOIN  Cte_AttributeValue CTAC ON (CTAC.PimAttributeValueId = ZPAV.PimAttributeVaLueId )
   GROUP BY PimProductId
   UNION ALL  
   SELECT PimProductId 
   FROM ZnodePimProduct a
   INNER JOIN ZnodePimFamilyLocale b ON (b.PimAttributeFamilyId = a.PimAttributeFamilyId) 
   WHERE b.AttributeFamilyName '+@WhereClauseInCom+'
   GROUP BY PimProductId
   UNION ALL 
   SELECT  TBLAV.PimProductId 
   FROM ZnodePimProduct TBLAV
   WHERE CASE WHEN TBLAV.IsProductPublish  IS NULL THEN ''Not Published'' 
         WHEN TBLAV.IsProductPublish = 0 THEN ''Draft''
	     ELSE  ''Published'' END '+@WhereClauseInCom+'
   GROUP BY TBLAV.PimProductId 
   '
   
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   INSERT INTO #TBL_PimProductId
   SELECT -1 
   WHERE NOT EXISTS (SELECT TOP 1 1  FROM #TBL_PimProductId)

 --  IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
 --  BEGIN
 
 --   INSERT INTO  #TBL_PimProductId (PimProductId)
	--SELECT 0 
 --  END 
  DELETE  FROM @TBL_FilterClause WHERE AttributeCode LIKE '% in (%'

   DROP TABLE #TBL_AttributeDefaultValue_in
   SET @WorkingProcess  = 0 
   
END 

  IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeCode <> '' AND ISNULL(AttributeValue,'') = '')
  BEGIN 
  
   SET  @InternalProductWhereClause = STUFF( (  SELECT ' INNER JOIN #TBL_AttributeValueId AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' )'				
							FROM @TBL_FilterClause
							WHERE ISNULL(AttributeValue,'') = ''
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
   ----Change for configurable product varient page seach


   SET @SQL = ' 
				SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV '+@InternalProductWhereClause+' 
				WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId )
				GROUP BY TBLAV.PimProductId 
			'
   ----Comment code for Change for configurable product varient page seach
   --SET @SQL = ' 
			--	SELECT  TBLAV.PimProductId 
			--	FROM #TBL_AttributeValueId TBLAV '+@InternalProductWhereClause+' '+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
			--				ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
			--	GROUP BY TBLAV.PimProductId 
			--'
   --PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   INSERT INTO #TBL_PimProductId
   SELECT -1 
   WHERE NOT EXISTS (SELECT TOP 1 1  FROM #TBL_PimProductId)
   DELETE FROM @TBL_FilterClause WHERE ISNULL(AttributeValue,'') = ''
   IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
   BEGIN
    INSERT INTO  #TBL_PimProductId (PimProductId)
	SELECT 0 
   END
  
  END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Simple Select','Multi Select') )
BEGIN
 DECLARE @PimAttributeId TransferId 

 INSERT INTO @PimAttributeId 
 SELECT PimAttributeId
 FROM  @TBL_FilterClause WHERE AttributeTypeName IN ('Simple Select','Multi Select') 

 CREATE TABLE #TBL_AttributeDefaultValue ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId, @LocaleId;
 
  IF @DefaultLocaleId = @LocaleID AND  @WorkingProcess = 0 
  BEGIN 


  SET  @InternalProductWhereClause = STUFF( (  SELECT ' INNER JOIN Cte_AttributeValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Simple Select','Multi Select')
							AND AttributeValue <> ''
							AND AttributeValue IS NOT NULL
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')

							--select @InternalProductWhereClause
							--select * from @TBL_FilterClause
							--select * from #TBL_AttributeValueId
							--select * from #TBL_AttributeDefaultValue

  SET @SQL = ' ;With Cte_AttributeValue AS 
			   (
	            SELECT TBLAV.PimAttributeValueId ,SUBSTRING((SELECT '',''+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = '+Cast(@localeId AS VARCHAR(200))+'
				FOR XML PATH('''') ),2,4000) AttributeValue
				    ,  '+Cast(@localeId AS VARCHAR(200))+' LocaleId,TBLAV.AttributeCode,TBLAV.PimProductId
				FROM #TBL_AttributeValueId TBLAV
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimAttributeValueId,TBLAV.AttributeCode,TBLAV.PimProductId
			   )
  
				SELECT  TBLAV.PimProductId
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'	GROUP BY TBLAV.PimProductId '
			
				
  END 
  ELSE IF  @WorkingProcess = 0 
  BEGIN 

  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+'  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Simple Select','Multi Select')
							AND AttributeValue <> ''
							AND AttributeValue IS NOT NULL
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = '  			 
			   SELECT TBLAV.PimAttributeValueId,ZPAVL.PimAttributeDefaultValueId , ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimAttributeValueId ,TBLAV.PimProductId ORDER BY TBLAV.PimAttributeValueId ,TBLAV.PimProductId  ) RowId
			   INTO #temp_Table 
			   FROM #TBL_AttributeValueId TBLAV 
			   INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId)
			   WHERE (ZPAVL.LocaleId = '+Cast(@localeId AS VARCHAR(200))+' OR ZPAVL.LocaleId = '+Cast(@DefaultlocaleId AS VARCHAR(200))+')
				
				;with Cte_AttributeValue AS 
			   (
	            SELECT TBLAV.PimAttributeValueId ,SUBSTRING((SELECT '',''+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN #temp_Table  ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = CASE WHEN ZPAVL.RowId = 2 THEN '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  
				FOR XML PATH('''') ),2,4000) AttributeValue,TBLAV.AttributeCode ,TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimAttributeValueId,TBLAV.AttributeCode ,TBLAV.PimProductId 
			   )
  
				SELECT   TBLAV.PimProductId
				FROM  #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'	GROUP BY TBLAV.PimProductId '

  END 
   PRINT @SQL 
   
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   --INSERT INTO #TBL_PimProductId
   --SELECT -1 
   --WHERE NOT EXISTS (SELECT TOP 1 1  FROM #TBL_PimProductId)
   
 --  IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
 --  BEGIN
 --   INSERT INTO  #TBL_PimProductId (PimProductId)
	--SELECT 0 
 --  END
   DROP TABLE #TBL_AttributeDefaultValue

END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No') )
BEGIN  
   
  IF @DefaultLocaleId = @LocaleID AND @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN View_PimProducttextValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
 
  SET @SQL = '	SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId   ) ' END 
				+' GROUP BY TBLAV.PimProductId '

  END 
  ELSE IF @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeDetails AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId = CASE WHEN ZPAVL'+CAST(ID AS VARCHAR(200))+'.RowId = 2 THEN  '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = ' 
     ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.PimProductId,ZPAVL.AttributeValue,TBLAV.AttributeCode,ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimProductId,TBLAV.AttributeCode ORDER BY TBLAV.PimProductId,TBLAV.AttributeCode  ) RowId
	 FROM #TBL_AttributeValueId TBLAV 
	 INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId )
	 WHERE (LocaleId = '+Cast(@DefaultLocaleId AS Varchar(300))+' OR LocaleId = '+CAST(@LocaleId AS Varchar(300))+' )'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' AND EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END +'
	 ) 
	 SELECT  TBLAV.PimProductId 
  	 FROM #TBL_AttributeValueId TBLAV
	 '+@InternalProductWhereClause+'
	 GROUP BY TBLAV.PimProductId 
	 '
	 

  END 
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Text Area') )
BEGIN    
  IF @DefaultLocaleId = @LocaleID AND @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
								STUFF( (  SELECT ' INNER JOIN View_PimProductTextAreaValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text Area')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
 
  SET @SQL = '
              SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' GROUP BY TBLAV.PimProductId '
  END 
  ELSE IF @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeDetails AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId = CASE WHEN ZPAVL'+CAST(ID AS VARCHAR(200))+'.RowId = 2 THEN  '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text Area')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = ' 
     ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.PimProductId,TBLAV.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimProductId,TBLAV.AttributeCode ORDER BY TBLAV.PimProductId,TBLAV.AttributeCode  ) RowId
	 FROM #TBL_AttributeValueId TBLAV 
	 INNER JOIN ZnodePimProductAttributeTextAreaValue ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId )
	 WHERE (LocaleId = '+Cast(@DefaultLocaleId AS Varchar(300))+' OR LocaleId = '+CAST(@LocaleId AS Varchar(300))+' )
	 
	 ) 
	 SELECT  TBLAV.PimProductId 
  	 FROM #TBL_AttributeValueId TBLAV
	 '+@InternalProductWhereClause+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' 
							GROUP BY TBLAV.PimProductId 	
							'
   END 
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 
IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeCode  LIKE '%PublishStatus%' )
BEGIN    
 
  SET @SQL = '
              SELECT  TBLAV.PimProductId 
				FROM ZnodePimProduct TBLAV
				WHERE CASE WHEN TBLAV.IsProductPublish  IS NULL THEN ''Not Published'' 
				WHEN TBLAV.IsProductPublish = 0 THEN ''Draft''
				ELSE  ''Published'' END '+(SELECT TOP 1 AttributeValue FROM @TBL_FilterClause WHERE AttributeCode LIKE '%PublishStatus%')+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' AND EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' GROUP BY TBLAV.PimProductId '
  
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 
IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeCode  LIKE '%AttributeFamily%' )
BEGIN 

 ;With Cte_attributeValue AS 
   (
	 SELECT ZPAF.PimAttributeFamilyId,FamilyCode,AttributeFamilyName ,ZPFL.LocaleId
	 FROM ZnodePimAttributeFamily ZPAF
	 INNER JOIN ZnodePimFamilyLocale ZPFL ON (ZPFL.PimAttributeFamilyId = ZPAF.PimAttributeFamilyId) 
	 WHERE ZPFL.LocaleId IN (@DefaultLocaleId,@LocaleId)
	 ) 
   , Cte_AttributeValueAttribute AS (
	  SELECT PimAttributeFamilyId,FamilyCode,AttributeFamilyName
	   FROM Cte_attributeValue RTY 
	   WHERE LocaleId = @LocaleId
      )
   , Cte_AttributeValueTht AS (
      SELECT PimAttributeFamilyId,FamilyCode,AttributeFamilyName
	  FROM Cte_AttributeValueAttribute
	  UNION ALL 
	  SELECT PimAttributeFamilyId,FamilyCode,AttributeFamilyName
	  FROM Cte_attributeValue TYY  
	  WHERE NOT EXISTS (SELECT TOP 1 1 FROM Cte_AttributeValueAttribute THE WHERE THE.PimAttributeFamilyId = TYY.PimAttributeFamilyId )
	  AND TYY.LocaleId = @DefaultLocaleId
	  )
  
  SELECT PimAttributeFamilyId,FamilyCode,AttributeFamilyName
  INTO #TBL_FamilyLocale
  FROM Cte_AttributeValueTht 


  SET @SQL = '
                SELECT  TBLAV.PimProductId 
				FROM ZnodePimProduct TBLAV 
				INNER JOIN #TBL_FamilyLocale THY ON (THY.PimAttributeFamilyId = TBLAV.PimAttributeFamilyId )
				WHERE AttributeFamilyName '+(SELECT TOP 1 AttributeValue FROM @TBL_FilterClause WHERE AttributeCode LIKE '%AttributeFamily%')+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' AND EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' GROUP BY TBLAV.PimProductId '
  
   
  
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 
SET @SQL = '
 IF EXISTS ( SELECT TOP 1 1 FROM tempdb..sysobjects WHERE name = ''##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+''' )
  BEGIN 
   DROP TABLE ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+'
  END 
 CREATE TABLE ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+' (PimProductId INT )
 INSERT INTO  ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+'
 SELECT PimProductId 
 FROM #TBL_PimProductId
'
   EXEC (@SQL)
   DROP TABLE #TBL_PimProductId
   DROP TABLE #TBL_AttributeValueId
   DROP TABLE #TBL_PimProductIdDelete
 END

 GO
 IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetRecurciveCategoryIds_PimCategoryHierarchy')
BEGIN
DROP FUNCTION dbo.Fn_GetRecurciveCategoryIds_PimCategoryHierarchy
END
GO

create  FUNCTION [dbo].[Fn_GetRecurciveCategoryIds_PimCategoryHierarchy]
(
       @PimCategoryHierarchyId     VARCHAR(2000)
	   ,@PimCatalogId	   INT 
)
RETURNS  @ConvertTableData TABLE (PimCategoryId INT ,ParentPimCategoryId INT ,PimCategoryHierarchyId INT ,ParentPimCategoryHierarchyId INT  )
AS
	-- Summary :- This function is used to get the category id recursive 
	-- Unit Testing 
	-- EXEC [dbo].[Znode_SplitWhereClause] '',2
     BEGIN
        
		DECLARE @TBL_PimCategoryId TABLE (PimCategoryHierarchyId INT )

		INSERT INTO @TBL_PimCategoryId (PimCategoryHierarchyId )
		SELECT item FROM dbo.split(@PimCategoryHierarchyId,',') 

		IF @PimCategoryHierarchyId = '' 
		BEGIN 
		   INSERT INTO @ConvertTableData
	       SELECT ZPCH.PimCategoryId ,ZPCI.PimCategoryId PimParentCategoryId,NULL, NULL 
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   INNER JOIN ZnodePimCategoryHierarchy   ZPCI ON (ZPCI.PimCategoryHierarchyId = ZPCH.ParentPimCategoryHierarchyId)
		   WHERE ZPCH.PimCatalogId = @PimCatalogId
		END 
		ELSE 
		BEGIN 
	   ;With Cte_RecursiveAccountId AS
	    (
	       SELECT PimCategoryId ,PimCategoryHierarchyId ,ParentPimCategoryHierarchyId
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PimCategoryId TBPC WHERE  ZPCH.ParentPimCategoryHierarchyId = TBPC.PimCategoryHierarchyId OR @PimCategoryHierarchyId = '')
		   AND (ZPCH.PimCatalogId = @PimCatalogId)
		   UNION ALL 
		   SELECT ZPCH.PimCategoryId ,ZPCH.PimCategoryHierarchyId,ZPCH.ParentPimCategoryHierarchyId
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   INNER JOIN Cte_RecursiveAccountId CTRA ON (CTRA.PimCategoryHierarchyId = ZPCH.ParentPimCategoryHierarchyId )
	      WHERE  (ZPCH.PimCatalogId = @PimCatalogId)
		  )
  	   INSERT INTO @ConvertTableData
	   SELECT   a.PimCategoryId,t.PimCategoryId ,a.PimCategoryHierarchyId,t.PimCategoryHierarchyId ParentPimCategoryHierarchyId
	   FROM Cte_RecursiveAccountId a 
	   INNER JOIN ZnodePimCategoryHierarchy t ON (t.PimCategoryHierarchyId = a.ParentPimCategoryHierarchyId)
	   
	   END 
	     RETURN 
     END;

	 GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetRecurciveCategoryIds_PimCategoryHierarchyIdnew')
BEGIN
DROP FUNCTION dbo.Fn_GetRecurciveCategoryIds_PimCategoryHierarchyIdnew
END
GO

create  FUNCTION [dbo].[Fn_GetRecurciveCategoryIds_PimCategoryHierarchyIdnew]
(
       @PimCategoryHierarchyId     VARCHAR(2000)
	   ,@PimCatalogId	   INT 
)
RETURNS  @ConvertTableData TABLE (PimCategoryId INT ,ParentPimCategoryId INT ,PimCategoryHierarchyId INT ,ParentPimCategoryHierarchyId INT  )
AS
	-- Summary :- This function is used to get the category id recursive 
	-- Unit Testing 
	-- EXEC [dbo].[Znode_SplitWhereClause] '',2
     BEGIN
        
		DECLARE @TBL_PimCategoryId TABLE (PimCategoryHierarchyId INT )

		INSERT INTO @TBL_PimCategoryId (PimCategoryHierarchyId )
		SELECT item FROM dbo.split(@PimCategoryHierarchyId,',') 

		IF @PimCategoryHierarchyId = '' 
		BEGIN 
		   INSERT INTO @ConvertTableData
	       SELECT ZPCH.PimCategoryId ,ZPCI.PimCategoryId PimParentCategoryId,NULL ,NULL 
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   INNER JOIN ZnodePimCategoryHierarchy   ZPCI ON (ZPCI.PimCategoryHierarchyId = ZPCH.ParentPimCategoryHierarchyId)
		   WHERE ZPCH.PimCatalogId = @PimCatalogId
		END 
		ELSE 
		BEGIN 
	   ;With Cte_RecursiveAccountId AS
	    (
	       SELECT PimCategoryId ,PimCategoryHierarchyId ,ParentPimCategoryHierarchyId
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PimCategoryId TBPC 
		   WHERE  ZPCH.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId OR @PimCategoryHierarchyId = '')
		   AND (ZPCH.PimCatalogId = @PimCatalogId)
		   UNION ALL 
		   SELECT ZPCH.PimCategoryId ,ZPCH.PimCategoryHierarchyId,ZPCH.ParentPimCategoryHierarchyId
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   INNER JOIN Cte_RecursiveAccountId CTRA ON (CTRA.ParentPimCategoryHierarchyId = ZPCH.PimCategoryHierarchyId )
	      WHERE  (ZPCH.PimCatalogId = @PimCatalogId)
		  )
  	   INSERT INTO @ConvertTableData
	   SELECT   a.PimCategoryId,t.PimCategoryId, a.PimCategoryHierarchyId,t.PimCategoryHierarchyId ParentPimCategoryHierarchyId
	   FROM Cte_RecursiveAccountId a 
	   LEFT JOIN ZnodePimCategoryHierarchy t ON (t.PimCategoryHierarchyId = a.ParentPimCategoryHierarchyId)
	   
	   END 
	     
     
		 RETURN 
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCategoryGroup')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCategoryGroup
END
GO

CREATE  PROCEDURE [dbo].[Znode_GetPublishCategoryGroup]
(   
	@PublishCatalogId INT,
    @UserId           INT,
    @VersionId        INT,
    @Status           BIT = 0 OUT,
	@PimCategoryHierarchyId int = 0, 
    @IsDebug          BIT = 0,
	@LocaleId TransferId READONLY,
	@PublishStateId INT = 0 
)
AS 
/*

       Summary:Publish category with their respective products and details 
	            The result is fetched in xml form   
       Unit Testing   
       Begin transaction 
       SELECT * FROM ZnodePIMAttribute 
	   SELECT * FROM ZnodePublishCatalog 
	   SELECT * FROM ZnodePublishCategory WHERE publishCAtegoryID = 167 


       EXEC [Znode_GetPublishCategory] @PublishCatalogId = 5,@VersionId = 0 ,@UserId =2 ,@IsDebug = 1 
       EXEC [Znode_GetPublishCategory] @PublishCatalogId = 5,@VersionId = 0 ,@UserId =2 ,@IsDebug = 1 ,@PimCategoryHierarchyId = ? 


       Rollback Transaction 
	*/
     BEGIN
         BEGIN TRAN GetPublishCategory;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @LocaleIdIn INT= 0, @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId(), @Counter INT= 1, @MaxId INT= 0, @CategoryIdCount INT;
             DECLARE @IsActive BIT= [dbo].[Fn_GetIsActiveTrue]();
             DECLARE @AttributeIds VARCHAR(MAX)= '', @PimCategoryIds VARCHAR(MAX)= '', @DeletedPublishCategoryIds VARCHAR(MAX)= '', @DeletedPublishProductIds VARCHAR(MAX);
             --get the pim catalog id 
			 DECLARE @PimCatalogId INT=(SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId); 

             DECLARE @TBL_AttributeIds TABLE
             (PimAttributeId       INT,
              ParentPimAttributeId INT,
              AttributeTypeId      INT,
              AttributeCode        VARCHAR(600),
              IsRequired           BIT,
              IsLocalizable        BIT,
              IsFilterable         BIT,
              IsSystemDefined      BIT,
              IsConfigurable       BIT,
              IsPersonalizable     BIT,
              DisplayOrder         INT,
              HelpDescription      VARCHAR(MAX),
              IsCategory           BIT,
              IsHidden             BIT,
              CreatedDate          DATETIME,
              ModifiedDate         DATETIME,
              AttributeName        NVARCHAR(MAX),
              AttributeTypeName    VARCHAR(300)
             );
             DECLARE @TBL_AttributeDefault TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder   INT
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             DECLARE @TBL_LocaleIds TABLE
             (RowId     INT IDENTITY(1, 1),
              LocaleId  INT,
              IsDefault BIT
             );
             DECLARE @TBL_PimCategoryIds TABLE
             (PimCategoryId       INT,
              PimParentCategoryId INT,
              DisplayOrder        INT,
              ActivationDate      DATETIME,
              ExpirationDate      DATETIME,
              CategoryName        NVARCHAR(MAX),
              ProfileId           VARCHAR(MAX),
              IsActive            BIT,PimCategoryHierarchyId INT,ParentPimCategoryHierarchyId INT   ,
			  CategoryCode  NVARCHAR(MAX)    );


             DECLARE @TBL_PublishPimCategoryIds TABLE
             (PublishCategoryId       INT,
              PimCategoryId           INT,
              PublishProductId        varchar(max),
              PublishParentCategoryId INT ,
			  PimCategoryHierarchyId INT ,parentPimCategoryHierarchyId INT
             );

			  DECLARE @TBL_PublishPimCategoryIdsLatest TABLE
             (PublishCategoryId       INT,
              PimCategoryId           INT,
              PublishProductId        varchar(max),
              PublishParentCategoryId INT ,
			  PimCategoryHierarchyId INT ,parentPimCategoryHierarchyId INT,PublishCatalogLogId INT,LocaleId INT  
             );

             DECLARE @TBL_DeletedPublishCategoryIds TABLE
             (PublishCategoryId INT,
              PublishProductId  INT
             );
             DECLARE @TBL_CategoryXml TABLE
             (PublishCategoryId INT,
              CategoryXml       XML,
              LocaleId          INT
			  ,PublishCatalogLogId INT
             );
             INSERT INTO @TBL_LocaleIds
             (LocaleId,
              IsDefault
             )
			  -- here collect all locale ids
             SELECT LocaleId,IsDefault FROM ZnodeLocale mt WHERE IsActive = @IsActive
			  AND (EXISTS (SELECT TOP 1 1  FROM @LocaleId RT WHERE RT.Id = MT.LocaleId )
			 OR NOT EXISTS (SELECT TOP 1 1 FROM @LocaleId ));


			IF @PimCategoryHierarchyId > 0 
			Begin 
				 DECLARE @TBL_CategoryCategoryHierarchyIds TABLE (CategoryId int,ParentCategoryId int,PimCategoryHierarchyId INT ,ParentPimCategoryHierarchyId INT  ) 
				 INSERT INTO @TBL_CategoryCategoryHierarchyIds(CategoryId , ParentCategoryId, PimCategoryHierarchyId , ParentPimCategoryHierarchyId)
				 Select Distinct PimCategoryId , Null,PimCategoryHierarchyId,NULL FROM (
				 SELECT PimCategoryId,ParentPimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId from DBO.[Fn_GetRecurciveCategoryIds_PimCategoryHierarchy](@PimCategoryHierarchyId,@PimCatalogId)
				 Union 
				 Select PimCategoryId , null,PimCategoryHierarchyId,NULL  from ZnodePimCategoryHierarchy where PimCategoryHierarchyId = @PimCategoryHierarchyId 
				 Union 
				 Select PimCategoryId , null,PimCategoryHierarchyId,NULL  from [Fn_GetRecurciveCategoryIds_PimCategoryHierarchy] (@PimCategoryHierarchyId,@PimCatalogId) ) Category  

			
				 INSERT INTO @TBL_PimCategoryIds(PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive,PimCategoryHierarchyId,ParentPimCategoryHierarchyId)
				
				 SELECT DISTINCT ZPCH.PimCategoryId,ZPCH2.PimCategoryId  PimParentCategoryId,ZPCH.DisplayOrder,ZPCH.ActivationDate,ZPCH.ExpirationDate,ZPCH.IsActive ,ZPCH.PimCategoryHierarchyId,ZPCH.ParentPimCategoryHierarchyId
				 FROM ZnodePimCategoryHierarchy AS ZPCH 
				 LEFT JOIN ZnodePimCategoryHierarchy AS ZPCH2 ON (ZPCH2.PimCategoryHierarchyId = ZPCH. ParentPimCategoryHierarchyId ) 
				 WHERE ZPCH.PimCatalogId = @PimCatalogId  AND ZPCH.PimCategoryHierarchyId in 
				 (SELECT PimCategoryHierarchyId from @TBL_CategoryCategoryHierarchyIds where CategoryId is not null )  ; 
				
				-- Delete from @TBL_PimCategoryIds where PimCategoryId  in (
				-- select PimCategoryId  from ZnodePublishCategory where PublishCatalogId = @PublishCatalogId 
				--)
		
				SELECT @VersionId  = PublishCatalogLogId from ZnodePublishCatalogLog where PublishCatalogId = @PublishCatalogId  and IsCatalogPublished =1 

				

			 	 INSERT INTO @TBL_DeletedPublishCategoryIds (PublishCategoryId,PublishProductId)
				 SELECT ZPC.PublishCategoryId,ZPCP.PublishProductId 
				 FROM ZnodePublishCategory AS ZPC 
				 LEFT JOIN  ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishCategoryId = ZPC.PublishCategoryId AND ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND  ZPCP.PimCategoryHierarchyId = ZPC.PimCategoryHierarchyId  )                                                  
				 LEFT JOIN ZnodePublishProduct ZPP ON (zpp.PublishProductId = zpcp.PublishProductId AND zpp.PublishCatalogId = zpcp.PublishCatalogId)
				 LEFT JOIN ZnodePublishCatalog ZPCC ON (ZPCC.PublishCatalogId = ZPCP.PublishCatalogId)
				 WHERE ZPC.PublishCatalogId = @PublishCataLogId 
				 --AND NOT EXISTS
				 --(SELECT TOP 1 1 FROM ZnodePimCatalogCategory AS TBPC WHERE TBPC.PimCategoryId = ZPC.PimCategoryId 
				 --AND TBPC.PimCategoryHierarchyId = ZPC.PimCategoryHierarchyId AND TBPC.PimProductId = ZPP.PimProductId 
				 --AND TBPC.PimCatalogId = ZPCC.PimCatalogId  AND  ZPCP.PimCategoryHierarchyId=  @PimCategoryHierarchyId   ) 
				 AND ZPC.PimCategoryHierarchyId in (select PimCategoryHierarchyId FROM @TBL_PimCategoryIds) ;
			End
			ELSE 
			Begin
				INSERT INTO @TBL_PimCategoryIds(PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive,PimCategoryHierarchyId,ParentPimCategoryHierarchyId)
				SELECT DISTINCT ZPCH.PimCategoryId,ZPCH2.PimCategoryId  PimParentCategoryId,ZPCH.DisplayOrder,ZPCH.ActivationDate,ZPCH.ExpirationDate,ZPCH.IsActive ,ZPCH.PimCategoryHierarchyId,ZPCH.ParentPimCategoryHierarchyId
				FROM ZnodePimCategoryHierarchy AS ZPCH 
				LEFT JOIN ZnodePimCategoryHierarchy AS ZPCH2 ON (ZPCH2.PimCategoryHierarchyId = ZPCH. ParentPimCategoryHierarchyId ) 
				WHERE ZPCH.PimCatalogId = @PimCatalogId; 

			 -- AND IsActive = @IsActive ; -- As discussed with @anup active flag maintain on demo site 23/12/2016
			 --	SELECT * FROM @TBL_PimCategoryIds
			 -- here is find the deleted publish category id on basis of publish catalog

             INSERT INTO @TBL_DeletedPublishCategoryIds(PublishCategoryId,PublishProductId)
			 SELECT ZPC.PublishCategoryId,ZPCP.PublishProductId 
				 FROM ZnodePublishCategoryProduct ZPCP
				 INNER JOIN ZnodePublishCategory AS ZPC ON(ZPCP.PublishCategoryId = ZPC.PublishCategoryId AND ZPCP.PublishCatalogId = ZPC.PublishCatalogId)                                                  
				 INNER JOIN ZnodePublishProduct ZPP ON(zpp.PublishProductId = zpcp.PublishProductId AND zpp.PublishCatalogId = zpcp.PublishCatalogId)
				 INNER JOIN ZnodePublishCatalog ZPCC ON(ZPCC.PublishCatalogId = ZPCP.PublishCatalogId)
				 WHERE ZPC.PublishCatalogId = @PublishCataLogId 
				 AND NOT EXISTS
				 (SELECT TOP 1 1 FROM ZnodePimCatalogCategory AS TBPC WHERE TBPC.PimCategoryId = ZPC.PimCategoryId 
				 AND TBPC.PimCategoryHierarchyId = ZPC.PimCategoryHierarchyId AND TBPC.PimProductId = ZPP.PimProductId 
				 AND TBPC.PimCatalogId = ZPCC.PimCatalogId);

			End
			
          

			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishCategoryIds = ISNULL(SUBSTRING((SELECT ','+CAST(PublishCategoryId AS VARCHAR(50)) FROM @TBL_DeletedPublishCategoryIds AS ZPC
                                              GROUP BY ZPC.PublishCategoryId FOR XML PATH('') ), 2, 4000), '');
			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishProductIds = '';
			 -- Delete the publish category id 
	         EXEC Znode_DeletePublishCatalog @PublishCatalogIds = @PublishCatalogId,@PublishCategoryIds = @DeletedPublishCategoryIds,@PublishProductIds = @DeletedPublishProductIds; 
			
             MERGE INTO ZnodePublishCategory TARGET USING  @TBL_PimCategoryIds SOURCE ON
			 (
				 TARGET.PimCategoryId = SOURCE.PimCategoryId 
				 AND TARGET.PublishCatalogId = @PublishCataLogId 
				 AND TARGET.PimCategoryHierarchyId = SOURCE.PimCategoryHierarchyId
			 )
			 WHEN MATCHED THEN UPDATE SET TARGET.PimParentCategoryId = SOURCE.PimParentCategoryId,TARGET.CreatedBy = @UserId,TARGET.CreatedDate = @GetDate,
             TARGET.ModifiedBy = @UserId,TARGET.ModifiedDate = @GetDate,PimCategoryHierarchyId = SOURCE.PimCategoryHierarchyId,ParentPimCategoryHierarchyId=SOURCE.ParentPimCategoryHierarchyId
             WHEN NOT MATCHED THEN INSERT(PimCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,PimCategoryHierarchyId,ParentPimCategoryHierarchyId) 
			 VALUES(SOURCE.PimCategoryId,@PublishCatalogId,@UserId,@GetDate,@UserId,@GetDate,SOURCE.PimCategoryHierarchyId
			 ,SOURCE.ParentPimCategoryHierarchyId)
             OUTPUT INSERTED.PublishCategoryId,INSERTED.PimCategoryId,INSERTED.PimCategoryHierarchyId,
			 INSERTED.parentPimCategoryHierarchyId 
			 INTO @TBL_PublishPimCategoryIds(PublishCategoryId,PimCategoryId,PimCategoryHierarchyId,parentPimCategoryHierarchyId);
			       
					   
		     -- here update the publish parent category id
             UPDATE ZPC SET [PimParentCategoryId] =TBPC.[PimCategoryId] 
				FROM ZnodePublishCategory ZPC
				INNER JOIN ZnodePublishCategory TBPC ON(ZPC.parentPimCategoryHierarchyId = TBPC.PimCategoryHierarchyId  ) 
				WHERE ZPC.PublishCatalogId =@PublishCatalogId
				AND ZPC.ParentPimCategoryHierarchyId IS NOT NULL
				AND TBPC.PublishCatalogId =@PublishCatalogId
				AND ZPC.PimCategoryId in (select PimCategoryId FROM @TBL_PimCategoryIds);
				;
			 UPDATE a
				SET  a.PublishParentCategoryId = b.PublishCategoryId
				FROM ZnodePublishCategory a 
				INNER JOIN ZnodePublishCategory b   ON (a.parentpimCategoryHierarchyId = b.pimCategoryHierarchyId)
				WHERE a.parentpimCategoryHierarchyId IS NOT NULL 
				AND a.PublishCatalogId =@PublishCatalogId
				AND b.PublishCatalogId =@PublishCatalogId
				AND a.PimCategoryId in (select PimCategoryId FROM @TBL_PimCategoryIds);

			 --UPDATE ZPC SET [PimParentCategoryId] = TBPC.[PimCategoryId] 
			 --FROM ZnodePublishCategory ZPC
    --         INNER JOIN ZnodePublishCategory TBPC ON(ZPC.parentPimCategoryHierarchyId = TBPC.PimCategoryHierarchyId  ) 
			 --WHERE ZPC.PublishCatalogId =@PublishCatalogId
			 --AND ZPC.ParentPimCategoryHierarchyId IS NOT NULL ;

			 -- product are published here 
            --  EXEC Znode_GetPublishProducts @PublishCatalogId,0,@UserId,1,0,0;

             SET @MaxId =(SELECT MAX(RowId)FROM @TBL_LocaleIds);
			 DECLARE @TransferID TRANSFERID 
			 INSERT INTO @TransferID 
			 SELECT DISTINCT  PimCategoryId
			 FROM @TBL_PublishPimCategoryIds 

          
			 INSERT INTO @TBL_PublishPimCategoryIdsLatest 
			 SELECT a.*,Max(b.PublishCatalogLogId) PublishCatalogLogId,b.LocaleId
			 FROM @TBL_PublishPimCategoryIds a
			 LEFT JOIN ZnodePublishCatalogLog b ON (b.PublishCatalogId = @PublishCatalogId)
			 WHERE EXISTS (SELECT TOP 1 1  FROM @LocaleId YTU WHERE YTU.Id = b.LocaleId )
			 AND b.PublishStateId = @PublishStateId
			 GROUP BY a.PublishCategoryId  ,PimCategoryId ,a.PublishProductId ,PublishParentCategoryId ,
			  PimCategoryHierarchyId  ,parentPimCategoryHierarchyId,b.LocaleId

			 
			 
             WHILE @Counter <= @MaxId -- Loop on Locale id 
                 BEGIN
                     SET @LocaleIdIn =(SELECT LocaleId FROM @TBL_LocaleIds WHERE RowId = @Counter);
                   
				     SET @AttributeIds = SUBSTRING((SELECT ','+CAST(ZPCAV.PimAttributeId AS VARCHAR(50)) FROM ZnodePimCategoryAttributeValue ZPCAV 
										 WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC WHERE TBPC.PimCategoryId = ZPCAV.PimCategoryId) GROUP BY ZPCAV.PimAttributeId FOR XML PATH('')), 2, 4000);
                
				     SET @CategoryIdCount =(SELECT COUNT(1) FROM @TBL_PimCategoryIds);

                     INSERT INTO @TBL_AttributeIds (PimAttributeId,ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined,
					 IsConfigurable,IsPersonalizable,DisplayOrder,HelpDescription,IsCategory,IsHidden,CreatedDate,ModifiedDate,AttributeName,AttributeTypeName)
                     EXEC [Znode_GetPimAttributesDetails] @AttributeIds,@LocaleIdIn;

                     INSERT INTO @TBL_AttributeDefault (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
                     EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @AttributeIds,@LocaleIdIn;

                     INSERT INTO @TBL_AttributeValue (PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
                     EXEC [dbo].[Znode_GetCategoryAttributeValueId] @TransferID,@AttributeIds,@LocaleIdIn;

					-- SELECT * FROM @TBL_AttributeValue WHERE PimCategoryId = 281


                     ;WITH Cte_UpdateDefaultAttributeValue
                     AS (
					  SELECT TBAV.PimCategoryId,TBAV.PimAttributeId,SUBSTRING((SELECT ','+AttributeDefaultValue FROM @TBL_AttributeDefault TBD WHERE TBAV.PimAttributeId = TBD.PimAttributeId
						AND EXISTS(SELECT TOP 1 1 FROM Split(TBAV.CategoryValue, ',') SP WHERE SP.Item = TBD.AttributeDefaultValueCode)FOR XML PATH('')), 2, 4000) DefaultCategoryAttributeValue
						FROM @TBL_AttributeValue TBAV WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_AttributeDefault TBAD WHERE TBAD.PimAttributeId = TBAV.PimAttributeId))
					 
					 -- update the default value with locale 
                     UPDATE TBAV SET CategoryValue = CTUDFAV.DefaultCategoryAttributeValue FROM @TBL_AttributeValue TBAV 
					 INNER JOIN Cte_UpdateDefaultAttributeValue CTUDFAV ON(CTUDFAV.PimCategoryId = TBAV.PimCategoryId AND CTUDFAV.PimAttributeId = TBAV.PimAttributeId)
					 WHERE CategoryValue IS NULL ;
					 
					 -- here is update the media path  
                     WITH Cte_productMedia
                     AS (SELECT TBA.PimCategoryId,TBA.PimAttributeId,[dbo].[FN_GetThumbnailMediaPathPublish](SUBSTRING((SELECT ','+zm.PATH FROM ZnodeMedia ZM WHERE EXISTS
					    (SELECT TOP 1 1 FROM dbo.split(TBA.CategoryValue, ',') SP WHERE SP.Item = CAST(Zm.MediaId AS VARCHAR(50)))FOR XML PATH('')), 2, 4000)) CategoryValue
						FROM @TBL_AttributeValue TBA WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetProductMediaAttributeId]() FNMA WHERE FNMA.PImAttributeId = TBA.PimATtributeId))
                         
					 UPDATE TBAV SET CategoryValue = CTCM.CategoryValue 
					 FROM @TBL_AttributeValue TBAV 
					 INNER JOIN Cte_productMedia CTCM ON(CTCM.PimCategoryId = TBAV.PimCategoryId
					 AND CTCM.PimAttributeId = TBAV.PimAttributeId);

                     WITH Cte_PublishProductIds
					 AS (SELECT TBPC.PublishcategoryId,SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50))
					  FROM ZnodePublishCategoryProduct ZPCP 
					  WHERE ZPCP.PublishCategoryId = TBPC.publishCategoryId
					  AND ZPCP.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId
                      AND ZPCP.PublishCatalogId = @PublishCatalogId FOR XML PATH('')), 2, 8000) PublishProductId ,PimCategoryHierarchyId
					  FROM @TBL_PublishPimCategoryIds TBPC)
                          
					 UPDATE TBPPC SET PublishProductId = CTPP.PublishProductId FROM @TBL_PublishPimCategoryIds TBPPC INNER JOIN Cte_PublishProductIds CTPP ON(TBPPC.PublishCategoryId = CTPP.PublishCategoryId 
					 AND TBPPC.PimCategoryHierarchyId = CTPP.PimCategoryHierarchyId);

					 WITH Cte_CategoryProfile
						AS (SELECT PimCategoryId,ZPCC.PimCategoryHierarchyId,SUBSTRING(( SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPC 
						INNER JOIN ZnodeProfileCategoryHierarchy ZPRCC ON(ZPRCC.PimCategoryHierarchyId = ZPCC.PimCategoryHierarchyId
						AND ZPRCC.ProfileCatalogId = ZPC.ProfileCatalogId) 
						WHERE ZPC.PimCatalogId = ZPCC.PimCatalogId FOR XML PATH('')), 2, 4000) ProfileIds
                      
						FROM ZnodePimCategoryHierarchy ZPCC 
						WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC 
						WHERE TBPC.PimCategoryId = ZPCC.PimCategoryId AND ZPCC.PimCatalogId = @PimCatalogId 
						AND ZPCC.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId))
                          
				     UPDATE TBPC SET TBPC.ProfileId = CTCP.ProfileIds FROM @TBL_PimCategoryIds TBPC 
					 LEFT JOIN Cte_CategoryProfile CTCP ON(CTCP.PimCategoryId = TBPC.PimCategoryId AND CTCP.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId );
                     
					 UPDATE TBPC SET TBPC.CategoryName = TBAV.CategoryValue FROM @TBL_PimCategoryIds TBPC INNER JOIN @TBL_AttributeValue TBAV ON(TBAV.PimCategoryId = TBPC.PimCategoryId
                     AND EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetCategoryNameAttribute]() FNGCNA WHERE FNGCNA.PimAttributeId = TBAV.PimAttributeId));

					   UPDATE TBPC SET TBPC.CategoryCode = TBAV.CategoryValue FROM @TBL_PimCategoryIds TBPC INNER JOIN @TBL_AttributeValue TBAV ON(TBAV.PimCategoryId = TBPC.PimCategoryId
					 AND EXISTS(SELECT TOP 1 1 FROM dbo.Fn_GetCategoryCodeAttribute() FNGCNA WHERE FNGCNA.PimAttributeId = TBAV.PimAttributeId)
					 )


					-- SELECT * FROM @TBL_AttributeValue WHERE pimCategoryId = 369

					 -- here update the publish category details 
                     ;WITH Cte_UpdateCategoryDetails
                     AS 
					 (
							 SELECT TBC.PimCategoryId,PublishCategoryId,CategoryName, TBPPC.PimCategoryHierarchyId,CategoryCode
							 FROM @TBL_PimCategoryIds TBC
							 INNER JOIN @TBL_PublishPimCategoryIds TBPPC ON(TBC.PimCategoryId = TBPPC.PimCategoryId AND TBC.PimCategoryHierarchyId = TBPPC.PimCategoryHierarchyId)
					 )						
                     MERGE INTO ZnodePublishCategoryDetail TARGET USING Cte_UpdateCategoryDetails SOURCE ON(
					 TARGET.PublishCategoryId = SOURCE.PublishCategoryId
					 AND TARGET.LocaleId = @LocaleIdIn)
                     WHEN MATCHED THEN UPDATE SET PublishCategoryId = SOURCE.PublishcategoryId,PublishCategoryName = SOURCE.CategoryName,LocaleId = @LocaleIdIn,ModifiedBy = @userId,ModifiedDate = @GetDate,CategoryCode=SOURCE.CategoryCode
                     WHEN NOT MATCHED THEN INSERT(PublishCategoryId,PublishCategoryName,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,CategoryCode) VALUES
                     (SOURCE.PublishCategoryId,SOURCE.CategoryName,@LocaleIdIn,@userId,@GetDate,@userId,@GetDate,SOURCE.CategoryCode);

                     ;WITH Cte_CategoryXML
                     AS (SELECT PublishCatalogLogId,PublishcategoryId,PimCategoryId,(SELECT PublishCatalogLogId VersionId,TBPC.PublishCategoryId ZnodeCategoryId,@PublishCatalogId ZnodeCatalogId
																		,THR.PublishParentCategoryId TempZnodeParentCategoryIds,ZPC.CatalogName ,
																		 ISNULL(DisplayOrder, '0') DisplayOrder,@LocaleIdIn LocaleId,ActivationDate 
																		 ,ExpirationDate,TBC.IsActive,ISNULL(CategoryName, '') Name,ProfileId TempProfileIds,ISNULL(PublishProductId, '') TempProductIds,ISNULL(CategoryCode,'') CategoryCode 
                        FROM @TBL_PublishPimCategoryIdsLatest TBPC 
						INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId= @PublishCatalogId)
						INNER JOIN ZnodePublishCAtegory THR ON (THR.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId AND THR.PimCategoryId = TBPC.PimCategoryId AND THR.PublishCatalogId= @PublishCatalogId )
						INNER JOIN @TBL_PimCategoryIds TBC ON(TBC.PimCategoryId = TBPC.PimCategoryId AND TBC.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId) 
						WHERE TBPC.PublishCategoryId = TBPCO.PublishCategoryId 
						AND TBPC.LocaleId = @localeIdIn
						FOR XML PATH('')) CategoryXml 
						FROM @TBL_PublishPimCategoryIdsLatest TBPCO 
						WHERE LocaleId = @localeIdIn),

                     Cte_CategoryAttributeXml
                     AS (SELECT PublishCatalogLogId, CTCX.PublishCategoryId,'<CategoryEntity>'+ISNULL(CategoryXml, '')+ISNULL((SELECT(SELECT TBA.AttributeCode,TBA.AttributeName,ISNULL(IsUseInSearch, 0) IsUseInSearch,
                        ISNULL(IsHtmlTags, 0) IsHtmlTags,ISNULL(IsComparable, 0) IsComparable,(SELECT ''+TBAV.CategoryValue FOR XML PATH('')) AttributeValues,TBA.AttributeTypeName FROM @TBL_AttributeValue TBAV
                        INNER JOIN @TBL_AttributeIds TBA ON(TBAV.PimAttributeId = TBA.PimAttributeId) LEFT JOIN ZnodePimFrontendProperties ZPFP ON(ZPFP.PimAttributeId = TBA.PimAttributeId)
                        WHERE CTCX.PimCategoryId = TBAV.PimCategoryId AND TBAO.PimAttributeId = TBA.PimAttributeId FOR XML PATH('AttributeEntity'), TYPE) FROM @TBL_AttributeIds TBAO
                        FOR XML PATH('Attributes')), '')+'</CategoryEntity>' CategoryXMl FROM Cte_CategoryXML CTCX)

                     INSERT INTO @TBL_CategoryXml(PublishCategoryId,CategoryXml,LocaleId,PublishCatalogLogId)
                     SELECT PublishCategoryId,CategoryXml,@localeIdIn LocaleId,PublishCatalogLogId 
					 FROM Cte_CategoryAttributeXml;
                   
				     DELETE FROM @TBL_AttributeIds;
                     DELETE FROM @TBL_AttributeDefault;
                     DELETE FROM @TBL_AttributeValue;
                     SET @Counter = @Counter + 1;
                 END;

				

				 -----------------------
			IF @PimCategoryHierarchyId > 0 
			Begin 
				Select PublishCategoryId ,PublishCatalogLogId VersionId	, @PimCatalogId PimCatalogId	, LocaleId
				into #OutPublish  
				FROM @TBL_CategoryXml  
				--group by PimCatalogId,VersionId,PublishCategoryId
  

				Alter TABLE #OutPublish ADD Id int Identity 

				SET @MaxId =(SELECT COUNT(*) FROM #OutPublish);
				--SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(50)) FROM @TBL_PublishPimCategoryIds FOR XML PATH('')), 2, 4000);
				Declare @ExistingPublishCategoryId  nvarchar(max), @PublishCategoryId  int 
				SET @Counter =1 
				WHILE @Counter <= @MaxId -- Loop on Locale id 
				BEGIN
					SELECT @VersionId = VersionId  ,
					@PublishCategoryId = PublishCategoryId 
					from #OutPublish where Id = @Counter

					SELECT @ExistingPublishCategoryId  = PublishCategoryId 
					FROM ZnodePublishCatalogLog ZPCL 
					where ZPCL.PublishCatalogLogId = @VersionId  and IsCategoryPublished =1 

			IF NOT EXISTS (SELECT TOP 1 1 FROM Split(@ExistingPublishCategoryId  , ',') SP WHERE SP.Item = Convert(nvarchar(50),  @PublishCategoryId) )
					BEGIN
					
						If Isnull(@ExistingPublishCategoryId,'')  = '' 
							SET @ExistingPublishCategoryId  = Convert(nvarchar(100),@PublishCategoryId )
						else 
							SET @ExistingPublishCategoryId  = Isnull(@ExistingPublishCategoryId,'') + ',' +  Convert(nvarchar(100),@PublishCategoryId )

							
				
						UPDATE ZnodePublishCatalogLog SET PublishCategoryId = @MaxId ,
						ModifiedDate = @GetDate
						WHERE PublishCatalogLogId = @VersionId;
					END
					DELETE FROM ZnodePublishedXml where  IsCategoryXML =1  and  PublishCataloglogId = @VersionId  and  PublishedId = @PublishCategoryId 
					SET @Counter  = @Counter  + 1  
				END
			END 
			ElSE
			Begin
				 UPDATE ZnodePublishCatalogLog 
				 SET PublishCategoryId = (SELECT COUNT(PublishCategoryId)  FROM @TBL_CategoryXml
				 GROUP BY PublishCategoryId																				
				 ), IsCategoryPublished = 1 WHERE PublishCatalogLogId = @VersionId;

				 DELETE FROM ZnodePublishedXml WHERE PublishCataloglogId = @VersionId;
             End
             
			 INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsCategoryXML,IsProductXML,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
             SELECT PublishCatalogLogId PublishCataloglogId,PublishCategoryId,CategoryXml,1,0,LocaleId,@UserId,@GetDate,@UserId,@GetDate 
			 FROM @TBL_CategoryXml 
			 --WHERE @VersionId <> 0;
			
			 Select Distinct PublishCategoryId from @TBL_DeletedPublishCategoryIds
			 
			 SELECT CategoryXml 
			 FROM @TBL_CategoryXml 
			
			 UPDATE ZnodePimCategory SET IsCategoryPublish =1,PublishStateId = @PublishStateId WHERE pimCategoryId IN (SELECT PimCategoryId FROM @TBL_PimCategoryIds)
             COMMIT TRAN GetPublishCategory;
			 
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE();
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishCategory @PublishCatalogId = '+CAST(@PublishCatalogId AS VARCHAR(50))+',@UserId ='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             ROLLBACK TRAN GetPublishCategory;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishCategory',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCategoryProducts')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCategoryProducts
END
GO

CREATE PROCEDURE [dbo].[Znode_GetPublishCategoryProducts]
( @pimCatalogId int = 0,@pimCategoryHierarchyId int = 0,@userId int,@versionId int= 0,@status int = 0 OUT,@isDebug bit = 0 ,@LocaleId TransferId READONLY , @PublishStateId INT = 0   )  AS  /*
    Summary :	Publish Product on the basis of publish catalog and category
				Calling sp [Znode_InsertPublishProductIds] to retrive category and their child category with associated products 
				 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.
	
	Unit Testing
    ------------------------------------------------------------------------------------------------
	Declare @Status int 
	DECLARE @r transferid 
	INSERT INTO @r
	VALUES (1)
	,(24)
	EXEC [Znode_GetPublishCategoryProducts]  @PimCatalogId = 9
	, @PimCategoryHierarchyId = 48 
	, @UserId = 2 
	, @VersionId = 0
	, @IsDebug = 1
	, @Status  = @Status  out
	,@localeId = @r
	,@PublishStateId = 4
	Select @Status  

 */
	BEGIN   
		BEGIN TRY
			SET NOCOUNT ON;
			 DECLARE @IsCatalogPublishInProcess INT  = 0
			DECLARE @tBL_PublishIds table (PublishProductId int,PimProductId int,PublishCatalogId int)
			DECLARE @publishCatalogId int= isnull((SELECT TOP 1 PublishCatalogId FROM ZnodePublishCatalog ZPC WHERE ZPC.PimCatalogId = @pimCatalogId),0),@publishCataloglogId int= 0;
			DECLARE @tBL_CategoryCategoryHierarchyIds table (CategoryId int,ParentCategoryId int ,PimCategoryHierarchyId INT ,ParentPimCategoryHierarchyId INT  )
			DECLARE @pimProductId TransferId
			DECLARE @insertPublishProductIds table (PublishProductId int,PimProductId int,PublishCatalogId int )
			--DECLARE @TBL_CategoryXml TABLE ( CategoryXml XML);
				SELECT @versionId = max(PublishCataloglogId)
			FROM ZnodePublishCatalogLog 
			WHERE PublishCatalogId =@publishCatalogId

				 IF EXISTS (SELECT TOP 1 1  FROM ZnodePublishCatalogLog a 
			   INNER JOIN ZnodePimCatalogCategory b ON (b.PimCatalogId =a.PimCatalogId )
			   WHERE b.PimCategoryHierarchyId = @PimCategoryHierarchyId
			   AND a.IsCatalogPublished IS NULL 
			   ) 
			   BEGIN 
				 SET   @IsCatalogPublishInProcess =1 
			   END 


			INSERT INTO @tBL_CategoryCategoryHierarchyIds(CategoryId,ParentCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId ) 
			SELECT DISTINCT PimCategoryId, Null,PimCategoryHierarchyId,NULL  FROM ( SELECT PimCategoryId,ParentPimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId
			FROM DBO.[Fn_GetRecurciveCategoryIds_PimCategoryHierarchy](@pimCategoryHierarchyId,@pimCatalogId) 
			UNION SELECT PimCategoryId, Null,PimCategoryHierarchyId,NULL FROM ZnodePimCategoryHierarchy WHERE PimCategoryHierarchyId = @pimCategoryHierarchyId 
			UNION SELECT PimCategoryId, Null,PimCategoryHierarchyId,NULL  FROM dbo.[Fn_GetRecurciveCategoryIds_PimCategoryHierarchyIdnew] (@pimCategoryHierarchyId,@pimCatalogId) ) Category

			

			
			IF NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ty 
			WHERE EXISTS (SELECT TOP 1 1 FROM ( SELECT PimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId 
			FROM dbo.[Fn_GetRecurciveCategoryIds_ForChild](@pimCategoryHierarchyId,@pimCatalogId) UNION ALL SELECT NULL ,@pimCategoryHierarchyId,NULL  ) TN WHERE TN.PimCategoryHierarchyId = TY.PimCategoryHierarchyId  ) AND ty.PimProductId IS NOT NULL )
			BEGIN 
			  SET @IsCatalogPublishInProcess = 2 

			END 

			IF (isnull(@publishCatalogId,0) = 0 ) 
				BEGIN 
					SET @status = 1
					-- Catalog Not Published 
					RETURN 0;
				END
			
			IF @IsCatalogPublishInProcess =  0 
			BEGIN 
			

			-- Any other catalog was in process dont intitiate category publish	
			If Exists ( SELECT TOP 1 1 FROM ZnodePublishcatalogLog  WHERE  IsCatalogPublished  IS NULL  )
			Begin
					SET @status = 2
					RETURN 0;
			End

			
				EXEC [Znode_GetPublishCategoryGroup] @publishCatalogId = @PublishCatalogId,@VersionId = 0,@userId =2,@isDebug = 1,@PimCategoryHierarchyId = @PimCategoryHierarchyId,@localeId =@localeID,@PublishStateId=@PublishStateId
			
			BEGIN 
				INSERT INTO @insertPublishProductIds EXEC [Dbo].[Znode_InsertPublishProductIds] @publishCatalogId = @publishCatalogId,@userid = @userid,@pimProductId = @pimProductId,@pimCategoryHierarchyId = @pimCategoryHierarchyId
				INSERT INTO @pimProductId SELECT PimProductId FROM @insertPublishProductIds

				EXEC [Dbo].[Znode_GetPublishProductbulk] @publishCatalogId = @publishCatalogId,@versionId = @versionId,@pimProductId = @pimProductId,@userid = @userid,@pimCategoryHierarchyId = @pimCategoryHierarchyId,@pimCatalogId = @pimCatalogId,@localeIds = @localeId ,@publishstateId =@publishStateId 
				
				UPDATE ZnodePimProduct 		SET IsProductPublish = 1 ,PublishStateId = @PublishStateId		
				WHERE EXISTS (SELECT TOP 1 1 
					FROM ZnodePublishProduct ZPP
					WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId 
						AND ZPP.PublishCatalogId = @publishCatalogId
					)
			END
			DECLARE @tBL_PublishCatalogId table(PublishCatalogId int,PublishProductId int,PublishCategoryId int,PimProductId int,VersionId int,LocaleId INT  );
			
			INSERT INTO @tBL_PublishCatalogId (PublishCatalogId,PublishProductId,PublishCategoryId,PimProductId,VersionId ,Localeid)  
			SELECT DISTINCT ZPC.PublishCatalogId,ZPX.PublishProductId,ZPX.PublishCategoryId,ZPP.PimProductId,Max(TH.PublishCatalogLogId),TH.Localeid 
			FROM ZnodePublishCategory ZPC 
			INNER JOIN ZnodePublishCatalogLog TH ON (TH.PublishCatalogId = ZPC.PublishCatalogId)
			INNER JOIN @tBL_CategoryCategoryHierarchyIds CTC ON (ZPC.PimCategoryHierarchyId = CTC .PimCategoryHierarchyId )
			INNER JOIN ZnodePublishCategoryProduct ZPX  ON ZPC.PublishCategoryId = ZPX.PublishCategoryId AND ZPX.PublishCatalogId = ZPC.PublishCatalogId 
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishCatalogId = ZPC.PublishCatalogId AND ZPX.PublishProductId = ZPP.PublishProductId 
			WHERE ZPC.PublishCatalogId = @PublishCatalogId 
			AND  TH.PublishStateId = @PublishStateId
			AND EXISTS (SELECT TOP 1 1 FROM @LocaleId WHERE id = TH.LocaleId)
			GROUP BY ZPC.PublishCatalogId,ZPX.PublishProductId ,ZPX.PublishCategoryId,ZPP.PimProductId,TH.Localeid 
		
			INSERT INTO @tBL_PublishCatalogId (PublishCatalogId,PublishProductId,PublishCategoryId,PimProductId,VersionId,Localeid ) 
			SELECT IPP.PublishCatalogId,IPP.PublishProductId,0,IPP.PimProductId,max(PublishCatalogLogId) VersionId ,h.Localeid
			FROM @insertPublishProductIds IPP 
			LEFT JOIN ZnodePublishCatalogLog h ON (h.PublishCatalogId = IPP.PublishCatalogId )
			WHERE NOT EXISTS (SELECT TOP 1 1 FROM @tBL_PublishCatalogId PCI WHERE IPP.PublishProductId = PCI.PublishProductId)
			AND EXISTS (SELECT TOP 1 1 FROM @LocaleId WHERE id = h.LocaleId)
			AND h.PublishStateId = @PublishStateId
			GROUP BY IPP.PublishCatalogId,IPP.PublishProductId,IPP.PimProductId,Localeid
			
			UPDATE ZnodePublishCatalogLog 
			SET IsProductPublished = 1,PublishProductId = (SELECT count(PublishProductId) FROM ZnodePublishProduct ZPP WHERE ZPP.PublishCatalogId = ZnodePublishCatalogLog.PublishCatalogId ) 
			WHERE PublishCatalogLogId IN (SELECT VersionId FROM @tBL_PublishCatalogId)

			UPDATE ZnodePimProduct 
			SET IsProductPublish = 1 ,PublishStateId = @PublishStateId	
			WHERE EXISTS (SELECT TOP 1 1 
				FROM @tBL_PublishCatalogId ZPP
				WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId
				)
		
				SELECT PublishCatalogId
					,PublishProductId
					,PublishCategoryId
					,VersionId,LocaleId
			FROM @tBL_PublishCatalogId
			END 
			 IF @IsCatalogPublishInProcess = 1 
				BEGIN 
				SELECT 1 Id , 'Single category publish request cannot be processed as catalog publish is in progress. Please try after catalog publish is complete.' MessageDetails,  CAST(0 AS BIT ) Status
				END 
				ELSE IF @IsCatalogPublishInProcess = 2 
				BEGIN
				
				SELECT 1 Id , 'Please associate products to the category or to at least one child category to publish the category.' MessageDetails,  CAST(0 AS BIT ) Status
				END 
				ELSE 
				BEGIN 
				SELECT 1 Id , ' Publish Successfull' MessageDetails, CAST(1 AS BIT ) Status
				END 
		END TRY
		BEGIN CATCH
			SELECT error_message()
				,error_procedure();
			UPDATE ZnodePublishCatalogLog 
			SET IsCatalogPublished = 0 
			WHERE PublishCatalogLogId = @versionId
			SET @status = 0;
			DECLARE @error_procedure varchar(1000)= error_procedure(),@errorMessage nvarchar(max)= error_message(),@errorLine varchar(100)= error_line(),@errorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PimCatalogId = '+cast(@pimCatalogId AS varchar(max))+',@@PimCategoryHierarchyId='+@pimCategoryHierarchyId+',@UserId='+cast(@userId AS varchar(50))+',@UserId = '+cast(@userId AS varchar(50))+',@VersionId='+cast(@versionId AS varchar(50))+',@Status='+cast(@status AS varchar(10));
			SELECT 0 AS ID
				,cast(0 AS bit) AS Status;
			ROLLBACK TRAN GetPublishProducts;
			EXEC Znode_InsertProcedureErrorLog @procedureName = 'Znode_GetPublishCategoryProducts',@errorInProcedure = @error_procedure,@errorMessage = @errorMessage,@errorLine = @errorLine,@errorCall = @errorCall;
		END CATCH;
		END;

		GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemQuantity')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemQuantity
END
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemQuantity](
	  @CartLineItemXML xml, @UserId int,@Status bit OUT )
AS 
   /* 
    Summary: THis Procedure is USed to save and edit the saved cart line item      
    Unit Testing 
	begin tran  
    Exec Znode_InsertUpdateSaveCartLineItem @CartLineItemXML= '<ArrayOfSavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>BlueGreenYellow</SKU>
    <Quantity>1.000000</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>1</Sequence>
    <AddonProducts>YELLOW</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts>GREEN</ConfigurableProducts>
  </SavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>ap1534</SKU>
    <Quantity>1.0</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>2</Sequence>
    <AddonProducts >PINK</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts />
    <PersonaliseValuesList>Address~Hello</PersonaliseValuesList>
  </SavedCartLineItemModel>
</ArrayOfSavedCartLineItemModel>' , @UserId=1 ,@Status=0
	rollback tran
*/
BEGIN
	BEGIN TRAN InsertUpdateSaveCartLineItem;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		DECLARE @AddOnQuantity numeric(28, 6)= 0;
		DECLARE @IsAddProduct   BIT = 0 
		DECLARE @OmsSavedCartLineItemId INT = 0
		DECLARE @TBL_SavecartLineitems TABLE
		( 
			RowId int , OmsSavedCartLineItemId int, ParentOmsSavedCartLineItemId int, OmsSavedCartId int, SKU nvarchar(600), Quantity numeric(28, 6), OrderLineItemRelationshipTypeID int, CustomText nvarchar(max), 
			CartAddOnDetails nvarchar(max), Sequence int, AddOnValueIds varchar(max), BundleProductIds varchar(max), ConfigurableProductIds varchar(max), GroupProductIds varchar(max), PersonalisedAttribute XML, 
			AutoAddon varchar(max), OmsOrderId int, ItemDetails nvarchar(max),
			Custom1	nvarchar(max),Custom2 nvarchar(max),Custom3 nvarchar(max),Custom4
			nvarchar(max),Custom5 nvarchar(max),GroupId NVARCHAR(max) ,ProductName Nvarchar(1000) , Description NVARCHAR(max),AddOnQuantity NVARCHAR(max)
		);

		DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
		DECLARE @OrderLineItemRelationshipTypeIdSimple int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Simple'
		);
		DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
		DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
		 DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
		INSERT INTO @TBL_SavecartLineitems( RowId,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence, AddOnValueIds, BundleProductIds, ConfigurableProductIds, GroupProductIds, PersonalisedAttribute, AutoAddon, OmsOrderId, ItemDetails,
		Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,Description,AddOnQuantity )
			   SELECT DENSE_RANK()Over(Order BY Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' )) RowId ,Tbl.Col.value( 'OmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartLineItemId, Tbl.Col.value( 'ParentOmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS ParentOmsSavedCartLineItemId, Tbl.Col.value( 'OmsSavedCartId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartId, Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' ) AS SKU, Tbl.Col.value( 'Quantity[1]', 'NVARCHAR(2000)' ) AS Quantity
			   , Tbl.Col.value( 'OrderLineItemRelationshipTypeID[1]', 'NVARCHAR(2000)' ) AS OrderLineItemRelationshipTypeID, Tbl.Col.value( 'CustomText[1]', 'NVARCHAR(2000)' ) AS CustomText, Tbl.Col.value( 'CartAddOnDetails[1]', 'NVARCHAR(2000)' ) AS CartAddOnDetails, Tbl.Col.value( 'Sequence[1]', 'NVARCHAR(2000)' ) AS Sequence, Tbl.Col.value( 'AddonProducts[1]', 'NVARCHAR(2000)' ) AS AddOnValueIds, ISNULL(Tbl.Col.value( 'BundleProducts[1]', 'NVARCHAR(2000)' ),'') AS BundleProductIds, ISNULL(Tbl.Col.value( 'ConfigurableProducts[1]', 'NVARCHAR(2000)' ),'') AS ConfigurableProductIds, ISNULL(Tbl.Col.value( 'GroupProducts[1]', 'NVARCHAR(Max)' ),'') AS GroupProductIds, 
			          Tbl.Col.query('(PersonaliseValuesDetail/node())') AS PersonaliseValuesDetail, Tbl.Col.value( 'AutoAddon[1]', 'NVARCHAR(Max)' ) AS AutoAddon, Tbl.Col.value( 'OmsOrderId[1]', 'NVARCHAR(Max)' ) AS OmsOrderId,
					  Tbl.Col.value( 'ItemDetails[1]', 'NVARCHAR(Max)' ) AS ItemDetails,
					  Tbl.Col.value( 'Custom1[1]', 'NVARCHAR(Max)' ) AS Custom1,
					  Tbl.Col.value( 'Custom2[1]', 'NVARCHAR(Max)' ) AS Custom2,
					  Tbl.Col.value( 'Custom3[1]', 'NVARCHAR(Max)' ) AS Custom3,
					  Tbl.Col.value( 'Custom4[1]', 'NVARCHAR(Max)' ) AS Custom4,
					  Tbl.Col.value( 'Custom5[1]', 'NVARCHAR(Max)' ) AS Custom5,
					  Tbl.Col.value( 'GroupId[1]', 'NVARCHAR(Max)' ) AS GroupId,
					  Tbl.Col.value( 'ProductName[1]', 'NVARCHAR(Max)' ) AS ProductName,
					  Tbl.Col.value( 'Description[1]', 'NVARCHAR(Max)' ) AS Description, 
					  Tbl.Col.value( 'AddOnQuantity[1]', 'NVARCHAR(2000)' ) AS AddOnQuantity
			   FROM @CartLineItemXML.nodes( '//ArrayOfSavedCartLineItemModel/SavedCartLineItemModel' ) AS Tbl(Col);
			  

			  --select * from @TBL_SavecartLineitems
			

			  UPDATE  @TBL_SavecartLineitems
			  SET 	Description = ISNUll(Description,'') 

			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' )
			 BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				    SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0 )

					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ( OmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					OR ParentOmsSavedCartLineItemId =  @OmsSavedCartLineItemId   ) 
					 
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_bundleProduct TT_SavecartLineitems 
				  INSERT INTO @TBL_bundleProduct 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(BundleProductIds,'') <> '' 
				
				  EXEC Znode_InsertUpdateSaveCartLineItemBundle @TBL_bundleProduct,@userId
				 
				  DELETE FROM  @TBL_SavecartLineitems WHERE ISNULL(BundleProductIds,'') <> '' 
				  SET @OmsSavedCartLineItemId = 0 
				END 
			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Configurable TT_SavecartLineitems 
				  INSERT INTO @TBL_Configurable 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> '' 

				  EXEC Znode_InsertUpdateSaveCartLineItemConfigurable @TBL_Configurable,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND  OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Group TT_SavecartLineitems 
				  INSERT INTO @TBL_Group 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> '' 

				
				  EXEC Znode_InsertUpdateSaveCartLineItemGroup @TBL_Group,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				 
                IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
				
				    UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


					DELETE	FROM @TBL_SavecartLineitems WHERE OmsSavedCartLineItemId <> 0
				 END 
			 
			

			  DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT )
			  DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
			  INSERT INTO @TBL_Personalise
			  SELECT  NULL 
							,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		  ,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					  ,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					  ,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			  FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @TBL_SavecartLineitems TRTR  ) a 
			  CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 
			  
			   
		    
			
			  CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
				   
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @TBL_SavecartLineitems a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, @OrderLineItemRelationshipTypeIdSimple, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE ISNULL(BundleProductIds,'') =  '' 
			   AND  ISNULL(GroupProductIds,'') = ''	AND ISNULL(	ConfigurableProductIds,'') = ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity,  CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
     		   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,Quantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
					,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
					WHEN  GroupProductIds <> '' THEN GroupProductIds 
					WHEN BundleProductIds <> '' THEN BundleProductIds 
					 ELSE SKU END     ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE AddOnValueIds <> ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,Quantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
				 
            
		
		 CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.SKU,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple   

			

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		--select * from #tempoi

	

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

			

		IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_SavecartLineitems ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
	    
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 
		END 
			
	

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		

		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		   
		
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   

		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		   
		  
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 


		  
		END 

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)

		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	
			     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
	
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId) NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdSimple
    )   
    
    DELETE FROM #yuuete WHERE NewRowId IN (SELECT NewRowId FROM VTRET)  
	
	

	
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  

 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID
				
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
  

    
    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY a.OmsSavedCartLineItemId DESC )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  


  --  SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 --FROM ZnodeOmsSavedCartLineItem a
	 --WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
  --   AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --   AND a.ParentOmsSavedCartLineItemId IS NULL  
	 --AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 --AND EXISTS (SELECT TOP 1 1 FROM #Cte_newAddon TI WHERE TI.SKU = a.SKU)



   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1 FROM #Cte_newAddon TI WHERE TI.SKU = a.SKU)
   )

    UPDATE a SET  
   --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId =(SELECT TOP 1 max(OmsSavedCartLineItemId) 
	FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU   GROUP BY r.ParentSKU, r.SKU  )    IS NOT NULL 
	 

	
	  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
	WHERE b.ParentOmsSavedCartLineItemId IS NOT NULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
	WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		 
END 
	SET @Status = 1;
	COMMIT TRAN InsertUpdateSaveCartLineItem;
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE()	
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_InsertUpdateSaveCartLineItem @CartLineItemXML = '+CAST(@CartLineItemXML
 AS varchar(max))+',@UserId = '+CAST(@UserId AS varchar(50))+',@Status='+CAST(@Status AS varchar(10));

		SELECT 0 AS ID, CAST(0 AS bit) AS Status,ERROR_MESSAGE();
		ROLLBACK TRAN InsertUpdateSaveCartLineItem;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_InsertUpdateSaveCartLineItem', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertSaveCartLineItemsForReOrder')
BEGIN 
	DROP PROCEDURE Znode_InsertSaveCartLineItemsForReOrder
END
GO

CREATE PROCEDURE [dbo].[Znode_InsertSaveCartLineItemsForReOrder] 
(
 @OmsOrderId INT, 
 @OmsSavedCartId INT ,
 @UserId INT ,
 --@OmsOrderLineItemsId INT = 0,
 @Status BIT = 0 OUT
)
AS 
BEGIN 
 BEGIN TRY 
  SET NOCOUNT ON 
  DECLARE @TBL_ZnodeOmsSavedCartLineItem TABLE (OmsSavedCartLineItemId INT , RowId INT  )
  DECLARE @GetDate DATETIME = dbo.FN_getDate() 

  --DELETE FROM ZnodeOmsPersonalizeCartItem  WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM  ZnodeOmsSavedCartLineItem WHERE  OmsSavedCartId = @OmsSavedCartId )
  --DELETE FROM ZnodeOmsSavedCartLineItem WHERE   OmsSavedCartId = @OmsSavedCartId

  SELECT *,Row_number()Over(Order By OmsOrderLineItemsId )  RowId, NULL ParentRowId
  INTO #ZnodeOmsOrderLineItems_temp 
  FROM ZnodeOmsOrderLineItems 
  WHERE OmsOrderDetailsId = (SELECT TOP 1 OmsOrderDetailsId  FROM ZnodeOmsOrderDetails WHERE  OmsOrderId =  @OmsOrderId AND IsActive =1 ) 
  ORDER BY OmsOrderLineItemsId 


  UPDATE #ZnodeOmsOrderLineItems_temp 
  SET ParentRowId = (SELECT TOP 1 RowId FROM #ZnodeOmsOrderLineItems_temp a WHERE a.OmsOrderLineItemsId = #ZnodeOmsOrderLineItems_temp.ParentOmsOrderLineItemsId ) 


  INSERT INTO ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId,CustomText,CartAddOnDetails
										,Sequence,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,AutoAddon,OmsOrderId,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId
										,ProductName,Description)
  OUTPUT INSERTED.OmsSavedCartLineItemId,INSERTED.Sequence  INTO @TBL_ZnodeOmsSavedCartLineItem
  SELECT NULL,@OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId,NULL CustomText, NULL CartAddOnDetails
										,RowId,@UserId,@GetDate,@UserId,@GetDate,AutoAddonSKU,NULL OmsOrderId,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId
										,ProductName,Description
  FROM #ZnodeOmsOrderLineItems_temp 
  ORDER BY OmsOrderLineItemsId 

            
  UPDATE ab 
  SET ab.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_ZnodeOmsSavedCartLineItem av WHERE av.RowId = b.ParentRowId   )
  FROM ZnodeOmsSavedCartLineItem ab 
  INNER JOIN @TBL_ZnodeOmsSavedCartLineItem a ON (a.OmsSavedCartLineItemId = ab.OmsSavedCartLineItemId ) 
  INNER JOIN #ZnodeOmsOrderLineItems_temp b ON  (b.RowId = a.RowId  ) 

  INSERT INTO ZnodeOmsPersonalizeCartItem (OmsSavedCartLineItemId,PersonalizeCode,PersonalizeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,DesignId,ThumbnailURL)
  SELECT c.OmsSavedCartLineItemId,PersonalizeCode,PersonalizeValue,@UserId,@GetDate,@UserId,@GetDate,DesignId,ThumbnailURL
  FROM ZnodeOmsPersonalizeItem  a 
  INNER JOIN #ZnodeOmsOrderLineItems_temp b ON (a.OmsOrderLineItemsId = b.OmsOrderLineItemsId)
  INNER JOIN @TBL_ZnodeOmsSavedCartLineItem c ON (c.RowId = b.RowId )

  SET @status = 1 

 END TRY 
 BEGIN CATCH 
 
 SELECT ERROR_MESSAGE()
 SET @status = 0 
 END CATCH 
END   

GO
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductTypeAssociationId</name>      <headertext>Product ID</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PimProductTypeAssociationId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Brand/UnAssociateBrandProducts</manageactionurl>      <manageparamfield>PimProductId,attributeValue</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
WHERE ItemName = 'AssociatedBrandProductList'

GO


IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPimProductCategoryList')
BEGIN 
	DROP PROCEDURE Znode_GetPimProductCategoryList
END
GO

     
CREATE PROCEDURE [dbo].[Znode_GetPimProductCategoryList]      
(   @WhereClause   XML,      
    @Rows          INT           = 100,      
    @PageNo        INT           = 1,      
    @Order_BY      VARCHAR(1000) = '',      
    @RowsCount     INT OUT,      
    @LocaleId      INT           = 1,      
 @PimProductIdInput INT,      
    @IsAssociated  BIT           = 0      
 ,@AttributeCode VARCHAR(max) = ''      
 )      
AS       
/*      
     Summary :- This Procedure is used to get the product list for category products       
    The result is fetched order by DisplayOrder or status as per requirement in both asc and desc      
          
     Unit Testing       
  begin tran      
     EXEC Znode_GetPimCategoryProductList '',@RowsCount = 0, @PimCategoryId = 22,@Order_BY ='DisplayOrder asc'      
  rollback tran      
 */      
     BEGIN      
         BEGIN TRY      
             SET NOCOUNT ON;      
                 
		DECLARE @TransferPimCategoryId TransferId       
		CREATE TABLE #TBL_AttributeDetails (PimCategoryAttributeValueId INT,PimCategoryId   INT,AttributeValue NVARCHAR(MAX),  
		AttributeCode  VARCHAR(600),PimAttributeId INT);      
                  
		DECLARE @OrderByDisplay INT= 0;      
		DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();      
                   
		CREATE TABLE #TBL_ProductIdTable ([PimProductId] INT,[CountId] INT,PimCategoryId  INT,RowId INT);      
      
		DECLARE   
		@PimAttributeId VARCHAR(MAX)      
		   
      
		DECLARE @PimProductIds TransferId      
      
             IF @Order_BY LIKE '%DisplayOrder%'      
                 BEGIN      
                     SET @OrderByDisplay = 1;      
                 END;      
             ELSE      
             IF @Order_BY LIKE '%Status%'      
                 BEGIN      
                     SET @OrderByDisplay = 2;      
                 END;      
    CREATE TABLE #TBL_PimMediaAttributeId  (PimAttributeId INT ,AttributeCode VARCHAR(600))      
    INSERT INTO #TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)      
    SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetCategoryMediaAttributeId()      
      
          
      
   INSERT INTO @TransferPimCategoryId      
   SELECT PimCategoryId FROM ZnodePimCategoryProduct ZCP WHERE ZCP.PimProductId = @PimProductIdInput       
   ORDER BY CASE WHEN @Order_By LIKE '% DESC%'      
            THEN       
   CASE WHEN @OrderByDisplay = 1       
     THEN ZCP.DisplayOrder       
     WHEN @OrderByDisplay = 2       
     THEN ZCP.Status      
     ELSE 1 END       
     ELSE 1 END DESC,      
            CASE WHEN @Order_By LIKE '% ASC%'       
    THEN      
     CASE WHEN @OrderByDisplay = 1       
     THEN ZCP.DisplayOrder       
      WHEN @OrderByDisplay = 2      
       THEN ZCP.Status      
        ELSE 1 END      
         ELSE 1 END 
		 
		       
          IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimCategoryId  )      
    BEGIN       
      INSERT INTO @TransferPimCategoryId      
      SELECT '0'      
      --SET @IsAssociated = 0       
             END       
        
      
  DECLARE @SQL NVARcHAR(max)= ''      
  DECLARE  @ProductListIdRTR TransferId      
  DECLARE @TAb Transferid       
  DECLARE @tBL_mainList TABLE (Id INT,CountId INT,RowId INT)      
       
  SET @IsAssociated = CASE WHEN @IsAssociated = 0 THEN 1  WHEN @IsAssociated = 1 THEN 0 END       
       
		
  INSERT INTO @ProductListIdRTR      
  EXEC Znode_GetCategoryList  @IsAssociated,@TransferPimCategoryId      
        
 
  DECLARE @CategoryIDS NVARCHAR(2000) = SUBSTRING((SELECT ','+CAST(ID AS VARCHAR(200)) FROM @ProductListIdRTR FOR XML PATH('')), 2, 4000)      
 
       
  BEGIN      
        
		SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'PimCategoryId','CategoryName')      
		SET @order_by = REPLACE(@order_by,'PimCategoryId','CategoryName')      
      
		INSERT INTO @TBL_MainList(id,CountId,RowId)      
		EXEC Znode_GetCategoryIdForPaging @WhereClause , @Rows , @PageNo , @Order_BY , @RowsCount , @LocaleId , @AttributeCode , @CategoryIDS , @IsAssociated;      
       
		END       
		INSERT INTO #TBL_ProductIdTable(PimCategoryId,RowId)       
		SELECT ID ,RowId FROM @TBL_MainList SP       
      
		INSERT INTO @PimProductIds ( Id )      
		SELECT Id FROM @TBL_MainList SP      
      
		UPDATE #TBL_ProductIdTable SET PimProductId = @PimProductIdInput;      
		SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50))   
		FROM [dbo].[Fn_GetGridPimCategoryAttributes]() FOR XML PATH('')), 2, 4000);      
                   
		INSERT INTO #TBL_AttributeDetails(PimCategoryAttributeValueId,PimCategoryId, AttributeValue,AttributeCode,PimAttributeId)      
		EXEC Znode_GetCategoryAttributeValueId @PimProductIds,@PimAttributeId,@LocaleId;      
                 
      
		;WITH Cte_ProductMedia      
		AS (SELECT TBA.PimCategoryId , TBA.PimAttributeId       
		, SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH       
		FROM ZnodeMedia AS ZM      
		INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)      
		INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)      
		INNER JOIN #TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )      
		INNER JOIN  #TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)      
		WHERE TBAI.PimCategoryId = TBA.PimCategoryId AND TBAI.PimAttributeId = TBA.PimAttributeId       
		FOR XML PATH('') ), 2 , 4000) AS AttributeValue , SUBSTRING( ( SELECT ','+AttributeValue      
		FROM  #TBL_AttributeDetails AS TBAI      
		WHERE TBAI.PimCategoryId = TBA.PimCategoryId AND TBAI.PimAttributeId = TBA.PimAttributeId       
		FOR XML PATH('') ), 2 , 4000) MediaIds        
		FROM #TBL_AttributeDetails AS TBA       
		INNER JOIN  #TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))      
                                
		UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue      
		FROM #TBL_AttributeDetails TBAV       
		INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimCategoryId = TBAV.PimCategoryId  AND CTPM.PimAttributeId = TBAV.PimAttributeId       
		AND CTPM.PimAttributeId = TBAV.PimAttributeId;      
          
      
		SELECT ISNULL(ZPCP.PimCategoryProductId,0) AS PimCategoryProductId, zpp.[PimCategoryId] AS [Categoryid],zpp.[PimCategoryId],ISNULL(ZPCP.[PimProductId],0) AS PimProductId,[CategoryName],      
		CASE WHEN ZPCP.Status IS NULL THEN CAST(0 AS BIT) ELSE CAST(ZPCP.Status AS BIT) END AS [Status],      
		piv.[CategoryImage] [ImagePath],ZPCP.DisplayOrder       
          
		FROM #TBL_ProductIdTable AS zpp      
		LEFT JOIN ZnodePimCategoryProduct ZPCP ON(ZPCP.PimProductId = Zpp.PimProductId AND ZPCP.PimCategoryId = Zpp.PimCategoryId)      
		INNER JOIN (SELECT PimCategoryId,AttributeValue,AttributeCode FROM #TBL_AttributeDetails) TB      
		PIVOT(MAX([AttributeValue])       
		FOR [AttributeCode] IN([CategoryName],[IsActive],[CategoryImage])) AS Piv ON(Piv.[PimCategoryId] = zpp.[PimCategoryId])      
		ORDER BY CASE WHEN @Order_By LIKE '% DESC%' THEN CASE WHEN @OrderByDisplay = 1 THEN ZPCP.DisplayOrder       
		WHEN @OrderByDisplay = 2 THEN ZPCP.Status ELSE 1 END ELSE 1 END DESC,      
		CASE WHEN @Order_By LIKE '% ASC%' THEN CASE WHEN @OrderByDisplay = 1 THEN ZPCP.DisplayOrder      
		WHEN @OrderByDisplay = 2 THEN ZPCP.Status ELSE 1 END ELSE 1 END,zpp.RowId;      
        
     
		SELECT @RowsCount=ISNULL((SELECT top 1 countId FROM @TBL_MainList),0)     
    
      
      
         END TRY      
         BEGIN CATCH      
		SELECT ERROR_MESSAGE()      
		DECLARE @Status BIT ;      
		SET @Status = 0;      
		DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),      
		@ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimProductCategoryList @WhereClause = '+  
		CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '  
		+CAST(@LocaleId AS    
		VARCHAR(50))+',@PimProductIdInput='+CAST(@PimProductIdInput AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@RowsCount='+  
		CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));      
                        
		SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                          
          
		EXEC Znode_InsertProcedureErrorLog      
			@ProcedureName = 'Znode_GetPimProductCategoryList',      
			@ErrorInProcedure = @Error_procedure,      
			@ErrorMessage = @ErrorMessage,      
			@ErrorLine = @ErrorLine,      
			@ErrorCall = @ErrorCall;      
         END CATCH;      
     END;
	 GO
	IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderDetails')
	BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderDetails
	END
	GO
	CREATE PROCEDURE [dbo].[ZnodeReport_GetOrderDetails]
(   @BeginDate      DATE          = NULL,
    @EndDate        DATE          = NULL,
    @PortalId       VARCHAR(MAX)  = '',
    @OrderStateId   VARCHAR(MAX)  = '',
    @PayemntTypeId  VARCHAR(MAX)  = '',
    @ShippingTypeId VARCHAR(MAX)  = '',
    @CustomerName   NVARCHAR(400) = '',
    @EmailId        NVARCHAR(100) = '')
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeReport_GetOrderDetails 
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;
         Declare @DateFormateId int 
		 DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');

	    Select @DateFormateId  = DBO.Fn_GetDateTimeFormat();
         SELECT DISTINCT
			 ZOO.OrderNumber,
                ZOO.[OmsOrderID],
                ZOOD.[PortalId],
                ZOOD.[UserId],
                ZOOD.[OmsOrderStateId],
                ZOOD.[ShippingID],
                ZOOD.[PaymentTypeId],
                ZOOD.[BillingFirstName],
                ZOOD.[BillingLastName],
                ZOOD.[BillingCompanyName],
                ZOOD.[BillingStreet1],
                ZOOD.[BillingStreet2],
                ZOOD.[BillingCity],
                ZOOD.[BillingStateCode],
                ZOOD.[BillingPostalCode],
                ZOOD.[BillingCountry],
                ZOOD.[BillingPhoneNumber],
                ZOOD.[BillingEmailId],
				SUBSTRING(CAST(ZOOD.[TaxCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[TaxCost] AS VARCHAR(100)))+@RoundOffValue) as TaxCost,
				SUBSTRING(CAST(ZOOD.[ShippingCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[ShippingCost] AS VARCHAR(100)))+@RoundOffValue) as [ShippingCost],
				SUBSTRING(CAST(ZOOD.[SubTotal] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[SubTotal] AS VARCHAR(100)))+@RoundOffValue) as [SubTotal],
				SUBSTRING(CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)))+@RoundOffValue) as [DiscountAmount],
				SUBSTRING(CAST(ZOOD.[Total] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[Total] AS VARCHAR(100)))+@RoundOffValue) as [Total],
                CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
                ZOOD.[ShippingNumber],
                ZOOD.[TrackingNumber],
                ZOOD.[CouponCode],
                ZOOD.[PromoDescription],
                ZOOD.[ReferralUserId],
                ZOOD.[PurchaseOrderNumber],
                ZOOD.[OmsPaymentStateId],
                ZOOD.[WebServiceDownloadDate],
                ZOOD.[PaymentSettingID],
                ZOOD.[ShipDate],
                ZOOD.[ReturnDate],
                ZOTOD.[SalesTax],
                ZOTOD.[VAT],
                ZOTOD.[GST],
                ZOTOD.[PST],
                ZOTOD.[HST],
                P.[StoreName] AS 'StoreName',
                OS.[OrderStateName] AS 'OrderStatus',
                PT.[Name] AS 'PaymentTypeName',
                ST.[Name] AS 'ShippingTypeName',
			 ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
         FROM ZNodeOmsOrder ZOO
              INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId
                                                      AND IsActive = 1)
              INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
              LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
              LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                                    (
                                                        SELECT TOP 1 1
                                                        FROM ZnodeOmsOrderLineItems ZOOLI
                                                        WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId
                                                              AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId
                                                    ))
              LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)
              LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
              LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
              LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
			  LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )
         WHERE
	    ((EXISTS
               (
                   SELECT TOP 1 1
                   FROM dbo.split(@PortalId, ',') SP
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item
                         OR @PortalId = ''
               )))
              AND ((EXISTS
                   (
                       SELECT TOP 1 1
                       FROM dbo.split(@OrderStateId, ',') SP
                       WHERE CAST(ZOOD.[OmsOrderStateId] AS VARCHAR(100)) = SP.Item
                             OR @OrderStateId = ''
                   )))
		  AND ((EXISTS
				(
				    SELECT TOP 1 1
				    FROM dbo.split(@PayemntTypeId, ',') SP
				    WHERE CAST(ZOOD.[PaymentTypeId] AS VARCHAR(100)) = SP.Item
					   OR @PayemntTypeId = '' OR ZOOD.PaymentTypeId IS NULL
				)))
		  AND ((EXISTS
				(
				    SELECT TOP 1 1
				    FROM dbo.split(@ShippingTypeId, ',') SP
				    WHERE CAST(ST.ShippingTypeID AS VARCHAR(100)) = SP.Item
					   OR @ShippingTypeId = ''
				)))
		  AND (ZOOD.[BillingFirstName]+' '+ISNULL(ZOOD.[BillingLastName], '') LIKE '%'+@CustomerName+'%'
				OR @CustomerName = '')
		  AND (ZOOD.[BillingEmailId] LIKE '%'+@EmailId+'%'
				OR @EmailId = '')
		  AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE
												WHEN @BeginDate IS NULL
												THEN CAST(ZOOD.OrderDate AS DATE)
												ELSE @BeginDate
											 END AND CASE
													   WHEN @EndDate IS NULL
													   THEN CAST(ZOOD.OrderDate AS DATE)
													   ELSE @EndDate
												    END);

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@OrderStateId='+@OrderStateId+',@PayemntTypeId='+@PayemntTypeId+',@ShippingTypeId='+@ShippingTypeId+',@CustomerName='+@CustomerName+',@EmailId='+@EmailId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
	 GO
	 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderLineItemByOrderId')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderLineItemByOrderId
END
GO
CREATE  PROCEDURE [dbo].[ZnodeReport_GetOrderLineItemByOrderId](@OmsOrderId INT)
AS 
    -- Summary :- This Procedure is Used to get the Order line item details 
    -- Unit Testing 
    -- EXEC  ZnodeReport_GetOrderLineItemByOrderId 5
  BEGIN
    SET NOCOUNT ON;

			DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
			DECLARE @RoundOffValue1 INT= Dbo.Fn_GetDefaultValue('InventoryRoundOff');

			SELECT OmsOrderLineItemsId,
					ParentOmsOrderLineItemsId,
					OrderLineItemRelationshipTypeId,
					ZOOD.OmsOrderId OmsOrderDetailsId,
					ZO.OrderNumber,
					OmsOrderShipmentId,
					Sku,
					ProductName,
					[Description],
					SUBSTRING(CAST(Quantity AS VARCHAR(100)), 1, CHARINDEX('.', CAST(Quantity AS VARCHAR(100)))+@RoundOffValue1) as Quantity,
					SUBSTRING(CAST(Price AS VARCHAR(100)),1, CHARINDEX('.', CAST(Price AS VARCHAR(100)))+@RoundOffValue) as Price,
					SUBSTRING(CAST([Weight] AS VARCHAR(100)), 1, CHARINDEX('.', CAST([Weight] AS VARCHAR(100)))+@RoundOffValue1) as [Weight],
					DownloadLink,
					SUBSTRING(CAST(ZOLI.DiscountAmount AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOLI.DiscountAmount AS VARCHAR(100)))+@RoundOffValue) as DiscountAmount,
					ShipSeparately,
					ZOLI.ShipDate,
					ZOLI.ReturnDate,
					SUBSTRING(CAST(ZOLI.ShippingCost AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOLI.ShippingCost AS VARCHAR(100)))+@RoundOffValue) as ShippingCost,
					ZOLI.PromoDescription,
					TransactionNumber,
					PaymentStatusId,
					ZOLI.TrackingNumber,
					IsAutoGeneratedTracking,
					OrderLineItemStateId,
					IsRecurringBilling,
					RecurringBillingPeriod,
					RecurringBillingCycles,
					RecurringBillingFrequency,
					RecurringBillingAmount,
					AppliedPromo,
					CouponsApplied,
					ZOLI.ExternalId,
					ZOLI.IsActive,
					ZOLI.CreatedBy,
					ZOLI.CreatedDate,
					ZOLI.ModifiedBy,
					ZOLI.ModifiedDate,
					ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol,
					SUBSTRING(CAST((	Quantity *Price) AS VARCHAR(100)),1, CHARINDEX('.', CAST((	Quantity *Price) AS VARCHAR(100)))+@RoundOffValue) as SubTotal,
				    [dbo].[Fn_GetDefaultPriceRoundOff](SUm(	Quantity *Price)OVER()) GrandTotal
			FROM ZnodeOmsorderLineItems ZOLI 
			LEFT JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderDetailsId = ZOLI.OmsOrderDetailsId)
			LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)
			LEFT JOIN ZnodeOmsOrder ZO ON ZOOD.OmsOrderId =ZO.OmsOrderId
			WHERE ZOOD.OmsOrderId = @OmsOrderId
			AND zood.IsActive = 1 
			and Quantity > 0 
			AND ZOLI.RmaReasonForReturnId  IS NULL ;
     END;
	 GO
	IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_MergeOmsSavedCartLineItems')
	BEGIN 
	DROP PROCEDURE Znode_MergeOmsSavedCartLineItems
	END
	GO
	
CREATE PROCEDURE [dbo].[Znode_MergeOmsSavedCartLineItems] 
(
 @OmsSavedCartId INT  
,@OldOmsSavedCartId INT 
,@UserId  INT 
,@Status  BIT = 0  OUT
)
AS 
BEGIN 
 BEGIN TRY 
 SET NOCOUNT ON 

     DECLARE @AddOnOrderLineItemRelationshipTypeId INT = (SELECT TOP 1 OrderLineItemRelationshipTypeId 
															FROM ZnodeOmsOrderLineItemRelationshipType
															WHERE Name = 'Addons')
	 DECLARE @TBL_OmsSavedCartOld TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn INT ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 DECLARE @TBL_OmsSavedCartNew TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn INT ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 
	 SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemOld
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE OmsSavedCartId = @OldOmsSavedCartId 


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemOld
	 FROM ZnodeOmsPersonalizeCartItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)

	  SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemNew
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE OmsSavedCartId = @OmsSavedCartId 


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemNew
	 FROM ZnodeOmsPersonalizeCartItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)

	 

	 INSERT INTO @TBL_OmsSavedCartOld (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsSavedCartLineItemId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemOld TBL_B WHERE TBL_B.OmsSavedCartLineItemId = ISNULL(TBL_A.ParentOmsSavedCartLineItemId,0)  ) ParentSKU
					, ParentOmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemOld TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	

	 ;With Cte_UpdateOld AS 
	 (
		SELECT ParentOmsSavedCartLineItemId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsSavedCartLineItemId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemOld a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 INNER JOIN Cte_UpdateOld TBL_ON ON (TBL_ON.ParentOmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )
	   
     UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = TBL_ON.PersonalizeCode
		,TBL_O.PersonalizeValue =  TBL_ON.PersonalizeValue
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 INNER JOIN #ZnodeOmsPersonalizeCartItemOld TBL_ON ON (TBL_ON.OmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )

	  INSERT INTO @TBL_OmsSavedCartNew (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsSavedCartLineItemId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemNew TBL_B WHERE TBL_B.OmsSavedCartLineItemId = ISNULL( TBL_A.ParentOmsSavedCartLineItemId,0)   ) ParentSKU
					, ParentOmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	 ;With Cte_UpdateNew AS 
	 (
		SELECT ParentOmsSavedCartLineItemId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsSavedCartLineItemId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartNew TBL_O 
	 INNER JOIN Cte_UpdateNew TBL_ON ON (TBL_ON.ParentOmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )
	   

	    
    
	 UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = TBL_ON.PersonalizeCode
		,TBL_O.PersonalizeValue =  TBL_ON.PersonalizeValue
	 FROM @TBL_OmsSavedCartNew TBL_O 
	 INNER JOIN #ZnodeOmsPersonalizeCartItemNew TBL_ON ON (TBL_ON.OmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )



	 UPDATE a 
	 SET  a.Quantity =  a.Quantity+d.Quantity 
	 FROM ZnodeOmsSavedCartLineItem a 
	 INNER JOIN @TBL_OmsSavedCartNew b ON (b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	 INNER JOIN @TBL_OmsSavedCartOld c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1')) 
	 INNER JOIN #ZnodeOmsSavedCartLineItemOld d ON (d.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId)
	 
	 UPDATE  a
	 SET a.OmsSavedCartId = @OmsSavedCartId
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_OmsSavedCartOld b 
	 INNER JOIN @TBL_OmsSavedCartNew c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1'))
	 WHERE b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_OmsSavedCartOld b 
	 INNER JOIN @TBL_OmsSavedCartNew c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1'))
	 WHERE b.ParentOmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	 AND OmsSavedCartId = @OldOmsSavedCartId 


	 DELETE FROM ZnodeOmsSavedCartLineItem WHERE OmsSavedCartId = @OldOmsSavedCartId 

	 ;with CTE_UpdateOrder 
	 AS 
	 (
	   SELECT Sequence,  ROW_NUMBER()Over(order BY OmsSavedCartLineItemId ASC) RowId
	   FROM ZnodeOmsSavedCartLineItem
	   WHERE  OmsSavedCartId = @OmsSavedCartId
	 
	 ) 
	 UPDATE CTE_UpdateOrder 
	 SET Sequence =RowId
	 
	 SET @Status = 1 

 END TRY 
 BEGIN CATCH 
  SELECT ERROR_MESSAGE()
   SET @Status = 0
 END CATCH 
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPimProductAttributeValues')
BEGIN 
	DROP PROCEDURE Znode_GetPimProductAttributeValues
END
GO

CREATE   PROCEDURE [dbo].[Znode_GetPimProductAttributeValues]
(
    @ChangeFamilyId INT = 0,
    @PimProductId   INT = 0,
    @LocaleId       INT = 0,
    @IsCopy         BIT = 0
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and Product attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC Znode_GetPimProductAttributeValues 0, 16,1,0

	 SELECT * fROM znodePimAttribute WHERE IsShowOnGrid = 1 
	 ROLLBACK TRAN

*/	 
     BEGIN
	     BEGIN TRAN PimProductAttributeValues
         BEGIN TRY
             DECLARE  @V_LocaleId INT= @LocaleId, @LocaleIdDefault INT= dbo.Fn_GetDefaultLocaleId(), @PimAttributeFamilyId  INT; 
			 --DECLARE @PimAttributeId VARCHAR(max),@PimProductIds  VARCHAR(max) 
             
			 DECLARE @TBL_PimAttribute TABLE (PimAttributeId INT ,ParentPimAttributeId INT ,AttributeTypeId INT ,AttributeCode VARCHAR(600),IsRequired BIT,IsLocalizable BIT,IsFilterable BIT
						,IsSystemDefined BIT,IsConfigurable BIT ,IsPersonalizable BIT,DisplayOrder INT ,HelpDescription NVARCHAR(max),IsCategory BIT,IsHidden BIT,CreatedDate DATETIME ,ModifiedDate DATETIME 
						,AttributeName NVARCHAR(max) ,AttributeTypeName VARCHAR(600) )
			 
			 DECLARE @TBL_PimAttributeDefault TABLE (PimAttributeId INT,AttributeDefaultValueCode VARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder int,PimAttributeDefaultValueId INT )
			 CREATE TABLE #TBL_AttributeValueDetail  (PimProductId INT , AttributeValue NVARCHAR(max),AttributeCode VARCHAR(300),PimAttributeId INT, AttributeDefaultValue NVARCHAR(max))
			 DECLARE @TBL_AttributeFamily TABLE (PimAttributeFamilyId INT ,FamilyCode VARCHAR(600),IsSystemDefined BIT ,IsDefaultFamily BIT ,IsCategory BIT ,AttributeFamilyName NVARCHAR(max))
			 DECLARE @TBL_MultiSelectAttribute TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			 CREATE TABLE #TBL_AttributeValueFinale  (PimProductId INT , AttributeValue NVARCHAR(max),AttributeCode VARCHAR(300),PimAttributeId INT, AttributeDefaultValueCode NVARCHAR(MAX))
			 INSERT INTO @TBL_MultiSelectAttribute (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM [dbo].[Fn_GetProductMultiSelectAttributes] ()
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()
			   --- Get the default family id 
			 IF @ChangeFamilyId = 0 
			   BEGIN 			    
				SET @PimAttributeFamilyId = ISNULL((SELECT TOP 1 PimAttributeFamilyId FROM ZnodePimProduct ZPP WHERE PimProductId = @PimProductId ), dbo.Fn_GetDefaultPimProductFamilyId() )
			   END   
		     ELSE 
			   BEGIN 
				SET @PimAttributeFamilyId = @ChangeFamilyId
			   END 
			 
			-- ;With Cte_AttributeIdss AS 
			--(SELECT PimAttributeId FROM ZnodePimFamilyGroupMapper  ZPFGM 
			--WHERE PimAttributeFamilyId = @PimAttributeFamilyId 
			--AND NOT EXISTS
			--(SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute ZPCPA WHERE ZPCPA.PimAttributeId = ZPFGM.PimAttributeId AND ZPCPA.PimProductId = @PimProductId)
   --            UNION  
   --             SELECT PimAttributeId FROM ZnodePimAttributeValue ZPAV WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimAttribute ZPA WHERE ZPA.PimAttributeId = ZPAV.PimAttributeId AND ZPA.IsPersonalizable = 1 ) 
			--  AND ZPAV.PimProductId = @PimProductId AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute ZPCPA WHERE ZPCPA.PimAttributeId = ZPAV.PimAttributeId AND ZPCPA.PimProductId = @PimProductId))
			   
			--  SELECT  @PimAttributeId = SUBSTRING ((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM Cte_AttributeIdss FOR XML PATH ('')),2,4000)
			 
			  DECLARE @PimAttributeId TransferId , @PimProductId_new TransferId

				INSERT INTO @PimAttributeId(Id)
				SELECT PimAttributeId FROM ZnodePimFamilyGroupMapper  ZPFGM 
				WHERE PimAttributeFamilyId = @PimAttributeFamilyId AND ISNULL(PimAttributeId,0) <> 0
				AND NOT EXISTS
				(SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute ZPCPA WHERE ZPCPA.PimAttributeId = ZPFGM.PimAttributeId AND ZPCPA.PimProductId = @PimProductId)
				UNION  
				SELECT PimAttributeId FROM ZnodePimAttributeValue ZPAV WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimAttribute ZPA WHERE ZPA.PimAttributeId = ZPAV.PimAttributeId AND ZPA.IsPersonalizable = 1 ) 
				AND ZPAV.PimProductId = @PimProductId AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute ZPCPA WHERE ZPCPA.PimAttributeId = ZPAV.PimAttributeId AND ZPCPA.PimProductId = @PimProductId)


			  INSERT INTO @TBL_PImAttribute (PimAttributeId,ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable
			  ,IsSystemDefined,IsConfigurable,IsPersonalizable,DisplayOrder,HelpDescription,IsCategory,IsHidden,CreatedDate,ModifiedDate,AttributeName ,AttributeTypeName )
			  EXEC [dbo].[Znode_GetPimAttributesDetailsforPimProduct] @PimAttributeId,@LocaleId

			  INSERT INTO @PimProductId_new	
              SELECT @PimProductId


			  INSERT INTO #TBL_AttributeValueDetail (PimProductId,AttributeValue,AttributeCode,PimAttributeId,AttributeDefaultValue)
			  EXEC [dbo].[Znode_GetProductsAttributeValue_newTesting]  @PimProductId_new , @PimAttributeId ,@LocaleId
			
	

			  INSERT INTO @TBL_PimAttributeDefault (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
			  EXEC [dbo].[Znode_GetAttributeDefaultValueLocaleNew_TansferId] @PimAttributeId,@LocaleId


			  INSERT INTO @TBL_AttributeFamily (PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName)
			  EXEC Znode_GetFamilyValueLocale  @PimAttributeFamilyId, @LocaleId 

			 
				--  update the media path 
			  ;WITH Cte_ProductMedia
               AS (
			   SELECT TBA.PimProductId , TBA.PimAttributeId , SUBSTRING( ( SELECT ','+AttributeValue
			   FROM  #TBL_AttributeValueDetail AS TBAI
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue ,  SUBSTRING( (SELECT ','+CAST(MediaID AS VARCHAR(200)) 
			  FROM  ZnodePimAttributeValue tr  
			  INNER JOIN ZnodePimProductAttributeMedia CTPM ON CTPM.PimAttributeValueId  = tr.PimAttributeValueId 
			  WHERE tr.PimAttributeId = TBA.PimAttributeId AND tr.PimProductId = TBA.PimProductId 
			  AND CTPM.LocaleId =@LocaleId FOR XML PATH('') ) ,2, 4000) MediaIds  
			   FROM #TBL_AttributeValueDetail AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                    
						  
	          UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue+'~'+CTPM.MediaIds 
			  FROM #TBL_AttributeValueDetail TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;
		
				-- IF IsCopy Is True then Unique value are blank 
			   ;With Cte_UniqueAttributeId AS  
			   (
			   SELECT c.PimAttributeId 
			   FROM ZnodePimAttributeValidation AS c 
			   INNER JOIN ZnodeAttributeInputValidation AS d ON (c.InputValidationId = d.InputValidationId)
			   WHERE d.Name = 'UniqueValue' AND c.Name = 'true' AND @Iscopy = 1 GROUP BY c.PimAttributeId
			   )
	
			   UPDATE TBAV SET AttributeValue = '' FROM #TBL_AttributeValueDetail  TBAV INNER JOIN Cte_UniqueAttributeId CTUA ON (CTUA.PimAttributeId = TBAV.PimAttributeId)

			   INSERT INTO #TBL_AttributeValueFinale (PimProductId  , AttributeValue ,AttributeCode ,PimAttributeId,AttributeDefaultValueCode)

			   SELECT DISTINCT  PimProductId  ,AttributeValue ,AttributeCode ,PimAttributeId,AttributeDefaultValue
			   FROM #TBL_AttributeValueDetail TBLA 

			  UPDATE #TBL_AttributeValueFinale
			  SET AttributeValue = AttributeDefaultValueCode
			  FROM #TBL_AttributeValueFinale AVF
			  WHERE EXISTS (SELECT TOP 1 1 FROM 
			  Fn_GetDefaultAttributeId() GDA WHERE AVF.AttributeCode = GDA.AttributeCode)


			   SELECT TBAF.PimAttributeFamilyId,FamilyCode,TBPA.PimAttributeId,PimAttributeGroupId,TBPA.AttributeTypeId,AttributeTypeName,TBPA.AttributeCode,
						IsRequired,IsLocalizable,IsFilterable,AttributeName, TBAV.AttributeValue  ,PimAttributeValueId,TBADV.PimAttributeDefaultValueId,
						TBADV.AttributeDefaultValueCode ,AttributeDefaultValue AS AttributeDefaultValue,ISNULL(NULL, 0) AS RowId,ISNULL(IsEditable, 1) AS IsEditable,
						ZAIV.ControlName,ZAIV.Name AS ValidationName,ZAIVR.ValidationName AS SubValidationName,ZAIVR.RegExp,ZPAV.Name AS ValidationValue,
						CAST(CASE WHEN ZAIVR.RegExp IS NULL THEN 0 ELSE 1 END AS BIT) AS IsRegExp,HelpDescription
				FROM @TBL_PimAttribute  TBPA 
				LEFT JOIN #TBL_AttributeValueFinale  TBAV ON (TBAV.PimAttributeId = TBPA.PimAttributeId)
				LEFT JOIN @TBL_PimAttributeDefault TBADV ON (TBADV.PimAttributeId = TBPA.PimAttributeId)
				LEFT JOIN ZnodePimAttributeValidation AS ZPAV ON(ZPAV.PimAttributeId = TBPA.PimAttributeId)
				LEFT JOIN ZnodeAttributeInputValidation AS ZAIV ON(ZPAV.InputValidationId = ZAIV.InputValidationId)
				LEFT JOIN ZnodeAttributeInputValidationRule AS ZAIVR ON(ZPAV.InputValidationRuleId = ZAIVR.InputValidationRuleId)
				LEFT JOIN ZnodePimAttributeValue ZPV ON (ZPV.PimProductId = TBAV.PimProductId AND ZPV.PimAttributeId = TBAV.PimAttributeId)
				LEFT JOIN @TBL_AttributeFamily TBAF ON (TBAF.PimAttributeFamilyId = @PimAttributeFamilyId)
				LEFT JOIN ZnodePimFamilyGroupMapper ZPFG ON (ZPFG.PimAttributeFamilyId = TBAF.PimAttributeFamilyId AND ZPFG.PimAttributeId = TBPA.PimAttributeId)
				WHERE TBPA.AttributeCode <> 'PublishStatus'
				ORDER BY TBPA.DisplayOrder,TBPA.PimAttributeId,	TBADV.DisplayOrder
			
		 COMMIT TRAN PimProductAttributeValues;
         END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimProductAttributeValues @ChangeFamilyId='+cast (@ChangeFamilyId AS VARCHAR(50))
		    +',@PimProductId = '+cast (@PimProductId AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@IsCopy='+CAST(@IsCopy AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  ROLLBACK TRAN PimProductAttributeValues;

          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetPimProductAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCatalogList')
BEGIN 
DROP PROCEDURE Znode_GetCatalogList
END
GO

CREATE PROCEDURE [dbo].[Znode_GetCatalogList]
(
	@WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT
)
AS 
/*
	 Summary :- This Procedure is used to get the publish status of the catalog 
	 Unit Testig 
	 EXEC  Znode_GetCatalogList '',100,1,'',0
	  EXEC  Znode_GetCatalogList null,100,1,'',0
*/
   BEGIN 
		BEGIN TRY 
		SET NOCOUNT ON 

		 DECLARE @SQL  NVARCHAR(max) 
		 DECLARE @TBL_CatalogId TABLE (PimCatalogId int, PublishCatalogLogId int,CatalogName VARCHAR(max),PublishStatus VARCHAR(300),RowId INT ,CountId INT,PublishCreatedDate DATETIME ,PublishModifiedDate DATETIME,PublishCategoryCount INT ,PublishProductCount INT)
	 
		 SET @SQL = '


		DECLARE @TBL_PublishProductId TABLE (PublishProductId int,PublishCatalogId int )
		INSERT INTO @TBL_PublishProductId
		SELECT COUNT(PublishProductId ),PublishCatalogId
		FROM ZnodePublishCategoryProduct a
		WHERE PublishCatalogId IN  (select PublishCatalogId from ZnodePublishCatalog b where a.PublishCatalogId = b.PublishCatalogId)
		GROUP BY PublishCatalogId 

		DECLARE @TBL_PublishCategoryId TABLE (PublishCategoryId int,PublishCatalogId int )
		INSERT INTO @TBL_PublishCategoryId
		SELECT COUNT(DISTINCT PublishCategoryId ),PublishCatalogId
		FROM ZnodePublishCategoryProduct ZPC
		WHERE PublishCatalogId IN  (select PublishCatalogId from ZnodePublishCatalog b where ZPC.PublishCatalogId = b.PublishCatalogId)
		AND ZPC.PublishCategoryId  <> 0 and ZPC.PublishCategoryId is not null
		GROUP BY PublishCatalogId

		;With Cte_MaxPublish AS 
		(
			 SELECT max(PublishCatalogLogId) PublishCatalogLogId,PimCatalogId
			 FROM ZnodePublishCatalogLog ZPCL   
			 GROUP BY PimCatalogId
		)
		,Cte_CatalogLog AS (
		SELECT ZPC.CatalogName CatalogName, PublishCatalogLogId PublishCatalogLogId,  TYU.DisplayName   PublishStatus ,ZPC.PimCatalogId,ZPCL.CreatedDate AS PublishCreatedDate,ZPCL.ModifiedDate AS PublishModifiedDate,
		
		ISNULL(PC.PublishCategoryId,0) 
	 
		PublishCategoryCount,ISNULL(a.PublishProductId,0) 
		PublishProductCount
		FROM ZnodePimCatalog ZPC 
		LEFT JOIN ZnodePublishCatalogLog ZPCL  ON ( EXISTS (SELECT TOP 1 1 FROM Cte_MaxPublish CTE 											
		WHERE CTE.PimCatalogId = ZPC.PimCatalogId AND CTE.PublishCatalogLogId =  ZPCL.PublishCatalogLogId) )	
		LEFT JOIN ZnodePublishState TYU ON (TYU.PublishStateId = ZPCL.PublishStateId )
		LEFT JOIN  @TBL_PublishProductId a on (zpcl.PublishCatalogId = a.PublishCatalogId)
		LEFT JOIN  @TBL_PublishCategoryId PC ON (PC.PublishCatalogId = zpcl.PublishCatalogId))

	     ,Cte_PublishStatus 
		 AS (
		 SELECT PimCatalogId, PublishCatalogLogId, CatalogName, PublishStatus,PublishCreatedDate,PublishModifiedDate,PublishCategoryCount,PublishProductCount,
		 '+[dbo].[Fn_GetPagingRowId](@Order_BY,'PublishCatalogLogId DESC')+' , Count(*)Over() CountId FROM Cte_CatalogLog
         WHERE 1=1 '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+' )
	 
		 SELECT PimCatalogId, PublishCatalogLogId,CatalogName,PublishStatus,RowId,CountId,PublishCreatedDate,PublishModifiedDate,PublishCategoryCount,PublishProductCount
		 FROM Cte_PublishStatus 
		 '+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)+' '
	

	     PRINT @sql 
		 INSERT INTO @TBL_CatalogId 
		 EXEC (@SQL)

		 SELECT  PimCatalogId,PublishCatalogLogId,CatalogName,PublishStatus,PublishCreatedDate,PublishModifiedDate,PublishCategoryCount,PublishProductCount
		 FROM @TBL_CatalogId

		 SET @RowsCount = ISNULL((SELECT TOP 1 COUNTID FROM @TBL_CatalogId),0)
	 

	 
		 END TRY 
		 BEGIN CATCH 
			DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			@ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCatalogList @WhereClause = '''+ISNULL(@WhereClause,'''''')+''',@Rows='+ISNULL(CAST(@Rows AS
			VARCHAR(50)),'''''')+',@PageNo='+ISNULL(CAST(@PageNo AS VARCHAR(50)),'''')+',@Order_BY='''+ISNULL(@Order_BY,'''''')+''',@RowsCount='+ISNULL(CAST(@RowsCount AS VARCHAR(50)),'''')
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetCatalogList',
					@ErrorInProcedure = 'Znode_GetCatalogList',
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
		 END CATCH 
   END

  GO
  
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_MergeOmsSavedCartLineItems')
BEGIN 
	DROP PROCEDURE Znode_MergeOmsSavedCartLineItems
END
GO

CREATE PROCEDURE [dbo].[Znode_MergeOmsSavedCartLineItems] 
(
 @OmsSavedCartId INT  
,@OldOmsSavedCartId INT 
,@UserId  INT 
,@Status  BIT = 0  OUT
)
AS 
BEGIN 
 BEGIN TRY 
 SET NOCOUNT ON 

     DECLARE @AddOnOrderLineItemRelationshipTypeId INT = (SELECT TOP 1 OrderLineItemRelationshipTypeId 
															FROM ZnodeOmsOrderLineItemRelationshipType
															WHERE Name = 'Addons')
	 DECLARE @TBL_OmsSavedCartOld TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn NVARCHAR(2000) ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 DECLARE @TBL_OmsSavedCartNew TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn NVARCHAR(2000) ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 
	 SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemOld
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE OmsSavedCartId = @OldOmsSavedCartId 


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemOld
	 FROM ZnodeOmsPersonalizeCartItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)

	  SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemNew
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE OmsSavedCartId = @OmsSavedCartId 


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemNew
	 FROM ZnodeOmsPersonalizeCartItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)

	 

	 INSERT INTO @TBL_OmsSavedCartOld (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsSavedCartLineItemId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemOld TBL_B WHERE TBL_B.OmsSavedCartLineItemId = ISNULL(TBL_A.ParentOmsSavedCartLineItemId,0)  ) ParentSKU
					, ParentOmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemOld TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	

	 ;With Cte_UpdateOld AS 
	 (
		SELECT ParentOmsSavedCartLineItemId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsSavedCartLineItemId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemOld a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 INNER JOIN Cte_UpdateOld TBL_ON ON (TBL_ON.ParentOmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )
	   
     UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = TBL_ON.PersonalizeCode
		,TBL_O.PersonalizeValue =  TBL_ON.PersonalizeValue
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 INNER JOIN #ZnodeOmsPersonalizeCartItemOld TBL_ON ON (TBL_ON.OmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )

	  INSERT INTO @TBL_OmsSavedCartNew (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsSavedCartLineItemId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemNew TBL_B WHERE TBL_B.OmsSavedCartLineItemId = ISNULL( TBL_A.ParentOmsSavedCartLineItemId,0)   ) ParentSKU
					, ParentOmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	 ;With Cte_UpdateNew AS 
	 (
		SELECT ParentOmsSavedCartLineItemId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsSavedCartLineItemId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartNew TBL_O 
	 INNER JOIN Cte_UpdateNew TBL_ON ON (TBL_ON.ParentOmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )
	   

	    
    
	 UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = TBL_ON.PersonalizeCode
		,TBL_O.PersonalizeValue =  TBL_ON.PersonalizeValue
	 FROM @TBL_OmsSavedCartNew TBL_O 
	 INNER JOIN #ZnodeOmsPersonalizeCartItemNew TBL_ON ON (TBL_ON.OmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )



	 UPDATE a 
	 SET  a.Quantity =  a.Quantity+d.Quantity 
	 FROM ZnodeOmsSavedCartLineItem a 
	 INNER JOIN @TBL_OmsSavedCartNew b ON (b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	 INNER JOIN @TBL_OmsSavedCartOld c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1')) 
	 INNER JOIN #ZnodeOmsSavedCartLineItemOld d ON (d.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId)
	 
	 UPDATE  a
	 SET a.OmsSavedCartId = @OmsSavedCartId
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_OmsSavedCartOld b 
	 INNER JOIN @TBL_OmsSavedCartNew c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1'))
	 WHERE b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_OmsSavedCartOld b 
	 INNER JOIN @TBL_OmsSavedCartNew c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1'))
	 WHERE b.ParentOmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	 AND OmsSavedCartId = @OldOmsSavedCartId 


	 DELETE FROM ZnodeOmsSavedCartLineItem WHERE OmsSavedCartId = @OldOmsSavedCartId 

	 ;with CTE_UpdateOrder 
	 AS 
	 (
	   SELECT Sequence,  ROW_NUMBER()Over(order BY OmsSavedCartLineItemId ASC) RowId
	   FROM ZnodeOmsSavedCartLineItem
	   WHERE  OmsSavedCartId = @OmsSavedCartId
	 
	 ) 
	 UPDATE CTE_UpdateOrder 
	 SET Sequence =RowId
	 
	 SET @Status = 1 

 END TRY 
 BEGIN CATCH 
  SELECT ERROR_MESSAGE()
   SET @Status = 0
 END CATCH 
END 

GO
  
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemBundle')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemBundle
END
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemBundle]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, BundleProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdBundle, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE BundleProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, BundleProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 
		 --select * from #tempoi

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.BundleProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 


		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon	

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
	 

		 DECLARE @parenTofAddon INT  = 0 
		 SET @parenTofAddon = (SELECT TOP 1 ParentOmsSavedCartLineItemId 
		 FROM #OldValue a
		 WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  )

		 DELETE FROM #OldValue WHERE ParentOmsSavedCartLineItemId <> @parenTofAddon  AND ParentOmsSavedCartLineItemId IS NOT NULL  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId =@parenTofAddon AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		 END 
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		   ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 

		END 
		 

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		    DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		 
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  AddOnQuantity FROM @SaveCartLineItemType ty  ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


		 UPDATE Ab SET ab.Quantity = a.Quantity   
         FROM ZnodeOmsSavedCartLineItem a  
         INNER JOIN ZnodeOmsSavedCartLineItem ab ON (ab.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)  
         INNER JOIN @SaveCartLineItemType b ON (a.OmsSavedCartId = b.OmsSavedCartId  )   
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdBundle  

		END 
	    ELSE 
		BEGIN 
			
		UPDATE #tempoi
			SET ParentSKU = (SELECT TOP 1 SKU FROM #tempoi WHERE OrderLineItemRelationshipTypeID IS NULL )
			WHERE OrderLineItemRelationshipTypeID  = @OrderLineItemRelationshipTypeIdAddon 
			AND EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) 
		   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
   
	DELETE FROM #yuuete WHERE Quantity <=0  

	;WITH Add_Dup AS
	(
		SELECT  Min(NewRowId)NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID 
		FROM  #yuuete
		GROUP BY SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID
		HAVING OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon	
	)

	DELETE FROM #yuuete
	WHERE NOT EXISTS (SELECT TOP 1 1 FROM Add_Dup WHERE Add_Dup.NewRowId = #yuuete.NewRowId)
	AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID IN ( @OrderLineItemRelationshipTypeIdAddon , @OrderLineItemRelationshipTypeIdBundle)   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
      
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID   
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL  
	AND  EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId ) 
  
  --------------------------------------------------------------------------------------------------------

   ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )

	UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon   
	AND  EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId ) 
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 


 -----------------------------------------------------------------------------------------------------

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( CASE WHEN EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) THEN 0 ELSE 1 END = b.id OR b.Id = 1  ))  
    INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1
    WHERE ( CASE WHEN EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) THEN 0 ELSE 1 END = ISNULL(a.ParentOmsSavedCartLineItemId,0) OR ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  
   -- SELECT * FROM #Cte_newAddon

   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	
    -- SELECT * FROM ZnodeOmsSavedCartLineItem WHERE OmsSavedCartId = 1709
  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE Ab SET ab.Quantity = a.Quantity   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN ZnodeOmsSavedCartLineItem ab ON (ab.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)  
    INNER JOIN @SaveCartLineItemType b ON (a.OmsSavedCartId = b.OmsSavedCartId  )   
    WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdBundle  
  
    

    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS not nULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem	WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 
END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemConfigurable')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemConfigurable
END
GO
--DROP PROC Znode_InsertUpdateSaveCartLineItemConfigurable

CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemConfigurable]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, ConfigurableProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdConfigurable, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE ConfigurableProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, ConfigurableProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.ConfigurableProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

	

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue a  WHERE a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId IN (SELECT ParentOmsSavedCartLineItemId FROM @parenTofAddon)AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		    AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END  
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 

		END 

		


		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		  IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		    DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		 
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
	
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon
		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  AddOnQuantity FROM @SaveCartLineItemType ty  ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )   
	
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
    AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )

	---------------------------------------------------------------------------------------------------------------------

	 ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
	-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    ) 

	UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon     
    AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 
 
	---------------------------------------------------------------------------------------------------------------------------
    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId  )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1 
	WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET  
    --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 

    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId  and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS not nULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 




END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemGroup')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemGroup
END
GO
--DROP PROC Znode_InsertUpdateSaveCartLineItemGroup

CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemGroup]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, GroupProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdGroup, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE GroupProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, GroupProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.GroupProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

		

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue a
		 WHERE a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  
		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 

		  IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId IN (SELECT ParentOmsSavedCartLineItemId FROM @parenTofAddon)AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		     AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		   ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
			 BEGIN 
			   DELETE FROM #OldValue
			 END  
		END 

	


		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		 
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 
		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon

		  UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  AddOnQuantity FROM @SaveCartLineItemType ty  ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	    --select * from #yuuete
			
			 
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU, OrderLineItemRelationshipTypeId 
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeId
	HAVING SKU = ParentSKU AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
   --select * from VTRET

    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID	  )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  
  -----------------------------------------------------------------------------------------------------------------------------------

  	 ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID	  )

	 UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon   
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 


----------------------------------------------------------------------------------------------------------------------------

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1
	WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET  
    --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	
   
  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS not nULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem	WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 




END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemQuantity')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemQuantity
END
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemQuantity](
	  @CartLineItemXML xml, @UserId int,@Status bit OUT )
AS 
   /* 
    Summary: THis Procedure is USed to save and edit the saved cart line item      
    Unit Testing 
	begin tran  
    Exec Znode_InsertUpdateSaveCartLineItem @CartLineItemXML= '<ArrayOfSavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>BlueGreenYellow</SKU>
    <Quantity>1.000000</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>1</Sequence>
    <AddonProducts>YELLOW</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts>GREEN</ConfigurableProducts>
  </SavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>ap1534</SKU>
    <Quantity>1.0</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>2</Sequence>
    <AddonProducts >PINK</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts />
    <PersonaliseValuesList>Address~Hello</PersonaliseValuesList>
  </SavedCartLineItemModel>
</ArrayOfSavedCartLineItemModel>' , @UserId=1 ,@Status=0
	rollback tran
*/
BEGIN
	BEGIN TRAN InsertUpdateSaveCartLineItem;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		DECLARE @AddOnQuantity numeric(28, 6)= 0;
		DECLARE @IsAddProduct   BIT = 0 
		DECLARE @OmsSavedCartLineItemId INT = 0
		DECLARE @TBL_SavecartLineitems TABLE
		( 
			RowId int , OmsSavedCartLineItemId int, ParentOmsSavedCartLineItemId int, OmsSavedCartId int, SKU nvarchar(600), Quantity numeric(28, 6), OrderLineItemRelationshipTypeID int, CustomText nvarchar(max), 
			CartAddOnDetails nvarchar(max), Sequence int, AddOnValueIds varchar(max), BundleProductIds varchar(max), ConfigurableProductIds varchar(max), GroupProductIds varchar(max), PersonalisedAttribute XML, 
			AutoAddon varchar(max), OmsOrderId int, ItemDetails nvarchar(max),
			Custom1	nvarchar(max),Custom2 nvarchar(max),Custom3 nvarchar(max),Custom4
			nvarchar(max),Custom5 nvarchar(max),GroupId NVARCHAR(max) ,ProductName Nvarchar(1000) , Description NVARCHAR(max),AddOnQuantity NVARCHAR(max)
		);

		DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
		DECLARE @OrderLineItemRelationshipTypeIdSimple int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Simple'
		);
		DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
		DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
		 DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
		INSERT INTO @TBL_SavecartLineitems( RowId,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence, AddOnValueIds, BundleProductIds, ConfigurableProductIds, GroupProductIds, PersonalisedAttribute, AutoAddon, OmsOrderId, ItemDetails,
		Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,Description,AddOnQuantity )
			   SELECT DENSE_RANK()Over(Order BY Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' )) RowId ,Tbl.Col.value( 'OmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartLineItemId, Tbl.Col.value( 'ParentOmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS ParentOmsSavedCartLineItemId, Tbl.Col.value( 'OmsSavedCartId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartId, Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' ) AS SKU, Tbl.Col.value( 'Quantity[1]', 'NVARCHAR(2000)' ) AS Quantity
			   , Tbl.Col.value( 'OrderLineItemRelationshipTypeID[1]', 'NVARCHAR(2000)' ) AS OrderLineItemRelationshipTypeID, Tbl.Col.value( 'CustomText[1]', 'NVARCHAR(2000)' ) AS CustomText, Tbl.Col.value( 'CartAddOnDetails[1]', 'NVARCHAR(2000)' ) AS CartAddOnDetails, Tbl.Col.value( 'Sequence[1]', 'NVARCHAR(2000)' ) AS Sequence, Tbl.Col.value( 'AddonProducts[1]', 'NVARCHAR(2000)' ) AS AddOnValueIds, ISNULL(Tbl.Col.value( 'BundleProducts[1]', 'NVARCHAR(2000)' ),'') AS BundleProductIds, ISNULL(Tbl.Col.value( 'ConfigurableProducts[1]', 'NVARCHAR(2000)' ),'') AS ConfigurableProductIds, ISNULL(Tbl.Col.value( 'GroupProducts[1]', 'NVARCHAR(Max)' ),'') AS GroupProductIds, 
			          Tbl.Col.query('(PersonaliseValuesDetail/node())') AS PersonaliseValuesDetail, Tbl.Col.value( 'AutoAddon[1]', 'NVARCHAR(Max)' ) AS AutoAddon, Tbl.Col.value( 'OmsOrderId[1]', 'NVARCHAR(Max)' ) AS OmsOrderId,
					  Tbl.Col.value( 'ItemDetails[1]', 'NVARCHAR(Max)' ) AS ItemDetails,
					  Tbl.Col.value( 'Custom1[1]', 'NVARCHAR(Max)' ) AS Custom1,
					  Tbl.Col.value( 'Custom2[1]', 'NVARCHAR(Max)' ) AS Custom2,
					  Tbl.Col.value( 'Custom3[1]', 'NVARCHAR(Max)' ) AS Custom3,
					  Tbl.Col.value( 'Custom4[1]', 'NVARCHAR(Max)' ) AS Custom4,
					  Tbl.Col.value( 'Custom5[1]', 'NVARCHAR(Max)' ) AS Custom5,
					  Tbl.Col.value( 'GroupId[1]', 'NVARCHAR(Max)' ) AS GroupId,
					  Tbl.Col.value( 'ProductName[1]', 'NVARCHAR(Max)' ) AS ProductName,
					  Tbl.Col.value( 'Description[1]', 'NVARCHAR(Max)' ) AS Description, 
					  Tbl.Col.value( 'AddOnQuantity[1]', 'NVARCHAR(2000)' ) AS AddOnQuantity
			   FROM @CartLineItemXML.nodes( '//ArrayOfSavedCartLineItemModel/SavedCartLineItemModel' ) AS Tbl(Col);
			  

			  IF OBJECT_ID('tempdb..#TBL_SavecartLineitems') is not null
				drop table #TBL_SavecartLineitems

			  SELECT * INTO #TBL_SavecartLineitems FROM @TBL_SavecartLineitems
			

			  UPDATE  @TBL_SavecartLineitems
			  SET 	Description = ISNUll(Description,'') 

			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' )
			 BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				    SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0 )

					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ( OmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					OR ParentOmsSavedCartLineItemId =  @OmsSavedCartLineItemId   ) 
					 
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_bundleProduct TT_SavecartLineitems 
				  INSERT INTO @TBL_bundleProduct 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(BundleProductIds,'') <> '' 
				
				  EXEC Znode_InsertUpdateSaveCartLineItemBundle @TBL_bundleProduct,@userId
				 
				  DELETE FROM  @TBL_SavecartLineitems WHERE ISNULL(BundleProductIds,'') <> '' 
				  SET @OmsSavedCartLineItemId = 0 
				END 
			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Configurable TT_SavecartLineitems 
				  INSERT INTO @TBL_Configurable 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> '' 

				  EXEC Znode_InsertUpdateSaveCartLineItemConfigurable @TBL_Configurable,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND  OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

					DELETE	FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Group TT_SavecartLineitems 
				  INSERT INTO @TBL_Group 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> '' 

				
				  EXEC Znode_InsertUpdateSaveCartLineItemGroup @TBL_Group,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				 
                IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
				
				    UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0)
					WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


					DELETE	FROM @TBL_SavecartLineitems WHERE OmsSavedCartLineItemId <> 0
				 END 
			 
			

			  DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT )
			  DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
			  INSERT INTO @TBL_Personalise
			  SELECT  NULL 
							,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		  ,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					  ,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					  ,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			  FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @TBL_SavecartLineitems TRTR  ) a 
			  CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 
			  
			   ----To update saved cart item personalise value from given line item
			  DECLARE @TBL_Personalise1 TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
			  INSERT INTO @TBL_Personalise1
			  SELECT  a.OmsSavedCartLineItemId 
					  ,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		  ,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					  ,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					  ,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			  FROM (SELECT TOP 1 OmsSavedCartLineItemId,PersonalisedAttribute Valuex FROM  #TBL_SavecartLineitems TRTR ) a 
			  CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
		    
			
			  CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
				   
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @TBL_SavecartLineitems a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, @OrderLineItemRelationshipTypeIdSimple, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE ISNULL(BundleProductIds,'') =  '' 
			   AND  ISNULL(GroupProductIds,'') = ''	AND ISNULL(	ConfigurableProductIds,'') = ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity,  CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
     		   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
					,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
					WHEN  GroupProductIds <> '' THEN GroupProductIds 
					WHEN BundleProductIds <> '' THEN BundleProductIds 
					 ELSE SKU END     ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE AddOnValueIds <> ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
				 
            
		
		 CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.SKU,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple   

			

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		--select * from #tempoi

	

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

			

		IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_SavecartLineitems ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
	    
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 
		END 
			
	

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		

		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		   
		
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   

		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		   
		  
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 


		  
		END 

		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is different for same line item then New lineItem will generate
		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is same for same line item then Quantity will added
		;with cte as
		(
			SELECT b.OmsSavedCartLineItemId ,a.ParentOmsSavedCartLineItemId , a.SKU
					,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			FROM @TBL_SavecartLineitems a 
			Inner Join #OldValue b on a.SKU = b.SKU
			CROSS APPLY a.PersonalisedAttribute.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
			Inner join ZnodeOmsPersonalizeCartItem c on b.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId
			WHERE a.OmsSavedCartLineItemId = 0
		)
		delete b1
		from cte a1		  
		Inner Join #OldValue b1 on a1.sku = b1.SKU
		where not exists(select * from ZnodeOmsPersonalizeCartItem c where a1.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId and a1.PersonalizeValue = c.PersonalizeValue)

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)

		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	
			     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
	
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId) NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdSimple
    )   
    
    DELETE FROM #yuuete WHERE NewRowId IN (SELECT NewRowId FROM VTRET)  
	
	

	
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  

 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID
				
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
  

    
    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
	INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1 
    WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  


  --  SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 --FROM ZnodeOmsSavedCartLineItem a
	 --WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
  --   AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --   AND a.ParentOmsSavedCartLineItemId IS NULL  
	 --AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 --AND EXISTS (SELECT TOP 1 1 FROM #Cte_newAddon TI WHERE TI.SKU = a.SKU)



   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1 FROM #Cte_newAddon TI WHERE TI.SKU = a.SKU)
   )

    UPDATE a SET  
   --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId =(SELECT TOP 1 max(OmsSavedCartLineItemId) 
	FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU   GROUP BY r.ParentSKU, r.SKU  )    IS NOT NULL 
	 

	
	  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
	
	----To update saved cart item personalise value from given line item	
	if exists(select * from @TBL_Personalise1 where isnull(PersonalizeValue,'') <> '' and isnull(OmsSavedCartLineItemId,0) <> 0)
	Begin
		DELETE FROM ZnodeOmsPersonalizeCartItem 
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise1 yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )

		MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
		USING @TBL_Personalise1 SOURCE
			   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		WHEN NOT MATCHED THEN 
				INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
								,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
				VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
								,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
	end		
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS NOT NULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem 
	WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
	WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		 
END 
	SET @Status = 1;
	COMMIT TRAN InsertUpdateSaveCartLineItem;
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE()	
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_InsertUpdateSaveCartLineItem @CartLineItemXML = '+CAST(@CartLineItemXML
 AS varchar(max))+',@UserId = '+CAST(@UserId AS varchar(50))+',@Status='+CAST(@Status AS varchar(10));

		SELECT 0 AS ID, CAST(0 AS bit) AS Status,ERROR_MESSAGE();
		ROLLBACK TRAN InsertUpdateSaveCartLineItem;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_InsertUpdateSaveCartLineItem', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;

GO
IF NOT EXISTS (SELECT * FROM sys.tables where name = 'ZnodeCulture')
begin
CREATE TABLE [dbo].[ZnodeCulture] (
    [CultureId]    INT           IDENTITY (1, 1) NOT NULL,
    [CultureCode]  VARCHAR (100) NULL,
    [CultureName]  VARCHAR (200) NULL,
    [CurrencyId]   INT            NULL,
    [Symbol]       VARCHAR (100) NULL,
    [IsActive]     BIT           CONSTRAINT [DF_ZnodeCulture_IsActive] DEFAULT ((0)) NOT NULL,
    [IsDefault]    BIT           CONSTRAINT [DF_ZnodeCulture_IsDefault] DEFAULT ((0)) NOT NULL,
    [CreatedBy]    INT           NOT NULL,
    [CreatedDate]  DATETIME      NOT NULL,
    [ModifiedBy]   INT           NOT NULL,
    [ModifiedDate] DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeCulture] PRIMARY KEY CLUSTERED ([CultureId] ASC),
    CONSTRAINT [FK_ZnodeCulture_ZnodeCurrency] FOREIGN KEY ([CurrencyId]) REFERENCES [dbo].[ZnodeCurrency] ([CurrencyId])
)
END


GO


IF  EXISTS (SELECT * FROM sys.triggers where name = 'Trg_ZNodeCulture_GlobalSetting')
BEGIN
DROP Trigger Trg_ZNodeCulture_GlobalSetting
ENd
GO
CREATE Trigger [dbo].[Trg_ZNodeCulture_GlobalSetting]  ON [dbo].[ZnodeCulture]   
AFTER UPDATE AS   
BEGIN  
  IF NOT EXISTS (SELECT TOP 1 1 FROM ZnodeGlobalSetting WHERE FeatureName = 'Currency')  
  BEGIN  
     INSERT INTO ZnodeGlobalSetting (FeatureName  
     ,FeatureValues  
     ,FeatureSubValues  
     ,CreatedBy  
     ,CreatedDate  
     ,ModifiedBy  
     ,ModifiedDate)  
  /*  SELECT 'Currency',CurrencyCode,FeatureSubValues = ISNULL(Symbol,'') + '|' +  CurrencyName+'|'+ CurrencySuffix,1,GetDate(),1,Getdate() FROM ZnodeCurrency WHERE IsActive = 1 AND IsDefault = 1   */
  	  SELECT 'Currency',ZC.CultureCode,FeatureSubValues = ISNULL(ZC.Symbol,'') + '|' +  ZC.CultureName+'|'+ ZCC.CurrencyCode,1,GetDate(),1,Getdate() 
	  FROM ZnodeCulture AS ZC INNER JOIN ZnodeCurrency ZCC on ZC.CurrencyId = ZCC.CurrencyId
	  WHERE ZC.IsActive = 1 AND ZC.IsDefault = 1  

  END   
  ELSE   
  BEGIN   
/*     UPDATE ZnodeGlobalSetting  
    SET  
   FeatureValues = a.CurrencyCode   
   ,FeatureSubValues = ISNULL(a.Symbol,'') + '|' +  a.CurrencyName+'|'+a.CurrencySuffix  
   ,CreatedBy  = (SELECT createdBy FROM Inserted )   
   ,CreatedDate = (SELECT CreatedDate FROM Inserted )   
   ,ModifiedBy = (SELECT ModifiedBy FROM Inserted )   
   ,ModifiedDate = (SELECT ModifiedDate FROM Inserted )   
   FROM ZnodeCurrency a WHERE a.IsActive = 1 AND a.IsDefault = 1  
    AND FeatureName = 'Currency'    */
	
	
	UPDATE ZnodeGlobalSetting  
    SET  
   FeatureValues = ZC.CultureCode   
   ,FeatureSubValues = ISNULL(ZC.Symbol,'') + '|' +  ZC.CultureName+'|'+ZCC.CurrencyCode  
   ,CreatedBy  = (SELECT CreatedBy FROM Inserted )   
   ,CreatedDate = (SELECT CreatedDate FROM Inserted )   
   ,ModifiedBy = (SELECT ModifiedBy FROM Inserted )   
   ,ModifiedDate = (SELECT ModifiedDate FROM Inserted )   
   FROM ZnodeCulture ZC Inner Join ZnodeCurrency ZCC on ZC.CurrencyId = ZCC.CurrencyId
   WHERE ZC.IsActive = 1 AND ZC.IsDefault = 1  
   AND FeatureName = 'Currency' 
	
   END 
  
	UPDATE ZCULT 
	SET ZCULT.IsActive = ZCUR.IsActive
	FROM ZnodeCulture ZCULT 
	INNER JOIN ZnodeCurrency ZCUR ON (ZCUR.CurrencyId = ZCULT.CurrencyId)
	  
 END
 GO
 IF NOT EXISTS  (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'Znodedomain' AND COLUMN_NAME = 'IsDefault')
BEGIN 
ALTER TABLE [dbo].[Znodedomain]
    ADD [IsDefault] BIT CONSTRAINT [DF_ZnodeDomain_IsDefault] DEFAULT ((0)) NOT NULL;
END

GO
IF NOT EXISTS  (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeOmsOrderDetails' AND COLUMN_NAME = 'CultureCode')
BEGIN 
	ALTER TABLE [dbo].[ZnodeOmsOrderDetails]
    ADD [CultureCode] VARCHAR (100) NULL
      
END
GO

IF NOT EXISTS  (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodePortalUnit' AND COLUMN_NAME = 'CultureId')
BEGIN 
	ALTER TABLE [dbo].[ZnodePortalUnit]
    ADD [CultureId] INT NULL
      
END
GO
IF NOT EXISTS (SELECT * FROM   sys.objects WHERE  type IN( 'F' ) and OBJECT_NAME(parent_object_id) = 'ZnodePortalUnit' and name ='FK_ZnodePortalUnit_ZnodeCulture')
BEGIN 
ALTER TABLE [dbo].[ZnodePortalUnit] 
    ADD CONSTRAINT FK_ZnodePortalUnit_ZnodeCulture FOREIGN KEY ([CultureId]) REFERENCES [dbo].[ZnodeCulture] ([CultureId])
END
GO

IF NOT EXISTS  (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodePriceList' AND COLUMN_NAME = 'CultureId')
BEGIN 
	ALTER TABLE [dbo].[ZnodePriceList]
    ADD [CultureId] INT  NULL
      
END
GO

IF NOT EXISTS (SELECT * FROM   sys.objects WHERE  type IN( 'F' ) and OBJECT_NAME(parent_object_id) = 'ZnodePriceList' and name ='FK_ZnodePriceList_ZnodeCulture')
BEGIN 
ALTER TABLE [dbo].[ZnodePriceList] 
    ADD CONSTRAINT FK_ZnodePriceList_ZnodeCulture FOREIGN KEY ([CultureId]) REFERENCES [dbo].[ZnodeCulture] ([CultureId])
END
GO 
IF  EXISTS (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodePriceList' AND COLUMN_NAME = 'CurrencyId')
BEGIN 
	ALTER TABLE [dbo].[ZnodePriceList] ALTER COLUMN CurrencyId INT NULL;
END 
GO

GO
IF NOT EXISTS  (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeShipping' AND COLUMN_NAME = 'CultureId')
BEGIN 
	ALTER TABLE [dbo].[ZnodeShipping]
    ADD [CultureId] INT  NULL
      
END
GO
IF NOT EXISTS (SELECT * FROM   sys.objects WHERE  type IN( 'F' ) and OBJECT_NAME(parent_object_id) = 'ZnodeShipping' and name ='FK_ZnodeShipping_ZnodeCulture')
BEGIN 
ALTER TABLE [dbo].[ZnodeShipping] 
    ADD CONSTRAINT FK_ZnodeShipping_ZnodeCulture FOREIGN KEY ([CultureId]) REFERENCES [dbo].[ZnodeCulture] ([CultureId])
END
GO 
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetDefaultCurrencySymbol')
BEGIN
DROP FUNCTION dbo.Fn_GetDefaultCurrencySymbol
END
GO
CREATE FUNCTION [dbo].[Fn_GetDefaultCurrencySymbol]
(
)
RETURNS NVARCHAR(100)
AS
     BEGIN
         -- Declare the return variable here
         DECLARE @DefaultCurrency NVARCHAR(100);
         SET @DefaultCurrency =
         (
             SELECT TOP 1 ZCC.Symbol
             FROM ZnodeGlobalSetting ZGS 
			 LEFT JOIN ZnodeCulture ZCC ON (ZCC.CultureCode = ZGS.FeatureValues)
             WHERE ZGS.FeatureName = 'Currency'
         );
         RETURN @DefaultCurrency;
     END;

GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetPortalCurrencySymbol')
BEGIN
DROP FUNCTION dbo.Fn_GetPortalCurrencySymbol
END
GO

CREATE FUNCTION [dbo].[Fn_GetPortalCurrencySymbol]  
( 
@PortalId INTEGER  
)  
RETURNS NVARCHAR(100)  
AS  
     BEGIN  
         -- Declare the return variable here  
         DECLARE @Symbol NVARCHAR(100);  
         SET @Symbol =  
         (  
             SELECT TOP 1 ZCC.Symbol  
             FROM ZnodePortalUnit ZPU  
			 LEFT JOIN ZnodeCulture ZCC ON (ZCC.CurrencyId = ZPU.CurrencyId)  
             WHERE ZPU.PortalId = @PortalId 
         );  
         RETURN @Symbol;  
     END;
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCurrency')
BEGIN 
	DROP PROCEDURE Znode_GetCurrency
END
GO
CREATE PROCEDURE [dbo].[Znode_GetCurrency]            
(            
 @WhereClause NVARCHAR(MAX),            
    @Rows        INT           = 100,            
    @PageNo      INT           = 1,            
    @Order_BY    VARCHAR(100)  = '',            
    @RowsCount   INT OUT            
            
)            
AS             
/*            
  Summary :- This Procedure is used to get the Currency Details.            
  Unit Testig        
  DECLARE @R  int = 0     
  EXEC Znode_GetCurrency '',50,1,'',@R OUT    SELECT    @R 
           
*/            
   BEGIN             
  BEGIN TRY             
   SET NOCOUNT ON             
            
    DECLARE @SQL  NVARCHAR(MAX)             
            
   DECLARE @TBL_Currency TABLE (CurrencyId INT, CurrencyCode NVARCHAR(100),CurrencyName NVARCHAR(200), IsActive BIT, IsDefault BIT,Symbol NVARCHAR(100), CultureId INT,CultureCode NVARCHAR(100),CultureName NVARCHAR (200),RowId INT,CountId INT)          
          
            
    SET @SQL = '            
    ;With Cte_CurrencyDetails AS             
    (            
    SELECT distinct ZCC.CurrencyId ,ZCC.CurrencyCode ,ZCC.CurrencyName ,ZC.IsActive,ZC.IsDefault,ZC.Symbol,ZC.CultureId,ZC.CultureCode,ZC.CultureName          
 FROM  ZnodeCulture ZC LEFT JOIN ZnodeCurrency ZCC ON ZC.CurrencyId = ZCC.CurrencyId                
    )           
    ,Cte_Currency             
    AS (            
    SELECT CurrencyId,CurrencyCode,CurrencyName, IsActive,IsDefault,Symbol,CultureId,CultureCode,CultureName,          
    '+[dbo].[Fn_GetPagingRowId](@Order_BY,'CurrencyId, CultureId DESC')+',Count(*)Over() CountId FROM Cte_CurrencyDetails            
    WHERE 1=1 '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+' )            
              
    SELECT CurrencyId,CurrencyCode,CurrencyName, IsActive,IsDefault,Symbol,CultureId,CultureCode,CultureName,RowId,CountId         
    FROM Cte_Currency             
    '+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)            
             
            
 PRINT @SQL            
    INSERT INTO @TBL_Currency             
               
    EXEC (@SQL)            
            
    SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM @TBL_Currency),0)            
            
              
   SELECT CurrencyId,CurrencyCode,CurrencyName, IsActive,IsDefault,Symbol,CultureId,CultureCode,CultureName          
   FROM @TBL_Currency            
              
                
            
   END TRY             
   BEGIN CATCH             
   DECLARE @Status BIT ;            
   SET @Status = 0;            
   DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCurrency @WhereClause = '''+ISNULL(@WhereClause,'''''')+''',@Rows='
  
    
      
        
+ISNULL(CAST(@Rows AS VARCHAR(50)),'''''')+',@PageNo='+ISNULL(CAST(@PageNo AS VARCHAR(50)),'''')+',@Order_BY='''+ISNULL(@Order_BY,'''''')+''',@RowsCount='+ISNULL(CAST(@RowsCount AS VARCHAR(50)),'''')            
                         
   SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                                
               
   EXEC Znode_InsertProcedureErrorLog            
     @ProcedureName = 'Znode_GetCurrency',            
     @ErrorInProcedure = 'Znode_GetCurrency',            
     @ErrorMessage = @ErrorMessage,            
     @ErrorLine = @ErrorLine,            
     @ErrorCall = @ErrorCall;            
   END CATCH             
   END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetTopSpendingCustomers')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetTopSpendingCustomers
END
GO

CREATE PROCEDURE [dbo].[ZnodeReport_GetTopSpendingCustomers]  
(   @BeginDate    DATE         = NULL,  
 @EndDate      DATE         = NULL,  
 @PortalId     VARCHAR(MAX) = '',  
 @UserId       VARCHAR(MAX) = '',  
 @FirstName    VARCHAR(MAX) = '',  
 @LastName     VARCHAR(MAX) = '',  
 @OrderStateId NVARCHAR(MAx)= '')  
AS   
/*  
     Summary :- This Procedure is used to get frequently Appear users    
     Unit Testing   
     EXEC ZnodeReport_GetTopSpendingCustomers @OrderStateId = '40'  
*/  
     BEGIN  
         BEGIN TRY  
          
             DECLARE @TBL_ReportOrderUser TABLE (OmsOrderId INT, UserId     INT, PortalId   INT);  
     DECLARE @TBL_ReportOrderDetails TABLE (UserId INT, BillingFirstName nvarchar(200),BillingLastName nvarchar (200),  
                                             StoreName nvarchar(max), OrderCount NVarchar(100), Total NVarchar(100),Symbol NVARCHAR(100) );  
             INSERT INTO @TBL_ReportOrderUser (OmsOrderId, UserId,PortalId)  
                      
    SELECT MAX(ZOOD.OmsOrderId) OmsOrderId,  
                           UserId,  
                           PortalId  
                    FROM ZnodeOmsOrderDetails ZOOD  
                    WHERE (EXISTS  
                          (  
                              SELECT TOP 1 1  
                              FROM dbo.split(@PortalId, ',') SP  
                              WHERE CAST(ZOOD.PortalId AS VARCHAR(100)) = SP.Item  
                                      
                          )OR @PortalId = '')  
     AND (EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@OrderStateId, ',') SP  
                                WHERE CAST(ZOOD.OmsOrderStateId AS VARCHAR(100)) = SP.Item  
                                       
                            )  OR @OrderStateId = '')  
     AND Zood.IsActive =1    
                    GROUP BY UserId,  
                             PortalId;  
  
  
  
  
             WITH Cte_ReportUserDetails  
                  AS (  
      SELECT ZOOD.UserId,  
                            isnull(ZU.FirstName, ZOOD.BillingFirstName) BillingFirstName,  
                            isnull(ZU.LastName, ZOOD.BillingLastName) BillingLastName,  
                             ZOOD.PortalId,  
                             ZP.StoreName  
                      FROM @TBL_ReportOrderUser O  
                           INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = O.OmsOrderId)  
                           INNER JOIN ZnodePortal ZP ON(Zp.PortalId = ZOOD.PortalId)  
         left outer join ZnodeUser ZU on(ZOOD.userId = zu.userId)  
                      WHERE((EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@PortalId, ',') SP  
                                WHERE CAST(ZOOD.PortalId AS VARCHAR(100)) = SP.Item  
                                      OR @PortalId = ''  
                            )))  
         AND  ZOOD.IsActive =1    
      AND EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@OrderStateId, ',') SP  
                                WHERE CAST(ZOOD.OmsOrderStateId AS VARCHAR(100)) = SP.Item  
                                      OR @OrderStateId = ''  
                            )   
       )  
  
                  Insert into @TBL_ReportOrderDetails  (UserID , BillingFirstName ,BillingLastName , StoreName , OrderCount , Total,Symbol  )  
                  SELECT CTRO.UserId,  
                         CTRO.BillingFirstName,  
                         CTRO.BillingLastName,  
                         StoreName,  
                         COUNT(ZOOD.OmsOrderId) AS 'OrderCount',  
                         --Dbo.Fn_GetDefaultPriceRoundOff(SUM(ZOOD.Total))AS 'Total',  
       SUM(ZOOD.Total)AS 'Total',    
     ISNULL(ZC.Symbol,dbo.Fn_GetDefaultCurrencySymbol()) Symbol  
                  FROM Cte_ReportUserDetails CTRO  
                       INNER JOIN ZnodeOmsOrderDetails ZOOD ON(CTRO.UserId = ZOOD.UserId)  
                       --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)  
					      LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)  
                  WHERE(CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
                                                                 WHEN @BeginDate IS NULL  
                                                                 THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                 ELSE @BeginDate  
                                                             END AND   
             CASE  
                                                                         WHEN @EndDate IS NULL  
                                                                         THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                         ELSE @EndDate  
                                                             END)  
                       AND ((EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@PortalId, ',') SP  
                                WHERE CAST(CTRO.PortalId AS VARCHAR(100)) = SP.Item  
                                      OR @PortalId = ''  
                            )))  
      AND EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@OrderStateId, ',') SP  
                                WHERE CAST(ZOOD.OmsOrderStateId AS VARCHAR(100)) = SP.Item  
                                      OR @OrderStateId = ''  
                            )   
                       AND (CTRO.BillingFirstName LIKE '%'+@FirstName+'%'  
                            OR @FirstName = '')  
                       AND (CTRO.BillingLastName LIKE '%'+@LastName+'%'  
                            OR @LastName = '')  
  
                       AND ((EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@UserId, ',') SP  
                                WHERE CAST(CTRO.UserId AS VARCHAR(100)) = ltrim(rtrim(SP.Item))  
                                      OR @UserId = ''  
                            )))  
       AND ZOOD.IsActive =1   
                  GROUP BY CTRO.UserId,  
                           CTRO.BillingFirstName,  
                           CTRO.BillingLastName,  
                           StoreName,ZC.Symbol  
       
       Select UserID , BillingFirstName ,BillingLastName , StoreName , CAST (OrderCount AS Numeric) as OrderCount , CAST (Total AS decimal(18,2)) Total,Symbol  
       from @TBL_ReportOrderDetails ORder by CAST (Total AS Numeric) DESC;  
                   
         END TRY  
         BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetTopSpendingCustomers @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@UserId='+@UserId+',@FirstName='+@FirstName+',@LastName='+@LastName+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetTopSpendingCustomers',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
GO
 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetTaxFiltered')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetTaxFiltered
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetTaxFiltered]  
(   @BeginDate       DATE         = NULL,  
 @EndDate         DATE         = NULL,  
 @PortalId        VARCHAR(MAX) = '',  
 @ShipToStateCode VARCHAR(10)  = '')  
AS   
/*  
     Summary:- this procedure is used to get the TAX details   
  Unit Testing:  
     EXEC ZnodeReport_GetTaxFiltered @ShipToStateCode = '' ,@BeginDate = '2015-11-15 13:03:27.700', @EndDate= '2016-11-15 13:03:27.700',@PortalId = '1'  
 */  
   
  BEGIN  
  BEGIN TRY  
         SET NOCOUNT ON;  
  
  SELECT P.[StoreName] AS 'StoreName',  
                ZOOD.OrderDate,  
                OSP.ShipToStateCode,  
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.SubTotal) AS SubTotal,  
                [dbo].[Fn_GetDefaultPriceRoundOff](SUM(ISNULL(ZOTOD.[SalesTax], 0) + ISNULL(ZOTOD.[VAT], 0) + ISNULL(ZOTOD.[GST], 0) + ISNULL(ZOTOD.[PST], 0) + ISNULL(ZOTOD.[HST], 0))) AS TaxCost,  
                SPACE(10) AS Title,SPACE(30) AS Custom1,ISNULL(ZC.Symbol,dbo.Fn_GetDefaultCurrencySymbol()) Symbol  
         FROM ZNodeOmsOrder AS ZOO  
              INNER JOIN ZnodeOmsOrderDetails AS ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1)  
              INNER JOIN ZNodePortal AS P ON P.PortalID = ZOOD.PortalId  
              LEFT JOIN ZNodeOmsOrderShipment AS OSP ON(EXISTS  
                                                       (  
                                                           SELECT TOP 1 1  
                                                           FROM ZnodeOmsOrderLineItems AS ZOOLI  
                                                           WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId  
                                                                 AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId  
                                                       ))  
              LEFT JOIN ZnodeOmsTaxOrderDetails AS ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)  
      --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)  
	       LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)  
         WHERE((EXISTS  
               (  
                   SELECT TOP 1 1  
                   FROM dbo.split(@PortalId, ',') AS SP  
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item  
                         OR @PortalId = ''  
               )))  
              AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
                                                            WHEN @BeginDate IS NULL  
                                                            THEN CAST(ZOOD.OrderDate AS DATE)  
                                                            ELSE @BeginDate  
                                                        END AND CASE  
                                                                    WHEN @EndDate IS NULL  
                                                                    THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                    ELSE @EndDate  
                                                                END)  
              AND (OSP.ShipToStateCode LIKE '%'+@ShipToStateCode+'%' OR @ShipToStateCode = '')  
          
   GROUP BY P.[StoreName],ZOOD.OrderDate,OSP.ShipToStateCode,ZOOD.SubTotal,ZC.Symbol  
   HAving SUM(ISNULL(ZOTOD.[SalesTax], 0) + ISNULL(ZOTOD.[VAT], 0) + ISNULL(ZOTOD.[GST], 0) + ISNULL(ZOTOD.[PST], 0) + ISNULL(ZOTOD.[HST], 0)) > 0   
   ;  
  
   END TRY  
   BEGIN CATCH  
   DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetTaxFiltered @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@ShipToStateCode='+@ShipToStateCode+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetTaxFiltered',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
   END CATCH  
     END;
GO


 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetRecurringOrderItem')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetRecurringOrderItem
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetRecurringOrderItem]  
(@OmsOrderId INT)  
AS  
/*  
     Summary :- This Procedure is used to find the ordeer line item for Recurring billing   
     Unit Testing   
     EXEC ZnodeReport_GetRecurringOrderItem 12  
*/  
     BEGIN  
  BEGIN TRY  
  SET NOCOUNT ON  
         SELECT ZOOLI.[ProductName] AS 'Product Name',  
                dbo.Fn_GetDefaultPriceRoundOff(ZOOLI.Price) AS 'Unit Price',  
                dbo.Fn_GetDefaultInventoryRoundOff(ZOOLI.[Quantity]) [Quantity],  
                dbo.Fn_GetDefaultPriceRoundOff(ZOOLI.[Quantity] * ZOOLI.[Price]) AS 'Price',  
                dbo.Fn_GetDefaultPriceRoundOff(ZOOLI.[RecurringBillingAmount]) AS 'Billing Amount',  
                CASE  
                    WHEN ZOOLI.[RecurringBillingFrequency] = 1  
                    THEN 'Day'  
                    WHEN ZOOLI.[RecurringBillingFrequency] = 7  
                    THEN 'Week'  
                    WHEN ZOOLI.[RecurringBillingFrequency] = 30  
                    THEN 'Month'  
                    WHEN ZOOLI.[RecurringBillingFrequency] = 360  
                    THEN 'Year'  
                END AS 'Billing Period',  
                ZOOLI.[TransactionNumber] AS 'Transaction Code'  
    ,ISNULL(ZC.Symbol,dbo.Fn_GetDefaultCurrencySymbol()) Symbol  
         FROM ZNodeOmsOrder ZOO  
              INNER JOIN ZNodeOmsOrderDetails ZOOD ON ZOO.OmsOrderId = ZOOD.OmsOrderId  
              INNER JOIN ZNodeOmsOrderLineItems ZOOLI ON ZOOD.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId  
     --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)  
	   LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)  
         WHERE ZOO.OmsOrderId = @OmsOrderId  
               AND ZOOLI.[IsRecurringBilling] = 1;  
  
  END TRY  
  BEGIN CATCH  
   DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetRecurringOrderItem @OmsOrderId='+CAST(@OmsOrderId AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetRecurringOrderItem',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
  END CATCH  
     END;
GO
 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetRecurringOrder')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetRecurringOrder
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetRecurringOrder](  
 @BeginDate date= NULL,  
 @EndDate date= NULL,  
 @PortalId varchar(max)= '',  
 @OrderStateId varchar(max)= '',  
 @PayemntTypeId varchar(max)= '',  
 @ShippingTypeId varchar(max)= '',  
 @CustomerName nvarchar(400)= '',  
 @EmailId nvarchar(100)= '')  
AS   
/*  
  Summary:- this procedure is used to get the order details   
  Unit Testing:  
  EXEC ZnodeReport_GetRecurringOrder  
*/  
 BEGIN  
  BEGIN TRY  
  SET NOCOUNT ON;  
   SELECT DISTINCT   
       ZOO.[OmsOrderID],ZOO.OrderNumber, ZOOD.[PortalId], ZOOD.[UserId], ZOOD.[OmsOrderStateId], ZOOD.[ShippingID], ZOOD.[PaymentTypeId], OSP.[ShipToFirstName] AS 'ShipFirstName', OSP.[ShipToLastName] AS 'ShipLastName', OSP.[ShipToCompanyName] AS 'ShipCompanyName', OSP.[ShipToStreet1] AS 'ShipStreet', OSP.[ShipToStreet2] AS 'ShipStreet1', OSP.[ShipToCity] AS 'ShipCity', OSP.[ShipToStateCode] AS 'ShipStateCode', OSP.[ShipToPostalCode] AS 'ShipPostalCode', OSP.[ShipToCountry] AS 'ShipCountry', OSP.[ShipToPhoneNumber] AS 'ShipPhoneNumber', OSP.[ShipToEmailID] AS 'ShipEmailID', ZOOD.[BillingFirstName], ZOOD.[BillingLastName], ZOOD.[BillingCompanyName], ZOOD.[BillingStreet1], ZOOD.[BillingStreet2], ZOOD.[BillingCity], ZOOD.[BillingStateCode], ZOOD.[BillingPostalCode], ZOOD.[BillingCountry], ZOOD.[BillingPhoneNumber], ZOOD.[BillingEmailId], [dbo].[Fn_GetDefaultPriceRoundOff]( ZOOD.[TaxCost] ) AS TaxCost, [dbo].[Fn_GetDefaultPriceRoundOff]( ZOOD.[ShippingCost] ) AS [ShippingCost], [dbo].[Fn_GetDefaultPriceRoundO
ff]( ZOOD.[SubTotal] ) AS [SubTotal], [dbo].[Fn_GetDefaultPriceRoundOff]( ZOOD.[DiscountAmount] ) AS [DiscountAmount], [dbo].[Fn_GetDefaultPriceRoundOff]( ZOOD.[Total] ) AS [Total], CAST(ZOOD.[OrderDate] AS date) AS [OrderDate], ZOOD.[ShippingNumber], ZOOD.[TrackingNumber], ZOOD.[CouponCode], ZOOD.[PromoDescription], ZOOD.[ReferralUserId], ZOOD.[PurchaseOrderNumber], ZOOD.[OmsPaymentStateId], ZOOD.[WebServiceDownloadDate], ZOOD.[PaymentSettingID], ZOOD.[ShipDate], ZOOD.[ReturnDate], ZOTOD.[SalesTax], ZOTOD.[VAT], ZOTOD.[GST], ZOTOD.[PST], ZOTOD.[HST], P.[StoreName] AS 'StoreName', OS.[OrderStateName] AS 'OrderStatus', PT.[Name] AS 'PaymentTypeName', ST.[Name] AS 'ShippingTypeName', ISNULL(ZC.Symbol, dbo.Fn_GetDefaultCurrencySymbol()) AS Symbol  
   FROM ZNodeOmsOrder AS ZOO  
     INNER JOIN  
     ZnodeOmsOrderDetails AS ZOOD  
     ON( ZOOD.OmsOrderId = ZOO.OmsOrderId AND   
      IsActive = 1  
       )  
     INNER JOIN  
     ZNodePortal AS P  
     ON P.PortalID = ZOOD.PortalId  
     INNER JOIN  
     ZNodeOmsOrderState AS OS  
     ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID  
     INNER JOIN  
     ZnodeOmsOrderLineItems AS ZOOLI  
     ON(ZOOD.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId)  
     INNER JOIN  
     ZNodeOmsOrderShipment AS OSP  
     ON(ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId)  
     LEFT JOIN  
     ZnodeOmsTaxOrderDetails AS ZOTOD  
     ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)  
     LEFT JOIN  
     ZNodeShipping AS S  
     ON S.ShippingID = OSP.ShippingID  
     LEFT JOIN  
     ZNodeShippingTypes AS ST  
     ON ST.ShippingTypeID = S.ShippingTypeID  
     LEFT JOIN  
     ZNodePaymentType AS PT  
     ON PT.PaymentTypeID = ZOOD.PaymentTypeId  
     LEFT JOIN  
     --ZnodeCurrency AS ZC  
     --ON(ZC.CurrencyCode = ZOOD.CurrencyCode)  
	    ZnodeCulture AS ZC  
     ON(ZC.CultureCode = ZOOD.CurrencyCode)  
        WHERE( ( EXISTS  
       (  
        SELECT TOP 1 1  
        FROM dbo.split( @PortalId, ',' ) AS SP  
        WHERE CAST(P.PortalId AS varchar(100)) = SP.Item OR   
        @PortalId = ''  
       )  
       )  
     ) AND   
     ( ( EXISTS  
       (  
        SELECT TOP 1 1  
        FROM dbo.split( @OrderStateId, ',' ) AS SP  
        WHERE CAST(ZOOD.[OmsOrderStateId] AS varchar(100)) = SP.Item OR   
        @OrderStateId = ''  
       )  
       )  
     ) AND   
     ( ( EXISTS  
       (  
        SELECT TOP 1 1  
        FROM dbo.split( @PayemntTypeId, ',' ) AS SP  
        WHERE CAST(ZOOD.[PaymentTypeId] AS varchar(100)) = SP.Item OR   
        @PayemntTypeId = ''  
       )  
       ) 
     ) AND   
     ( ( EXISTS  
       (  
        SELECT TOP 1 1  
        FROM dbo.split( @ShippingTypeId, ',' ) AS SP  
        WHERE CAST(ST.ShippingTypeID AS varchar(100)) = SP.Item OR   
        @ShippingTypeId = ''   )  )   ) AND   
     ( ZOOD.[BillingFirstName]+' '+ISNULL(ZOOD.[BillingLastName], '') LIKE '%'+@CustomerName+'%' OR   
       @CustomerName = ''  
     ) AND   
     ( ZOOD.[BillingEmailId] LIKE '%'+@EmailId+'%' OR   
       @EmailId = ''  
     ) AND   
     ( CAST(ZOOD.OrderDate AS date) BETWEEN CASE  
              WHEN @BeginDate IS NULL THEN CAST(ZOOD.OrderDate AS date)  
              ELSE @BeginDate  
              END AND CASE  
                WHEN @EndDate IS NULL THEN CAST(ZOOD.OrderDate AS date)  
                ELSE @EndDate  
                END  
     ) AND   
     ZOOLI.IsRecurringBilling = 1;  
  
  END TRY  
  BEGIN CATCH  
   DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetRecurringOrder @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@OrderStateId='+@OrderStateId+',@PayemntTypeId='+@PayemntTypeId+',@Ship
pingTypeId='+@ShippingTypeId+',@CustomerName='+@CustomerName+',@EmailId='+@EmailId+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetRecurringOrder',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
  END CATCH  
END;
GO

 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetPopularProductFiltered')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetPopularProductFiltered
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetPopularProductFiltered](  
      @BeginDate   DATE          = NULL ,  
      @EndDate     DATE          = NULL ,  
      @PortalId    NVARCHAR(MAX) = '' ,  
      @SKU         NVARCHAR(MAX) = '' ,  
      @ProductName NVARCHAR(MAX) = '')  
AS   
/*  
     Sumarry : - This Procedure is used to find the Popular products filtered   
     Unit Testing   
     EXEC ZnodeReport_GetPopularProductFiltered   
 */  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;  
            
     WITH Cte_ReportData  
                  AS   
       (SELECT ZP.StoreName AS 'StoreName' , ZOOLI.SKU , ZOOLI.ProductName , SUM(ZOOLI.Quantity) AS 'Quantity' , ZOOLI.Price AS 'Price' ,  
       SUM(ZOOLI.Quantity) * ZOOLI.Price AS TotalAmount , ISNULL(ZC.Symbol , dbo.Fn_GetDefaultCurrencySymbol()) AS Symbol  
                      FROM ZnodeOmsOrder AS ZOO INNER JOIN ZnodeOmsOrderDetails AS ZOOD ON ( ZOOD.OmsOrderId = ZOO.OmsOrderId AND ZOOD.IsActive =1 )  
                                                INNER JOIN ZnodeOmsOrderLineItems AS ZOOLI ON Zood.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId  
                                                INNER JOIN ZnodePortal AS ZP ON Zp.PortalID = ZOOD.PortalId  
                                                --LEFT JOIN ZnodeCurrency AS ZC ON ( ZC.CurrencyCode = ZOOD.CurrencyCode )  
												LEFT JOIN ZnodeCulture AS ZC ON ( ZC.CultureCode = ZOOD.CurrencyCode )  
                      WHERE ( CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
                                                                       WHEN @BeginDate IS NULL  
                                                                       THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                       ELSE @BeginDate  
                                                                   END AND CASE  
                                                                               WHEN @EndDate IS NULL  
                                                                               THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                               ELSE @EndDate  
                                                                           END )  
                            AND  
                            ( EXISTS ( SELECT TOP 1 1  
                                       FROM dbo.split ( @PortalId , ','  
                                                      ) AS SP  
                                       WHERE CAST(Zp.PortalID AS VARCHAR(100)) = SP.Item  
                                             OR  
                                             @PortalId = ''  
                                     ) )  
                            AND  
                            ( ZOOLI.SKU LIKE '%'+@SKU+'%'  
                              OR  
                              @SKU = '' )  
                            AND  
                            ( ZOOLI.ProductName LIKE '%'+@ProductName+'%'  
                              OR  
                              @ProductName = '' )  
                      GROUP BY ZP.StoreName , ZOOLI.SKU , ZOOLI.ProductName , ZOOLI.Price , ZC.Symbol  
                      HAVING SUM(ZOOLI.Quantity) > 0)  
  
                  SELECT StoreName , SKU , ProductName , dbo.Fn_GetDefaultInventoryRoundOff ( Quantity ) AS Quantity , DBO.Fn_GetDefaultPriceRoundOff ( Price ) AS Price ,   
      DBO.Fn_GetDefaultPriceRoundOff ( TotalAmount ) AS TotalAmount , Symbol FROM Cte_ReportData ORDER BY Cast( Quantity as Numeric) DESC;  
         END TRY  
  
         BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetPopularProductFiltered @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@SKU='+@SKU+',@ProductName='+@ProductName+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetPopularProductFiltered',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
GO
 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderPicklist')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderPicklist
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetOrderPicklist](  
      @PortalId  VARCHAR(MAX)  = '' ,  
      @Name      NVARCHAR(200) = '' ,  
      @BeginDate DATE          = NULL ,  
      @EndDate   DATE          = NULL)  
AS   
/*  
     Summary :- This Procedure is used to find the Order having Submitted Status   
     Unit Testing   
     EXEC ZnodeReport_GetOrderPicklist @Name = 'Harry Potter123' , @BeginDate = '2016-12-21 09:53:53.043' ,@EndDate= '2017-11-21 09:53:53.043'  
*/  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;   
  
             -- Select Order PickList report data  
             SELECT O.[OmsOrderId] ,ZO.OrderNumber , O.[BillingFirstName] , O.[BillingLastName] , O.[OrderDate] , P.[StoreName] AS 'StoreName' , ISNULL(ZC.Symbol , [dbo].[Fn_GetDefaultCurrencySymbol]()) AS Symbol  
             FROM ZnodeOmsOrderDetails AS O INNER JOIN ZNodePortal AS P ON P.PortalID = O.PortalId  
                                            --LEFT JOIN ZnodeCurrency AS ZC ON ( ZC.CurrencyCode = O.CurrencyCode )  
											 LEFT JOIN ZnodeCulture AS ZC ON ( ZC.CultureCode = O.CurrencyCode )  
            INNER JOIN ZnodeOMSOrderState ZOOS ON O.OmsOrderStateId = ZOOS.OmsOrderStateId AND   ZOOS.OrderStateName = 'Submitted'  
            Inner join ZnodeOMSOrder Zo ON O.OMSOrderId = Zo.OMSOrderId    
             WHERE   
                   ( ( EXISTS ( SELECT TOP 1 1  
                                FROM dbo.split ( @PortalId , ','  
                                               ) AS SP  
                                WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item  
                                      OR  
                                      @PortalId = ''  
                              ) ) )  
                   AND  
                   ( ISNULL(O.[BillingFirstName] , '')+' '+ISNULL(O.[BillingLastName] , '') LIKE '%'+@Name+'%'  
                     OR  
                     @Name = '' )  
                   AND  
                   ( CAST(O.[OrderDate] AS DATE) BETWEEN CASE  
                                                             WHEN @BeginDate IS NULL  
                                                             THEN CAST(O.[OrderDate] AS DATE)  
                                                             ELSE @BeginDate  
                                                         END AND CASE  
                                                                     WHEN @EndDate IS NULL  
                                                                     THEN CAST(O.[OrderDate] AS DATE)  
                                                                     ELSE @EndDate  
                                                                 END );  
         END TRY  
         BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderPicklist @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Name='+@Name+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetOrderPicklist',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
GO

 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderLineItemByOrderId')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderLineItemByOrderId
END
GO
CREATE  PROCEDURE [dbo].[ZnodeReport_GetOrderLineItemByOrderId](@OmsOrderId INT)  
AS   
    -- Summary :- This Procedure is Used to get the Order line item details   
    -- Unit Testing   
    -- EXEC  ZnodeReport_GetOrderLineItemByOrderId 5  
  BEGIN  
    SET NOCOUNT ON;  
   SELECT OmsOrderLineItemsId,  
     ParentOmsOrderLineItemsId,  
     OrderLineItemRelationshipTypeId,  
     ZOOD.OmsOrderId OmsOrderDetailsId,  
     ZO.OrderNumber,  
     OmsOrderShipmentId,  
     Sku,  
     ProductName,  
     [Description],  
     [dbo].[Fn_GetDefaultInventoryRoundOff](Quantity) Quantity,  
     [dbo].[Fn_GetDefaultPriceRoundOff](Price) Price,  
     [dbo].[Fn_GetDefaultInventoryRoundOff]([Weight]) [Weight],  
     DownloadLink,  
     [dbo].[Fn_GetDefaultPriceRoundOff](ZOLI.DiscountAmount) DiscountAmount,  
     ShipSeparately,  
     ZOLI.ShipDate,  
     ZOLI.ReturnDate,  
     [dbo].[Fn_GetDefaultPriceRoundOff](ZOLI.ShippingCost) ShippingCost,  
     ZOLI.PromoDescription,  
     TransactionNumber,  
     PaymentStatusId,  
     ZOLI.TrackingNumber,  
     IsAutoGeneratedTracking,  
     OrderLineItemStateId,  
     IsRecurringBilling,  
     RecurringBillingPeriod,  
     RecurringBillingCycles,  
     RecurringBillingFrequency,  
     RecurringBillingAmount,  
     AppliedPromo,  
     CouponsApplied,  
     ZOLI.ExternalId,  
     ZOLI.IsActive,  
     ZOLI.CreatedBy,  
     ZOLI.CreatedDate,  
     ZOLI.ModifiedBy,  
     ZOLI.ModifiedDate,  
     ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol,  
     [dbo].[Fn_GetDefaultPriceRoundOff]( Quantity *Price)  SubTotal,  
     [dbo].[Fn_GetDefaultPriceRoundOff](SUm( Quantity *Price)OVER()) GrandTotal  
   FROM ZnodeOmsorderLineItems ZOLI   
   LEFT JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderDetailsId = ZOLI.OmsOrderDetailsId)  
   --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)  
      LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)  

   LEFT JOIN ZnodeOmsOrder ZO ON ZOOD.OmsOrderId =ZO.OmsOrderId  
   WHERE ZOOD.OmsOrderId = @OmsOrderId  
   AND zood.IsActive = 1   
   and Quantity > 0   
   AND ZOLI.RmaReasonForReturnId  IS NULL ;  
     END;
GO

 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderDetails')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderDetails
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetOrderDetails]  
(   @BeginDate      DATE          = NULL,  
    @EndDate        DATE          = NULL,  
    @PortalId       VARCHAR(MAX)  = '',  
    @OrderStateId   VARCHAR(MAX)  = '',  
    @PayemntTypeId  VARCHAR(MAX)  = '',  
    @ShippingTypeId VARCHAR(MAX)  = '',  
    @CustomerName   NVARCHAR(400) = '',  
    @EmailId        NVARCHAR(100) = '')  
AS   
/*  
     Summary:- this procedure is used to get the order details   
      
     EXEC ZnodeReport_GetOrderDetails   
*/  
     BEGIN  
  BEGIN TRY  
         SET NOCOUNT ON;  
         Declare @DateFormateId int   
     Select @DateFormateId  = DBO.Fn_GetDateTimeFormat();  
         SELECT DISTINCT  
    ZOO.OrderNumber,  
                ZOO.[OmsOrderID],  
                ZOOD.[PortalId],  
                ZOOD.[UserId],  
                ZOOD.[OmsOrderStateId],  
                ZOOD.[ShippingID],  
                ZOOD.[PaymentTypeId],  
                ZOOD.[BillingFirstName],  
                ZOOD.[BillingLastName],  
                ZOOD.[BillingCompanyName],  
                ZOOD.[BillingStreet1],  
                ZOOD.[BillingStreet2],  
                ZOOD.[BillingCity],  
                ZOOD.[BillingStateCode],  
                ZOOD.[BillingPostalCode],  
                ZOOD.[BillingCountry],  
                ZOOD.[BillingPhoneNumber],  
                ZOOD.[BillingEmailId],  
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[TaxCost]) TaxCost,  
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[ShippingCost]) [ShippingCost],  
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[SubTotal]) [SubTotal],  
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[DiscountAmount]) [DiscountAmount],  
                [dbo].[Fn_GetDefaultPriceRoundOff](ZOOD.[Total]) [Total],  
                CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,  
                ZOOD.[ShippingNumber],  
                ZOOD.[TrackingNumber],  
                ZOOD.[CouponCode],  
                ZOOD.[PromoDescription],  
                ZOOD.[ReferralUserId],  
                ZOOD.[PurchaseOrderNumber],  
                ZOOD.[OmsPaymentStateId],  
                ZOOD.[WebServiceDownloadDate],  
                ZOOD.[PaymentSettingID],  
                ZOOD.[ShipDate],  
                ZOOD.[ReturnDate],  
                ZOTOD.[SalesTax],  
                ZOTOD.[VAT],  
                ZOTOD.[GST],  
                ZOTOD.[PST],  
                ZOTOD.[HST],  
                P.[StoreName] AS 'StoreName',  
                OS.[OrderStateName] AS 'OrderStatus',  
                PT.[Name] AS 'PaymentTypeName',  
                ST.[Name] AS 'ShippingTypeName',  
    ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol  
         FROM ZNodeOmsOrder ZOO  
              INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId  
                                                      AND IsActive = 1)  
              INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId  
              LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID  
              LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS  
                                                    (  
                                                        SELECT TOP 1 1  
                                                        FROM ZnodeOmsOrderLineItems ZOOLI  
                                                        WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId  
                                                              AND ZOOLI.OmsOrderDetailsId = ZOO.OmsOrderId  
                                                    ))  
              LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOO.OmsOrderId)  
              LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID  
              LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID  
              LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId  
     -- LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )  
	     LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode )  
         WHERE  
     ((EXISTS  
               (  
                   SELECT TOP 1 1  
                   FROM dbo.split(@PortalId, ',') SP  
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item  
                         OR @PortalId = ''  
               )))  
              AND ((EXISTS  
                   (  
                       SELECT TOP 1 1  
                       FROM dbo.split(@OrderStateId, ',') SP  
                       WHERE CAST(ZOOD.[OmsOrderStateId] AS VARCHAR(100)) = SP.Item  
                             OR @OrderStateId = ''  
                   )))  
    AND ((EXISTS  
    (  
        SELECT TOP 1 1  
        FROM dbo.split(@PayemntTypeId, ',') SP  
        WHERE CAST(ZOOD.[PaymentTypeId] AS VARCHAR(100)) = SP.Item  
        OR @PayemntTypeId = '' OR ZOOD.PaymentTypeId IS NULL  
    )))  
    AND ((EXISTS  
    (  
        SELECT TOP 1 1  
        FROM dbo.split(@ShippingTypeId, ',') SP  
        WHERE CAST(ST.ShippingTypeID AS VARCHAR(100)) = SP.Item  
        OR @ShippingTypeId = ''  
    )))  
    AND (ZOOD.[BillingFirstName]+' '+ISNULL(ZOOD.[BillingLastName], '') LIKE '%'+@CustomerName+'%'  
    OR @CustomerName = '')  
    AND (ZOOD.[BillingEmailId] LIKE '%'+@EmailId+'%'  
    OR @EmailId = '')  
    AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
            WHEN @BeginDate IS NULL  
            THEN CAST(ZOOD.OrderDate AS DATE)  
            ELSE @BeginDate  
            END AND CASE  
                WHEN @EndDate IS NULL  
                THEN CAST(ZOOD.OrderDate AS DATE)  
                ELSE @EndDate  
                END);  
  
  END TRY  
  BEGIN CATCH  
  DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@OrderStateId='+@OrderStateId+',@PayemntTypeId='+@PayemntTypeId+',@Shippi
ngTypeId='+@ShippingTypeId+',@CustomerName='+@CustomerName+',@EmailId='+@EmailId+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetOrderDetails',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
  END CATCH  
     END;
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetFrequentUsers')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetFrequentUsers
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetFrequentUsers]  
(   @BeginDate   DATE         = NULL,  
 @EndDate     DATE         = NULL,  
 @PortalId    VARCHAR(MAX) = '',  
 @UserId      VARCHAR(MAX) = '',  
 @FirstName   VARCHAR(MAX) = '',  
 @LastName    VARCHAR(MAX) = '')  
AS   
/*  
     Summary :- This Procedure is used to get frequently Appear users    
     Unit Testing   
     EXEC ZnodeReport_GetFrequentUsers   
*/  
     BEGIN  
         BEGIN TRY  
          
             DECLARE @TBL_ReportOrderUser TABLE (OmsOrderId INT, UserId     INT, PortalId   INT);  
     DECLARE @TBL_ReportOrderDetails TABLE (UserId INT, BillingFirstName nvarchar(200),BillingLastName nvarchar (200),  
                                             StoreName nvarchar(max), OrderCount NVarchar(100), Total NVarchar(100),Symbol NVARCHAR(100) );  
             INSERT INTO @TBL_ReportOrderUser (OmsOrderId, UserId,PortalId)  
                      
    SELECT MAX(ZOOD.OmsOrderId) OmsOrderId,  
                           UserId,  
                           PortalId  
                    FROM ZnodeOmsOrderDetails ZOOD  
                    WHERE((EXISTS  
                          (  
                              SELECT TOP 1 1  
                              FROM dbo.split(@PortalId, ',') SP  
                              WHERE CAST(ZOOD.PortalId AS VARCHAR(100)) = SP.Item  
                                    OR @PortalId = ''  
                          )))  
                    GROUP BY UserId,  
                             PortalId;  
  
  
             WITH Cte_ReportUserDetails  
                  AS (SELECT ZOOD.UserId,  
                             ZOOD.BillingFirstName,  
                             ZOOD.BillingLastName,  
                            
                             ZOOD.PortalId,  
                             ZP.StoreName  
                      FROM @TBL_ReportOrderUser O  
                           INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = O.OmsOrderId)  
                           INNER JOIN ZnodePortal ZP ON(Zp.PortalId = ZOOD.PortalId)  
                      WHERE((EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@PortalId, ',') SP  
                                WHERE CAST(ZOOD.PortalId AS VARCHAR(100)) = SP.Item  
                                      OR @PortalId = ''  
                            ))))  
  
                  Insert into @TBL_ReportOrderDetails  (UserID , BillingFirstName ,BillingLastName , StoreName , OrderCount , Total,Symbol  )  
                  SELECT CTRO.UserId,  
                         CTRO.BillingFirstName,  
                         CTRO.BillingLastName,  
                         StoreName,  
                         COUNT(ZOOD.OmsOrderId) AS 'OrderCount',  
                         Dbo.Fn_GetDefaultPriceRoundOff(SUM(ZOOD.Total))AS 'Total',   
     ISNULL(ZC.Symbol,dbo.Fn_GetDefaultCurrencySymbol()) Symbol  
                  FROM Cte_ReportUserDetails CTRO  
                       INNER JOIN ZnodeOmsOrderDetails ZOOD ON(CTRO.UserId = ZOOD.UserId)  
                       --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)  
					   LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)  
                  WHERE(CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
                                                                 WHEN @BeginDate IS NULL  
                                                                 THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                 ELSE @BeginDate  
                                                             END AND   
             CASE  
                                                                         WHEN @EndDate IS NULL  
                                                                         THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                         ELSE @EndDate  
                                                             END)  
                       AND ((EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@PortalId, ',') SP  
                                WHERE CAST(CTRO.PortalId AS VARCHAR(100)) = SP.Item  
                                      OR @PortalId = ''  
                            )))  
                       AND (CTRO.BillingFirstName LIKE '%'+@FirstName+'%'  
                            OR @FirstName = '')  
                       AND (CTRO.BillingLastName LIKE '%'+@LastName+'%'  
                            OR @LastName = '')  
  
                       AND ((EXISTS  
                            (  
                                SELECT TOP 1 1  
                                FROM dbo.split(@UserId, ',') SP  
                                WHERE CAST(CTRO.UserId AS VARCHAR(100)) = ltrim(rtrim(SP.Item))  
                                      OR @UserId = ''  
                            )))  
                  GROUP BY CTRO.UserId,  
                           CTRO.BillingFirstName,  
                           CTRO.BillingLastName,  
                           StoreName,ZC.Symbol  
       
       Select * from @TBL_ReportOrderDetails ORder by CAST (Total AS Numeric) DESC;  
                   
         END TRY  
         BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetFrequentUsers @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@UserId='+@UserId+',@FirstName='+@FirstName+',@LastName='+@LastName+',@S
tatus='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetFrequentUsers',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetCouponFiltered')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetCouponFiltered
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetCouponFiltered]  
(   @BeginDate    DATE         = NULL,  
 @EndDate      DATE         = NULL,  
 @PortalId     VARCHAR(MAX) = '',  
 @DiscountCode NVARCHAR(50) = '',  
 @DiscountType VARCHAR(600) = '')  
AS   
/*  
     Summary:- this procedure is used to get coupon filtered ( include promotion details )  
      
     EXEC ZnodeReport_GetCouponFiltered @DiscountCode = 'o' ,@PortalId = '2,4,5' ,@DiscountType = 'pro'  
*/  
     BEGIN  
  BEGIN TRY  
         SET NOCOUNT ON;   
  
         DECLARE @ZnodeOmsOrderDiscount TABLE  
         (OmsOrderDiscountId INT,  
          OmsOrderDetailsId  INT,  
          OmsOrderLineItemId INT,  
          OmsDiscountTypeId  INT,  
          DiscountCode       VARCHAR(50),  
          DiscountAmount     NUMERIC(28, 6),  
          Description        NVARCHAR(MAX),  
          CreatedBy          INT,  
          CreatedDate        DATETIME,  
          ModifiedBy         INT,  
          ModifiedDate       DATETIME,  
          PortalId           INT,  
          Total              NUMERIC(28, 6),  
    Symbol    NVARCHAR(100),  
    OmsOrderDate       Datetime  
  
         );  
         INSERT INTO @ZnodeOmsOrderDiscount  
         (OmsOrderDiscountId,  
          OmsOrderDetailsId,  
            
          OmsDiscountTypeId,  
          DiscountCode,  
          DiscountAmount,  
          Description,  
          CreatedBy,  
          CreatedDate,  
          ModifiedBy,  
          ModifiedDate,  
          PortalId,  
          Total,Symbol,  
    OmsOrderDate  
         )  
                SELECT Distinct zood.OmsOrderDiscountId,  
                       ISNULL(zood.OmsOrderDetailsId, zooli.OmsOrderDetailsId),  
                        
                       zood.OmsDiscountTypeId,  
                       zood.DiscountCode,  
                       zood.DiscountAmount,  
                       zood.Description,  
                       zood.CreatedBy,  
                       zood.CreatedDate,  
                       zood.ModifiedBy,  
                       zood.ModifiedDate,  
                       zoods.PortalId,  
                       zoods.Total, ISNULL(ZC.Symbol,dbo.Fn_GetDefaultCurrencySymbol()) Symbol,zoods.OrderDate  
                FROM ZnodeOmsOrderDiscount AS zood  
                     LEFT OUTER JOIN ZnodeOmsOrderLineItems AS zooli ON zood.OmsOrderLineItemId = zooli.OmsOrderLineItemsId  
                     LEFT OUTER JOIN ZnodeOmsOrderDetails AS zoods ON ISNULL(zood.OmsOrderDetailsId, zooli.OmsOrderDetailsId) = zoods.OmsOrderDetailsId  
      --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOODS.CurrencyCode)  
	       LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOODS.CurrencyCode)  
      ;  
         SELECT zood.DiscountCode AS CouponCode,  
                zdt.[Name] AS DiscountType,  
                zp.[StoreName] AS StoreName,  
                COUNT(zood.DiscountCode) AS TotalCount,  
                [dbo].[Fn_GetDefaultPriceRoundOff](SUM(zood.Total)) AS Total,  
                [dbo].[Fn_GetDefaultPriceRoundOff](SUM(zood.DiscountAmount)) AS DiscountAmount,  
                ISNULL(zpr.[description], znpc.[description]) AS Description,  
                ISNULL(zpr.StartDate, znpc.StartDate) AS StartDate,  
                ISNULL(zpr.EndDate, znpc.EndDate) AS EndDate,Symbol  
         FROM @ZnodeOmsOrderDiscount AS zood  
              INNER JOIN ZnodePortal AS zp ON zood.PortalId = zp.PortalId  
              LEFT OUTER JOIN ZNodePromotion AS zpr ON zood.DiscountCode = zpr.PromoCode  
              LEFT OUTER JOIN ZnodePromotionCoupon AS zprc ON zood.DiscountCode = zprc.Code  
              LEFT OUTER JOIN ZNodePromotion AS znpc ON zprc.PromotionId = znpc.PromotionId  
              LEFT OUTER JOIN ZnodeOmsDiscountType AS zdt ON zood.OmsDiscountTypeId = zdt.OmsDiscountTypeId  
         WHERE((EXISTS  
               (  
                   SELECT TOP 1 1  
                   FROM dbo.split(@PortalId, ',') AS SP  
                   WHERE CAST(zp.PortalId AS VARCHAR(100)) = SP.Item  
                         OR @PortalId = ''  
               )))  
              AND (ISNULL(zood.DiscountCode, '') LIKE '%'+@DiscountCode+'%'  
                   OR @DiscountCode = '')  
              AND (ISNULL(zdt.[Name], '') LIKE '%'+@DiscountType+'%'  
                   OR @DiscountType = '')  
     AND (CAST(zood.OmsOrderDate AS DATE) BETWEEN CASE  
    WHEN @BeginDate IS NULL  
     THEN CAST(zood.OmsOrderDate AS DATE)  
    ELSE @BeginDate  
    END AND CASE  
    WHEN @EndDate IS NULL  
    THEN CAST(zood.OmsOrderDate AS DATE)  
    ELSE @EndDate  
    END  
   )  
         GROUP BY zp.StoreName,  
                  zood.DiscountCode,  
                  ISNULL(zpr.[description], znpc.[description]),  
                  ISNULL(zpr.StartDate, znpc.StartDate),  
                  ISNULL(zpr.EndDate, znpc.EndDate),  
                  zdt.Name,  
                  zood.PortalId,Symbol;  
  
  END TRY  
  BEGIN CATCH  
  DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetCouponFiltered @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@DiscountCode='+@DiscountCode+',@DiscountType='+@DiscountType+',@Status
='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetCouponFiltered',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
  END CATCH  
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetAffiliateFiltered')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetAffiliateFiltered
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetAffiliateFiltered]  
(   @BeginDate    DATE          = NULL,  
    @EndDate      DATE          = NULL,  
    @PortalId     VARCHAR(MAX)  = '',  
    @CustomerName NVARCHAR(400) = '')  
AS   
/*  
     Summary:- this procedure is used to get affiliated filtered ( ReferralCommission )  
     Unit Testing  
     EXEC ZnodeReport_GetAffiliateFiltered @CustomerName = ''   
 */  
     BEGIN  
  BEGIN TRY  
         SET NOCOUNT ON;   
    
         SELECT(zu.FirstName+' '+zu.LastName) AS 'Name',  
                
               zp.StoreName AS 'StoreName',  
               COUNT(zoods.UserId) AS 'NumberOfOrders',  
               [dbo].[Fn_GetDefaultPriceRoundOff](SUM(zoods.Total)) AS 'OrderValue',  
               zrct.[Name] AS 'CommissionType',  
               [dbo].[Fn_GetDefaultPriceRoundOff](zorc.OrderCommission) AS 'Commission',  
               [dbo].[Fn_GetDefaultPriceRoundOff]  
         (CASE  
              WHEN zrct.ReferralCommissionTypeID = 1  
              THEN --SUM(O.Total) * RC.ReferralCommission / 100  
          (SUM(ISNULL(zoods.SubTotal, 0)) - (SUM(ISNULL(zoods.DiscountAmount, 0)) + SUM(ISNULL(zgch.TransactionAmount, 0))) * ISNULL(zorc.OrderCommission, 0)) / 100  
              WHEN zrct.ReferralCommissionTypeID = 2  
              THEN ISNULL(zorc.OrderCommission, 0)  
          END  
         ) AS 'CommissionOwned',  
               zrct.ReferralCommissionTypeID AS ReferralCommissionTypeID  
      ,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]())Symbol  
         FROM ZnodeUser AS zu  
              INNER JOIN ZnodeOmsOrderDetails AS zood ON zu.UserId = zood.ReferralUserId  
              INNER JOIN ZnodeOmsReferralCommission AS zorc ON zorc.UserId = zu.userId  
              INNER JOIN ZnodeReferralCommissionType AS zrct ON zu.ReferralCommissionTypeId = zrct.ReferralCommissionTypeId  
              INNER JOIN ZnodeOmsOrderDetails AS zoods ON zood.OmsOrderDetailsId = zoods.OmsOrderDetailsId  
              INNER JOIN ZnodePortal AS zp ON zood.Portalid = zp.Portalid  
              LEFT OUTER JOIN ZnodeUserAddress AS zud ON zud.UserId = zu.UserId  
              LEFT JOIN ZnodeAddress AS za ON zud.AddressId = za.AddressId  
                                               AND za.IsDefaultBilling = 1  
              LEFT OUTER JOIN ZnodeGiftCardHistory AS zgch ON zoods.OmsOrderDetailsId = zgch.OmsOrderDetailsId  
     --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode =  ZOOD.CurrencyCode)  
	 LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode =  ZOOD.CurrencyCode)  
         WHERE zu.ReferralStatus = 'A'  
               AND zoods.OmsOrderDetailsId = zorc.OmsOrderDetailsId  
               AND (ISNULL(zu.FirstName, '')+' '+ISNULL(zu.LastName, '') LIKE '%'+@CustomerName+'%'  
                    OR @CustomerName = '')  
               AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
                                                             WHEN @BeginDate IS NULL  
                                                             THEN CAST(ZOOD.OrderDate AS DATE)  
                                                             ELSE @BeginDate  
                                                         END AND CASE  
                                                                     WHEN @EndDate IS NULL  
                                                                     THEN CAST(ZOOD.OrderDate AS DATE)  
                                                                     ELSE @EndDate  
                                                                 END)  
               AND ((EXISTS  
                    (  
                        SELECT TOP 1 1  
                        FROM dbo.split(@PortalId, ',') AS SP  
                        WHERE CAST(zp.PortalId AS VARCHAR(100)) = SP.Item  
                              OR @PortalId = ''  
                    )))  
         GROUP BY zp.StoreName,  
                  zu.FirstName,  
                  zu.LastName,  
                  zrct.[Name],  
                  zorc.OrderCommission,  
                  zrct.ReferralCommissionTypeId,ZC.Symbol;  
  END TRY  
  BEGIN CATCH  
  DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetAffiliateFiltered @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@CustomerName='+@CustomerName+',@Status='+CAST(@Status AS VARCHAR(10
));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetAffiliateFiltered',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
  END CATCH  
     END;
	GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_DashboardTopProducts')
BEGIN 
	DROP PROCEDURE ZnodeReport_DashboardTopProducts
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_DashboardTopProducts]    
(           
 @PortalId       VARCHAR(MAX)  = '',    
 @BeginDate      DATE          = NULL,    
 @EndDate        DATE          = NULL    
)    
AS     
/*    
     Summary:- This procedure is used to get the order details     
     Unit Testing:    
     EXEC ZnodeReport_DashboardTopProducts    
 */    
     BEGIN    
  BEGIN TRY    
        SET NOCOUNT ON;    
  Declare @TopOrders TABLE (Products nvarchar(100), Orders int , Sales Nvarchar(100),Symbol NVARCHAR(10))   
    
  DECLARE @TBL_CultureCurrency TaBLE (Symbol Varchar(100),CurrencyCode varchar(100))    
   INSERT INTO @TBL_CultureCurrency (Symbol,CurrencyCode)    
   SELECT Symbol,CultureCode from  ZnodeCulture ZC         -- Changed table name from ZnodeCurrency to ZnodeCulture here.  
   -- LEFT JOIN ZnodeCulture ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)    
      
  INSERT INTO @TopOrders (Products, Orders, Sales,Symbol )    
   SELECT ProductName,count(zood.OmsOrderDetailsId) Orders ,    
   --[dbo].[Fn_GetDefaultPriceRoundOff]( Sum(zoolit.price)) Sales    
   [dbo].[Fn_GetDefaultPriceRoundOff]( Sum(zoolit.Quantity * zoolit.price)) Sales    
    ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalId AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol   
   --,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
   from ZnodeOmsOrderLineItems zoolit INNER JOIN ZnodeOmsOrderDetails zood     
   ---ON zoolit.OmsOrderDetailsId = zood.OmsOrderDetailsId  LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
    ON zoolit.OmsOrderDetailsId = zood.OmsOrderDetailsId   LEFT JOIN @TBL_CultureCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
                      
   WHERE ZOOD.IsActive =1 AND     
    ((EXISTS    
       (    
        SELECT TOP 1 1    
        FROM dbo.split(@PortalId, ',') SP    
        WHERE CAST(zood.PortalId AS VARCHAR(100)) = SP.Item    
        OR @PortalId = ''    
       ))    
     )    
    AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE    
             WHEN @BeginDate IS NULL    
             THEN CAST(ZOOD.OrderDate AS DATE)    
             ELSE @BeginDate    
             END AND CASE    
                 WHEN @EndDate IS NULL    
                 THEN CAST(ZOOD.OrderDate AS DATE)    
                 ELSE @EndDate    
              END)    
   Group by zoolit.ProductName,zoolit.sku ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]())      
   -- Group by zoolit.ProductName,zoolit.sku ,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]())  
    
   select top 5 Products, Orders, Sales  ,Symbol   from @TopOrders Order by  Convert(numeric,Sales )  desc      
       
   END TRY    
   BEGIN CATCH    
   DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),    
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_DashboardTopProducts @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'ZnodeReport_DashboardTopProducts',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
   END CATCH     
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_DashboardTopCategory')
BEGIN 
	DROP PROCEDURE ZnodeReport_DashboardTopCategory
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_DashboardTopCategory]    
(           
 @BeginDate      DATE          = NULL,    
 @EndDate        DATE          = NULL,    
 @PortalId       VARCHAR(MAX)  = ''    
)    
AS     
/*    
     Summary:- This procedure is used to get the order details     
    Unit Testing:    
     EXEC [ZnodeReport_DashboardTopCategory]    
*/    
     BEGIN    
  BEGIN TRY    
        SET NOCOUNT ON;    
     DECLARE @TopBrand TABLE (Categories nvarchar(100), Orders int , Sales   Nvarchar(100),Symbol NVARCHAR(10))     
  
       
  DECLARE @TBL_CultureCurrency TaBLE (Symbol Varchar(100),CurrencyCode varchar(100))    
   INSERT INTO @TBL_CultureCurrency (Symbol,CurrencyCode)    
   SELECT Symbol,CultureCode from  ZnodeCulture ZC     
   -- LEFT JOIN ZnodeCulture ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)    
    
      
  INSERT INTO @TopBrand (Categories, Orders, Sales, Symbol )    
   SELECT ZOOA.AttributeValue Brands,count(Distinct zood.OmsOrderId) Orders ,[dbo].[Fn_GetDefaultPriceRoundOff]( Sum(zoolit.Quantity * zoolit.price)) Sales  
   ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalId AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol   
   --,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
   from ZnodeOmsOrderLineItems zoolit INNER JOIN ZnodeOmsOrderDetails zood     
   --ON zoolit.OmsOrderDetailsId = zood.OmsOrderDetailsId LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
     ON zoolit.OmsOrderDetailsId = zood.OmsOrderDetailsId LEFT JOIN @TBL_CultureCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
   INNER JOIN ZnodeOmsOrderAttribute ZOOA ON zoolit.OmsOrderLineItemsId = ZOOA.OmsOrderLineItemsId AND  ZOOA.AttributeCode = 'CategoryName'     
   AND ZOOA.AttributeValue IS NOT NULL    
   WHERE ZOOD.IsActive =1 AND     
   ((EXISTS    
       (    
        SELECT TOP 1 1    
        FROM dbo.split(@PortalId, ',') SP    
        WHERE CAST(zood.PortalId AS VARCHAR(100)) = SP.Item    
        OR @PortalId = ''    
       ))    
   )    
   AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE    
             WHEN @BeginDate IS NULL    
             THEN CAST(ZOOD.OrderDate AS DATE)    
             ELSE @BeginDate    
             END AND CASE    
                 WHEN @EndDate IS NULL    
                 THEN CAST(ZOOD.OrderDate AS DATE)    
                 ELSE @EndDate    
              END)    
   Group by ZOOA.AttributeValue,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalId AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]())   
   -- Group by ZOOA.AttributeValue,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]())     
    
   SELECT TOP 5 Categories, Orders, Sales  ,Symbol FROM @TopBrand Order by  Convert(numeric,Sales )  desc      
   END TRY    
    
   BEGIN CATCH    
   DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),    
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_DashboardTopCategory @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'ZnodeReport_DashboardTopCategory',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
   END CATCH    
    
  END;
  GO
  IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_DashboardTopBrands')
BEGIN 
	DROP PROCEDURE ZnodeReport_DashboardTopBrands
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_DashboardTopBrands]    
(           
 @PortalId       VARCHAR(MAX)  = '',    
 @BeginDate      DATE          = NULL,    
 @EndDate        DATE          = NULL    
     
)    
AS     
   /*  Summary:- This procedure is used to get the order details     
    Unit Testing:    
     EXEC ZnodeReport_DashboardTopBrands    
    
 */    
     BEGIN    
  BEGIN TRY    
        SET NOCOUNT ON;    
      
  DECLARE @TopBrand TABLE (Brands nvarchar(100), Orders int , Sales  Nvarchar(100),Symbol NVARCHAR(10))    
    
     DECLARE @TBL_CultureCurrency TaBLE (Symbol Varchar(100),CurrencyCode varchar(100))    
   INSERT INTO @TBL_CultureCurrency (Symbol,CurrencyCode)    
   SELECT Symbol,CultureCode from  ZnodeCulture ZC         -- Chnaged table name from ZnodeCurrency to ZnodeCulture here.  
   -- LEFT JOIN ZnodeCulture ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)    
     
      
  INSERT INTO @TopBrand (Brands, Orders, Sales,Symbol )    
   SELECT ZOOA.AttributeValue Brands,count(Distinct zood.OmsOrderDetailsId) Orders ,    
   --[dbo].[Fn_GetDefaultPriceRoundOff]( Sum(zoolit.price)) Sales    
   [dbo].[Fn_GetDefaultPriceRoundOff]( Sum(zoolit.Quantity * zoolit.price)) Sales    
   ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
   --,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
   from ZnodeOmsOrderLineItems zoolit INNER JOIN ZnodeOmsOrderDetails zood     
   --ON zoolit.OmsOrderDetailsId = zood.OmsOrderDetailsId LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
    ON zoolit.OmsOrderDetailsId = zood.OmsOrderDetailsId LEFT JOIN @TBL_CultureCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
   INNER JOIN ZnodeOmsOrderAttribute ZOOA ON zoolit.OmsOrderLineItemsId = ZOOA.OmsOrderLineItemsId AND  ZOOA.AttributeCode = 'Brand'     
   AND ZOOA.AttributeValue IS NOT NULL    
   WHERE ZOOD.IsActive =1 AND     
    ((EXISTS    
       (    
        SELECT TOP 1 1    
        FROM dbo.split(@PortalId, ',') SP    
        WHERE CAST(zood.PortalId AS VARCHAR(100)) = SP.Item    
        OR @PortalId = ''    
       ))    
     )    
    AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE    
             WHEN @BeginDate IS NULL    
             THEN CAST(ZOOD.OrderDate AS DATE)    
             ELSE @BeginDate    
             END AND CASE    
                 WHEN @EndDate IS NULL    
                 THEN CAST(ZOOD.OrderDate AS DATE)    
                 ELSE @EndDate    
              END)    
   Group by ZOOA.AttributeValue,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]())       
   -- Group by ZOOA.AttributeValue,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]())  
    
   select top 5 Brands, Orders, Sales  ,Symbol   from @TopBrand Order by  Convert(numeric,Sales )  desc      
   END TRY    
   BEGIN CATCH    
   DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),    
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_DashboardTopBrands @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'ZnodeReport_DashboardTopBrands',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
   END CATCH    
    
  END;
  GO
  IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_DashboardSalesTables')
BEGIN 
	DROP PROCEDURE ZnodeReport_DashboardSalesTables
END
GO
CREATE  PROCEDURE [dbo].[ZnodeReport_DashboardSalesTables]    
(   @BeginDate      DATE          = NULL,    
 @EndDate        DATE          = NULL,    
 @PortalId       VARCHAR(MAX)  = ''    
)    
AS     
  /* Summary:- This procedure is used to get the order details     
    Unit Testing:    
     EXEC ZnodeReport_DashboardSalesTables    
 */    
     BEGIN    
  BEGIN TRY    
         SET NOCOUNT ON;    
   Declare @Tbl_UserData TABLE (UserId int , RoleName  nvarchar(100),FullName nvarchar(300),Email nvarchar(300), UserName nvarchar(300))    
  
   DECLARE @TBL_CultureCurrency TaBLE (Symbol Varchar(100),CurrencyCode varchar(100))    
   INSERT INTO @TBL_CultureCurrency (Symbol,CurrencyCode)    
   SELECT Symbol,CultureCode from  ZnodeCulture ZC         -- Changed table name from ZnodeCurrency to ZnodeCulture  
   -- LEFT JOIN ZnodeCulture ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)   
          
   Insert into @Tbl_UserData (UserId, RoleName,FullName, Email, UserName )    
   select zu.UserId,znr.Name, ISnull(zu.FirstName,'') + ' ' + Isnull(MiddleName,'') + ' ' + Isnull(LastName,'') FullName, zu.Email,  anzu.UserName from AspNetUsers  anu inner join AspNetZnodeUser anzu on anu.UserName = anzu.AspNetZnodeUserId    
   inner join ZnodeUser zu on anu.id = zu.AspNetUserId    
   inner join AspNetUserRoles anur on anur.UserId = zu.AspNetUserId    
   inner join AspNetRoles znr on anur.RoleId = znr.Id    
    
   SELECT distinct ZOOD.OmsOrderDetailsId, P.StoreName,ZU.*,    
                Convert(Date, ZOOD.OrderDate) OrderDate,     
    ZOOD.Total  
 ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
 --,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
         FROM ZnodeOmsOrderDetails ZOOD INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId    
              LEfT  JOIN @Tbl_UserData  ZU ON ZOOD.UserId = ZU.UserId    
                        LEFT JOIN @TBL_CultureCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )      
         WHERE ZOOD.IsActive =1 AND     
      ((EXISTS    
               (    
                   SELECT TOP 1 1    
                   FROM dbo.split(@PortalId, ',') SP    
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item    
                         OR @PortalId = ''    
               ))    
    )    
   AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE    
            WHEN @BeginDate IS NULL    
            THEN CAST(ZOOD.OrderDate AS DATE)    
            ELSE @BeginDate    
            END AND CASE    
                WHEN @EndDate IS NULL    
                THEN CAST(ZOOD.OrderDate AS DATE)    
                ELSE @EndDate    
                END)    
  END TRY    
  BEGIN CATCH    
  DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),    
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_DashboardSalesTables @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'ZnodeReport_DashboardSalesTables',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
  END CATCH    
      
  END;
  GO
  IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_DashboardSalesOrders')
BEGIN 
	DROP PROCEDURE ZnodeReport_DashboardSalesOrders
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_DashboardSalesOrders]  
(   @BeginDate      DATE          = NULL,  
 @EndDate        DATE          = NULL,  
 @PortalId       VARCHAR(MAX)  = ''  
)  
AS   
   /* Summary:- This procedure is used to get the order details   
     Unit Testing:  
     EXEC ZnodeReport_DashboardSalesOrders  
  
 */  
     BEGIN  
  BEGIN TRY  
         SET NOCOUNT ON;  
    
   Declare @CalculateTotalValues TABLE (OrderDate Datetime , TotalOrders int,TotalSales numeric(28,6),Symbol NVARCHAR(10))  
         DECLARE @TotalNewCust int, @Frequency int 
		 
		   DECLARE @TBL_CultureCurrency TaBLE (Symbol Varchar(100),CurrencyCode varchar(100))  
   INSERT INTO @TBL_CultureCurrency (Symbol,CurrencyCode)  
   SELECT Symbol,CultureCode from  ZnodeCulture ZC    --- Changed table name from ZnodeCurrency to ZnodeCulture here.
   -- LEFT JOIN ZnodeCulture ZCC ON (ZC.CurrencyId = ZCC.CurrencyId) 
  
		  
   IF @BeginDate IS NOT NULL  AND @EndDate IS NOT NULL AND @BeginDate <> @EndDate   
   SET  @Frequency = DateDiff(day,@BeginDate,@EndDate)  
   ELSE   
   SET  @Frequency = 1    
      insert into @CalculateTotalValues (OrderDate, TotalOrders,TotalSales,Symbol)  
         SELECT   
                Convert(Date, ZOOD.OrderDate) OrderDate, count(*)  Orders , sum(ZOOD.Total) Sales  
	,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol 	
    --,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol  
	
         FROM ZNodeOmsOrder ZOO  
              INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1)  
              INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId  
                
              LEFT JOIN @TBL_CultureCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )   
         WHERE ZOOD.IsActive =1 AND   
      ((EXISTS  
               (  
                   SELECT TOP 1 1  
                   FROM dbo.split(@PortalId, ',') SP  
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item  
                         OR @PortalId = ''  
               ))  
    )  
   AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE  
            WHEN @BeginDate IS NULL  
            THEN CAST(ZOOD.OrderDate AS DATE)  
            ELSE @BeginDate  
            END AND CASE  
                WHEN @EndDate IS NULL  
                THEN CAST(ZOOD.OrderDate AS DATE)  
                ELSE @EndDate  
                END)  
   Group by Convert(Date, ZOOD.OrderDate) ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Order by Convert(Date, ZOOD.OrderDate)     
   --Group by Convert(Date, ZOOD.OrderDate) ,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Order by Convert(Date, ZOOD.OrderDate)     
      
   SELECT OrderDate , TotalOrders, [dbo].[Fn_GetDefaultPriceRoundOff](TotalSales) TotalSales,Symbol  
   FROM @CalculateTotalValues     
  END TRY  
  BEGIN CATCH  
  DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_DashboardSalesOrders @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_DashboardSalesOrders',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
  END CATCH  
  END;
  GO
  IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_Dashboard')
BEGIN 
	DROP PROCEDURE ZnodeReport_Dashboard
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_Dashboard]    
(           
  @PortalId       VARCHAR(MAX)  = '',    
  @BeginDate      DATE          = NULL,    
        @EndDate        DATE          = NULL    
            
)    
AS     
/*    
    Summary:- This procedure is used to get the order details     
    Unit Testing:    
    EXEC ZnodeReport_Dashboard    
*/    
     BEGIN    
  BEGIN TRY    
         SET NOCOUNT ON;    
   Declare @TotalValues TABLE (TotalOrders INT,TotalSales numeric(28,6),TotalNewCust int ,TotalAvgOrders INT,Symbol NVARCHAR(10) null )    
   Declare @CalculateTotalValues TABLE (OrderDate Datetime , TotalOrders INT,TotalSales numeric(28,6),TotalAvgOrders INT null ,Symbol NVARCHAR(10))    
         DECLARE @TotalNewCust int, @Frequency int    
  
     DECLARE @TBL_CultureCurrency TaBLE (Symbol Varchar(100),CurrencyCode varchar(100))    
   INSERT INTO @TBL_CultureCurrency (Symbol,CurrencyCode)    
   SELECT Symbol,CultureCode from  ZnodeCulture ZC  -- Changed ZnodeCurrency to ZnodeCulture here.  
   
   -- LEFT JOIN ZnodeCulture ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)    
    
  
   IF @BeginDate IS NOT NULL  AND @EndDate IS NOT NULL  AND @BeginDate <> @EndDate     
   SET  @Frequency = DateDiff(day,@BeginDate,@EndDate)    
   ELSE     
   SET  @Frequency = 1    
         
      insert into @CalculateTotalValues (OrderDate, TotalOrders,TotalSales,Symbol)    
         SELECT     
                Convert(Date, ZOOD.OrderDate) OrderDate, count(*)  Orders , sum(ZOOD.Total) Sales,  
  COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol     
    --,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol    
         FROM ZNodeOmsOrder ZOO    
              INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1)    
              INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId    
               
             LEFT JOIN @TBL_CultureCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )    
         WHERE ZOOD.IsActive =1 AND     
      ((EXISTS    
               (    
                   SELECT TOP 1 1    
                   FROM dbo.split(@PortalId, ',') SP    
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item    
                         OR @PortalId = ''    
               ))    
    )    
   AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE    
            WHEN @BeginDate IS NULL    
            THEN CAST(ZOOD.OrderDate AS DATE)    
            ELSE @BeginDate    
            END AND CASE    
                WHEN @EndDate IS NULL    
                THEN CAST(ZOOD.OrderDate AS DATE)    
                ELSE @EndDate    
                END)    
 Group by Convert(Date, ZOOD.OrderDate) ,COALESCE (ZC.Symbol,[dbo].[Fn_GetPortalCurrencySymbol](CAST(@PortalID AS INTEGER)),[dbo].[Fn_GetDefaultCurrencySymbol]()) Order by Convert(Date, ZOOD.OrderDate)     
   --Group by Convert(Date, ZOOD.OrderDate) ,ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Order by Convert(Date, ZOOD.OrderDate)  
  
        
    -- this will CHECK for customer     
  SELECT @TotalNewCust = COUNT(*) FROM View_CustomerUserDetail CUD  WHERE RoleName <> 'Admin'      
      
  AND    
   ((EXISTS    
               (    
                   SELECT TOP 1 1    
                   FROM dbo.split(@PortalId, ',') SP    
                   WHERE CAST(CUD.PortalId AS VARCHAR(100)) = SP.Item    
                         OR @PortalId = ''    
               )))    
    AND (CAST(CUD.CreatedDate AS DATE) BETWEEN CASE    
            WHEN @BeginDate IS NULL    
            THEN CAST(CUD.CreatedDate AS DATE)    
            ELSE @BeginDate    
            END AND CASE    
                WHEN @EndDate IS NULL    
                THEN CAST(CUD.CreatedDate AS DATE)    
                ELSE @EndDate    
                END)    
    
  insert into @TotalValues (TotalOrders,TotalSales,Symbol,TotalNewCust)    
  select  Sum(TotalOrders),Sum(TotalSales),Symbol,@TotalNewCust from @CalculateTotalValues  group by Symbol    
      
  Select TotalOrders, [dbo].[Fn_GetDefaultPriceRoundOff](TotalSales) TotalSales    
  ,  TotalNewCust    
  ,TotalOrders / @Frequency TotalAvgOrders ,Symbol from @TotalValues     
      
  END TRY    
  BEGIN CATCH    
  DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),    
     @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_Dashboard @BeginDate = '+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'ZnodeReport_Dashboard',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
  END CATCH    
  END;
  GO
  IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetGiftCardList')
BEGIN 
	DROP PROCEDURE Znode_GetGiftCardList
END
GO
CREATE PROCEDURE [dbo].[Znode_GetGiftCardList]  
(   @WhereClause NVARCHAR(max),  
    @Rows        INT            = 100,  
    @PageNo      INT            = 1,  
    @Order_BY    VARCHAR(1000)  = '',  
    @RowsCount   INT  out,  
 @PortalId varchar(100),  
 @ExpirationDate VARCHAR(100) = ''  
  )    
AS   
/*  
    Summary: This procedure is used to find the GiftCardList of user for portal   
 Unit Testing:   
 declare @aa int  
 EXEC Znode_GetGiftCardList @WhereClause='Userid = 5 '  
  ,@PortalId ='1,2,3,4,6,7,9,10,1010,1011,1012,1013,1014,1015,1016,1020,1021,1023,1024,1025,1028,1029,1030',  @RowsCount= 0,@ExpirationDate = '2017-04-06'  
  
     EXEC Znode_GetGiftCardList @WhereClause='' ,@PortalId ='1',  @RowsCount= 0,@ExpirationDate = '2017-04-06'  
*/  
  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;  
             DECLARE @SQL NVARCHAR(MAX);  
    DECLARE @TBL_GiftCardList TABLE (StoreName NVARCHAR(MAX),Name NVARCHAR(600)  
            ,CardNumber NVARCHAR(600),CreatedDate DATETIME, ExpirationDate DATETIME  
            ,Amount NUMERIC(28,6),CustomerId INT,CustomerName NVARCHAR(512),GiftCardId INT,UserId INT,CultureCode VARCHAR(100), RowId INT, CountNo INT  )  
  
    SET @SQL ='  
      DECLARE @TBL_PortalId TABLE (PortalId INT)  
                  INSERT INTO @TBL_PortalId    
      SELECT  ITEM  FROM dbo.split( '''+@PortalId+''','','') AS a;   
  
      ;WITH CTE_GetGiftCard AS  
      (  
      SELECT ZP.StoreName,Name,CardNumber,ZGC.CreatedDate, ExpirationDate,Amount,ZGC.UserId AS CustomerId,  
      CASE WHEN ZU.FirstName IS NULL THEN '''' ELSE ZU.FirstName END + CASE WHEN ZU.LastName IS NULL  THEN '''' ELSE '' ''+ZU.LastName END as CustomerName  
      ,GiftCardId, ZU.UserId,IsReferralCommission,zc.CultureCode AS CurrencyCode
      FROM ZnodeGiftCard ZGC   
      INNER JOIN ZnodePortal ZP ON (ZGC.PortalId = ZP.PortalId)  
      INNER JOIN ZnodePortalUnit zpu on (zp.PortalId = zpu.PortalId)  
      LEFT JOIN ZnodeCulture zc on (zc.CultureId = zpu.CultureId)  
      LEFT JOIN ZnodeUser ZU ON (ZU.UserId = ZGC.UserId)  
      LEFT JOIN @TBL_PortalId TP ON (TP.PortalId = ZGC.PortalId)  
        
         WHERE (CONVERT(date,''' +@ExpirationDate+''' ) <= CONVERT(DATE,ZGC.ExpirationDate) OR ZGC.ExpirationDate IS  NULL)  OR '''+@ExpirationDate+''' = ''''  
      )  
      , CTE_GetGiftCardList AS  
      (  
      SELECT StoreName,Name,CardNumber,CreatedDate,ExpirationDate,Amount,CustomerId,CustomerName,GiftCardId,UserId,CurrencyCode,  
      '+dbo.Fn_GetPagingRowId(@Order_BY,'GiftCardId DESC')+',Count(*)Over() CountNo   
      FROM CTE_GetGiftCard  
      WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'       
      )  
  
      SELECT StoreName,Name,CardNumber,CreatedDate,ExpirationDate,Amount,CustomerId,CustomerName,GiftCardId,UserId,CurrencyCode,RowId,CountNo  
      FROM CTE_GetGiftCardList  
      '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
       
     
   INSERT INTO @TBL_GiftCardList  
   EXEC(@SQL)  
  
   SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_GiftCardList ),0)  
     
   SELECT StoreName,Name,CardNumber,CreatedDate,ExpirationDate,Amount,CustomerId,CustomerName,GiftCardId,UserId,CultureCode  
   FROM @TBL_GiftCardList  
  
      END TRY  
   BEGIN CATCH  
    DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetGiftCardList @WhereClause = '+CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@PortalId='+@PortalId+',@ExpirationDate='+CAST(@ExpirationDate AS VARCHAR(50))+'@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'Znode_GetGiftCardList',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
   END CATCH  
     END
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetOmsAccountOrderList')
BEGIN 
	DROP PROCEDURE Znode_GetOmsAccountOrderList
END
GO
CREATE PROCEDURE [dbo].[Znode_GetOmsAccountOrderList]  
( @WhereClause NVARCHAR(MAX),  
  @Rows        INT           = 100,  
  @PageNo      INT           = 1,  
  @Order_BY    VARCHAR(100)  = '',  
  @RowsCount   INT OUT,  
  @AccountId   INT)  
AS   
 /*  
  Summary :- This procedure is used to get the Quote list of account and Users   
    Fn_GetRecurciveAccounts is used to fetch AccountId and Its recursive ParentId   
    The result id fetched on the basis of AccountId of the User  
     Unit Testing    
     EXEC Znode_GetOmsAccountOrderList '' ,@RowsCount = 0 ,@AccountId = 1  
   
*/  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;  
             DECLARE @SQL NVARCHAR(MAX);  
  
             DECLARE @TBL_QuoteDetails TABLE (OmsOrderId INT,UserName NVARCHAR(300),OrderAmount NUMERIC(28, 6),[Status] VARCHAR(300),CreatedDate DATETIME,OmsPaymentStateId INT,OmsPaymentState NVARCHAR(MAX),  
                     PaymentTypeId INT,PaymentType VARCHAR(50),OrderNumber VARCHAR(200),IsInRMA BIT ,RowId INT,CountNo INT,CurrencyCode VARCHAR(100),PaymentDisplayName Nvarchar(1200),CultureCode VARCHAR(100));  
              
    SET @Order_BY = REPLACE(@Order_BY,'OmsOrderId','CTEQD.OmsOrderId')  
    SET @SQL = '  
  
   ;With Cte_GetQuoteDetail AS   
   (  
  
   SELECT Zu.UserId ,ZOO.OmsOrderId,APZU.UserName UserName ,Total  OrderTotal , ZOOS.OrderStateName OrderState  
    ,ZOOD.OrderDate ,ZOPS.OmsPaymentStateId,ZOPS.Name PaymentStatus  ,ZOOD.PaymentTypeId , ZPT.Name PaymentType,ZOO.OrderNumber,ZOOD.CurrencyCode  
    ,CASE WHEN ARJT.PaymentDisplayName IS NULL THEN ZPS.PaymentDisplayName ELSE  ARJT.PaymentDisplayName END PaymentDisplayName ,ZOOD.CultureCode  
   FROM ZnodeOmsOrder ZOO  
   INNER JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderId = ZOO.OmsOrderId AND ZOOD.IsActive = 1 )  
   LEFT JOIN ZnodePaymentSetting ZPS ON (ZPS.PaymentSettingId = ZOOD.PaymentSettingId)  
   INNER JOIN ZnodeUser ZU ON (ZU.UserId = ZOOD.UserId)  
   LEFT JOIN ZnodeOmsPaymentState ZOPS ON (ZOPS.OmsPaymentStateId = ZOOD.OmsPaymentStateId )  
   LEFT JOIN ZnodeOmsOrderState ZOOS ON (ZOOS.OmsOrderStateId = ZOOD.OmsOrderStateId )  
   LEFT JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZOOD.PaymentTypeId)  
   LEFT JOIN AspNetUsers ASNU ON (ASNU.Id =ZU.AspNetUserId  )  
   LEFT JOIN AspNetZnodeUser  APZU ON (APZU.AspNetZnodeUserId = ASNU.UserName AND (APZU.PortalId = ZOOD.PortalId OR APZU.PortalId IS NULL  ))  
   LEFT JOIN ZnodePortalPaymentSetting ARJT ON (ARJT.PortalId = ZOOD.PortalId AND ARJT.PaymentSettingId = ZOOD.PaymentSettingId )  
   WHERE EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveAccounts]('+CAST(@AccountId AS VARCHAR(100))+') FNRA WHERE FNRA.AccountId= ZU.AccountId)   
     
   )  
   ,Cte_GetRMAdetails AS  
   (  
     SELECT OmsOrderId   
  FROM ZnodeOmsOrderDetails ZOOD   
  INNER JOIN ZnodeOmsOrderLIneItems ZOODLI ON (ZOODLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId )  
  INNER JOIN ZnodeRmaRequestItem ZRRI ON (ZRRI.OmsOrderLineItemsId = ZOODLI.OmsOrderLineItemsId )  
     
   )  
   , Cte_GetQuote AS   
   (  
    SELECT CTEQD.*,CASE WHEN CTERD.OmsOrderid IS NULL THEN 0 ELSE 1 END IsInRMA   ,'+dbo.Fn_GetPagingRowId(@Order_BY,'CTEQD.OmsOrderId DESC')+',Count(*)Over() CountNo   
    FROM Cte_GetQuoteDetail CTEQD   
    LEFT JOIN Cte_GetRMAdetails CTERD ON (CTERD.OmsOrderId = CTEQD.OmsOrderid )  
       WHERE 1=1   
    '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'  
   )  
  
   SELECT OmsOrderId,UserName , OrderTotal QuoteAmount, OrderState Status ,OrderDate,OmsPaymentStateId  ,PaymentStatus,PaymentTypeId,PaymentType,OrderNumber,IsInRMA,RowId,CountNo,CurrencyCode,PaymentDisplayName,CultureCode  
   FROM Cte_GetQuote   
   WHERE '+dbo.Fn_GetRowsForPagination(@PageNo, @Rows, ' RowId ');  
            
      PRINT @SQL  
    INSERT INTO @TBL_QuoteDetails   
             EXEC (@SQL);  
             SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_QuoteDetails ), 0);  
  
             SELECT OmsOrderId,UserName,OrderAmount,[Status] AS 'OrderState',CreatedDate AS 'OrderDate',OmsPaymentStateId,OmsPaymentState AS 'PaymentStatus',PaymentTypeId,PaymentType,OrderNumber,IsInRMA,CurrencyCode,PaymentDisplayName,CultureCode  
             FROM @TBL_QuoteDetails;  
      
         END TRY  
         BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsAccountOrderList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@AccountId = '+CAST(@AccountId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'Znode_GetOmsAccountOrderList',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetOmsOrderDetail')
BEGIN 
	DROP PROCEDURE Znode_GetOmsOrderDetail
END
GO
CREATE PROCEDURE [dbo].[Znode_GetOmsOrderDetail]
( @WhereClause NVARCHAR(MAx),
  @Rows        INT            = 100,
  @PageNo      INT            = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT			,
  @UserId	   INT = 0 ,
  @IsFromAdmin int=0
  )
AS
    /*
     Summary : This procedure is used to get the oms order detils
			   Records are fetched for those users who placed the order i.e UserId is Present in ZnodeUser and  ZnodeOmsOrderDetails tables
	 Unit Testing:

     EXEC Znode_GetOmsOrderDetail '',@Order_BY = '',@RowsCount= 0, @UserId = 0 ,@Rows = 80, @PageNo = 1

*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX), @ProcessType  varchar(50)='Order'

             DECLARE @TBL_OrderList TABLE (OmsOrderId INT,OrderNumber VARCHAR(200),PortalId INT,StoreName NVARCHAR(MAX),CurrencyCode VARCHAR(100),OrderState NVARCHAR(MAX),ShippingId INT ,
				PaymentTypeId INT,PaymentSettingId INT,PaymentStatus NVARCHAR(MAX),PaymentType VARCHAR(100),ShippingStatus BIT ,OrderDate DATETIME,UserId INT,UserName VARCHAR(300),PaymentTransactionToken NVARCHAR(600),Total NUMERIC(28,6),
				OrderItem NVARCHAR(1000),OmsOrderDetailsId INT, ItemCount INT,PODocumentPath NVARCHAR(600),IsInRMA BIT,CreatedByName NVARCHAr(max),ModifiedByName NVARCHAR(max),RowId INT,CountNo INT,Email NVARCHAR(MAX),PhoneNumber NVARCHAR(MAX),
				SubTotal NUMERIC(28,6),TaxCost NUMERIC(28,6),ShippingCost NUMERIC(28,6),BillingPostalCode NVARCHAR(200),ShippingPostalCode NVARCHAR(200),OrderModifiedDate datetime, PaymentDisplayName nvarchar(1200), ExternalId nvarchar(1000)
				,CreditCardExpMonth	int,CreditCardExpYear	int,CardType	varchar(50),CreditCardNumber varchar(10),PaymentExternalId nvarchar(1000),CultureCode nvarchar(1000)  
				)

			if object_id('tempdb..##OrderList') is not null
				drop table ##OrderList


			if object_id('tempdb..##Cte_OrderLineItem') is not null
				drop table ##Cte_OrderLineItem

             SET @SQL = '
			  SELECT Zoo.OmsOrderId,Zoo.OrderNumber, Zp.PortalId,Zp.StoreName ,ZODD.CurrencyCode,case when ZOS.IsShowToCustomer=0 and '+cast( @IsFromAdmin as varchar(50))+' = 0 then ZOSC.Description else  ZOS.Description end  OrderState,ZODD.ShippingId,ZODD.PaymentTypeId,ZODD.PaymentSettingId
				,ZOPS.Name PaymentStatus,ZPS.Name PaymentType,CAST(1 AS BIT) ShippingStatus ,ZODD.OrderDate,ZODD.UserId,ISNULL(ZODD.FirstName,'''')
						+'' ''+ISNULL(ZODD.LastName,'''') UserName ,ZODD.PaymentTransactionToken ,ZODD.Total ,ZODD.OmsOrderDetailsId,ZODD.PoDocument,ZVGD.UserName CreatedBy , ZVGDI.UserName ModifiedBy
						,ZU.Email ,ZU.PhoneNumber ,ZODD.SubTotal ,ZODD.TaxCost ,ZODD.ShippingCost,ZODD.BillingPostalCode,
						ZODD.ModifiedDate AS OrderModifiedDate,  ZODD.PaymentDisplayName  ,isnull(Zoo.ExternalId,0) ExternalId,ZODD.CreditCardExpMonth,ZODD.CultureCode
						,ZODD.CreditCardExpYear,ZODD.CardType,ZODD.CreditCardNumber,ZODD.PaymentExternalId
			  INTO ##OrderList
			  FROM ZnodeOmsOrder ZOO
			  INNER JOIN ZnodeOmsOrderDetails ZODD ON (ZODD.OmsOrderId = ZOO.OmsOrderId)
			  INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZODD.portalId )
			  LEFT JOIN ZnodePaymentType ZPS ON (ZPS.PaymentTypeId = ZODD.PaymentTypeId )
			  LEFT JOIN  ZnodeOmsOrderStateShowToCustomer ZOSC ON (ZOSC.OmsOrderStateId = ZODD.OmsOrderStateId)
			  LEFT JOIN ZnodeOmsOrderState ZOS ON (ZOS.OmsOrderStateId = ZODD.OmsOrderStateId)
			  LEFT JOIN ZnodeOmsPaymentState ZOPS ON (ZOPS.OmsPaymentStateId = ZODD.OmsPaymentStateId)
			  LEFT JOIN ZnodeUser ZU ON (ZU.UserId = ZODD.UserId)
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZODD.CreatedBy )
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZODD.ModifiedBy)
			  LEFT JOIN ZnodeShipping ZS ON (ZS.ShippingId = ZODD.ShippingId)
			  LEFT OUTER JOIN ZnodePaymentSetting ZPSS ON (ZPSS.PaymentSettingId = ZODD.PaymentSettingId)
			  LEFT JOIN ZnodePortalPaymentSetting ZPPS ON (ZPPS.PaymentSettingId = ZPSS.PaymentSettingId  AND ZPPS.PortalId = ZODD.PortalId   )
			  WHERE  ZODD.IsActive = 1
		       AND (EXISTS (SELECT TOP 1 1 FROM dbo.Fn_GetRecurciveUserId ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''' ) FNRU WHERE FNRU.UserId = ZU.UserId ) OR '+CAST(@UserId AS VARCHAR(50))+' =0 )
			  
			  ALTER TABLE ##OrderList ADD ShippingPostalCode VARCHAR(50)

			  UPDATE OL set ol.ShippingPostalCode = sp.ShipToPostalCode
			  from ##OrderList OL
			  cross apply (select top 1 ShipToPostalCode from ZnodeOmsOrderShipment where OmsOrderShipmentId in  (select OmsOrderShipmentId from ZnodeOmsOrderLineItems where OmsOrderDetailsId = OL.OmsOrderDetailsId))sp

			  SELECT ZOOLI.ProductName,ZOOLI.Price,Count(ZOOLI.OmsOrderLineItemsId)Over(PARTITION BY Ol.OmsOrderId Order by ZOOLI.OmsOrderDetailsId) CountId
			  ,Row_Number()Over( PARTITION BY Ol.OmsOrderId Order BY ZOOLI.Price DESC, ZOOLI.ProductName) RowId,Ol.OmsOrderId
			  ,CAST(Case when ZRRLI.RmaRequestItemId IS NULL THEN 0 ELSE 1 END AS BIT )  IsInRMA  ,OL.CreatedBy ,OL.ModifiedBy
			  into ##Cte_OrderLineItem
			  FROM ZnodeOmsOrderLineItems  ZOOLI
			  LEFT JOIN ##OrderList OL ON ( OL.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId )
			  LEFT JOIN ZnodeRmaRequestItem ZRRLI ON (ZRRLI.OmsOrderLineItemsId = ZOOLI.OmsOrderLineItemsId )
			  WHERE ZOOLI.Quantity > 0 AND ParentOmsOrderLineItemsId IS NOT NULL
			  -- AND OrderLineItemRelationshipTypeId IS  NULL  AND  ParentOmsTemplateLineItemId IS nULL

		    ;with Cte_GetOrderData AS 
			(
				SELECT distinct OL.*, CTOLI.ProductName,CountId ,IsInRMA
				FROM ##OrderList OL
				LEFT JOIN ##Cte_OrderLineItem CTOLI ON (CTOLI.OmsOrderId = OL.OmsOrderId AND CTOLI.RowId = 1 )
			)
			, Cte_OrderLineDescribe AS 
			(
				SELECT distinct *,'+dbo.Fn_GetPagingRowId(@Order_BY,'OmsOrderId DESC,OmsOrderDetailsId DESC')+',Count(*)Over() CountNo
				FROM Cte_GetOrderData
				WHERE 1= 1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
		    )
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			ProductName OrderItem,OmsOrderDetailsId,CountId ItemCount, PoDocument AS PODocumentPath,IsInRMA ,CASE WHEN CreatedBy IS NULL THEN email  ELSE CreatedBy END AS CreatedByName ,ModifiedBy as ModifiedByName,RowId,CountNo,
			Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode, ShippingPostalCode,OrderModifiedDate,PaymentDisplayName, ExternalId,CreditCardExpMonth
						,CreditCardExpYear,CardType,CreditCardNumber,PaymentExternalId,CultureCode
			FROM Cte_OrderLineDescribe
			'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			--PRINT @SQL

			INSERT INTO @TBL_OrderList(OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,RowId,CountNo,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate,PaymentDisplayName ,ExternalId,CreditCardExpMonth
						,CreditCardExpYear,CardType,CreditCardNumber ,PaymentExternalId,CultureCode)
		    EXEC(@SQL)

			SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_OrderList),0)

			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate,PaymentDisplayName,ExternalId,CreditCardExpMonth,CreditCardExpYear,CardType,CreditCardNumber,PaymentExternalId,CultureCode
			FROM @TBL_OrderList

			if object_id('tempdb..##OrderList') is not null
				drop table ##OrderList


			if object_id('tempdb..##Cte_OrderLineItem') is not null
				drop table ##Cte_OrderLineItem

          END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsOrderDetail @WhereClause = '''+ISNULL(CAST(@WhereClause AS VARCHAR(max)),'''''')+''',@Rows='''+ISNULL(CAST(@Rows AS VARCHAR(50)),'''''')+''',@PageNo='+ISNULL(CAST(@PageNo AS VARCHAR(50)),'''')+',
			 @Order_BY='+ISNULL(@Order_BY,'''''')+',@UserId = '+ISNULL(CAST(@UserId AS VARCHAR(50)),'''')+',@RowsCount='+ISNULL(CAST(@RowsCount AS VARCHAR(50)),'''')+',@IsFromAdmin='+ISNULL(CAST(@IsFromAdmin AS VARCHAR(10)),'''');
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetOmsOrderDetail',
				@ErrorInProcedure = 'Znode_GetOmsOrderDetail',
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetOmsQuoteList')
BEGIN 
	DROP PROCEDURE Znode_GetOmsQuoteList
END
GO
    
CREATE PROCEDURE [dbo].[Znode_GetOmsQuoteList]    
(     
  @WhereClause NVARCHAR(MAX),    
  @Rows        INT            = 100,    
  @PageNo      INT            = 1  ,    
  @Order_BY    VARCHAR(1000)  = '' ,    
  @RowsCount   INT OUT             ,    
  @AccountId   INT,    
  @UserId      INT            = 0,     
  @IsPendingPayment BIT = 0  ,     
  @IsParentPendingOrder  BIT = 1     
  )    
AS     
   /*    
  Summary :- This procedure is used to get the Quote list of account and Users    
    Fn_GetRecurciveAccounts is used to fetch AccountId and Its recursive ParentId      
    @InnerWhereClause contains AccountId fetched from the Function Fn_GetRecurciveAccounts     
    OrderDetails are fetched from the tables filtered by AccountId Present in @InnerWhereClause    
    OrderDetails are fetched in Descending order of OmsQuoteId    
     Unit Testing     
     
     EXEC Znode_GetOmsQuoteList '(PortalId in(''1'',''2'',''3'',''6'')) ' ,@RowsCount = 0 ,@AccountId = 0,@UserId = 0      
    
*/    
     BEGIN    
         BEGIN TRY    
             SET NOCOUNT ON;    
             DECLARE @SQL NVARCHAR(MAX)= '', @InnerWhereClause VARCHAR(MAX)= '', @ProcessType  varchar(50)='Quote',@QuoteFilter NVARCHAr(max)='';    
    
             DECLARE @TBL_QuoteDetails TABLE (OmsQuoteId INT,UserName NVARCHAR(300),AccountName NVARCHAR(400),QuoteOrderTotal NUMERIC(28, 6),[OrderStatus] VARCHAR(300),    
             CreatedDate DATETIME,StoreName NVARCHAR(Max),CurrencyCode VARCHAR(100),CultureCode VARCHAR(100),RowId INT,CountNo INT,CreatedByName NVARCHAr(max) ,ModifiedByName NVARCHAR(max),IsConvertedToOrder bit);    
    
       
             IF @UserId <> 0  AND @IsParentPendingOrder   = 1     
       
                 BEGIN    
                     SET @InnerWhereClause = ' AND '''+CAST(@UserId AS VARCHAR(max))+''' = ZU.UserId ';    
                    -- SET @AccountId = (SELECT TOP 1 AccountID FROM ZnodeUser WHERE UserId = @UserId);    
                 END    
             ELSE IF @IsParentPendingOrder   = 0     
                 BEGIN    
                    SET @InnerWhereClause = ' AND  EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveUserId] ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''') SP WHERE SP.UserId = ZU.UserId AND '''+CAST(@UserId AS VARCHAR(max))+''' <> ZU.UserId )'; 
  
   
      SET @QuoteFilter =' AND EXISTS (SELECT TOP 1 1 FROM ZnodeOMSQuoteApproval WR WHERE WR.OmsQuoteId = ZOQ.OmsQuoteId AND Wr.ApproverUserId ='+CAST(@UserId AS VARCHAR(50))+' ) ';    
    
     END    
    ELSE     
    BEGIN     
      SET @InnerWhereClause = ''    
    END       
          
    IF @IsPendingPayment =1     
    BEGIN     
       
     SET @InnerWhereClause = @InnerWhereClause+' AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodeUserGlobalAttributeValue a     
    INNER JOIN ZnodeUserGlobalAttributeValueLocale b  on (b.UserGlobalAttributeValueId = a.UserGlobalAttributeValueId)    
    INNER JOIN ZnodeGlobalAttribute c ON (c.GlobalAttributeid = a.GlobalAttributeId )    
    WHERE c.AttributeCOde = ''BillingAccountNumber'' AND a.UserId =  ZU.UserId AND b.AttributeValue = '''' ) AND ZOQ.IsPendingPayment =  1    '    
         
    END     
    ELSE     
    BEGIN    
       SET @InnerWhereClause = @InnerWhereClause+' AND ZOQ.IsPendingPayment = 0   '    
    END     
    
    SET @InnerWhereClause = @InnerWhereClause + CASE WHEN @AccountId > 0 THEN ' AND ZA.AccountId ='+CAST(@AccountId AS VARCHAR(200)) ELSE '' END     
    
             SET @SQL = '       
    ;With Cte_GetQuoteDetail AS     
    (    
    SELECT Zu.UserId ,ZOQ.OmsQuoteId,ZU.FirstName + CASE WHEN ZU.LastName IS NULL THEN '''' ELSE '' ''+Zu.LastName END UserName , QuoteOrderTotal , ZOOS.OrderStateName [OrderStatus]    
    ,ZOQ.CreatedDate,ZA.Name AccountName,ZP.PortalId,Zp.StoreName , ZCC.CurrencyCode AS CurrencyCode, ZC.CultureCode AS CultureCode ,ZVGD.UserName CreatedByName , ZVGDI.UserName ModifiedByName,    
    case when ZOQ.IsConvertedToOrder IS NULL THEN 0 ELSE ZOQ.IsConvertedToOrder END IsConvertedToOrder,ISNULL(DT.QuoteTypeCode,'''') QuoteTypeCode    
    FROM ZnodeOmsQuote ZOQ    
    INNER JOIN ZnodeUser ZU ON (ZU.UserId = ZOQ.UserId)    
    LEFT JOIN ZnodeUserPortal ZUP ON ZU.UserId = ZUP.UserId    
    inner JOIN ZnodePortal ZP ON ZP.PortalId = Zoq.PortalId    
    '+CASE WHEN @IsParentPendingOrder = 0 THEN ' LEFT JOIN ZnodeOMSQuoteApproval TYUI ON (TYUI.OmsQuoteId = ZOQ.OmsQuoteId AND TYUI.ApproverUserId ='+CAST(@UserId AS VARCHAR(50))+') ' ELSE '' END +'    
    LEFT JOIN ZnodePortalUnit ZPU ON (ZPU.PortalId = Zp.PortalId)    
    LEFT JOIN ZnodeCulture ZC ON (ZPU.CultureId = ZC.CultureId)    --- Changed join condition from CurrencyId to CultureId    
 LEFT JOIN ZnodeCurrency ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)    --- Joined ZnodeCulture and ZnodeCurrency   
    LEFT JOIN ZnodeOmsOrderState ZOOS ON (ZOOS.OmsOrderStateId = '+CASE WHEN @IsParentPendingOrder = 0 THEN 'TYUI.OmsOrderStateId ' ELSE 'ZOQ.OmsOrderStateId' END  +' )     
    LEFT JOIN ZnodeAccount ZA ON (ZA.AccountId = ZU.AccountId )    
    LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZOQ.CreatedBy )    
    LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZOQ.ModifiedBy)    
    LEFT JOIN ZnodeOmsQuoteType DT ON (DT.OmsQuoteTypeId = ZOQ.OmsQuoteTypeId)    
    WHERE 1=1'+' '+@InnerWhereClause+@QuoteFilter+'    
    
   )    
    , Cte_GetQuote AS     
    (    
    SELECT OmsQuoteId,UserName ,AccountName , QuoteOrderTotal QuoteAmount, [OrderStatus]  ,CreatedDate ,StoreName,CurrencyCode, CultureCode,CreatedByName , ModifiedByName ,IsConvertedToOrder,'+dbo.Fn_GetPagingRowId(@Order_BY,'CreatedDate DESC,OmsQuoteId D
ESC')+',Count(*)Over() CountNo     
    FROM Cte_GetQuoteDetail    
     WHERE 1=1     
      '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'    
    )    
    SELECT OmsQuoteId,UserName ,AccountName ,  QuoteAmount, [OrderStatus]  ,CreatedDate ,StoreName,CurrencyCode, CultureCode,RowId,CountNo,CreatedByName , ModifiedByName,IsConvertedToOrder    
    FROM Cte_GetQuote     
   '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)    
              
    PRINT  @SQL    
          
             INSERT INTO @TBL_QuoteDetails (OmsQuoteId, UserName, AccountName, QuoteOrderTotal ,OrderStatus, CreatedDate, StoreName,CurrencyCode, CultureCode, RowId ,CountNo,CreatedByName , ModifiedByName,IsConvertedToOrder)          
    EXEC (@SQL);    
             SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_QuoteDetails), 0);    
    
             SELECT OmsQuoteId,UserName,AccountName,QuoteOrderTotal,[OrderStatus],CreatedDate,StoreName,CurrencyCode, CultureCode,CreatedByName , ModifiedByName,IsConvertedToOrder    
             FROM @TBL_QuoteDetails;    
        
         END TRY    
         BEGIN CATCH    
              DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsQuoteList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max)
  
)+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@AccountId='+CAST(@AccountId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@PortalId='+''
  
+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'Znode_GetOmsQuoteList',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
         END CATCH;    
     END
	 GO
	 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPriceList')
BEGIN 
	DROP PROCEDURE Znode_GetPriceList
END
GO
CREATE PROCEDURE [dbo].[Znode_GetPriceList]  
(   @WhereClause VARCHAR(MAX) = '',  
 @Rows        INT          = 100,  
 @PageNo      INT          = 0,  
 @Order_BY    VARCHAR(100) = NULL,  
 @RowsCount   INT OUT,  
 @Mode        VARCHAR(100) = '')  
AS   
/*  
    Summary: Retrieve Price list with respective to mode ( Portal / Profile / User / Account)   
    Input Parameters:  
    mode :  Portal / Profile / User / Account   
    Output : Provide paging facility with output  
    Unit Testing :   
  DECLARE @RowsCount  int   
    EXEC [Znode_GetPriceList]  
    @WhereClause= ' PriceListId=1 and PortalProfileId = 6',@Rows = 1000 ,@PageNo = 0,@Order_BY =  NULL,@RowsCount =@RowsCount  out,@Mode =  'Profile'  
    DECLARE @RowsCount  int   
    EXEC [Znode_GetPriceList]  
    @WhereClause= ' userId=7 and accountid = 1',@Rows = 1000 ,@PageNo = 0,@Order_BY =  NULL,@RowsCount =@RowsCount  out,@Mode =  'user'  
    DECLARE @RowsCount  int   
    EXEC [Znode_GetPriceList]  
    @WhereClause= ' PriceListId=9 ',@Rows = 100 ,@PageNo = 1,@Order_BY = 'PriceListId',@RowsCount =@RowsCount  out,@Mode =  'Account'  
   */  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;  
             DECLARE @SQL NVARCHAR(MAX);  
    DECLARE @TBL_AccountList TABLE (AccountId INT,AccountName NVARCHAR(400),ListCode VARCHAR(200),ListName VARCHAR(600),PriceListId INT,  
    CurrencyName VARCHAR(200),ActivationDate DATETIME,ExpirationDate DATETIME,Precedence INT, IsParentAccount INT,PriceListAccountId INT,RowId INT, CountNo INT  )  
  
    DECLARE @TBL_UserList TABLE (PriceListUserId INT, UserId INT,UserName VARCHAR(200),ListCode VARCHAR(200),ListName VARCHAR(600),PriceListId INT,  
    CurrencyName VARCHAR(200),ActivationDate DATETIME,ExpirationDate DATETIME,Precedence INT, RowId INT, CountNo INT   
    )  
  
             --SET @PageNo = CASE  
             --                  WHEN @PageNo = 0  
             --                  THEN @PageNo  
             --                  ELSE(@PageNo - 1) * @Rows  
             --              END;  
             IF @Mode = ''  
                 BEGIN  
      SET @SQL = ' With PriceList AS   
      (SELECT zpl.ListCode,zpl.ListName,zc.CultureName + CASE WHEN isnull(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CurrencyName  
         ,zpl.PriceListId ,zpl.ActivationDate,zpl.ExpirationDate ,zpl.ModifiedDate  
      FROM ZnodePriceList AS zpl INNER JOIN dbo.ZnodeCulture zc ON zpl.CultureId = zc.CultureId)  
          
        ,CTE_PriceList AS  
        (  
          SELECT DISTINCT ListCode,ListName,CurrencyName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate,  
       '+dbo.Fn_GetPagingRowId(@Order_BY,'PriceListId DESC')+',Count(*)Over() CountNo  
       FROM PriceList  
       WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'  
        )  
        SELECT ListCode,ListName,CurrencyName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate,CountNo  
        INTO #TM_PriceList   
        FROM CTE_PriceList  
        '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
  
      --SELECT  DISTINCT ListCode,ListName,CurrencyName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate INTO #PriceList FROM PriceList'+' WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #PriceList    
      --SELECT  ListCode,ListName,CurrencyName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate FROM #PriceList '+' Order BY '+ ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
                 END;  
             IF @Mode = 'Profile'  
                 BEGIN  
      SET @SQL = ' With ProfileList AS    
       (SELECT ZPP.PortalProfileId , zp.ProfileName,ZPL.ListCode,ZPL.ListName,zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CurrencyName,   
      ZPL.PriceListId , ZPL.ActivationDate ,ZPL.ExpirationDate , ZPLP.Precedence , ZPL.ModifiedDate,ZPP.PortalId,ZPLP.PriceListProfileId  
      FROM ZnodePriceList AS ZPL INNER JOIN ZnodePriceListProfile AS ZPLP ON ZPL.PriceListId = ZPLP.PriceListId  
      INNER JOIN ZnodePortalProfile AS ZPP ON ZPLP.PortalProfileId = ZPP.PortalProfileId  
      INNER JOIN dbo.ZnodeProfile zp ON ZPP.ProfileId  = zp.ProfileId  
      INNER JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId)  
  
      ,CTE_ProfileList AS  
      (  
        SELECT DISTINCT PortalProfileId , ProfileName,ListCode,ListName, CurrencyName, PriceListId ,ActivationDate ,ExpirationDate ,  
        Precedence,PriceListProfileId , ModifiedDate,'+dbo.Fn_GetPagingRowId(@Order_BY,'PortalProfileId DESC')+',Count(*)Over() CountNo  
        FROM ProfileList  
        WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'        
      )  
        SELECT PortalProfileId , ProfileName,ListCode,ListName, CurrencyName, PriceListId ,ActivationDate ,ExpirationDate ,  
        Precedence,PriceListProfileId , ModifiedDate,RowId,CountNo  
        INTO #TM_PriceList   
        FROM CTE_ProfileList  
        '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
      --SELECT DISTINCT PortalProfileId , ProfileName,ListCode,ListName, CurrencyName, PriceListId ,ActivationDate ,ExpirationDate , Precedence,PriceListProfileId , ModifiedDate INTO #ProfileList FROM ProfileList'+' WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #ProfileList    
      --SELECT PortalProfileId , ProfileName,ListCode,ListName, CurrencyName, PriceListId ,ActivationDate ,ExpirationDate , Precedence,PriceListProfileId , ModifiedDate FROM #ProfileList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
     
                 END;  
             ELSE  
                 BEGIN  
             IF @Mode = 'Portal'  
                   BEGIN  
      SET @SQL = ' With PortalList AS  
      (SELECT ZPLP.PriceListPortalId, zp.PortalId,  zp.StoreName, ZPL.ListCode,ZPL.ListName, ZPL.PriceListId , zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CurrencyName,  
      ZPL.ActivationDate ,ZPL.ExpirationDate , ZPLP.Precedence ,ZPL.ModifiedDate,zc.CurrencyId  
      FROM ZnodePriceList AS ZPL INNER JOIN ZnodePriceListPortal AS ZPLP ON ZPL.PriceListId = ZPLP.PriceListId  
      INNER JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId  
      INNER JOIN dbo.ZnodePortal zp ON ZPLP.PortalId = zp.PortalId)  
          
        ,CTE_PortalList AS  
        (  
          SELECT DISTINCT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,  
       Precedence,ModifiedDate,CurrencyId,'+dbo.Fn_GetPagingRowId(@Order_BY,'PriceListPortalId DESC')+',Count(*)Over() CountNo  
       FROM PortalList  
       WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'    
        )  
        SELECT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,  
       Precedence,ModifiedDate,CurrencyId ,CountNo  
       INTO #TM_PriceList   
       FROM CTE_PortalList  
       '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
  
      --SELECT DISTINCT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,ModifiedDate,CurrencyId  INTO #PortalList FROM PortalList WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #PortalList  
      --SELECT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,ModifiedDate,CurrencyId FROM #PortalList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
                   END;  
   ELSE  
     BEGIN  
      IF @Mode = 'User'  
      BEGIN  
      SET @SQL = ' With UserList AS  
      (SELECT ZPLU.PriceListUserId, Zu.Userid, Isnull(zu.FirstName,'''') + '' '' +Isnull( zu.MiddleName,'''') + '' ''+ Isnull(zu.LastName,'''') UserName,  
      ZPL.ListCode,ZPL.ListName, ZPL.PriceListId , zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CurrencyName,  
      ActivationDate ,ExpirationDate , ZPLU.Precedence,zu.AccountId FROM  dbo.ZnodeUser zu    
      INNER JOIN ZnodePriceListUser AS ZPLU ON ZPLU.UserId= zu.UserId   
      INNER JOIN  ZnodePriceList AS ZPL ON (ZPL.PriceListId = ZPLU.PriceListId )  
      LEFT JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId)   
         
       ,CTE_UserList AS  
       (  
         SELECT DISTINCT PriceListUserId, Userid, UserName,ListCode,ListName, PriceListId , CurrencyName, ActivationDate ,ExpirationDate ,  
         Precedence,'+dbo.Fn_GetPagingRowId(@Order_BY,'PriceListUserId DESC')+',Count(*)Over() CountNo  
         FROM  UserList WHERE 1=1  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'       
       )  
  
       SELECT PriceListUserId, Userid, UserName,ListCode,ListName, PriceListId , CurrencyName, ActivationDate ,ExpirationDate ,Precedence,RowId,CountNo  
       INTO #TM_PriceList   
       FROM CTE_UserList  
       '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
        
  
  
      --SELECT  DISTINCT PriceListUserId, Userid, UserName, ListCode,ListName, PriceListId , CurrencyName, ActivationDate ,ExpirationDate , Precedence INTO #UserList  from UserList  WHERE 1=1 '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #UserList    
      --SELECT PriceListUserId, Userid, UserName,ListCode,ListName, PriceListId , CurrencyName, ActivationDate ,ExpirationDate , Precedence FROM #UserList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
      END;  
      ELSE  
       BEGIN  
      IF @Mode = 'Account'  
      BEGIN  
      SET @SQL = ' With AccountList AS   
      (SELECT za.Accountid,za.Name AccountName,ZPL.ListCode,ZPL.ListName,ZPL.PriceListId,zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CurrencyName,  
      ActivationDate ,ExpirationDate,ZPLA.Precedence,CASE WHEN za.parentAccountId IS NULL OR parentAccountId = 0  THEN CAST(1 AS BIT ) ELSE CAST(0 AS BIT ) END IsParentAccount ,PriceListAccountId  
      FROM ZnodePriceList AS ZPL INNER JOIN ZnodePriceListAccount AS ZPLA ON ZPL.PriceListId = ZPLA.PriceListId  
      INNER JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId  
      INNER JOIN dbo.ZnodeAccount za ON za.AccountId = ZPLA.AccountId)  
         
      ,CTE_GetAccountList as  
      (  
      SELECT  DISTINCT Accountid,AccountName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,IsParentAccount  
      ,PriceListAccountId,'+dbo.Fn_GetPagingRowId(@Order_BY,'Accountid DESC')+',Count(*)Over() CountNo   
      FROM AccountList WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'    
      )  
      SELECT Accountid,AccountName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,IsParentAccount,  
      PriceListAccountId,RowId,CountNo  
      INTO #TM_PriceList   
      FROM CTE_GetAccountList  
      '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
        
        
      --SELECT  DISTINCT Accountid,AccountName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,IsParentAccount,PriceListAccountId INTO #AccountList   
      --FROM AccountList WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #AccountList   
      --SELECT Accountid,AccountName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,IsParentAccount,PriceListAccountId FROM #AccountList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
      END;  
                      END;  
                    END;  
                 END;  
  
     SET @SQL = @SQL+ ' SET @Count = ISNULL((SELECT TOP 1 CountNo FROM #TM_PriceList ),0)  
                          SELECT * FROM #TM_PriceList  '  
  
          EXEC SP_executesql  
                  @SQL,  
                  N'@Count INT OUT',  
                  @Count = @RowsCount OUT;  
        
         END TRY  
         BEGIN CATCH  
            DECLARE @Status BIT ;  
      SET @Status = 0;  
      DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPriceList @WhereClause = '+cast (@WhereClause AS VARCHAR(50))+',
@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Mode='+@Mode+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
            SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
            EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'Znode_GetPriceList',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;  
  
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetProductFeedList')
BEGIN 
	DROP PROCEDURE Znode_GetProductFeedList
END
GO
CREATE PROCEDURE [dbo].[Znode_GetProductFeedList]  
(   @PortalId   VARCHAR(2000) = NULL,  
    @ProductIds VARCHAR(MAX)  = '',  
    @LocaleId   INT,  
    @FeedType   NVARCHAR(MAX) = NULL)  
AS  
/*  
Summary: This Procedure is used to get effective keyword feeding of Product list  
 SELECT * FROM ZnodePublishProductDetail  
 SELECT * FROM ZnodePublishProduct WHERE PublishCatalogId = 3  
 SELECT * FROM ZnodePortalCatalog   
 Unit Testing:  
 EXEC Znode_GetProductFeedList @PortalId='0',@ProductIds = '116,117,118'  
 ,@LocaleId=1,@FeedType='Bing'   
  
*/  
     BEGIN  
  BEGIN TRY  
         SET NOCOUNT ON;        
           
   DECLARE @GetDate DATETIME = dbo.Fn_GetDate();  
         DECLARE @TBL_DomainName TABLE  
         (PortalId   INT,  
          DomainName NVARCHAR(300),  
          RowId      INT  
         );     
         
         DECLARE @TBL_SEODetails TABLE  
         (loc                   NVARCHAR(MAX),  
          lastmod               DATETIME,  
          [g:condition]         VARCHAR(100),  
          [description]         NVARCHAR(MAX),  
          [g:id]                INT,  
          link                  VARCHAR(100),  
          [g:identifier_exists] VARCHAR(200),  
          DomainName            NVARCHAR(300),  
          PortalId              INT  
    , SEOCode             NVARCHAR(4000)  
         );  
         DECLARE @TBL_CompleteDetailes TABLE  
         (loc                   NVARCHAR(MAX),  
          lastmod               DATETIME,  
          [g:condition]         VARCHAR(100),  
          [description]         NVARCHAR(MAX),  
          [g:id]                INT,  
          link                  VARCHAR(100),  
          [g:identifier_exists] VARCHAR(200),  
          DomainName            NVARCHAR(300),  
          PortalId              INT,  
          [g:availability]      NVARCHAR(1000),  
          SKU                   NVARCHAR(MAX),  
    SEOCode               NVARCHAR(4000)  
         );  
         DECLARE @DefaultLocaleId INT=dbo.Fn_GetDefaultLocaleId()  ;  
         DECLARE @TBL_PortalIds TABLE(PortalId INT);   
   
         INSERT INTO @TBL_PortalIds  
         SELECT Zp.PortalId   
   FROM Znodeportal AS ZP   
   INNER JOIN ZnodePortalCatalog AS ZPC ON(ZPC.PortalId = Zp.PortalId)  
         INNER JOIN ZnodePublishCatalog AS ZPPC ON(ZPPC.PublishCatalogId = ZPC.PublishCatalogId)   
   INNER JOIN ZNodePublishProduct AS ZPP ON(ZPP.PublishCatalogId = ZPPC.PublishCatalogId)  
   INNER JOIN ZnodePublishProductDetail AS PPD ON (PPD.PublishProductId = ZPP.PublishProductId)  
         WHERE EXISTS(SELECT TOP 1 1 FROM DBO.Split(@ProductIds, ',') AS Sp WHERE (sp.Item  = PPD.SKU)  OR @ProductIds = '0')  
   AND EXISTS(SELECT TOP 1 1 FROM DBO.Split(@PortalId, ',') AS Sp  
      WHERE(CAST(sp.Item AS INT)) = Zp.PortalId  OR @PortalId = '0')  
   AND EXISTS (SELECT TOP 1 1 FROM ZnodeDomain ZD WHERE ZP.PortalId = ZD.PortalId  
   AND IsActive = 1 AND ApplicationType = 'Webstore')  
   GROUP BY Zp.PortalId;   
  
         INSERT INTO @TBL_DomainName   
   SELECT  PortalId,DomainName,ROW_NUMBER() OVER(PARTITION BY PortalId ORDER BY DomainName)   
   FROM ZnodeDomain AS ZD   
         WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZD.PortalId)  
   AND IsActive = 1 AND ApplicationType = 'Webstore'  
    
  
  
         ;WITH Cte_SeoDetailsWithLocale  
         AS (  
   SELECT DISTINCT ZCSD.CMSSEODetailId,ZCSD.SEOURL AS loc,ZCSD.ModifiedDate AS lastmod,'new' AS [g:condition],ZCSDL.SEODescription AS [description],ZPCC.PublishProductId AS [g:id],  
             '' AS link,'false' AS [g:identifier_exists],TBDN.DomainName,ZPC.PortalId,ISNULL(ZCSDL.LocaleId, @DefaultLocaleId) AS LocaleId , ZCSD.SEOCode  
    FROM ZNodePublishProduct AS ZPCC   
    INNER JOIN ZnodePortalCatalog AS ZPC ON(ZPC.PublishCatalogId = ZPCC.PublishCatalogId)  
    LEFT JOIN ZnodePublishProductDetail AS PPD ON (PPD.PublishProductId = ZPCC.PublishProductId)  
             -- INNER JOIN @TBL_PortalIds TBLP ON (TBLP.PortalId = ZPC.PortalId)  
    LEFT JOIN ZnodeCMSSEODetail AS ZCSD ON(PPD.SKU = ZCSD.SEOCode and ZCSD.PortalId = ZPC.PortalId)  
             LEFT JOIN ZnodeCMSSEOType AS ZCST ON(ZCST.CMSSEOTypeId = ZCSD.CMSSEOTypeId AND ZCST.Name = 'Product')  
             LEFT JOIN ZnodeCMSSEODetailLocale AS ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSD.CMSSEODetailId AND ZCSDL.LocaleId IN(@LocaleId, @DefaultLocaleId))  
             LEFT JOIN @TBL_DomainName AS TBDN ON(TBDN.RowId = 1 AND TBDN.PortalId = zpc.PortalId )   
    WHERE EXISTS(SELECT TOP 1 1 FROM DBO.Split(@ProductIds, ',') AS Sp  
      WHERE (sp.Item  = PPD.SKU) OR @ProductIds = '0')  
   AND EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZPC.PortalId )  
    )  
  
         ,Cte_SeoDetailsWithFirstLocale  
         AS (  
    SELECT CMSSEODetailId,loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,LocaleId,SEOCode  
             FROM Cte_SeoDetailsWithLocale   
    WHERE LocaleId = @LocaleId  
    )           
  ,Cte_SeoDetailsWithDefaultLocale  
         AS (  
    SELECT CMSSEODetailId,loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,LocaleId,SEOCode  
             FROM Cte_SeoDetailsWithFirstLocale  
             UNION ALL  
             SELECT CMSSEODetailId,loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId,LocaleId,SEOCode  
             FROM Cte_SeoDetailsWithLocale AS CTSDWL  
             WHERE LocaleId = @DefaultLocaleId   
    AND NOT EXISTS(SELECT TOP 1 1 FROM Cte_SeoDetailsWithFirstLocale AS CTSDWDL WHERE CTSDWDL.CMSSEODetailId = CTSDWL.CMSSEODetailId))  
                
   INSERT INTO @TBL_SEODetails  
         SELECT DISTINCT loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,PortalId ,SEOCode  
   FROM Cte_SeoDetailsWithDefaultLocale;  
  
    
  
         INSERT INTO @TBL_CompleteDetailes  
         SELECT TBSD.loc,TBSD.lastmod,TBSD.[g:condition],TBSD.[description],TBSD.[g:id],TBSD.link,TBSD.[g:identifier_exists],TBSD.DomainName,TBSD.PortalId,  
         CASE WHEN SUM(ZI.Quantity) > 0 THEN 'In Stock' ELSE CASE WHEN @FeedType = 'Google' THEN 'Out Of Stock' ELSE 'Not In Stock' END  
         END AS [g:availability],ZPPD.SKU ,TBSD.SEOCode  
   FROM ZnodePublishProduct AS ZPP   
   LEFT JOIN @TBL_SEODetails AS TBSD ON(ZPP.PublishProductId = TBSD.[g:id] )  
         LEFT JOIN ZnodePublishProductDetail AS ZPPD ON(ZPPD.PublishProductId = ZPP.PublishProductId AND ZPPD.LocaleId = @LocaleId )  
         LEFT JOIN ZnodePortalWarehouse AS ZPW ON(ZPW.PortalId = TBSD.PortalId)  
         LEFT JOIN ZnodePortalAlternateWarehouse AS ZAPW ON(ZAPW.PortalWarehouseId = ZPW.PortalWarehouseId)  
         LEFT JOIN ZnodeInventory AS ZI ON(ZI.SKU = ZPPD.SKU AND (ZI.WarehouseId = ZPW.WarehouseId OR ZI.WarehouseId = ZAPW.WarehouseId))  
         WHERE EXISTS(SELECT TOP 1 1 FROM DBO.Split(@ProductIds, ',') AS Sp WHERE (sp.Item  = ZPPD.SKU) OR @ProductIds = '0')  
   AND EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = TBSD.PortalId )  
         GROUP BY loc,lastmod,[g:condition],[description],[g:id],link,[g:identifier_exists],DomainName,TBSD.PortalId,ZPPD.SKU,ZPPD.LocaleId, TBSD.SEOCode;  
    
         DECLARE @MediaConfiguration NVARCHAR(2000)=((SELECT TOP 1 URL FROM ZnodeMediaConfiguration WHERE IsActive = 1));  
           
  
         ;WITH Cte_PortalList  
         AS (  
       SELECT zp.PortalId,dbo.Fn_GetDefaultPriceRoundOff(ZPS.RetailPrice)RetailPrice,Zps.SKU,TBCD.SEOCode,ROW_NUMBER() OVER(PARTITION BY Zps.SKU,zp.PortalId ORDER BY ZPS.RetailPrice) AS RowId  
             FROM ZnodePriceList AS ZPL   
    LEFT JOIN ZnodePriceListPortal AS ZPLP ON ZPL.PriceListId = ZPLP.PriceListId  
             LEFT JOIN dbo.ZnodeCulture AS zc ON ZPL.CultureId = zc.CultureId
    LEFT JOIN dbo.ZnodePortal AS zp ON ZPLP.PortalId = zp.PortalId  
             LEFT JOIN ZnodePrice AS Zps ON(Zps.PriceListId = ZPL.PriceListId)   
    LEFT JOIN @TBL_CompleteDetailes AS TBCD ON(TBCD.PortalId = Zp.PortalId AND TBCD.SKU = Zps.Sku)   
    WHERE CAST(@GetDate AS DATE) BETWEEN ZPL.ActivationDate AND ZPL.ExpirationDate   
    AND EXISTS( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZPLP.PortalId)   
    GROUP BY zp.PortalId,ZPS.RetailPrice,Zps.SKU ,TBCD.SEOCode  
    )  
  
         SELECT loc,lastmod,[g:condition],[description],[g:id],link,[g:availability],[g:identifier_exists],DomainName,TBCD.PortalId  
  ,CTPL.RetailPrice AS [g:price]  
   ,@MediaConfiguration AS MediaConfiguration, TBCD.SEOCode  
         FROM @TBL_CompleteDetailes AS TBCD   
   LEFT JOIN Cte_PortalList AS CTPL ON(CTPL.PortalId = TBCD.PortalId AND CTPL.SKU = TBCD.SKU AND CTPL.RowID = 1)  
   WHERE  EXISTS(SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = TBCD.PortalId )  
  
 END TRY  
 BEGIN CATCH  
  DECLARE @Status BIT ;  
  SET @Status = 0;  
  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductFeedList @PortalId = '+@PortalId+',@ProductIds='+@ProductIds
+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@FeedType='+CAST(@FeedType AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
        SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
        EXEC Znode_InsertProcedureErrorLog  
   @ProcedureName = 'Znode_GetProductFeedList',  
   @ErrorInProcedure = @Error_procedure,  
   @ErrorMessage = @ErrorMessage,  
   @ErrorLine = @ErrorLine,  
   @ErrorCall = @ErrorCall;  
 END CATCH  
   
  END;
  GO
  IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCategoryProducts')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCategoryProducts
END
GO
CREATE PROCEDURE [dbo].[Znode_GetPublishCategoryProducts]
( @pimCatalogId int = 0,@pimCategoryHierarchyId int = 0,@userId int,@versionId int= 0,@status int = 0 OUT,@isDebug bit = 0 ,@LocaleId TransferId READONLY , @PublishStateId INT = 0   )  AS  /*
    Summary :	Publish Product on the basis of publish catalog and category
				Calling sp [Znode_InsertPublishProductIds] to retrive category and their child category with associated products 
				 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.
	
	Unit Testing
    ------------------------------------------------------------------------------------------------
	Declare @Status int 
	DECLARE @r transferid 
	INSERT INTO @r
	VALUES (1)
	,(24)
	EXEC [Znode_GetPublishCategoryProducts]  @PimCatalogId = 9
	, @PimCategoryHierarchyId = 48 
	, @UserId = 2 
	, @VersionId = 0
	, @IsDebug = 1
	, @Status  = @Status  out
	,@localeId = @r
	,@PublishStateId = 4
	Select @Status  

 */
	BEGIN   
		BEGIN TRY
			SET NOCOUNT ON;
			 DECLARE @IsCatalogPublishInProcess INT  = 0
			DECLARE @tBL_PublishIds table (PublishProductId int,PimProductId int,PublishCatalogId int)
			DECLARE @publishCatalogId int= isnull((SELECT TOP 1 PublishCatalogId FROM ZnodePublishCatalog ZPC WHERE ZPC.PimCatalogId = @pimCatalogId),0),@publishCataloglogId int= 0;
			DECLARE @tBL_CategoryCategoryHierarchyIds table (CategoryId int,ParentCategoryId int  )
			DECLARE @pimProductId TransferId
			DECLARE @insertPublishProductIds table (PublishProductId int,PimProductId int,PublishCatalogId int )
			--DECLARE @TBL_CategoryXml TABLE ( CategoryXml XML);
				SELECT @versionId = max(PublishCataloglogId)
			FROM ZnodePublishCatalogLog 
			WHERE PublishCatalogId =@publishCatalogId

				 IF EXISTS (SELECT TOP 1 1  FROM ZnodePublishCatalogLog a 
			   INNER JOIN ZnodePimCatalogCategory b ON (b.PimCatalogId =a.PimCatalogId )
			   WHERE b.PimCategoryHierarchyId = @PimCategoryHierarchyId
			   AND a.IsCatalogPublished IS NULL 
			   ) 
			   BEGIN 
				 SET   @IsCatalogPublishInProcess =1 
			   END 


			INSERT INTO @tBL_CategoryCategoryHierarchyIds(CategoryId,ParentCategoryId ) 
			SELECT DISTINCT PimCategoryId,NULL FROM ( SELECT PimCategoryId,ParentPimCategoryId 
			FROM DBO.[Fn_GetRecurciveCategoryIds](@pimCategoryHierarchyId,@pimCatalogId) 
			UNION SELECT PimCategoryId,NULL FROM ZnodePimCategoryHierarchy WHERE PimCategoryHierarchyId = @pimCategoryHierarchyId 
			UNION SELECT PimCategoryId,NULL FROM [Fn_GetRecurciveCategoryIds_new] (@pimCategoryHierarchyId,@pimCatalogId) ) Category

			
			IF NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ty 
			WHERE EXISTS (SELECT TOP 1 1 FROM ( SELECT PimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId 
			FROM dbo.[Fn_GetRecurciveCategoryIds_ForChild](@pimCategoryHierarchyId,@pimCatalogId) UNION ALL SELECT NULL ,@pimCategoryHierarchyId,NULL  ) TN WHERE TN.PimCategoryHierarchyId = TY.PimCategoryHierarchyId  ) AND ty.PimProductId IS NOT NULL )
			BEGIN 
			  SET @IsCatalogPublishInProcess = 2 

			END 

			IF (isnull(@publishCatalogId,0) = 0 ) 
				BEGIN 
					SET @status = 1
					-- Catalog Not Published 
					RETURN 0;
				END
			
			IF @IsCatalogPublishInProcess =  0 
			BEGIN 
			

			-- Any other catalog was in process dont intitiate category publish	
			If Exists ( SELECT TOP 1 1 FROM ZnodePublishcatalogLog  WHERE  IsCatalogPublished  IS NULL  )
			Begin
					SET @status = 2
					RETURN 0;
			End

			
				EXEC [Znode_GetPublishCategoryGroup] @publishCatalogId = @PublishCatalogId,@VersionId = 0,@userId =2,@isDebug = 1,@PimCategoryHierarchyId = @PimCategoryHierarchyId,@localeId =@localeID,@PublishStateId=@PublishStateId
			
			BEGIN 
				INSERT INTO @insertPublishProductIds EXEC [Dbo].[Znode_InsertPublishProductIds] @publishCatalogId = @publishCatalogId,@userid = @userid,@pimProductId = @pimProductId,@pimCategoryHierarchyId = @pimCategoryHierarchyId
				INSERT INTO @pimProductId SELECT PimProductId FROM @insertPublishProductIds

				EXEC [Dbo].[Znode_GetPublishProductbulk] @publishCatalogId = @publishCatalogId,@versionId = @versionId,@pimProductId = @pimProductId,@userid = @userid,@pimCategoryHierarchyId = @pimCategoryHierarchyId,@pimCatalogId = @pimCatalogId,@localeIds = @localeId ,@publishstateId =@publishStateId 
				
				UPDATE ZnodePimProduct 		SET IsProductPublish = 1 ,PublishStateId = @PublishStateId		
				WHERE EXISTS (SELECT TOP 1 1 
					FROM ZnodePublishProduct ZPP
					WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId 
						AND ZPP.PublishCatalogId = @publishCatalogId
					)
			END
			DECLARE @tBL_PublishCatalogId table(PublishCatalogId int,PublishProductId int,PublishCategoryId int,PimProductId int,VersionId int,LocaleId INT  );
			
			INSERT INTO @tBL_PublishCatalogId (PublishCatalogId,PublishProductId,PublishCategoryId,PimProductId,VersionId ,Localeid)  
			SELECT DISTINCT ZPC.PublishCatalogId,ZPX.PublishProductId,ZPX.PublishCategoryId,ZPP.PimProductId,Max(TH.PublishCatalogLogId),TH.Localeid 
			FROM ZnodePublishCategory ZPC 
			INNER JOIN ZnodePublishCatalogLog TH ON (TH.PublishCatalogId = ZPC.PublishCatalogId)
			INNER JOIN @tBL_CategoryCategoryHierarchyIds CTC ON (ZPC.PimCategoryId = CTC .CategoryId )
			INNER JOIN ZnodePublishCategoryProduct ZPX  ON ZPC.PublishCategoryId = ZPX.PublishCategoryId AND ZPX.PublishCatalogId = ZPC.PublishCatalogId 
			--INNER JOIN ZnodePublishedXml ZPX ON ZPC.PublishCategoryId = ZPX.PublishCategoryId AND ZPX.PublishCatalogLogId  = TH.PublishCatalogLogId AND ZPX.LocaleId = TH.localeId 
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishCatalogId = ZPC.PublishCatalogId AND ZPX.PublishProductId = ZPP.PublishProductId 
			WHERE ZPC.PublishCatalogId = @PublishCatalogId 
			AND  TH.PublishStateId = @PublishStateId
			AND EXISTS (SELECT TOP 1 1 FROM @LocaleId WHERE id = TH.LocaleId)
			GROUP BY ZPC.PublishCatalogId,ZPX.PublishProductId ,ZPX.PublishCategoryId,ZPP.PimProductId,TH.Localeid 
		
			INSERT INTO @tBL_PublishCatalogId (PublishCatalogId,PublishProductId,PublishCategoryId,PimProductId,VersionId,Localeid ) 
			SELECT IPP.PublishCatalogId,IPP.PublishProductId,0,IPP.PimProductId,max(PublishCatalogLogId) VersionId ,h.Localeid
			FROM @insertPublishProductIds IPP 
			LEFT JOIN ZnodePublishCatalogLog h ON (h.PublishCatalogId = IPP.PublishCatalogId )
			WHERE NOT EXISTS (SELECT TOP 1 1 FROM @tBL_PublishCatalogId PCI WHERE IPP.PublishProductId = PCI.PublishProductId)
			AND EXISTS (SELECT TOP 1 1 FROM @LocaleId WHERE id = h.LocaleId)
			AND h.PublishStateId = @PublishStateId
			GROUP BY IPP.PublishCatalogId,IPP.PublishProductId,IPP.PimProductId,Localeid
			
			UPDATE ZnodePublishCatalogLog 
			SET IsProductPublished = 1,PublishProductId = (SELECT count(PublishProductId) FROM ZnodePublishProduct ZPP WHERE ZPP.PublishCatalogId = ZnodePublishCatalogLog.PublishCatalogId ) 
			WHERE PublishCatalogLogId IN (SELECT VersionId FROM @tBL_PublishCatalogId)

			UPDATE ZnodePimProduct 
			SET IsProductPublish = 1 ,PublishStateId = @PublishStateId	
			WHERE EXISTS (SELECT TOP 1 1 
				FROM @tBL_PublishCatalogId ZPP
				WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId
				)
		
				SELECT PublishCatalogId
					,PublishProductId
					,PublishCategoryId
					,VersionId,LocaleId
			FROM @tBL_PublishCatalogId
			END 
			 IF @IsCatalogPublishInProcess = 1 
				BEGIN 
				SELECT 1 Id , 'Single category publish request cannot be processed as catalog publish is in progress. Please try after catalog publish is complete.' MessageDetails,  CAST(0 AS BIT ) Status
				END 
				ELSE IF @IsCatalogPublishInProcess = 2 
				BEGIN
				
				SELECT 1 Id , 'Please associate products to the category or to at least one child category to publish the category.' MessageDetails,  CAST(0 AS BIT ) Status
				END 
				ELSE 
				BEGIN 
				SELECT 1 Id , ' Publish Successfull' MessageDetails, CAST(1 AS BIT ) Status
				END 
		END TRY
		BEGIN CATCH
			SELECT error_message()
				,error_procedure();
			UPDATE ZnodePublishCatalogLog 
			SET IsCatalogPublished = 0 
			WHERE PublishCatalogLogId = @versionId
			SET @status = 0;
			DECLARE @error_procedure varchar(1000)= error_procedure(),@errorMessage nvarchar(max)= error_message(),@errorLine varchar(100)= error_line(),@errorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PimCatalogId = '+cast(@pimCatalogId AS varchar(max))+',@@PimCategoryHierarchyId='+@pimCategoryHierarchyId+',@UserId='+cast(@userId AS varchar(50))+',@UserId = '+cast(@userId AS varchar(50))+',@VersionId='+cast(@versionId AS varchar(50))+',@Status='+cast(@status AS varchar(10));
			SELECT 0 AS ID
				,cast(0 AS bit) AS Status;
			ROLLBACK TRAN GetPublishProducts;
			EXEC Znode_InsertProcedureErrorLog @procedureName = 'Znode_GetPublishCategoryProducts',@errorInProcedure = @error_procedure,@errorMessage = @errorMessage,@errorLine = @errorLine,@errorCall = @errorCall;
		END CATCH;
		END;
		GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishProductPricingBySku')
BEGIN 
DROP PROCEDURE Znode_GetPublishProductPricingBySku
END
GO
CREATE PROCEDURE [dbo].[Znode_GetPublishProductPricingBySku]
(   
    @SKU              VARCHAR(MAX),
    @PortalId         INT,
    @currentUtcDate   VARCHAR(100), -- this date is required for the user date r
    @UserId           INT          = 0, -- userid is optional 
    @PublishProductId TransferId READONLY,
	@IsDebug          BIT          = 0
	)
AS 
   /* 
    --Summary: Retrive Price of product from pricelist
    --Input Parameters:
    --UserId, SKU(Comma separated multiple), PortalId
    --Conditions :
    --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --2. If There is no any PriceList having given sku associated to profile  then check for  
    --PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --4. If There is no any PriceList having given sku associated to user  then check for  
    --PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --5. If There is no any PriceList having given sku associated to account  then check for  
    --PriceList associated Profile having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --6. If There is no any PriceList having given sku associated to Profile  then check for  
    --PriceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --7. If in each case Precedence is same then get PriceList according to higher PriceListId ActivationDate and ExpirationDate for PriceList and SKU also.
    --8. Also get the Tier Price, Tier Quantity of given sku.
    --Unit Testing   
    --Exec Znode_GetPublishProductPricingBySku  @SKU = 'Levi''s T-Shirt & Jeans - Bundle Product',@PortalId = 1, @currentUtcDate = '2016-07-31 00:00:00.000'
	*/
    
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );

			  DECLARE @DefaultLocaleId INT = dbo.FN_GETDEFAULTLocaleId()

			 IF @SKU = '' 
			 BEGIN 
			  INSERT INTO @Tlb_SKU(SKU)
			  	SELECT (SELECT ''+SKU FOR XML PATH('')) 
					FROM ZnodePublishProductDetail a
					INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId )
					WHERE LocaleId = @DefaultLocaleId


			 END 
			 ELSE 
			 BEGIN
			   INSERT INTO @Tlb_SKU(SKU)
                    SELECT Item
                    FROM Dbo.split(@SKU, ',');
			  

			 END 

           
             DECLARE @TLB_SKUPRICELIST TABLE
             (SKU          VARCHAR(100),
              RetailPrice  NUMERIC(28, 6),
              SalesPrice   NUMERIC(28, 6),
              PriceListId  INT,
              TierPrice    NUMERIC(28, 6),
              TierQuantity NUMERIC(28, 6),
			  ExternalId NVARCHAR(2000),
			  Custom1 NVARCHAR(MAX),
			  Custom2 NVARCHAR(MAX),
			  Custom3 NVARCHAR(MAX)
             );
             DECLARE @PriceListId INT, @PriceRoundOff INT;
             SELECT @PriceRoundOff = CONVERT( INT, FeatureValues)
             FROM ZnodeGlobalSetting
             WHERE FeatureName = 'PriceRoundOff';
		
             --Retrive portal wise pricelist  
             DECLARE @Tbl_PortalWisePriceList TABLE
             (PriceListId    INT,
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              Precedence     INT,
			  SKU NVARCHAR(300)
             );
             --Retrive price for respective pricelist   
             DECLARE @Tbl_PriceListWisePrice TABLE
             (
				  PriceListId    INT,
				  SKU            VARCHAR(300),
				  SalesPrice     NUMERIC(28, 6),
				  RetailPrice    NUMERIC(28, 6),
				  UomId          INT,
				  UnitSize       NUMERIC(28, 6),
				  ActivationDate DATETIME,
				  ExpirationDate DATETIME NULL,
				  TierPrice      NUMERIC(28, 6),
				  TierQuantity   NUMERIC(28, 6),
				  TierUomId      INT,
				  TierUnitSize   NUMERIC(28, 6), 
				  ExternalId NVARCHAR(2000),
				  Custom1 NVARCHAR(MAX),
				  Custom2 NVARCHAR(MAX),
				  Custom3 NVARCHAR(MAX)
             );
			 DECLARE @Tbl_SKUWisePriceList TABLE (PriceListId INT, SKU NVARCHAR(300))

			 insert into @Tbl_SKUWisePriceList(PriceListId,SKU) 
			 SELECT  PriceListId,SKU from ZnodePrice where (SELECT ''+SKU FOR XML PATH('')) in (Select SKU from @Tlb_SKU )
			 Union
			 SELECT PriceListId,SKU  from ZnodePriceTier where (SELECT ''+SKU FOR XML PATH('')) in (Select SKU from @Tlb_SKU )
			 
			 --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
            IF @UserId = 0
                 BEGIN
					INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
					SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
					FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
						ON b.PortalProfileId = c.PortalProfileID AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId 
						inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
					WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId
					ORDER BY b.Precedence;
		
			 
                     --2. If There is no any PriceList having given sku associated to profile  then check for PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
			IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
							INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId   
							inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
							AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
							WHERE @CurrentUtcDate BETWEEN a.ActivationDate 
							AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							ORDER BY b.Precedence
							;
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						
                         END;
                 END;
                     --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
             ELSE
                 BEGIN
				 
                     INSERT INTO @Tbl_PortalWisePriceList (PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
                            SELECT a.PriceListId, ActivationDate,ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                            FROM ZnodePriceList AS a INNER JOIN ZnodePriceListUser AS b ON a.PriceListId = b.PriceListId
                                 INNER JOIN ZnodePortalunit zupu ON a.CultureId = zupu.CultureId AND zupu.PortalId = @PortalId  
								 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                            WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.UserID = @UserId
							ORDER BY b.Precedence ;

                --4. If There is no any PriceList having given sku associated to user  then check for PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
						BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
								   SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), c.Precedence,tsw.SKU
								   FROM ZnodePriceList AS a INNER JOIN ZnodePriceListAccount AS c ON a.PriceListId = c.PriceListId
										INNER JOIN ZnodeUser AS d ON c.Accountid = d.Accountid INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId   
										AND zupu.PortalId = @PortalId
										inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								   WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND d.UserID = @UserId
									ORDER BY c.Precedence
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						 END;
                     -- 5. If There is no any PriceList having given sku associated to account  then check for PriceList associated Profile having PortalId and having higher   Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
				where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
                             INSERT INTO @Tbl_PortalWisePriceList(PriceListId,ActivationDate,ExpirationDate,Precedence,SKU)
                                    SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                                    FROM ZnodePriceList AS a
                                         INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId 
										 INNER JOIN ZnodePortalProfile AS c ON b.PortalProfileId = c.PortalProfileId  AND c.PortalId = @PortalId 
                                         INNER JOIN dbo.ZnodeUserProfile zup ON c.ProfileId = zup.ProfileId AND IsDefault = 1
                                         INNER JOIN ZnodePortalunit zupu ON a.CultureId = zupu.CultureId AND zupu.PortalId = @PortalId 
										 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                                    WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND zup.UserId = @UserId;
									--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )

					     END;
                   

                     ---6. If There is no any PriceList having given sku associated to Profile  then check for priceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
                  				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
								where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
								INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId AND  zupu.PortalId = b.PortalId    
								inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							    ORDER BY b.Precedence
								;
								--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
                         END;
						 
				--IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				--WHERE tspl.SKU = tpwl.SKU))
				--BEGIN
				
				--	INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
				--	SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
				--	FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
				--	ON b.ProfileId = c.ProfileId AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
				--	inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
				--	AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
				--	WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId;
				--END

                 END;
			
             SET @PriceListId = 0;
             -- Check Activation date and expiry date 
             IF EXISTS( SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList)
                 BEGIN
				
                     -- Declare  @d datetime
                     -- SET @d = @GetDate
                     -- Select ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ),b.Precedence,* from ZnodePriceList  a inner join ZnodePriceListPortal b on a.PriceListId = b.PriceListId where @d between ISNULL(ActivationDate,@d) 
                     -- and ISNULL(ExpirationDate,@GetDate ) --and a.PriceListId <>  80
                     -- Order by ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ) ,  b.Precedence DESC 
                     --	Retrive pricelist wise price
                   INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize , ExternalId ,Custom1,Custom2,Custom3)
				   SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize, ZP.ExternalId,
				   ZPT.Custom1,ZPT.Custom2,ZPT.Custom3
				   FROM [ZnodePrice] AS ZP 
				   INNER JOIN @Tlb_SKU AS TSKU ON (SELECT ''+ZP.SKU FOR XML PATH ('')) = TSKU.SKU 
				   LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND ZP.PriceListId = ZPT.PriceListId
				   WHERE ZP.PriceListId IN
				   (
					   SELECT TOP 1 PriceListId
					   FROM @Tbl_PortalWisePriceList AS TBPWPL
					   WHERE  TBPWPL.SKU = ZP.SKU
					   ORDER BY Precedence 
				   );
				  


                     -- Check Activation date and expiry date 
                    INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3 )
					   SELECT DISTINCT  PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					   FROM @Tbl_PriceListWisePrice
					   WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					   
					  
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId ,Custom1,Custom2,Custom3)
					   SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					   FROM @Tbl_PriceListWisePrice
					   WHERE SKU NOT IN(SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null 
				
                 END;
                     -- Retrive data as per precedance from ZnodePriceListPortal table  
					
             ELSE
                 BEGIN
                     SET @PriceListId =( SELECT TOP 1 PriceListId FROM @Tbl_PortalWisePriceList ORDER BY Precedence  );

                     --Retrive pricelist wise price  
                     INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize, ExternalId ,Custom1,Custom2,Custom3)
					 SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), 
							ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize, zp.ExternalId,Custom1,Custom2,Custom3
					 FROM [ZnodePrice] AS ZP INNER JOIN @Tlb_SKU AS TSKU ON ZP.SKU = TSKU.SKU LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND 
							   ZP.PriceListId = ZPT.PriceListId WHERE ZP.PriceListId = @PriceListId; 

                     -- Check Activation date and expiry date 
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId ,Custom1,Custom2,Custom3)
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					FROM @Tbl_PriceListWisePrice WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId ,Custom1,Custom2,Custom3)
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					FROM @Tbl_PriceListWisePrice
					WHERE SKU NOT IN ( SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null;

                 END;
             SELECT SKU,
                    ROUND(RetailPrice, @PriceRoundOff) AS RetailPrice,
                    ROUND(SalesPrice, @PriceRoundOff) AS SalesPrice,
                    ROUND(TierPrice, @PriceRoundOff) AS TierPrice,
                    ROUND(TierQuantity, @PriceRoundOff) AS TierQuantity,
					ZCC.CurrencyCode  AS CurrencyCode,    
                    ZC.Symbol AS CurrencySuffix,  ZC.CultureCode,
					TSPL.ExternalId,
					Custom1,Custom2,Custom3
             FROM @TLB_SKUPRICELIST AS TSPL
                  INNER JOIN ZnodePriceList AS ZPL ON TSPL.PriceListId = ZPL.PriceListId
                  INNER JOIN ZnodeCulture AS ZC ON ZPL.CultureId = ZC.CultureId    
				  LEFT JOIN ZnodeCurrency AS ZCC ON ZC.CurrencyId = ZCC.CurrencyId   
				  ORDER BY TierQuantity ASC;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishProductPricingBySku @SKU = '+@SKU+',@PortalId = '+CAST(@PortalId AS VARCHAR(10))+',@currentUtcDate = '+@currentUtcDate+',@UserId='+CAST(@UserId AS VARCHAR(100))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPublishProductPricingBySku',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportProcessCustomer')
BEGIN 
	DROP PROCEDURE Znode_ImportProcessCustomer
END
GO
CREATE   PROCEDURE [dbo].[Znode_ImportProcessCustomer](@TblGUID nvarchar(255) = '' ,@ERPTaskSchedulerId  int )  
AS  
BEGIN  
  
 SET NOCOUNT ON;  
 Declare @NewuGuId nvarchar(255)  
 set @NewuGuId = newid()  
 Declare @CurrencyId int ,@PortalId int,@TemplateId INT ,@ImportHeadId INT  
  
 DECLARE @LocaleId  int = dbo.Fn_GetDefaultLocaleId()  
 SELECT TOP 1 @PortalId  = PortalId FROM dbo.ZnodePortal  
  
 Select @CurrencyId = CurrencyId  from ZnodeCulture where CultureCode in (Select FeatureValues from   ZnodeGlobalSetting where FeatureName = 'Currency')  
  
 DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '',  
      @InsertColumnName NVARCHAR(MAX),  
   @ImportTableColumnName NVARCHAR(MAX),  
   @TableName NVARCHAR(255) = 'MAGSOLD',  
   @Sql NVARCHAR(MAX) = '',  
   @PriceListId int,  
   @RowNum int,  
   @MaxRowNum int,  
   @FirstStep nvarchar(255),  
   @PriceTableName  nvarchar(255),  
   @WarehouseCode varchar(100)  
  
    IF OBJECT_ID('tempdb..##Customer', 'U') IS NOT NULL  
  DROP TABLE tempdb.dbo.##Customer  
  
    IF OBJECT_ID('tempdb.dbo.##CustomerAddress', 'U') IS NOT NULL  
  DROP TABLE tempdb.dbo.##CustomerAddress  
  
  --SELECT @CustomerTableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =6 --AND ImportTableName = 'PRDH'  
  --SELECT @CustomerAddTableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =7 --AND ImportTableName = 'PRDH'  
  
     SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']'  
     -- User Data  
      SET @InsertColumnName = ''  
   SET @ImportTableColumnName = ''  
   SET @CreateTableScriptSql = ''  
  
   --Create Temp table for customer  
   SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CustomerTemplate'  
   SELECT @ImportHeadId= ImportHeadId FROM dbo.ZnodeImportHead WHERE Name = 'Customer'  
  
   SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb..##Customer ('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)'  
   FROM [dbo].[ZnodeImportTemplateMapping]  
   WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'  
   EXEC ( @CreateTableScriptSql )  
  
   SET @Sql = '  
   SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  
   ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Insert''  
   AND ImportHeadId = @ImportHeadId AND ImportTableName = ''MAGSOLD'' )  
   AND ITD.ImportTableName = ''MAGSOLD''  
   AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)  
  
   SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  
   ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Insert''  
   AND ImportHeadId = @ImportHeadId AND ImportTableName = ''MAGSOLD'' )  
   AND ITD.ImportTableName = ''MAGSOLD'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'  
  
   EXEC sp_executesql @SQL, N'@ImportHeadId int , @TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT',@ImportHeadId = @ImportHeadId ,  @TableName = @TableName, @InsertColumnName = @InsertColumnName
 OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT  
  
   IF( LEN(@InsertColumnName) > 0 )  
   BEGIN  
    SET @SQL = 'INSERT INTO tempdb..##Customer ( '+@InsertColumnName+',GUID )  
     SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + '''  
     FROM '+ @TableName + ' PRD '  
     EXEC sp_executesql @SQL  
  
    SET @SQL = 'Update tempdb..##Customer  SET IsActive =  1 , LastName = ISNULL(LastName,''.'') , Email = UserName '  
    EXEC sp_executesql @SQL  
  
  
    EXEC Znode_ImportData @TableName = 'tempdb..##Customer' ,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,  
     @UserId = 2,@PortalId = 1,@LocaleId = 1,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = ''--, @IsDebug =1  
    ,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 1, @StepName = 'Import' ,@ERPTaskSchedulerId  = @ERPTaskSchedulerId  
   END  
  
   -- User Address Data  
   SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CustomerAddressTemplate'  
   SELECT @ImportHeadId= ImportHeadId FROM dbo.ZnodeImportHead WHERE Name = 'CustomerAddress'  
   SET @InsertColumnName = ''  
   SET @ImportTableColumnName = ''  
   SET @CreateTableScriptSql = ''  
  
   --Create Temp table for customer Address  
   SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb..##CustomerAddress ('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)'  
   FROM [dbo].[ZnodeImportTemplateMapping]  
   WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'  
   EXEC ( @CreateTableScriptSql )  
  
   SET @Sql = '  
   SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  
   ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update''  
   AND ImportHeadId =@ImportHeadId AND ImportTableName = ''MAGSOLD'' )  
   AND ITD.ImportTableName = ''MAGSOLD''  AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)  
  
   SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  
   ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update''  
   AND ImportHeadId =@ImportHeadId AND ImportTableName = ''MAGSOLD'' )  
   AND ITD.ImportTableName = ''MAGSOLD'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'  
  
   EXEC sp_executesql @SQL, N'@ImportHeadId int ,@TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT',@ImportHeadId = @ImportHeadId,@TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT  
  
   IF( LEN(@InsertColumnName) > 0 )  
   BEGIN  
    SET @SQL = 'INSERT INTO tempdb..##CustomerAddress ( '+@InsertColumnName+',GUID )  
     SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + '''  
     FROM '+ @TableName + ' PRD '  
     EXEC sp_executesql @SQL  
    SET @SQL = 'Update tempdb..##CustomerAddress  SET IsActive =  1 '  
    EXEC sp_executesql @SQL  
   END  
  
   --Append address data from shipping table  
  
  
   SET @InsertColumnName = ''  
   SET @ImportTableColumnName = ''  
   Declare @CustomerTableName  nvarchar(255)  
   SET @CustomerTableName = @TableName  
   SET @TableName = 'MAGSHIP'  
   SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']'  
   SET @Sql = '  
   SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  
   ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update''  
   AND ImportHeadId =@ImportHeadId AND ImportTableName = ''MAGSHIP'' )  
   AND ITD.ImportTableName = ''MAGSHIP''  AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)  
  
   SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  
   ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update''  
   AND ImportHeadId =@ImportHeadId AND ImportTableName = ''MAGSHIP'' )  
   AND ITD.ImportTableName = ''MAGSHIP'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'  
  
   EXEC sp_executesql @SQL, N'@ImportHeadId int , @TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT', @ImportHeadId=@ImportHeadId , @TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT  
  
   IF( LEN(@InsertColumnName) > 0 )  
   BEGIN  
    SET @SQL = 'INSERT INTO tempdb..##CustomerAddress ( '+@InsertColumnName+',GUID )  
     SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + '''  
     FROM '+ @TableName + ' PRD '  
     EXEC sp_executesql @SQL  
  
    SET @SQL = 'Update tempdb..##CustomerAddress  SET IsActive =  1 '  
    EXEC sp_executesql @SQL  
  
    SET @SQL = 'Update A SET A.UserName = b.[EMAIL LOGON ID] from tempdb..##CustomerAddress A INNER JOIN '+@CustomerTableName+' B ON  
                A.ExternalId = b.[Sold-to number] AND A.UserName is null   '  
    EXEC sp_executesql @SQL  
  
    SET @SQL = 'Update tempdb..##CustomerAddress  SET LastName = ISNULL(LastName,''.''),FirstName  = ISNULL(UserName,'''')'  
    EXEC sp_executesql @SQL  
  
    EXEC Znode_ImportData @TableName = 'tempdb..##CustomerAddress' ,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,  
    @UserId = 2,@PortalId = 1,@LocaleId = 1,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = ''--, @IsDebug =1  
    ,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 0, @StepName = 'Import1', @StartStepName  ='Import',@step_id = 2  
       ,@Nextstep_id  = 1,@ERPTaskSchedulerId  =@ERPTaskSchedulerId  
    select 'Job Successfully Started'  
   END  
  
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportProcessInventoryData')
BEGIN 
	DROP PROCEDURE Znode_ImportProcessInventoryData
END
GO
  CREATE  PROCEDURE [dbo].[Znode_ImportProcessInventoryData](@TblGUID nvarchar(255) = '' ,@ERPTaskSchedulerId  int )  
AS  
BEGIN  
  
 SET NOCOUNT ON;  
 Declare @NewuGuId nvarchar(255)  
 set @NewuGuId = newid()  
 Declare @CurrencyId int ,@PortalId int ,@TemplateId INT ,@ImportHeadId INT   
 SELECT @CurrencyId = CurrencyId  from ZnodeCulture where CultureCode in (Select FeatureValues from   ZnodeGlobalSetting where FeatureName = 'Currency')   
   
 DECLARE @LocaleId  int = dbo.Fn_GetDefaultLocaleId()  
 SELECT TOP 1 @PortalId  = PortalId FROM dbo.ZnodePortal  
  
 DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '',   
      @InsertColumnName NVARCHAR(MAX),   
   @ImportTableColumnName NVARCHAR(MAX),  
   @TableName NVARCHAR(255) = 'MAGINV',     
   @Sql NVARCHAR(MAX) = '',  
   @PriceListId int,  
   @ListCode nvarchar(255) = 'TempMAGINV' ,  
   @RowNum int,   
   @MaxRowNum int,  
   @FirstStep nvarchar(255),  
   @PriceTableName  nvarchar(255),  
   @WarehouseCode varchar(100)  
  
 Select TOP 1  @WarehouseCode = ZW.WarehouseCode from ZnodePortalWarehouse zpw inner join ZnodeWarehouse ZW on zpw.WarehouseId = ZW.WarehouseId  
 where PortalId =@PortalId  
   
    IF OBJECT_ID('tempdb.dbo.##Inventory', 'U') IS NOT NULL   
  DROP TABLE tempdb.dbo.##Inventory  
  
 SELECT @ImportHeadId= ImportHeadId FROM dbo.ZnodeImportHead WHERE Name = 'Inventory'  
 if Isnull(@WarehouseCode ,'') <> ''   
 BEGIN   
  SELECT @TableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =@ImportHeadId --AND ImportTableName = 'PRDH'  
     SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']'   
   
      SET @InsertColumnName = ''    
   SET @ImportTableColumnName = ''  
   SET @CreateTableScriptSql = ''  
     
   --Create Temp table for price with respective their code   
   SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'InventoryTemplate'  
   SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb.dbo.##Inventory ('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)'   
   FROM [dbo].[ZnodeImportTemplateMapping]  
   WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'  
    
   EXEC ( @CreateTableScriptSql )  
  
   SET @Sql = '   
   SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD   
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  ITD.ImportTableName = ''MAGINV''  AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)  
  
   SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'')   
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD   
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  ITD.ImportTableName = ''MAGINV'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'  
  
   EXEC sp_executesql @SQL, N'@TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT', @TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT  
   
  
   IF( LEN(@InsertColumnName) > 0 )  
   BEGIN  
    SET @SQL = 'INSERT INTO tempdb.dbo.##Inventory ( '+@InsertColumnName+',GUID )  
     SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + '''   
     FROM '+ @TableName + ' PRD '  
     EXEC sp_executesql @SQL  
    SET @SQL = 'Update tempdb.dbo.##Inventory  SET WarehouseCode = ''' + @WarehouseCode + ''''  
    EXEC sp_executesql @SQL  
    --SET @SQL = 'Select * from tempdb..##' + @ListCode  
    --EXEC sp_executesql @SQL  
     
  
    EXEC Znode_ImportData @TableName = 'tempdb..##Inventory' ,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,  
    @UserId = 2,@PortalId = @PortalId,@LocaleId = @LocaleId,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = ''--, @IsDebug =1   
    ,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 0,@Nextstep_id  = 1 ,@ERPTaskSchedulerId  = @ERPTaskSchedulerId    
    select 'Job Successfully Started'  
   END  
     
 END  
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportProcessPriceData')
BEGIN 
	DROP PROCEDURE Znode_ImportProcessPriceData
END
GO
CREATE PROCEDURE [dbo].[Znode_ImportProcessPriceData](@TblGUID nvarchar(255) = '',@ERPTaskSchedulerId int  )  
AS  
BEGIN  
  
--EXEC [Znode_ImportProcessPriceData] @TblGUID = '93519c74-f252-40ec-bed9-37ae8270d4da',@ERPTaskSchedulerId  = 14  
--select * from [TPRICE_93519c74-f252-40ec-bed9-37ae8270d4da]  
--EXEC Znode_ImportProcessPriceData](@TblGUID nvarchar(255) = '',@ERPTaskSchedulerId int  )  
--select * into [TPRICE_93519c74-f252-40ec-bed9-37ae8270d4da] from [##TPRICE_93519c74-f252-40ec-bed9-37ae8270d4da]  
--Select * from Tempdb..sysobjects where name  like  '%TPR%'  
  
 SET NOCOUNT ON;  
 Declare @NewuGuId nvarchar(255)  
 set @NewuGuId = newid()  
 Declare @CurrencyId int  
 DECLARE @TemplateId INT , @PortalId INT  
 DECLARE @LocaleId  int = dbo.Fn_GetDefaultLocaleId()  
 SELECT TOP 1 @PortalId  = PortalId FROM dbo.ZnodePortal  
 Select @CurrencyId = CurrencyId  from ZnodeCulture where CultureCode in (Select FeatureValues from   ZnodeGlobalSetting where FeatureName = 'Currency')  
 IF OBJECT_ID('tempdb.dbo.##PriceDetail', 'U') IS NOT NULL  
    DROP TABLE ##PriceDetail  
  
 DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '',  
      @InsertColumnName NVARCHAR(MAX),  
   @ImportTableColumnName NVARCHAR(MAX),  
   @TableName NVARCHAR(500) = 'TPRICE',  
   @Sql NVARCHAR(MAX) = '',  
   @PriceListId int,  
   @ListCode nvarchar(255),  
   @RowNum int,  
   @MaxRowNum int,  
   @FirstStep nvarchar(255),  
   @PriceTableName  nvarchar(255)  
  
  
 SELECT @TableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =2 --AND ImportTableName = 'PRDH'  
 SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']'  
 --SET @TableName = '[' + @TableName + '_' + @TblGUID + ']'  
  
 IF OBJECT_ID('tempdb.dbo.##PriceListcode', 'U') IS NOT NULL  
  DROP TABLE #PriceListcode  
 CREATE TABLE #PriceListcode (RowNum int Identity, ListCode nvarchar(255), ListName nvarchar(255) , CurrencyId int)  
  
 SET @SQL =  
 'INSERT INTO #PriceListcode ( ListCode,ListName,CurrencyId )  
 SELECT  Distinct ltrim(rtrim(Replace(PRD.PricelistCode,''"'',''''))),ltrim(rtrim(Replace(PRD.PricelistCode,''"'',''''))), '+ Convert (nvarchar(30),@CurrencyId ) + '  FROM ' +@TableName+ ' PRD '  
 EXEC sp_executesql @SQL  
  
 SET @SQL =  
 'INSERT INTO ZnodePriceList ( ListCode,ListName,CurrencyId , CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)  
 SELECT  Distinct PRD.ListCode,PRD.ListCode,'+ Convert (nvarchar(30),@CurrencyId ) + ',2,GETDATE(),2,GETDATE() FROM  #PriceListcode PRD  
 WHERE NOT EXISTS ( SELECT TOP 1 1  FROM ZnodePriceList ZPL WHERE ZPL.ListCode = PRD.ListCode ) AND PRD.ListCode is not null '  
 EXEC sp_executesql @SQL  
  
 SET @Rownum  =1  
  
 Select  @MaxRowNum = count(RowNum) from #PriceListcode TPLC INNER JOIN ZnodePriceList ZPL On  
 TPLC.ListCode = ZPL.ListCode  where ZPL.ListCode    is not null  
 AND  Isnull(TPLC.ListCode,'') <> ''  
  
 DECLARE Cur_ListCode CURSOR FOR SELECT ZPL.PriceListId, TPLC.ListCode  
 FROM #PriceListcode TPLC INNER JOIN ZnodePriceList ZPL On  
 TPLC.ListCode = ZPL.ListCode  where ZPL.ListCode    is not null  Order by  TPLC.RowNum  
    OPEN Cur_ListCode  
    FETCH NEXT FROM Cur_ListCode INTO @PriceListId, @ListCode  
    WHILE ( @@FETCH_STATUS = 0 )  
 BEGIN  
  
      SET @InsertColumnName = ''  
   SET @ImportTableColumnName = ''  
   SET @CreateTableScriptSql = ''  
  
      IF OBJECT_ID('tempdb.dbo.##' + @ListCode , 'U') IS NOT NULL  
   BEGIN  
    SET @Sql = 'DROP TABLE tempdb.dbo.##' + @ListCode  
    EXEC sp_executesql @SQL  
   END  
   SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'PriceTemplate'  
  
   --Create Temp table for price with respective their code  
   SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb..##' + @ListCode + '('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)'  
   FROM [dbo].[ZnodeImportTemplateMapping]  
   WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'  
  
   EXEC ( @CreateTableScriptSql )  
  
   SET @Sql = '  
   SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  ITD.ImportTableName = ''TPRICE'' AND ITCD.BaseImportColumn is not null FOR XML PATH ('''')),2,4000)  
  
   SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'')  
   FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD  
   ON ITCD.ImportTableId = ITD.ImportTableId  
   WHERE  ITD.ImportTableName = ''TPRICE''  AND ITCD.BaseImportColumn is not null FOR XML PATH ('''')),2,4000)'  
  
   EXEC sp_executesql @SQL, N'@TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT', @TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT  
  
   IF( LEN(@InsertColumnName) > 0 )  
   BEGIN  
    SET @SQL = 'INSERT INTO tempdb..##' + @ListCode+'  ( '+@InsertColumnName+',GUID )  
     SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + '''  
     FROM '+ @TableName + ' PRD  
     WHERE  
     ltrim(rtrim(replace(PRD.PricelistCode,''"'',''''))) = ''' +  @ListCode + ''' AND  
     EXISTS ( SELECT TOP 1 1  FROM ZnodePriceList ZPL WHERE  
     ZPL.ListCode = ltrim(rtrim(replace(PRD.PricelistCode,''"'',''''))) )'  
    EXEC sp_executesql @SQL  
  
    SET @PriceTableName  ='tempdb..[##' + @ListCode +']'  
    --SET @Sql = 'Select * from ' + @PriceTableName  
    --EXEC sp_executesql @SQL  
    If @RowNum = 1  
     Begin  
      IF @RowNum <> @MaxRowNum  
      BEGIN  
       --Print 'Create Job  ' + Convert(nvarchar(100),@RowNum)  
       EXEC Znode_ImportData @TableName = @PriceTableName,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,  
        @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1  
       ,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 1, @StepName = @ListCode,@ERPTaskSchedulerId  =@ERPTaskSchedulerId  
       SET @FirstStep = @ListCode  
      END  
      ELSE If  @MaxRowNum = 1  
      BEGIN  
       --Print 'Start Job in case of single  ' + Convert(nvarchar(100),@RowNum)  
       EXEC Znode_ImportData @TableName = @PriceTableName,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,  
        @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1  
       ,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 0,  
        --@StepName = @ListCode,  
        @ERPTaskSchedulerId  = @ERPTaskSchedulerId  
       --@step_id = @RowNum  ,@Nextstep_id  = 1  
      END  
     END  
    ELSE If @RowNum = @MaxRowNum  
     Begin  
      --Print 'Start Job  ' + Convert(nvarchar(100),@RowNum)  
      EXEC Znode_ImportData @TableName = @PriceTableName, @NewGUID =  @TblGUID ,@TemplateId = @TemplateId,  
       @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1  
      ,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 0, @StepName = @ListCode, @StartStepName  = @FirstStep ,@step_id = @RowNum --, @IsDebug =1  
      ,@Nextstep_id  = 1,@ERPTaskSchedulerId  = @ERPTaskSchedulerId  
     END  
    ELSE  
     BEGIN  
      --Print 'Create another  Job  ' + Convert(nvarchar(100),@RowNum)  
      EXEC Znode_ImportData @TableName = @PriceTableName , @NewGUID = @TblGUID ,@TemplateId = @TemplateId,  
      @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1  
      ,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 1, @StepName = @ListCode ,@step_id = @RowNum  
      ,@ERPTaskSchedulerId  = @ERPTaskSchedulerId  
     END  
   SET @RowNum = @RowNum +1  
   END  
  
  FETCH NEXT FROM Cur_ListCode INTO  @PriceListId, @ListCode  
 END  
  select 'Job Successfully Started'  
 CLOSE Cur_ListCode  
 DEALLOCATE Cur_ListCode  
END
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetProductInfoForWebStore')
BEGIN 
	DROP PROCEDURE Znode_GetProductInfoForWebStore
END
GO
CREATE  PROCEDURE [dbo].[Znode_GetProductInfoForWebStore]
(   
	@PortalId         INT,
    @LocaleId         INT,
	@UserId			  INT = 2,
	@ProductDetailsFromWebStore   DBO.ProductDetailsFromWebStore READONLY,
	@currentUtcDate    VARCHAR(200) = '')
AS 
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
             SET NOCOUNT ON;
			 
			 DECLARE @Tlb_SKU TABLE (SKU VARCHAR(100))
			 DECLARE @PublishProductIds  NVARCHAR(max) ,@SKU NVARCHAR(max) 
				
			 DECLARE @TBL_PricebyCatalogforAssociateProduct TABLE (PimProductId int ,AssociatedProductId int,ParentSKU NVARCHAR(300),
				ChildSKU NVARCHAR(300),RetailPrice  numeric(28,6),AssociatedProductDisplayOrder int ,
				TypeOfProduct nvarchar(100),SalesPrice  numeric(28,6))
		     DECLARE @tbl_PricingSkuOfAssociatedProduct TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
				TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000), ExternalId NVARCHAR(2000))				
		

			--Create TABLE #Tlb_PromotionProductData 
   --          (
			--	  PromotionId      INT,
			--	  PromotionType	   INT, 
			--	  ExpirationDate   Datetime, 
			--	  ActivationDate   Datetime,
			--	  PublishProductId INT,
			--	  PromotionMessage Nvarchar(max)  
   --          );
			 Create TABLE #Tbl_PriceListWisePrice 
             (
				  SKU            VARCHAR(300),
				  RetailPrice    NUMERIC(28, 6),
				  SalesPrice     NUMERIC(28, 6),
				  TierPrice      NUMERIC(28, 6),
				  TierQuantity   NUMERIC(28, 6),
				  CurrencyCode   Varchar(100),
				  CurrencySuffix Varchar(1000),
				  CultureCode      VARCHAr(1000),
				  ExternalId NVARCHAR(2000),
				  Custom1        NVARCHAR(MAX),
				  Custom2        NVARCHAR(MAX),
				  Custom3        NVARCHAR(MAX)
             );

			 CREATE TABLE #Tlb_ProductData 
             (
				  PublishProductId INT,
				  SKU              NVARCHAR(100),
				  SEOTitle         NVARCHAR(200),
				  SEODescription   NVARCHAR(MAX),
				  SEOKeywords      NVARCHAR(MAX),
				  SEOUrl           NVARCHAR(MAX),
				  Rating           Numeric(28,6),
				  TotalReviews     INT,
				  RetailPrice      NUMERIC(28, 6),
				  SalesPrice       NUMERIC(28, 6),
				  TierPrice        NUMERIC(28, 6),
				  TierQuantity     NUMERIC(28, 6),
				  CurrencyCode     Varchar(100),
				  CurrencySuffix   Varchar(1000),
				
				  ExternalId       NVARCHAR(2000),
				  Quantity    NUMERIC(28, 6),
				  ReOrderLevel     NUMERIC(28, 6),
				  Custom1        NVARCHAR(MAX),
				  Custom2        NVARCHAR(MAX),
				  Custom3        NVARCHAR(MAX)

			   );


			 Create TABLE #Tbl_Inventory
             (
				  SKU            VARCHAR(300),
				  Quantity    NUMERIC(28, 6),
				  ReOrderLevel     NUMERIC(28, 6),
				  PortalId      int
				
             );
            INSERT INTO #Tlb_ProductData (PublishProductId,SKU)
            SELECT id,SKU FROM @ProductDetailsFromWebStore
			  		
			SELECT @SKU = Substring((SELECT ',' + SKU FROM @ProductDetailsFromWebStore FOR XML PAth('')),2,4000) 

			SELECT @PublishProductIds = Substring((SELECT ',' + CONVERT(NVARCHAR(100),id ) FROM @ProductDetailsFromWebStore FOR XML PAth('')),2,4000) 
			
			--INSERT INTO  #Tlb_PromotionProductData(PromotionId,PromotionType, ExpirationDate,  ActivationDate, PublishProductId,PromotionMessage)
			--Exec [Znode_GetPromotionByPublishProductId] @PublishProductIds = @PublishProductIds ,@UserId  = @UserId	,@PortalId  = @PortalId  
			 
			INSERT INTO #Tbl_PriceListWisePrice( SKU, RetailPrice,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix,CultureCode,ExternalId,Custom1,Custom2,Custom3)
			EXEC Znode_GetPublishProductPricingBySku @SKU = @SKU ,@PortalId = @PortalId ,@currentUtcDate = @currentUtcDate,@UserId = @UserId 
			

			
			insert into #Tbl_Inventory (SKU,	Quantity,	ReOrderLevel,	PortalId)
			EXEC Znode_GetInventoryBySkus @SKUs=@SKU,@PortalId=@PortalId

			--Price logic for Associate products
			----INSERT INTO @TBL_PricebyCatalogforAssociateProduct(AssociatedProductId,ChildSKU,ParentSKU,PimProductId,RetailPrice,SalesPrice,TypeOfProduct)
			----SELECT cl.Item, NULL , PR.SKU, PR.ID, null, null , PR.[ProductType]  FROM @ProductDetailsFromWebStore PR
			----Cross Apply dbo.split (AssociateProducts, ',') CL 

			----UPDATE PDI SET PDI.ChildSKU = ZPPD.SKU 
			----from @TBL_PricebyCatalogforAssociateProduct PDI inner join
			----ZnodePublishProductDetail ZPPD On PDI.AssociatedProductId = ZPPD.PublishProductId
			
			----SELECT @SKU = Substring((SELECT ',' + Convert(nvarchar(100),AssociatedProductId) 
			----FROM @TBL_PricebyCatalogforAssociateProduct where AssociatedProductId is not null FOR XML PAth('')),2,4000) 

			----INSERT INTO @tbl_PricingSkuOfAssociatedProduct (SKU,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix, ExternalId)	
			----EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portalID  ,@currentUtcDate,@UserId 

			----update PLC SET PLC.RetailPrice = PLCA.RetailPrice ,
			----PLC.SalesPrice = PLCA.SalesPrice 
			----from @TBL_PricebyCatalogforAssociateProduct PLC inner join @tbl_PricingSkuOfAssociatedProduct
			----PLCA on PLC.ChildSKU = PLCA.sku
			
			----Update PBC SET PBC.RetailPrice = 
			----	(Select TOP 1 Isnull(RetailPrice ,SalesPrice) from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU
			----		and PCBA.ParentSKU is not null and PCBA.ChildSKU is not null
			----	Order by AssociatedProductDisplayOrder)
			----	from #Tbl_PriceListWisePrice  PBC  where 
			----	Exists (Select TOP 1 1  from @TBL_PricebyCatalogforAssociateProduct PCBA
			----	where PCBA.ParentSKU =PBC.SKU and PCBA.TypeOfProduct = 'ConfigurableProduct')
			----	and PBC.RetailPrice IS null 

			Update PD SET 
			 PD.SKU             = PLWP.SKU            
			,PD.RetailPrice     = PLWP.RetailPrice     
			,PD.SalesPrice      = PLWP.SalesPrice      
			,PD.TierPrice       = PLWP.TierPrice       
			,PD.TierQuantity    = PLWP.TierQuantity    
			,PD.CurrencyCode    = PLWP.CurrencyCode    
			,PD.CurrencySuffix  = PLWP.CurrencySuffix  
			,PD.ExternalId 	    = PLWP.ExternalId
			,PD.Custom1			= PLWP.Custom1
			,PD.Custom2			= PLWP.Custom2
			,PD.Custom3			= PLWP.Custom3
			FROM #Tlb_ProductData PD Inner join #Tbl_PriceListWisePrice PLWP on 
			PD.SKU = PLWP.SKU

			Update PD SET 
			 PD.Quantity = TLI.Quantity,
			 PD.ReOrderLevel= TLI.ReOrderLevel
			 FROM #Tlb_ProductData PD Inner join #Tbl_Inventory TLI on 
			PD.SKU = TLI.SKU

			 

			----Update PD SET 
			----	  PD.PromotionId      =PLWP.PromotionId,
			----	  PD.PromotionType	  =PLWP.PromotionType, 
			----	  PD.ExpirationDate   =PLWP.ExpirationDate, 
			----	  PD.ActivationDate   =PLWP.ActivationDate,
			----	  PD.PublishProductId =PLWP.PublishProductId,
			----	  PD.PromotionMessage  =PLWP.PromotionMessage   
			----from #Tlb_ProductData PD Inner join #Tlb_PromotionProductData PLWP on 
			----PD.PublishProductId = PLWP.PublishProductId


			 DECLARE @Tlb_CustomerAverageRatings TABLE
             (PublishProductId INT,
              Rating           NUMERIC(28,6),
              TotalReviews     INT
             ); 
             -- Calculate Average rating 
             INSERT INTO @Tlb_CustomerAverageRatings(PublishProductId,Rating,TotalReviews)
             SELECT CCR.PublishProductId,SUM(CAST(CCR.Rating AS NUMERIC(28,6)) )/ COUNT(CCR.PublishProductId),COUNT(CCR.PublishProductId) 
			 FROM ZnodeCMSCustomerReview AS CCR
             INNER JOIN #Tlb_ProductData AS PD ON CCR.PublishProductId = PD.PublishProductId AND CCR.Status = 'A' 
			 AND  (CCR.PortalId  = @PortalId OR @PortalId = 0 )
			 GROUP BY CCR.PublishProductId    ;

             UPDATE PD SET PD.Rating = CAR.Rating,PD.TotalReviews = CAR.TotalReviews 
			 FROM @Tlb_CustomerAverageRatings CAR
             INNER JOIN #Tlb_ProductData PD ON CAR.PublishProductId = PD.PublishProductId;

             UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.SKU = ZCSO.SEOCode
             LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
             INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 WHERE ZCSO.PortalId = @PortalId
             
			 --UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 --FROM #Tlb_ProductData PD
    --         INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.SKU = ZCSO.SEOCode
    --         LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
    --         INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 --WHERE ZCSO.PortalId = @PortalId

             UPDATE PD SET PD.SEOTitle = ZCPS.ProductTitle,PD.SEODescription = ZCPS.ProductDescription,PD.SEOKeywords = ZCPS.ProductKeyword FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSPortalSEOSetting ZCPS ON ZCPS.PortalId = @PortalId WHERE PD.SEOTitle IS NULL AND PD.SEODescription IS NULL AND PD.SEOKeywords IS NULL AND PD.SEOUrl IS NULL
			  --AND ZCSO.PortalId = @PortalId

			 
			  ;With Cte_Catalogdaata AS 
			 (
			   SELECT  a.PublishCatalogId ,Max(PublishCatalogLogId) PublishCatalogLogId
			   FROM ZnodePortalCatalog a 
			   INNER JOIN ZnodePublishCatalogLog b ON (b.PublishCatalogId = a.PublishCatalogId )
			   WHERE a.PortalId = @PortalId
			   GROUP BY a.PublishCatalogId 
	 
			 )
			 SELECT Row_Number()Over( PARTITION BY  BTY.SKU ORDER BY p.value('(./AttributeValues)[1]', 'VARCHAR(200)')) RowId ,
					BTY.SKU ParentSKU, BTY1.SKU , UI.Quantity, UI.ReOrderLevel ,UI.WarehouseId
			 INTO #TempPublishData
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN ZnodePublishProduct CTR ON ( CTR.PublishProductId = ZPXML.PublishedId)
			 INNER JOIN ZnodePublishProductDetail BTY ON (BTY.PublishProductId = CTR.PublishProductId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ProductEntity/Attributes/AttributeEntity') t(p)	 
			 INNER JOIN ZnodePublishProductDetail BTY1 ON (BTY1.SKU = p.value('(./AttributeValues)[1]', 'varchar(200)'))
			 LEFT JOIN ZnodeInventory UI ON (UI.SKU = BTY1.SKU)
			 WHERE  IsProductXML = 1
			 AND EXISTS (SELECT TOP 1 1 FROM Cte_Catalogdaata TY WHERE TY.PublishCatalogId = CTR.PublishCatalogId AND TY.PublishCatalogLogId =ZPXML.PublishCatalogLogId)
			 AND EXISTS (SELECT TOP 1 1 FROM #Tlb_ProductData TU WHERE TU.SKU = BTY.SKU)
			 AND BTY.LocaleId = Dbo.Fn_GetDefaultLocaleId()
			 AND BTY1.LocaleId = Dbo.Fn_GetDefaultLocaleId()
			 AND p.value('(./AttributeCode)[1]', 'VARCHAR(200)') = 'DefaultSkuForConfigurable'

			 DELETE FROM #TempPublishData WHERE RowId <> 1

			 SELECT A.PublishProductId,a.SKU,SEOTitle,SEODescription,SEOKeywords,SEOUrl,Rating,TotalReviews ,  
					RetailPrice,SalesPrice,TierPrice, TierQuantity,CurrencyCode,CurrencySuffix,a.ExternalId, 
					CASE WHEN TYI.ParentSKU IS NULL AND ZPCPA.PimProductId IS NULL THEN  b.Quantity ELSE ISNULL(TYI.Quantity,0) END as Quantity , 
			 CASE WHEN TYI.ParentSKU IS NULL THEN  b.ReOrderLevel ELSE TYI.ReOrderLevel END ReOrderLevel  
			 FROM #Tlb_ProductData a
			 LEFT JOIN #TempPublishData TYI ON (TYI.ParentSKU = a.SKU AND  TYI.WarehouseId  IN (SELECT  WarehouseId FROM ZnodePortalWarehouse WHERE PortalId = @PortalId))
			 LEFT JOIN ZnodeInventory b ON (b.SKU  = a.SKU  AND  b.WarehouseId  IN (SELECT  WarehouseId FROM ZnodePortalWarehouse WHERE PortalId = @PortalId)) 
			 LEFT JOIN ZnodePublishProduct ZPP on a.PublishProductId = ZPP.PublishProductId 
			 LEFT join ZnodePimConfigureProductAttribute ZPCPA on ZPP.PimProductId = ZPCPA.PimProductId;

			  -- SELECT PublishProductId,SKU,SEOTitle,SEODescription,SEOKeywords,SEOUrl,Rating,TotalReviews ,
			  --RetailPrice,SalesPrice,TierPrice, TierQuantity,CurrencyCode,CurrencySuffix,ExternalId,
			  -- Quantity  ,ReOrderLevel FROM #Tlb_ProductData;    
			 -------added for wcn specific change end             
			 			
			 --Select PDFW.ID PublishProductId ,PDFW.SKU,PromotionId,PromotionType,ExpirationDate,ActivationDate,PromotionMessage from #Tlb_PromotionProductData PPD Inner join 
			 --@ProductDetailsFromWebStore PDFW ON PPD.PublishProductId = PDFW.ID

			 --SELECT SKU,RetailPrice,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix,ExternalId from #Tbl_PriceListWisePrice  


			 COMMIT TRAN A;
			
         END TRY
         BEGIN CATCH
		
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), 
			 @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
			  @ErrorLine VARCHAR(100)= ERROR_LINE(),
			   @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductInfoForWebStore @PortalId='+CAST(@PortalId AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetProductInfoForWebStore',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_CopyPricingList')
BEGIN 
	DROP PROCEDURE Znode_CopyPricingList
END
GO

CREATE PROCEDURE [dbo].[Znode_CopyPricingList](
	  @PriceListId    int, 
	  @NewListName    varchar(600),
	  @NewListCode    varchar(200), 
	  @ActivationDate datetime= NULL, 
	  @ExpirationDate datetime= NULL, 
	  @CurrencyId     int= NULL, 
	  @CultureId     int= NULL, 
	  @Status         bit OUT)
AS
   /*
    
	 Summary : Create copy of existing Price List, If Activation date and Expiration date is 
	           '1753-01-01' as a input from frontend then it is set to null 
			   three tables are affected here "ZnodePriceList" create the new price list 
			   "ZnodePrice" copy  sku's and quantity and "ZnodePriceTier" copy tier price 
     
	 Unit Testing   	
	 begin tran
     EXEC [Znode_CopyPricingList] 2,"Copy Of  C","Copy Of C",'7/5/2016 12:00:00 AM','7/21/2016 12:00:00 AM',41,0
	 rollback tran
    */
BEGIN
	
	BEGIN TRY
		SET NOCOUNT ON;
		-- hold the newly created price list id 
		DECLARE @NewPriceListId int= 0; 

		IF EXISTS
		(
			SELECT TOP 1 1
			FROM ZnodePriceList AS ZPL
			WHERE ZPL.PriceListId = @PriceListId AND 
				  @NewListCode <> ''
		)
		BEGIN  
		   -- Check if @PriceListId contain invalid price list id that not exists 
		   INSERT INTO ZnodePriceList( ListCode, ListName, CurrencyId,CultureId, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
	       SELECT @NewListName, @NewListCode, @CurrencyId,@CultureId,
		   -- here check the Activation date and Expiration date is'1753-01-01' then its set it to be null
		   CASE WHEN @ActivationDate = '1753-01-01' THEN NULL ELSE @ActivationDate END,
           CASE WHEN @ExpirationDate = '1753-01-01' THEN NULL ELSE @ExpirationDate END, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
		   FROM ZnodePriceList
		   WHERE PriceListId = @PriceListId;
		   SET @NewPriceListId = @@Identity;
		END;

	
		IF @NewPriceListId > 0
		BEGIN
		BEGIN TRAN A;
		   -- Copy sku and quantity 
		   INSERT INTO ZnodePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
		   SELECT @NewPriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
		   FROM ZnodePrice
		   WHERE PricelistId = @PriceListId; 

		   -- Copy tier price 
		   INSERT INTO ZnodePriceTier( PriceListId, SKU, Quantity, Price, UomId, UnitSize, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
		   SELECT @NewPriceListId, SKU, Quantity, Price, UomId, UnitSize, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
		   FROM ZnodePriceTier
		   WHERE PricelistId = @PriceListId;
	       -- If copy process will complete successfully then return status 1 
		   SELECT @NewPriceListId AS ID, CAST(1 AS bit) AS [Status];
		   SET @Status = 1;
		   COMMIT TRAN A;
		END;
		ELSE
		BEGIN
			-- If copy process will not complete successfully then return status 0 
			SELECT @NewPriceListId AS ID, CAST(0 AS bit) AS [Status];
			SET @Status = 0;
			
		END;
	END TRY
	BEGIN CATCH	
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_CopyPricingList @PriceListId = '+CAST(@PriceListId AS varchar(100))+' ,@NewListName='+@NewListName+' ,@NewListCode= '+@NewListCode+',@ActivationDate='+CAST(@ActivationDate AS varchar(200))+',@ExpirationDate='+CAST(@ExpirationDate AS varchar(200))+' ,@CurrencyId = '+CAST(@CurrencyId AS varchar(100))+' ,@CultureId = '+CAST(@CultureId AS varchar(100))+',@Status='+CAST(@Status AS varchar(200));
		SELECT @PriceListId AS ID, CAST(0 AS bit) AS [Status];
		SET @Status = 0;
		ROLLBACK TRAN A;
		EXEC Znode_InsertProcedureErrorLog
			 @ProcedureName = 'Znode_CopyPricingList', 
			 @ErrorInProcedure = @Error_procedure, 
			 @ErrorMessage = @ErrorMessage, 
			 @ErrorLine = @ErrorLine, 
			 @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO


Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Customer','GetUserCartByUserId',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Customer' and ActionName = 'GetUserCartByUserId')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Users' AND ControllerName = 'Customer')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Customer' and ActionName= 'GetUserCartByUserId')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Users' AND ControllerName = 'Customer') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Customer' and ActionName= 'GetUserCartByUserId'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Users' AND ControllerName = 'Customer'),
(select ActionId from ZnodeActions where ControllerName = 'Customer' and ActionName= 'GetUserCartByUserId')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Users' AND ControllerName = 'Customer') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Customer' and ActionName= 'GetUserCartByUserId'))

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_CopyPricingList')
BEGIN 
	DROP PROCEDURE Znode_CopyPricingList
END
GO

CREATE PROCEDURE [dbo].[Znode_CopyPricingList](
	  @PriceListId    int, 
	  @NewListName    varchar(600),
	  @NewListCode    varchar(200), 
	  @ActivationDate datetime= NULL, 
	  @ExpirationDate datetime= NULL, 
	  @CurrencyId     int= NULL, 
	  @CultureId     int= NULL, 
	  @Status         bit OUT)
AS
   /*
    
	 Summary : Create copy of existing Price List, If Activation date and Expiration date is 
	           '1753-01-01' as a input from frontend then it is set to null 
			   three tables are affected here "ZnodePriceList" create the new price list 
			   "ZnodePrice" copy  sku's and quantity and "ZnodePriceTier" copy tier price 
     
	 Unit Testing   	
	 begin tran
     EXEC [Znode_CopyPricingList] 2,"Copy Of  C","Copy Of C",'7/5/2016 12:00:00 AM','7/21/2016 12:00:00 AM',41,0
	 rollback tran
    */
BEGIN
	
	BEGIN TRY
		SET NOCOUNT ON;
		-- hold the newly created price list id 
		DECLARE @NewPriceListId int= 0; 

		IF EXISTS
		(
			SELECT TOP 1 1
			FROM ZnodePriceList AS ZPL
			WHERE ZPL.PriceListId = @PriceListId AND 
				  @NewListCode <> ''
		)
		BEGIN  
		   -- Check if @PriceListId contain invalid price list id that not exists 
		   INSERT INTO ZnodePriceList( ListCode, ListName, CurrencyId,CultureId, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
	       SELECT @NewListName, @NewListCode, @CurrencyId,@CultureId,
		   -- here check the Activation date and Expiration date is'1753-01-01' then its set it to be null
		   CASE WHEN @ActivationDate = '1753-01-01' THEN NULL ELSE @ActivationDate END,
           CASE WHEN @ExpirationDate = '1753-01-01' THEN NULL ELSE @ExpirationDate END, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
		   FROM ZnodePriceList
		   WHERE PriceListId = @PriceListId;
		   SET @NewPriceListId = @@Identity;
		END;

	
		IF @NewPriceListId > 0
		BEGIN
		BEGIN TRAN A;
		   -- Copy sku and quantity 
		   INSERT INTO ZnodePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
		   SELECT @NewPriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
		   FROM ZnodePrice
		   WHERE PricelistId = @PriceListId; 

		   -- Copy tier price 
		   INSERT INTO ZnodePriceTier( PriceListId, SKU, Quantity, Price, UomId, UnitSize, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
		   SELECT @NewPriceListId, SKU, Quantity, Price, UomId, UnitSize, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
		   FROM ZnodePriceTier
		   WHERE PricelistId = @PriceListId;
	       -- If copy process will complete successfully then return status 1 
		   SELECT @NewPriceListId AS ID, CAST(1 AS bit) AS [Status];
		   SET @Status = 1;
		   COMMIT TRAN A;
		END;
		ELSE
		BEGIN
			-- If copy process will not complete successfully then return status 0 
			SELECT @NewPriceListId AS ID, CAST(0 AS bit) AS [Status];
			SET @Status = 0;
			
		END;
	END TRY
	BEGIN CATCH	
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_CopyPricingList @PriceListId = '+CAST(@PriceListId AS varchar(100))+' ,@NewListName='+@NewListName+' ,@NewListCode= '+@NewListCode+',@ActivationDate='+CAST(@ActivationDate AS varchar(200))+',@ExpirationDate='+CAST(@ExpirationDate AS varchar(200))+' ,@CurrencyId = '+CAST(@CurrencyId AS varchar(100))+' ,@CultureId = '+CAST(@CultureId AS varchar(100))+',@Status='+CAST(@Status AS varchar(200));
		SELECT @PriceListId AS ID, CAST(0 AS bit) AS [Status];
		SET @Status = 0;
		ROLLBACK TRAN A;
		EXEC Znode_InsertProcedureErrorLog
			 @ProcedureName = 'Znode_CopyPricingList', 
			 @ErrorInProcedure = @Error_procedure, 
			 @ErrorMessage = @ErrorMessage, 
			 @ErrorLine = @ErrorLine, 
			 @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetProductInfoForWebStore')
BEGIN 
	DROP PROCEDURE Znode_GetProductInfoForWebStore
END
GO
CREATE  PROCEDURE [dbo].[Znode_GetProductInfoForWebStore]
(   
	@PortalId         INT,
    @LocaleId         INT,
	@UserId			  INT = 2,
	@ProductDetailsFromWebStore   DBO.ProductDetailsFromWebStore READONLY,
	@currentUtcDate    VARCHAR(200) = '')
AS 
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
             SET NOCOUNT ON;
			 
			 DECLARE @Tlb_SKU TABLE (SKU VARCHAR(100))
			 DECLARE @PublishProductIds  NVARCHAR(max) ,@SKU NVARCHAR(max) 
				
			 DECLARE @TBL_PricebyCatalogforAssociateProduct TABLE (PimProductId int ,AssociatedProductId int,ParentSKU NVARCHAR(300),
				ChildSKU NVARCHAR(300),RetailPrice  numeric(28,6),AssociatedProductDisplayOrder int ,
				TypeOfProduct nvarchar(100),SalesPrice  numeric(28,6))
		     DECLARE @tbl_PricingSkuOfAssociatedProduct TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
				TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000), ExternalId NVARCHAR(2000))				
		

			--Create TABLE #Tlb_PromotionProductData 
   --          (
			--	  PromotionId      INT,
			--	  PromotionType	   INT, 
			--	  ExpirationDate   Datetime, 
			--	  ActivationDate   Datetime,
			--	  PublishProductId INT,
			--	  PromotionMessage Nvarchar(max)  
   --          );
			 Create TABLE #Tbl_PriceListWisePrice 
             (
				  SKU            VARCHAR(300),
				  RetailPrice    NUMERIC(28, 6),
				  SalesPrice     NUMERIC(28, 6),
				  TierPrice      NUMERIC(28, 6),
				  TierQuantity   NUMERIC(28, 6),
				  CurrencyCode   Varchar(100),
				  CurrencySuffix Varchar(1000),
				  CultureCode      VARCHAr(1000),
				  ExternalId NVARCHAR(2000),
				  Custom1        NVARCHAR(MAX),
				  Custom2        NVARCHAR(MAX),
				  Custom3        NVARCHAR(MAX)
             );

			 CREATE TABLE #Tlb_ProductData 
             (
				  PublishProductId INT,
				  SKU              NVARCHAR(100),
				  SEOTitle         NVARCHAR(200),
				  SEODescription   NVARCHAR(MAX),
				  SEOKeywords      NVARCHAR(MAX),
				  SEOUrl           NVARCHAR(MAX),
				  Rating           Numeric(28,6),
				  TotalReviews     INT,
				  RetailPrice      NUMERIC(28, 6),
				  SalesPrice       NUMERIC(28, 6),
				  TierPrice        NUMERIC(28, 6),
				  TierQuantity     NUMERIC(28, 6),
				  CurrencyCode     Varchar(100),
				  CurrencySuffix   Varchar(1000),
				
				  ExternalId       NVARCHAR(2000),
				  Quantity    NUMERIC(28, 6),
				  ReOrderLevel     NUMERIC(28, 6),
				  Custom1        NVARCHAR(MAX),
				  Custom2        NVARCHAR(MAX),
				  Custom3        NVARCHAR(MAX)

			   );


			 Create TABLE #Tbl_Inventory
             (
				  SKU            VARCHAR(300),
				  Quantity    NUMERIC(28, 6),
				  ReOrderLevel     NUMERIC(28, 6),
				  PortalId      int
				
             );
            INSERT INTO #Tlb_ProductData (PublishProductId,SKU)
            SELECT id,SKU FROM @ProductDetailsFromWebStore
			  		
			SELECT @SKU = Substring((SELECT ',' + SKU FROM @ProductDetailsFromWebStore FOR XML PAth('')),2,4000) 

			SELECT @PublishProductIds = Substring((SELECT ',' + CONVERT(NVARCHAR(100),id ) FROM @ProductDetailsFromWebStore FOR XML PAth('')),2,4000) 
			
			--INSERT INTO  #Tlb_PromotionProductData(PromotionId,PromotionType, ExpirationDate,  ActivationDate, PublishProductId,PromotionMessage)
			--Exec [Znode_GetPromotionByPublishProductId] @PublishProductIds = @PublishProductIds ,@UserId  = @UserId	,@PortalId  = @PortalId  
			 
			INSERT INTO #Tbl_PriceListWisePrice( SKU, RetailPrice,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix,CultureCode,ExternalId,Custom1,Custom2,Custom3)
			EXEC Znode_GetPublishProductPricingBySku @SKU = @SKU ,@PortalId = @PortalId ,@currentUtcDate = @currentUtcDate,@UserId = @UserId 
			

			
			insert into #Tbl_Inventory (SKU,	Quantity,	ReOrderLevel,	PortalId)
			EXEC Znode_GetInventoryBySkus @SKUs=@SKU,@PortalId=@PortalId

			--Price logic for Associate products
			----INSERT INTO @TBL_PricebyCatalogforAssociateProduct(AssociatedProductId,ChildSKU,ParentSKU,PimProductId,RetailPrice,SalesPrice,TypeOfProduct)
			----SELECT cl.Item, NULL , PR.SKU, PR.ID, null, null , PR.[ProductType]  FROM @ProductDetailsFromWebStore PR
			----Cross Apply dbo.split (AssociateProducts, ',') CL 

			----UPDATE PDI SET PDI.ChildSKU = ZPPD.SKU 
			----from @TBL_PricebyCatalogforAssociateProduct PDI inner join
			----ZnodePublishProductDetail ZPPD On PDI.AssociatedProductId = ZPPD.PublishProductId
			
			----SELECT @SKU = Substring((SELECT ',' + Convert(nvarchar(100),AssociatedProductId) 
			----FROM @TBL_PricebyCatalogforAssociateProduct where AssociatedProductId is not null FOR XML PAth('')),2,4000) 

			----INSERT INTO @tbl_PricingSkuOfAssociatedProduct (SKU,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix, ExternalId)	
			----EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portalID  ,@currentUtcDate,@UserId 

			----update PLC SET PLC.RetailPrice = PLCA.RetailPrice ,
			----PLC.SalesPrice = PLCA.SalesPrice 
			----from @TBL_PricebyCatalogforAssociateProduct PLC inner join @tbl_PricingSkuOfAssociatedProduct
			----PLCA on PLC.ChildSKU = PLCA.sku
			
			----Update PBC SET PBC.RetailPrice = 
			----	(Select TOP 1 Isnull(RetailPrice ,SalesPrice) from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU
			----		and PCBA.ParentSKU is not null and PCBA.ChildSKU is not null
			----	Order by AssociatedProductDisplayOrder)
			----	from #Tbl_PriceListWisePrice  PBC  where 
			----	Exists (Select TOP 1 1  from @TBL_PricebyCatalogforAssociateProduct PCBA
			----	where PCBA.ParentSKU =PBC.SKU and PCBA.TypeOfProduct = 'ConfigurableProduct')
			----	and PBC.RetailPrice IS null 

			Update PD SET 
			 PD.SKU             = PLWP.SKU            
			,PD.RetailPrice     = PLWP.RetailPrice     
			,PD.SalesPrice      = PLWP.SalesPrice      
			,PD.TierPrice       = PLWP.TierPrice       
			,PD.TierQuantity    = PLWP.TierQuantity    
			,PD.CurrencyCode    = PLWP.CurrencyCode    
			,PD.CurrencySuffix  = PLWP.CurrencySuffix  
			,PD.ExternalId 	    = PLWP.ExternalId
			,PD.Custom1			= PLWP.Custom1
			,PD.Custom2			= PLWP.Custom2
			,PD.Custom3			= PLWP.Custom3
			FROM #Tlb_ProductData PD Inner join #Tbl_PriceListWisePrice PLWP on 
			PD.SKU = PLWP.SKU

			Update PD SET 
			 PD.Quantity = TLI.Quantity,
			 PD.ReOrderLevel= TLI.ReOrderLevel
			 FROM #Tlb_ProductData PD Inner join #Tbl_Inventory TLI on 
			PD.SKU = TLI.SKU

			 

			----Update PD SET 
			----	  PD.PromotionId      =PLWP.PromotionId,
			----	  PD.PromotionType	  =PLWP.PromotionType, 
			----	  PD.ExpirationDate   =PLWP.ExpirationDate, 
			----	  PD.ActivationDate   =PLWP.ActivationDate,
			----	  PD.PublishProductId =PLWP.PublishProductId,
			----	  PD.PromotionMessage  =PLWP.PromotionMessage   
			----from #Tlb_ProductData PD Inner join #Tlb_PromotionProductData PLWP on 
			----PD.PublishProductId = PLWP.PublishProductId


			 DECLARE @Tlb_CustomerAverageRatings TABLE
             (PublishProductId INT,
              Rating           NUMERIC(28,6),
              TotalReviews     INT
             ); 
             -- Calculate Average rating 
             INSERT INTO @Tlb_CustomerAverageRatings(PublishProductId,Rating,TotalReviews)
             SELECT CCR.PublishProductId,SUM(CAST(CCR.Rating AS NUMERIC(28,6)) )/ COUNT(CCR.PublishProductId),COUNT(CCR.PublishProductId) 
			 FROM ZnodeCMSCustomerReview AS CCR
             INNER JOIN #Tlb_ProductData AS PD ON CCR.PublishProductId = PD.PublishProductId AND CCR.Status = 'A' 
			 AND  (CCR.PortalId  = @PortalId OR @PortalId = 0 )
			 GROUP BY CCR.PublishProductId    ;

             UPDATE PD SET PD.Rating = CAR.Rating,PD.TotalReviews = CAR.TotalReviews 
			 FROM @Tlb_CustomerAverageRatings CAR
             INNER JOIN #Tlb_ProductData PD ON CAR.PublishProductId = PD.PublishProductId;

             UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.SKU = ZCSO.SEOCode
             LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
             INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 WHERE ZCSO.PortalId = @PortalId
             
			 --UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 --FROM #Tlb_ProductData PD
    --         INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.SKU = ZCSO.SEOCode
    --         LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
    --         INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 --WHERE ZCSO.PortalId = @PortalId

             UPDATE PD SET PD.SEOTitle = ZCPS.ProductTitle,PD.SEODescription = ZCPS.ProductDescription,PD.SEOKeywords = ZCPS.ProductKeyword FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSPortalSEOSetting ZCPS ON ZCPS.PortalId = @PortalId WHERE PD.SEOTitle IS NULL AND PD.SEODescription IS NULL AND PD.SEOKeywords IS NULL AND PD.SEOUrl IS NULL
			  --AND ZCSO.PortalId = @PortalId

			 
			  ;With Cte_Catalogdaata AS 
			 (
			   SELECT  a.PublishCatalogId ,Max(PublishCatalogLogId) PublishCatalogLogId
			   FROM ZnodePortalCatalog a 
			   INNER JOIN ZnodePublishCatalogLog b ON (b.PublishCatalogId = a.PublishCatalogId )
			   WHERE a.PortalId = @PortalId
			   GROUP BY a.PublishCatalogId 
	 
			 )
			 SELECT Row_Number()Over( PARTITION BY  BTY.SKU ORDER BY p.value('(./AttributeValues)[1]', 'VARCHAR(200)')) RowId ,
					BTY.SKU ParentSKU, BTY1.SKU , UI.Quantity, UI.ReOrderLevel ,UI.WarehouseId
			 INTO #TempPublishData
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN ZnodePublishProduct CTR ON ( CTR.PublishProductId = ZPXML.PublishedId)
			 INNER JOIN ZnodePublishProductDetail BTY ON (BTY.PublishProductId = CTR.PublishProductId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ProductEntity/Attributes/AttributeEntity') t(p)	 
			 INNER JOIN ZnodePublishProductDetail BTY1 ON (BTY1.SKU = p.value('(./AttributeValues)[1]', 'varchar(200)'))
			 LEFT JOIN ZnodeInventory UI ON (UI.SKU = BTY1.SKU)
			 WHERE  IsProductXML = 1
			 AND EXISTS (SELECT TOP 1 1 FROM Cte_Catalogdaata TY WHERE TY.PublishCatalogId = CTR.PublishCatalogId AND TY.PublishCatalogLogId =ZPXML.PublishCatalogLogId)
			 AND EXISTS (SELECT TOP 1 1 FROM #Tlb_ProductData TU WHERE TU.SKU = BTY.SKU)
			 AND BTY.LocaleId = Dbo.Fn_GetDefaultLocaleId()
			 AND BTY1.LocaleId = Dbo.Fn_GetDefaultLocaleId()
			 AND p.value('(./AttributeCode)[1]', 'VARCHAR(200)') = 'DefaultSkuForConfigurable'

			 DELETE FROM #TempPublishData WHERE RowId <> 1

			 SELECT A.PublishProductId,a.SKU,SEOTitle,SEODescription,SEOKeywords,SEOUrl,Rating,TotalReviews ,  
					RetailPrice,SalesPrice,TierPrice, TierQuantity,CurrencyCode,CurrencySuffix,a.ExternalId, 
					CASE WHEN TYI.ParentSKU IS NULL AND ZPCPA.PimProductId IS NULL THEN  b.Quantity ELSE ISNULL(TYI.Quantity,0) END as Quantity , 
			 CASE WHEN TYI.ParentSKU IS NULL THEN  b.ReOrderLevel ELSE TYI.ReOrderLevel END ReOrderLevel  
			 FROM #Tlb_ProductData a
			 LEFT JOIN #TempPublishData TYI ON (TYI.ParentSKU = a.SKU AND  TYI.WarehouseId  IN (SELECT  WarehouseId FROM ZnodePortalWarehouse WHERE PortalId = @PortalId))
			 LEFT JOIN ZnodeInventory b ON (b.SKU  = a.SKU  AND  b.WarehouseId  IN (SELECT  WarehouseId FROM ZnodePortalWarehouse WHERE PortalId = @PortalId)) 
			 LEFT JOIN ZnodePublishProduct ZPP on a.PublishProductId = ZPP.PublishProductId 
			 LEFT join ZnodePimConfigureProductAttribute ZPCPA on ZPP.PimProductId = ZPCPA.PimProductId;

			  -- SELECT PublishProductId,SKU,SEOTitle,SEODescription,SEOKeywords,SEOUrl,Rating,TotalReviews ,
			  --RetailPrice,SalesPrice,TierPrice, TierQuantity,CurrencyCode,CurrencySuffix,ExternalId,
			  -- Quantity  ,ReOrderLevel FROM #Tlb_ProductData;    
			 -------added for wcn specific change end             
			 			
			 --Select PDFW.ID PublishProductId ,PDFW.SKU,PromotionId,PromotionType,ExpirationDate,ActivationDate,PromotionMessage from #Tlb_PromotionProductData PPD Inner join 
			 --@ProductDetailsFromWebStore PDFW ON PPD.PublishProductId = PDFW.ID

			 --SELECT SKU,RetailPrice,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix,ExternalId from #Tbl_PriceListWisePrice  


			 COMMIT TRAN A;
			
         END TRY
         BEGIN CATCH
		
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), 
			 @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
			  @ErrorLine VARCHAR(100)= ERROR_LINE(),
			   @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductInfoForWebStore @PortalId='+CAST(@PortalId AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetProductInfoForWebStore',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO

GO
DISABLE TRIGGER [Trg_ZNodeCulture_GlobalSetting] ON ZnodeCulture 
GO 

IF NOT EXISTS (SELECT TOP 1 1 FROM SYS.tables WHERE Name = '_ZnodeCurrency')
BEGIN 

SELECT * 
INTO _ZnodeCurrency
FROM ZnodeCurrency
SELECT * 
INTO _ZnodeShipping 
FROM ZnodeShipping 
SELECT * 
INTO _ZnodePortalUnit 
FROM ZnodePortalUnit
SELECT * 
INTO _ZnodePriceList 
FROM ZnodePriceList 


END 


UPDATE ZnodePriceList 
SET CurrencyId = NULL 

UPDATE ZnodePortalUnit 
SET CurrencyId = NULL 

UPDATE ZnodeShipping 
SET CurrencyId = NULL 

DELETE FROM ZnodeCurrency



INSERT INTO ZnodeCulture (CultureCode,CultureName,CurrencyId,Symbol,IsActive,IsDefault,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT CurrencyCode,CurrencyName,NULL,Symbol,IsActive,IsDefault,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate FROM _ZnodeCurrency rt
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeCulture r WHERE r.CultureCode = rt.CurrencyCode )

INSERT INTO ZnodeCurrency (CurrencyCode,CurrencyName,IsActive,IsDefault,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT DISTINCT  CURRENCYSUFFIX,SUBSTRING(CURRENCYNAME,CHARINDEX('(',CURRENCYNAME,1)+1,len(currencyname)-CHARINDEX('(',CURRENCYNAME,1)-1),1,1,2,GETDATE(),2,GETDATE() FROM _ZnodeCurrency tp
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeCurrency t WHERE t.CurrencyCode = tp.CURRENCYSUFFIX)


UPDATE b set B.CurrencyId = C.CurrencyId 
FROM  _ZnodeCurrency  A 
INNER JOIN ZnodeCulture b ON a.CurrencyCode = B.CultureCode
INNER JOIN ZnodeCurrency C ON a.CurrencySuffix = C.CurrencyCode



Update list set list.CurrencyId=NewCur.CurrencyId
from ZnodePriceList list 
INNER JOIN _ZnodePriceList list2 ON (list2.PriceListId = list.PriceListId)
left join _ZnodeCurrency Curr on list2.CurrencyId = curr.CurrencyId 
left join ZnodeCulture Cult on Cult.CultureName = curr.CurrencyName
Left join ZnodeCurrency NewCur on NewCur.CurrencyCode = Curr.CurrencySuffix
WHERE NewCur.CurrencyId IS NOT NULL 



UPDATE ship set ship.CurrencyId = NewCur.CurrencyId
FROM ZnodeShipping Ship 
INNER JOIN _ZnodeShipping Ship2 ON (ship2.ShippingId = ship.ShippingId) 
left join _ZnodeCurrency Curr on Ship2.CurrencyId = Curr.CurrencyId 
LEFT JOIN ZnodeCurrency NewCur on NewCur.CurrencyCode = Curr.CurrencySuffix



UPDATE Portal Set Portal.CurrencyId = NewCur.CurrencyId
FROM ZnodePortalUnit Portal 
INNER JOIN _ZnodePortalUnit Portal2 ON (Portal2.PortalUnitId = Portal.PortalUnitId)  
left join _ZnodeCurrency Curr on Portal2.CurrencyId = Curr.CurrencyId 
LEFT JOIN ZnodeCulture Cult on Cult.CultureName = curr.CurrencyName
LEFT JOIN ZnodeCurrency NewCur on NewCur.CurrencyCode = Curr.CurrencySuffix



exec sp_refreshview View_CustomerReferralCommissionDetail
exec sp_refreshview View_DefaultGlobalConfiguration
exec sp_refreshview View_GetAssociatedPortalToPriceList
exec sp_refreshview View_ImportPriceList



UPDATE Price SET Price.CultureId = Cult.CultureId
FROM ZnodePriceList Price 
LEFT JOIN ZnodeCulture Cult ON Price.CurrencyId = Cult.CurrencyId
WHERE Cult.CultureCode = 'en-US'




UPDATE Ship SET Ship.CultureId = (SELECT TOP 1  Cult.CultureId  FROM ZnodeCulture Cult WHERE  Ship.CurrencyId = Cult.CurrencyId  ) 
FROM ZnodeShipping Ship 


UPDATE ZnodeOmsOrderdetails 
SET CurrencyCode = 'USD' , CultureCode = 'en-US'


UPDATE Portal SET Portal.CurrencySuffix = Curr.CurrencyCode
FROM ZnodePortalUnit Portal 
LEFT JOIN ZnodeCurrency Curr ON Portal.CurrencyId = Curr.CurrencyId


UPDATE Portal SET Portal.CultureId  = Cult.CultureId
FROM ZnodePortalUnit Portal 
LEFT JOIN  ZnodeCurrency Curr On Portal.CurrencyId = Curr.CurrencyId
LEFT JOIN ZnodeCulture Cult On Curr.CurrencyId = Cult.CurrencyId 
WHERE Cult.CultureCode ='sq-AL'


UPDATE Portal SET Portal.CultureId = Cult.CultureId
FROM ZnodePortalUnit Portal 
LEFT JOIN  ZnodeCurrency Curr On Portal.CurrencyId = Curr.CurrencyId
LEFT JOIN ZnodeCulture Cult On Curr.CurrencyId = Cult.CurrencyId 
WHERE Cult.CultureCode ='en-US'



--INSERT INTO ZnodeApplicationSetting (GroupName,ItemName,Setting,ViewOptions,FrontPageName,FrontObjectName,IsCompressed
--,OrderByFields,ItemNameWithoutCurrency,CreatedByName,ModifiedByName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
--SELECT 'Table','ZnodeCurrency','<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>CultureId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>CurrencyName</name>      <headertext>Currency Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>CurrencyCode</name>      <headertext>Currency Code</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>CultureName</name>      <headertext>Culture Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>CultureCode</name>      <headertext>Culture Code</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>CreatedDate</name>      <headertext>CreatedDate</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ModifiedDate</name>      <headertext>ModifiedDate</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>IsActive</name>      <headertext>Is Active</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>IsDefault</name>      <headertext>Is Default</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
--,'ZnodeCurrency','ZnodeCurrency','ZnodeCurrency',0,NULL,NULL,NULL,NULL,2,GETDATE(),2,GETDATE()
--WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeApplicationSetting WHERE ItemName = 'ZnodeCurrency')

--UPDATE ZnodeApplicationSetting 
--SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>CultureId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>CurrencyName</name>      <headertext>Currency Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>CurrencyCode</name>      <headertext>Currency Code</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>CultureName</name>      <headertext>Culture Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>CultureCode</name>      <headertext>Culture Code</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>CreatedDate</name>      <headertext>CreatedDate</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ModifiedDate</name>      <headertext>ModifiedDate</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>IsActive</name>      <headertext>Is Active</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>IsDefault</name>      <headertext>Is Default</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
--WHERE ItemName = 'ZnodeCurrency'


DROP TABLE _ZnodeShipping 
DROP TABLE _ZnodePortalUnit
DROP TABLE _ZnodePriceList
DROP TABLE _ZnodeCurrency


GO 
IF NOT EXISTS(SELECT TOP 1 1 FROM ZnodeGlobalSetting WHERE FeatureName = 'Culture')
INSERT INTO [dbo].[ZnodeGlobalSetting] 
           ([FeatureName]
           ,[FeatureValues]
           ,[FeatureSubValues]
           ,[CreatedBy]
           ,[CreatedDate]
           ,[ModifiedBy]
           ,[ModifiedDate])
     VALUES
           ('Culture'
           ,'en-US'
           ,NULL
           ,2
           ,GETDATE()
           ,2
           ,GETDATE())


GO
ENABLE TRIGGER [Trg_ZNodeCulture_GlobalSetting] ON ZnodeCulture 
GO 
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetOmsQuoteList')
BEGIN 
	DROP PROCEDURE Znode_GetOmsQuoteList
END
GO
    
CREATE PROCEDURE [dbo].[Znode_GetOmsQuoteList]    
(     
  @WhereClause NVARCHAR(MAX),    
  @Rows        INT            = 100,    
  @PageNo      INT            = 1  ,    
  @Order_BY    VARCHAR(1000)  = '' ,    
  @RowsCount   INT OUT             ,    
  @AccountId   INT,    
  @UserId      INT            = 0,     
  @IsPendingPayment BIT = 0  ,     
  @IsParentPendingOrder  BIT = 1     
  )    
AS     
   /*    
  Summary :- This procedure is used to get the Quote list of account and Users    
    Fn_GetRecurciveAccounts is used to fetch AccountId and Its recursive ParentId      
    @InnerWhereClause contains AccountId fetched from the Function Fn_GetRecurciveAccounts     
    OrderDetails are fetched from the tables filtered by AccountId Present in @InnerWhereClause    
    OrderDetails are fetched in Descending order of OmsQuoteId    
     Unit Testing     
     
     EXEC Znode_GetOmsQuoteList '(PortalId in(''1'',''2'',''3'',''6'')) ' ,@RowsCount = 0 ,@AccountId = 0,@UserId = 0      
    
*/    
     BEGIN    
         BEGIN TRY    
             SET NOCOUNT ON;    
             DECLARE @SQL NVARCHAR(MAX)= '', @InnerWhereClause VARCHAR(MAX)= '', @ProcessType  varchar(50)='Quote',@QuoteFilter NVARCHAr(max)='';    
    
             DECLARE @TBL_QuoteDetails TABLE (OmsQuoteId INT,UserName NVARCHAR(300),AccountName NVARCHAR(400),QuoteOrderTotal NUMERIC(28, 6),[OrderStatus] VARCHAR(300),    
             CreatedDate DATETIME,StoreName NVARCHAR(Max),CurrencyCode VARCHAR(100),CultureCode VARCHAR(100),RowId INT,CountNo INT,CreatedByName NVARCHAr(max) ,ModifiedByName NVARCHAR(max),IsConvertedToOrder bit);    
    
       
             IF @UserId <> 0  AND @IsParentPendingOrder   = 1     
       
                 BEGIN    
                     SET @InnerWhereClause = ' AND '''+CAST(@UserId AS VARCHAR(max))+''' = ZU.UserId ';    
                    -- SET @AccountId = (SELECT TOP 1 AccountID FROM ZnodeUser WHERE UserId = @UserId);    
                 END    
             ELSE IF @IsParentPendingOrder   = 0     
                 BEGIN    
                    SET @InnerWhereClause = ' AND  EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetRecurciveUserId] ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''') SP WHERE SP.UserId = ZU.UserId AND '''+CAST(@UserId AS VARCHAR(max))+''' <> ZU.UserId )'; 
  
   
      SET @QuoteFilter =' AND EXISTS (SELECT TOP 1 1 FROM ZnodeOMSQuoteApproval WR WHERE WR.OmsQuoteId = ZOQ.OmsQuoteId AND Wr.ApproverUserId ='+CAST(@UserId AS VARCHAR(50))+' ) ';    
    
     END    
    ELSE     
    BEGIN     
      SET @InnerWhereClause = ''    
    END       
          
    IF @IsPendingPayment =1     
    BEGIN     
       
     SET @InnerWhereClause = @InnerWhereClause+' AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodeUserGlobalAttributeValue a     
    INNER JOIN ZnodeUserGlobalAttributeValueLocale b  on (b.UserGlobalAttributeValueId = a.UserGlobalAttributeValueId)    
    INNER JOIN ZnodeGlobalAttribute c ON (c.GlobalAttributeid = a.GlobalAttributeId )    
    WHERE c.AttributeCOde = ''BillingAccountNumber'' AND a.UserId =  ZU.UserId AND b.AttributeValue = '''' ) AND ZOQ.IsPendingPayment =  1    '    
         
    END     
    ELSE     
    BEGIN    
       SET @InnerWhereClause = @InnerWhereClause+' AND ZOQ.IsPendingPayment = 0   '    
    END     
    
    SET @InnerWhereClause = @InnerWhereClause + CASE WHEN @AccountId > 0 THEN ' AND ZA.AccountId ='+CAST(@AccountId AS VARCHAR(200)) ELSE '' END     
    
             SET @SQL = '       
    ;With Cte_GetQuoteDetail AS     
    (    
    SELECT Zu.UserId ,ZOQ.OmsQuoteId,ZU.FirstName + CASE WHEN ZU.LastName IS NULL THEN '''' ELSE '' ''+Zu.LastName END UserName , QuoteOrderTotal , ZOOS.OrderStateName [OrderStatus]    
    ,ZOQ.CreatedDate,ZA.Name AccountName,ZP.PortalId,Zp.StoreName , ZCC.CurrencyCode AS CurrencyCode, ZC.CultureCode AS CultureCode ,ZVGD.UserName CreatedByName , ZVGDI.UserName ModifiedByName,    
    case when ZOQ.IsConvertedToOrder IS NULL THEN 0 ELSE ZOQ.IsConvertedToOrder END IsConvertedToOrder,ISNULL(DT.QuoteTypeCode,'''') QuoteTypeCode    
    FROM ZnodeOmsQuote ZOQ    
    INNER JOIN ZnodeUser ZU ON (ZU.UserId = ZOQ.UserId)    
    LEFT JOIN ZnodeUserPortal ZUP ON ZU.UserId = ZUP.UserId    
    inner JOIN ZnodePortal ZP ON ZP.PortalId = Zoq.PortalId    
    '+CASE WHEN @IsParentPendingOrder = 0 THEN ' LEFT JOIN ZnodeOMSQuoteApproval TYUI ON (TYUI.OmsQuoteId = ZOQ.OmsQuoteId AND TYUI.ApproverUserId ='+CAST(@UserId AS VARCHAR(50))+') ' ELSE '' END +'    
    LEFT JOIN ZnodePortalUnit ZPU ON (ZPU.PortalId = Zp.PortalId)    
    LEFT JOIN ZnodeCulture ZC ON (ZPU.CultureId = ZC.CultureId)    --- Changed join condition from CurrencyId to CultureId    
 LEFT JOIN ZnodeCurrency ZCC ON (ZC.CurrencyId = ZCC.CurrencyId)    --- Joined ZnodeCulture and ZnodeCurrency   
    LEFT JOIN ZnodeOmsOrderState ZOOS ON (ZOOS.OmsOrderStateId = '+CASE WHEN @IsParentPendingOrder = 0 THEN 'TYUI.OmsOrderStateId ' ELSE 'ZOQ.OmsOrderStateId' END  +' )     
    LEFT JOIN ZnodeAccount ZA ON (ZA.AccountId = ZU.AccountId )    
    LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZOQ.CreatedBy )    
    LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZOQ.ModifiedBy)    
    LEFT JOIN ZnodeOmsQuoteType DT ON (DT.OmsQuoteTypeId = ZOQ.OmsQuoteTypeId)    
    WHERE 1=1'+' '+@InnerWhereClause+@QuoteFilter+'    
    
   )    
    , Cte_GetQuote AS     
    (    
    SELECT OmsQuoteId,UserName ,AccountName , QuoteOrderTotal QuoteAmount, [OrderStatus]  ,CreatedDate ,StoreName,CurrencyCode, CultureCode,
	CreatedByName , ModifiedByName ,IsConvertedToOrder,'+dbo.Fn_GetPagingRowId(@Order_BY,'CreatedDate DESC,OmsQuoteId DESC')+',Count(*)Over() CountNo     
    FROM Cte_GetQuoteDetail    
     WHERE 1=1     
      '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'    
    )    
    SELECT OmsQuoteId,UserName ,AccountName ,  QuoteAmount, [OrderStatus]  ,CreatedDate ,StoreName,CurrencyCode, CultureCode,RowId,CountNo,CreatedByName , ModifiedByName,IsConvertedToOrder    
    FROM Cte_GetQuote     
   '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)    
              
    PRINT  @SQL    
          
             INSERT INTO @TBL_QuoteDetails (OmsQuoteId, UserName, AccountName, QuoteOrderTotal ,OrderStatus, CreatedDate, StoreName,CurrencyCode, CultureCode, RowId ,CountNo,CreatedByName , ModifiedByName,IsConvertedToOrder)          
    EXEC (@SQL);    
             SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_QuoteDetails), 0);    
    
             SELECT OmsQuoteId,UserName,AccountName,QuoteOrderTotal,[OrderStatus],CreatedDate,StoreName,CurrencyCode, CultureCode,CreatedByName , ModifiedByName,IsConvertedToOrder    
             FROM @TBL_QuoteDetails;    
        
         END TRY    
         BEGIN CATCH    
              DECLARE @Status BIT ;    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsQuoteList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max)
  
)+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@AccountId='+CAST(@AccountId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@PortalId='+''
  
+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'Znode_GetOmsQuoteList',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
         END CATCH;    
     END
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetSkuPricebyCatalog')
BEGIN 
	DROP PROCEDURE Znode_GetSkuPricebyCatalog
END
GO
CREATE  PROCEDURE [dbo].[Znode_GetSkuPricebyCatalog]
(   @WhereClause		NVARCHAR(max),
    @Rows				INT            = 100,
    @PageNo				INT            = 1,
    @Order_BY			VARCHAR(1000)  = '',
    @RowsCount			INT  out,
	@LocaleId			INT			   = 0,
	@Sku                VARCHAR(MAX),
	@PortalId		    INT = 0,
	@currentUtcDate     VARCHAR(200) = '',
	@PublishProductId   ProductForSortPrice READONLY,
	@IsInStock			varchar(5) ,
	@IsSorting			Bit = 1 
		)		
AS 
/*
    Summary: This procedure is used to find the PriceList by catalog 
	Unit Testing: 
	
    @IsInStock --- for 1 - In stock data , for 0 - out off stock data , for -1 - all data

	declare @p7 int
	set @p7=NULL
	declare @p12 dbo.ProductForSortPrice
	insert into @p12 values(947,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(948,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(949,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(950,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(951,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(953,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(957,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1002,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1003,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1004,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1005,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1026,N'BundleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1030,N'BundleProduct',N'DisablePurchasing',1)
	insert into @p12 values(1039,N'GroupedProduct',N'DontTrackInventory',0)
	insert into @p12 values(1013,N'BundleProduct',N'AllowBackOrdering',0)
	insert into @p12 values(1031,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1032,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1042,N'SimpleProduct',N'DisablePurchasing',0)

	exec sp_executesql N'Znode_GetSkuPricebyCatalog  @WhereClause,@Rows,@PageNo,@Order_By,@RowCount OUT
	,@LocaleId,@Sku,@PortalId,@currentUtcDate,@PublishProductId,@IsInStock',N'@WhereClause nvarchar(4000),
	@Rows int,@PageNo int,@Order_By nvarchar(15),@RowCount int output,@LocaleId int,
	@Sku nvarchar(4000),@PortalId int,@currentUtcDate datetime,@PublishProductId [dbo].[ProductForSortPrice] 
	READONLY,@IsInStock nvarchar(2)',@WhereClause=N'',@Rows=16,@PageNo=1,@Order_By=N'retailprice asc',@RowCount=@p7 output,
	@LocaleId=1,@Sku=N'',@PortalId=1,@currentUtcDate='2017-11-30 00:00:00',@PublishProductId=@p12,@IsInStock=N'1'
	select @p7

	GO

	declare @p7 int
	set @p7=NULL
	declare @p12 dbo.TransferId
	insert into @p12 values(947)
	insert into @p12 values(948)
	insert into @p12 values(949)
	insert into @p12 values(950)
	insert into @p12 values(951)
	insert into @p12 values(953)
	insert into @p12 values(957)
	insert into @p12 values(1002)
	insert into @p12 values(1003)
	insert into @p12 values(1004)
	insert into @p12 values(1005)
	insert into @p12 values(1026)
	insert into @p12 values(1030)
	insert into @p12 values(1039)
	insert into @p12 values(1013)
	insert into @p12 values(1031)
	insert into @p12 values(1032)
	insert into @p12 values(1042)

	exec sp_executesql N'Znode_GetSkuPricebyCatalog  @WhereClause,@Rows,@PageNo,@Order_By,@RowCount OUT
	,@LocaleId,@Sku,@PortalId,@currentUtcDate,@PublishProductId,@IsInStock',N'@WhereClause nvarchar(4000),
	@Rows int,@PageNo int,@Order_By nvarchar(15),@RowCount int output,@LocaleId int,
	@Sku nvarchar(4000),@PortalId int,@currentUtcDate datetime,@PublishProductId [dbo].[TransferId] 
	READONLY,@IsInStock nvarchar(2)',@WhereClause=N'',@Rows=16,@PageNo=1,@Order_By=N'retailprice asc',@RowCount=@p7 output,
	@LocaleId=1,@Sku=N'',@PortalId=1,@currentUtcDate='2017-11-30 00:00:00',@PublishProductId=@p12,@IsInStock=N'1'
	select @p7

*/


     BEGIN
     BEGIN TRY
	 SET NOCOUNT ON;
			 Declare @ProductIdForPricing   TransferId 
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_PricebyCatalog TABLE (SKU NVARCHAR(4000),RetailPrice numeric(28,6),RowId INT,CountNo INT,ProductType nvarchar(200),OutOfStockOptions nvarchar(200),SalesPrice numeric(28,6))
			 DECLARE @TBL_PricebyCatalogforAssociateProduct TABLE (PimProductId int ,AssociatedProductId int,ParentSKU NVARCHAR(300),
			 ChildSKU NVARCHAR(300),RetailPrice  numeric(28,6),AssociatedProductDisplayOrder int , TypeOfProduct nvarchar(100),SalesPrice  numeric(28,6))
			 DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId()
			 
			 DECLARE @tbl_PricingSku TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
						TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000),CultureCode VARCHAR(100), ExternalId NVARCHAR(2000),Custom1 NVARCHAR(MAX),Custom2 NVARCHAR(MAX),
			  Custom3 NVARCHAR(MAX))		
			 DECLARE @tbl_PricingSkuOfAssociatedProduct TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
						TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000),CultureCode VARCHAR(100), ExternalId NVARCHAR(2000),Custom1 NVARCHAR(MAX), Custom2 NVARCHAR(MAX),
			  Custom3 NVARCHAR(MAX))				
			
			Select [Id],[ProductType],[OutOfStockOptions],--[CallForPricing] ,
			 Convert(varchar(300),'') SKU into #PublishProductId from @PublishProductId
			
			UPDATE PDI SET PDI.SKU = ZPPD.SKU 
						from #PublishProductId PDI inner join
						ZnodePublishProductDetail ZPPD On PDI.ID = ZPPD.PublishProductId
		
					--Read price for all products
					--Start
					INSERT INTO @ProductIdForPricing SELECT id FROM @PublishProductId
	 
					INSERT INTO @tbl_PricingSku (sku,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix,CultureCode, ExternalId ,Custom1,Custom2,Custom3)	
					EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portaliD  ,@currentUtcDate,2,@ProductIdForPricing
					--End
					
					--Read Associate Products price only
					--Start
						--If @IsSorting = 0 
						--Begin
							INSERT into @TBL_PricebyCatalogforAssociateProduct (PimProductId ,AssociatedProductId, ParentSKU,ChildSKU,AssociatedProductDisplayOrder,TypeOfProduct ) 
							SELECT ZPX.PublishedId,ZPX.PublishedXML.value('(ConfigurableProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)'),
							PDI.SKU,ChildZPPD.SKU,ZPX.PublishedXML.value('(ConfigurableProductEntity/AssociatedProductDisplayOrder)[1]', 'nvarchar(20)')
							,'ConfigurableProduct'
							from #PublishProductId PDI inner join
							ZnodePublishedXml ZPX ON PDI.id  = ZPX.PublishedId
							Left Outer JOIN ZnodePublishProductDetail ChildZPPD On 
							ZPX.PublishedXML.value('(ConfigurableProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') = ChildZPPD.PublishProductId
							WHERE PDI.ProductType = 'ConfigurableProduct'
						
							--INSERT into @TBL_PricebyCatalogforAssociateProduct (PimProductId ,AssociatedProductId, ParentSKU,ChildSKU, TypeOfProduct) 
							--SELECT ZPX.PublishedId,ZPX.PublishedXML.value('(BundleProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)'),
							--PDI.SKU,ChildZPPD.SKU,'BundleProduct'
							--from #PublishProductId PDI inner join
							--ZnodePublishedXml ZPX ON PDI.id  = ZPX.PublishedId
							--Left Outer JOIN ZnodePublishProductDetail ChildZPPD On 
							--ZPX.PublishedXML.value('(BundleProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)')	= ChildZPPD.PublishProductId
							--WHERE PDI.ProductType ='BundleProduct'
						--End	
						INSERT into @TBL_PricebyCatalogforAssociateProduct (PimProductId ,AssociatedProductId, ParentSKU,ChildSKU, TypeOfProduct ) 
						SELECT ZPX.PublishedId,ZPX.PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)'),
						PDI.SKU,ChildZPPD.SKU ,'GroupedProduct'
						from #PublishProductId PDI inner join
						ZnodePublishedXml ZPX ON PDI.id  = ZPX.PublishedId
						Left Outer JOIN ZnodePublishProductDetail ChildZPPD On 
						ZPX.PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') = ChildZPPD.PublishProductId
						WHERE PDI.ProductType = 'GroupedProduct'

				

					DELETE FROM @ProductIdForPricing 
					INSERT INTO @ProductIdForPricing SELECT Distinct AssociatedProductId FROM @TBL_PricebyCatalogforAssociateProduct where AssociatedProductId is not null 
			
					--select PublishCatalogLogId	,PublishedId	,PublishedXML,  PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') from ZnodePublishedXml where IsGroupProductXML =1 
					
					INSERT INTO @tbl_PricingSkuOfAssociatedProduct (sku,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix,CultureCode, ExternalId,Custom1,Custom2,Custom3 )	
					EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portaliD  ,@currentUtcDate,2,@ProductIdForPricing
								

					update PLC SET PLC.RetailPrice = PLCA.RetailPrice ,
					PLC.SalesPrice = PLCA.SalesPrice 
					from @TBL_PricebyCatalogforAssociateProduct PLC inner join @tbl_PricingSkuOfAssociatedProduct
					PLCA on PLC.ChildSKU = PLCA.sku
 
					--End
		
					SELECT DISTINCT sku,RetailPrice,SalesPrice  INTO #tbl_PricingSku FROM   @tbl_PricingSku 
					UNION  ALL 
					SELECT item sku,NULL RetailPrice  ,NULL SalesPrice FROM dbo.split(@Sku,',') SP  
					WHERE NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = Sp.Item) AND @Sku <> ''
					UNION ALL 
					SELECT a.SKU , NULL RetailPrice , NULL SalesPrice  FROM ZnodePublishProductDetail  a INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId) 
					WHERE LocaleId = @DefaultLocaleId AND NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = a.SKU) 
					AND @Sku = ''
							
					Update PBC SET PBC.RetailPrice = 
					(Select min(Isnull(RetailPrice, SalesPrice)) from @TBL_PricebyCatalogforAssociateProduct PCBA  
					where PCBA.ParentSKU =PBC.SKU and PCBA.ParentSKU is not null)
					from #tbl_PricingSku  PBC  where 
					Exists (Select TOP 1 1  from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU and PCBA.TypeOfProduct = 'GroupedProduct')
			      
				 	Update PBC SET PBC.RetailPrice = 
					(Select TOP 1 Isnull(RetailPrice ,SalesPrice) from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU
					 and PCBA.ParentSKU is not null and PCBA.ChildSKU is not null
					Order by AssociatedProductDisplayOrder)
					from #tbl_PricingSku  PBC  where 
					Exists (Select TOP 1 1  from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU and PCBA.TypeOfProduct = 'ConfigurableProduct')
					and PBC.RetailPrice IS null 
			

		
					--select PublishCatalogLogId	,PublishedId	,PublishedXML,  PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') from ZnodePublishedXml where IsGroupProductXML =1 
			   If @IsSorting = 1 
				BEGIN
					SET @Order_BY = Replace (@Order_BY,'RetailPrice', 'Case when SalesPrice is not null then SalesPrice else RetailPrice end ')
					
					SET @SQL = 
					';WITH CTE_GetFilteredList AS
					(
						SELECT DISTINCT A.sku,A.RetailPrice,SalesPrice , '+dbo.Fn_GetPagingRowId(@Order_BY,'A.SKU DESC ')+',Count(*)Over() CountNo
						FROM #tbl_PricingSku A 
						WHERE 1=1
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
					)
					SELECT SKU,RetailPrice,SalesPrice,RowId,CountNo
					FROM CTE_GetFilteredList
					'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)+
					CASE WHEN @Order_BY = '' THEN '' ELSE ' ORDER BY '+ @Order_BY END
 
				END
				Else 
				BEGIN
				
					SET @SQL = 
					';WITH CTE_GetFilteredList AS
					(
						SELECT DISTINCT A.sku,A.RetailPrice,A.SalesPrice ,'+dbo.Fn_GetPagingRowId(@Order_BY,'A.SKU DESC ')+',Count(*)Over() CountNo
						FROM #tbl_PricingSku A 
						WHERE 1=1
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
					)
					SELECT SKU,RetailPrice,SalesPrice , RowId,CountNo
					FROM CTE_GetFilteredList
					'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
					--CASE WHEN @Order_BY = '' THEN '' ELSE ' ORDER BY '+ @Order_BY END
				END
		   

			INSERT INTO @TBL_PricebyCatalog(SKU,RetailPrice,SalesPrice,RowId,CountNo)
			EXEC sys.sp_sqlexec @SQL
        	
			DECLARE @TBL_PricebyCatalogFinalResult TABLE ( SKU NVARCHAR(4000), RetailPrice numeric(28,6),SalesPrice numeric(28,6) , RowId INT,CountNo INT, PublishProductId int  )
	
			IF ( @IsInStock = '-1' )  
			BEGIN 
				INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,SalesPrice, RowId ,CountNo,PublishProductId )
				SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
				FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
			END
			ELSE IF ( @IsInStock = '1' )
			BEGIN	
				  INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,SalesPrice, RowId ,CountNo,PublishProductId )			
					  SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU AND 1 =
					  (case when PPI.OutOfStockOptions = 'DisablePurchasing' and I.Quantity < 1 then 0 else 1 end))
					  Union All 
					  SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE NOT EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU AND 1 =
					  (case when PPI.OutOfStockOptions = 'DisablePurchasing' and I.Quantity < 1 then 0 else 1 end))
			END
			ELSE IF ( @IsInStock = '0' )
			BEGIN
		
				  INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,SalesPrice, RowId ,CountNo,PublishProductId )			
					  SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU 
					  AND  PPI.OutOfStockOptions = 'DisablePurchasing' 
					  GROUP BY I.SKU HAVING SUM(I.Quantity ) < 1   )
					  Union all 
					  SELECT PBC.SKU,RetailPrice,SalesPrice,RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE NOT EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU 
					  AND  PPI.OutOfStockOptions = 'DisablePurchasing' 
					  GROUP BY I.SKU HAVING SUM(I.Quantity ) < 1   )

			END

			SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_PricebyCatalogFinalResult),0)

			SELECT SKU,RetailPrice,SalesPrice,PublishProductId FROM @TBL_PricebyCatalogFinalResult
			--Order by Isnull(RetailPrice,SalesPrice)
			
		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSkuPricebyCatalog @WhereClause = '
			 +CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))
			 +',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(20))
			 +',@PortalId= '+cast(@PortalId as varchar(200))+',@currentUtcDate= '
			 +@currentUtcDate+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status,ERROR_MESSAGE();                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSkuPricebyCatalog',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

		END CATCH

	END
	GO

	
INSERT INTO ZnodePortalFeature (PortalFeatureName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Enable_Voice_Based_Search',2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePortalFeature WHERE PortalFeatureName = 'Enable_Voice_Based_Search')
GO

UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?> <columns>  <column>   <id>1</id>   <name>CultureId</name>   <headertext>Checkbox</headertext>   <width>0</width>   <datatype>Int32</datatype>   <columntype>Int32</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>y</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>y</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>2</id>   <name>CurrencyName</name>   <headertext>Currency Name</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>3</id>   <name>CurrencyCode</name>   <headertext>Currency Code</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>y</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>4</id>   <name>CultureName</name>   <headertext>Culture Name</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>5</id>   <name>CultureCode</name>   <headertext>Culture Code</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>y</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>6</id>   <name>CreatedDate</name>   <headertext>CreatedDate</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>n</isvisible>   <mustshow>n</mustshow>   <musthide>y</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>7</id>   <name>ModifiedDate</name>   <headertext>ModifiedDate</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>n</isvisible>   <mustshow>n</mustshow>   <musthide>y</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>8</id>   <name>IsActive</name>   <headertext>Is Active</headertext>   <width>0</width>   <datatype>Boolean</datatype>   <columntype>Boolean</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>9</id>   <name>IsDefault</name>   <headertext>Is Default</headertext>   <width>0</width>   <datatype>Boolean</datatype>   <columntype>Boolean</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>n</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column> </columns>'
WHERE ITEMNAME = 'ZnodeCurrency'
GO

Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Store','GetCultureCodeList',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Store' and ActionName = 'GetCultureCodeList')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Stores' AND ControllerName = 'Store')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Store' and ActionName= 'GetCultureCodeList')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Stores' AND ControllerName = 'Store') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Store' and ActionName= 'GetCultureCodeList'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Stores' AND ControllerName = 'Store'),
(select ActionId from ZnodeActions where ControllerName = 'Store' and ActionName= 'GetCultureCodeList')	
,4,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Stores' AND ControllerName = 'Store') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Store' and ActionName= 'GetCultureCodeList'))

GO


Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Typeahead','GetSuggestions',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Typeahead' and ActionName = 'GetSuggestions')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Store Locations' AND ControllerName = 'StoreLocator')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Typeahead' and ActionName= 'GetSuggestions')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Store Locations' AND ControllerName = 'StoreLocator') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Typeahead' and ActionName= 'GetSuggestions'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Store Locations' AND ControllerName = 'StoreLocator'),
(select ActionId from ZnodeActions where ControllerName = 'Typeahead' and ActionName= 'GetSuggestions')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Store Locations' AND ControllerName = 'StoreLocator') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Typeahead' and ActionName= 'GetSuggestions'))



GO
Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select 'Search' ,'Search','GetSuggestions',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Search' and ActionName = 'GetSuggestions')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Site Search' AND ControllerName = 'SearchConfiguration')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Search' and ActionName= 'GetSuggestions')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Site Search' AND ControllerName = 'SearchConfiguration') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Search' and ActionName= 'GetSuggestions'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Site Search' AND ControllerName = 'SearchConfiguration'),
(select ActionId from ZnodeActions where ControllerName = 'Search' and ActionName= 'GetSuggestions')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Site Search' AND ControllerName = 'SearchConfiguration') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Search' and ActionName= 'GetSuggestions'))

GO

UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?> <columns>     <column>         <id>1</id>         <name>PriceListId</name>         <headertext>Checkbox</headertext>         <width>40</width>         <datatype>String</datatype>         <columntype>Int32</columntype>         <allowsorting>true</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>y</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>n</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl></islinkactionurl>         <islinkparamfield></islinkparamfield>         <ischeckbox>y</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>n</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>2</id>         <name>ListCode</name>         <headertext>Code</headertext>         <width>60</width>         <datatype>String</datatype>         <columntype>String</columntype>         <allowsorting>true</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>y</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>y</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl>/Price/Edit</islinkactionurl>         <islinkparamfield>priceListId</islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>y</isadvancesearch>         <Class>priceListCode</Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>3</id>         <name>ListName</name>         <headertext>Name</headertext>         <width>60</width>         <datatype>String</datatype>         <columntype>String</columntype>         <allowsorting>true</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>n</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>y</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>y</isallowlink>         <islinkactionurl>/Price/Edit</islinkactionurl>         <islinkparamfield>priceListId</islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>y</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>4</id>         <name>CurrencyName</name>         <headertext>Currency</headertext>         <width>60</width>         <datatype>String</datatype>         <columntype>String</columntype>         <allowsorting>false</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>n</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>n</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl></islinkactionurl>         <islinkparamfield></islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>n</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>5</id>         <name>CultureName</name>         <headertext>Culture</headertext>         <width>60</width>         <datatype>String</datatype>         <columntype>String</columntype>         <allowsorting>false</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>n</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>n</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl></islinkactionurl>         <islinkparamfield></islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>n</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>6</id>         <name>ActivationDate</name>         <headertext>Activation Date</headertext>         <width>30</width>         <datatype>Date</datatype>         <columntype>DateTime</columntype>         <allowsorting>true</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>n</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>y</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl></islinkactionurl>         <islinkparamfield></islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>y</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>7</id>         <name>ExpirationDate</name>         <headertext>Expiration Date</headertext>         <width>30</width>         <datatype>Date</datatype>         <columntype>DateTime</columntype>         <allowsorting>true</allowsorting>         <allowpaging>false</allowpaging>         <format></format>         <isvisible>y</isvisible>         <mustshow>n</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>y</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl></islinkactionurl>         <islinkparamfield></islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext></displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl></manageactionurl>         <manageparamfield></manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>y</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column>     <column>         <id>8</id>         <name>Manage</name>         <headertext>Action</headertext>         <width>30</width>         <datatype>String</datatype>         <columntype>String</columntype>         <allowsorting>false</allowsorting>         <allowpaging>false</allowpaging>         <format>Edit|Copy|Delete</format>         <isvisible>y</isvisible>         <mustshow>y</mustshow>         <musthide>n</musthide>         <maxlength>0</maxlength>         <isallowsearch>n</isallowsearch>         <isconditional>n</isconditional>         <isallowlink>n</isallowlink>         <islinkactionurl></islinkactionurl>         <islinkparamfield></islinkparamfield>         <ischeckbox>n</ischeckbox>         <checkboxparamfield></checkboxparamfield>         <iscontrol>n</iscontrol>         <controltype></controltype>         <controlparamfield></controlparamfield>         <displaytext>Edit|Copy|Delete</displaytext>         <editactionurl></editactionurl>         <editparamfield></editparamfield>         <deleteactionurl></deleteactionurl>         <deleteparamfield></deleteparamfield>         <viewactionurl></viewactionurl>         <viewparamfield></viewparamfield>         <imageactionurl></imageactionurl>         <imageparamfield></imageparamfield>         <manageactionurl>/Price/Edit|/Price/Copy|/Price/Delete</manageactionurl>         <manageparamfield>priceListId|priceListId|priceListId</manageparamfield>         <copyactionurl></copyactionurl>         <copyparamfield></copyparamfield>         <xaxis>n</xaxis>         <yaxis>n</yaxis>         <isadvancesearch>n</isadvancesearch>         <Class></Class>         <SearchControlType>--Select--</SearchControlType>         <SearchControlParameters></SearchControlParameters>         <DbParamField></DbParamField>         <useMode>DataBase</useMode>         <IsGraph>n</IsGraph>         <allowdetailview>n</allowdetailview>     </column> </columns>'
WHERE ItemName = 'ZnodePriceList'
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPriceList')
BEGIN 
	DROP PROCEDURE Znode_GetPriceList
END
GO
CREATE PROCEDURE [dbo].[Znode_GetPriceList]  
(   @WhereClause VARCHAR(MAX) = '',  
 @Rows        INT          = 100,  
 @PageNo      INT          = 0,  
 @Order_BY    VARCHAR(100) = NULL,  
 @RowsCount   INT OUT,  
 @Mode        VARCHAR(100) = '')  
AS   
/*  
    Summary: Retrieve Price list with respective to mode ( Portal / Profile / User / Account)   
    Input Parameters:  
    mode :  Portal / Profile / User / Account   
    Output : Provide paging facility with output  
    Unit Testing :   
  DECLARE @RowsCount  int   
    EXEC [Znode_GetPriceList]  
    @WhereClause= ' PriceListId=1 and PortalProfileId = 6',@Rows = 1000 ,@PageNo = 0,@Order_BY =  NULL,@RowsCount =@RowsCount  out,@Mode =  'Profile'  
    DECLARE @RowsCount  int   
    EXEC [Znode_GetPriceList]  
    @WhereClause= ' userId=7 and accountid = 1',@Rows = 1000 ,@PageNo = 0,@Order_BY =  NULL,@RowsCount =@RowsCount  out,@Mode =  'user'  
    DECLARE @RowsCount  int   
    EXEC [Znode_GetPriceList]  
    @WhereClause= ' PriceListId=9 ',@Rows = 100 ,@PageNo = 1,@Order_BY = 'PriceListId',@RowsCount =@RowsCount  out,@Mode =  'Account'  
   */  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;  
    DECLARE @SQL NVARCHAR(MAX);  
    DECLARE @TBL_AccountList TABLE (AccountId INT,AccountName NVARCHAR(400),ListCode VARCHAR(200),ListName VARCHAR(600),PriceListId INT,  
    CultureName VARCHAR(200),ActivationDate DATETIME,ExpirationDate DATETIME,Precedence INT, IsParentAccount INT,
	PriceListAccountId INT,RowId INT, CountNo INT,CurrencyName VARCHAR(200)  )  
  
    DECLARE @TBL_UserList TABLE (PriceListUserId INT, UserId INT,UserName VARCHAR(200),ListCode VARCHAR(200),ListName VARCHAR(600),PriceListId INT,  
    CultureName VARCHAR(200),ActivationDate DATETIME,ExpirationDate DATETIME,Precedence INT, RowId INT, CountNo INT , CurrencyName VARCHAR(200)  
    )  
  
             --SET @PageNo = CASE  
             --                  WHEN @PageNo = 0  
             --                  THEN @PageNo  
             --                  ELSE(@PageNo - 1) * @Rows  
             --              END;  
             IF @Mode = ''  
                 BEGIN  
      SET @SQL = ' With PriceList AS   
      (SELECT zpl.ListCode,zpl.ListName,zc.CultureName + CASE WHEN isnull(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CultureName  
         ,zpl.PriceListId ,zpl.ActivationDate,zpl.ExpirationDate ,zpl.ModifiedDate, ZCC.CurrencyName  
      FROM ZnodePriceList AS zpl 
	  INNER JOIN dbo.ZnodeCulture zc ON zpl.CultureId = zc.CultureId 
	  INNER JOIN  ZnodeCurrency ZCC ON (ZCC.CurrencyId = zc.currencyId)
          )
        ,CTE_PriceList AS  
        (  
          SELECT DISTINCT ListCode,ListName,CultureName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate, CurrencyName, 
       '+dbo.Fn_GetPagingRowId(@Order_BY,'PriceListId DESC')+',Count(*)Over() CountNo  
       FROM PriceList  
       WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'  
        )  
        SELECT ListCode,ListName,CultureName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate,CurrencyName,CountNo  
        INTO #TM_PriceList   
        FROM CTE_PriceList  
        '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
  
      --SELECT  DISTINCT ListCode,ListName,CurrencyName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate INTO #PriceList FROM PriceList'+' WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #PriceList    
      --SELECT  ListCode,ListName,CurrencyName,PriceListId,ActivationDate,ExpirationDate,ModifiedDate FROM #PriceList '+' Order BY '+ ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
                 END;  
             IF @Mode = 'Profile'  
                 BEGIN  
      SET @SQL = ' With ProfileList AS    
       (SELECT ZPP.PortalProfileId , zp.ProfileName,ZPL.ListCode,ZPL.ListName,zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CultureName,   
      ZPL.PriceListId , ZPL.ActivationDate ,ZPL.ExpirationDate , ZPLP.Precedence , ZPL.ModifiedDate,ZPP.PortalId,ZPLP.PriceListProfileId,ZCC.CurrencyName   
      FROM ZnodePriceList AS ZPL INNER JOIN ZnodePriceListProfile AS ZPLP ON ZPL.PriceListId = ZPLP.PriceListId  
      INNER JOIN ZnodePortalProfile AS ZPP ON ZPLP.PortalProfileId = ZPP.PortalProfileId  
      INNER JOIN dbo.ZnodeProfile zp ON ZPP.ProfileId  = zp.ProfileId  
      INNER JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId 
	  INNER JOIN  ZnodeCurrency ZCC ON (ZCC.CurrencyId = zc.currencyId)) 
  
      ,CTE_ProfileList AS  
      (  
        SELECT DISTINCT PortalProfileId , ProfileName,ListCode,ListName, CultureName, PriceListId ,ActivationDate ,ExpirationDate ,  
        Precedence,PriceListProfileId , ModifiedDate,CurrencyName,'+dbo.Fn_GetPagingRowId(@Order_BY,'PortalProfileId DESC')+',Count(*)Over() CountNo  
        FROM ProfileList  
        WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'        
      )  
        SELECT PortalProfileId , ProfileName,ListCode,ListName, CultureName, PriceListId ,ActivationDate ,ExpirationDate ,  
        Precedence,PriceListProfileId , ModifiedDate,CurrencyName,RowId,CountNo  
        INTO #TM_PriceList   
        FROM CTE_ProfileList  
        '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
      --SELECT DISTINCT PortalProfileId , ProfileName,ListCode,ListName, CurrencyName, PriceListId ,ActivationDate ,ExpirationDate , Precedence,PriceListProfileId , ModifiedDate INTO #ProfileList FROM ProfileList'+' WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #ProfileList    
      --SELECT PortalProfileId , ProfileName,ListCode,ListName, CurrencyName, PriceListId ,ActivationDate ,ExpirationDate , Precedence,PriceListProfileId , ModifiedDate FROM #ProfileList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
     
                 END;  
             ELSE  
                 BEGIN  
             IF @Mode = 'Portal'  
                   BEGIN  
      SET @SQL = ' With PortalList AS  
      (SELECT ZPLP.PriceListPortalId, zp.PortalId,  zp.StoreName, ZPL.ListCode,ZPL.ListName, ZPL.PriceListId , zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CultureName,  
      ZPL.ActivationDate ,ZPL.ExpirationDate , ZPLP.Precedence ,ZPL.ModifiedDate,zc.CurrencyId  ,ZCC.CurrencyName   
      FROM ZnodePriceList AS ZPL INNER JOIN ZnodePriceListPortal AS ZPLP ON ZPL.PriceListId = ZPLP.PriceListId  
      INNER JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId  
      INNER JOIN dbo.ZnodePortal zp ON ZPLP.PortalId = zp.PortalId 
	  INNER JOIN  ZnodeCurrency ZCC ON (ZCC.CurrencyId = zc.currencyId) ) 
          
        ,CTE_PortalList AS  
        (  
          SELECT DISTINCT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CultureName,ActivationDate,ExpirationDate,  
       Precedence,ModifiedDate,CurrencyId,CurrencyName,'+dbo.Fn_GetPagingRowId(@Order_BY,'PriceListPortalId DESC')+',Count(*)Over() CountNo  
       FROM PortalList  
       WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'    
        )  
        SELECT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CultureName,ActivationDate,ExpirationDate,  
       Precedence,ModifiedDate,CurrencyId ,CurrencyName,CountNo  
       INTO #TM_PriceList   
       FROM CTE_PortalList  
       '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
  
      --SELECT DISTINCT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,ModifiedDate,CurrencyId  INTO #PortalList FROM PortalList WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #PortalList  
      --SELECT PriceListPortalId,PortalId,StoreName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,ModifiedDate,CurrencyId FROM #PortalList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
                   END;  
   ELSE  
     BEGIN  
      IF @Mode = 'User'  
      BEGIN  
      SET @SQL = ' With UserList AS  
      (SELECT ZPLU.PriceListUserId, Zu.Userid, Isnull(zu.FirstName,'''') + '' '' +Isnull( zu.MiddleName,'''') + '' ''+ Isnull(zu.LastName,'''') UserName,  
      ZPL.ListCode,ZPL.ListName, ZPL.PriceListId , zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CultureName,  
      ActivationDate ,ExpirationDate , ZPLU.Precedence,zu.AccountId,ZCC.CurrencyName  FROM  dbo.ZnodeUser zu    
      INNER JOIN ZnodePriceListUser AS ZPLU ON ZPLU.UserId= zu.UserId   
      INNER JOIN  ZnodePriceList AS ZPL ON (ZPL.PriceListId = ZPLU.PriceListId )  
      LEFT JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId
	  INNER JOIN  ZnodeCurrency ZCC ON (ZCC.CurrencyId = zc.currencyId)  )   
         
       ,CTE_UserList AS  
       (  
         SELECT DISTINCT PriceListUserId, Userid, UserName,ListCode,ListName, PriceListId , CultureName, ActivationDate ,ExpirationDate ,  
         Precedence,CurrencyName,'+dbo.Fn_GetPagingRowId(@Order_BY,'PriceListUserId DESC')+',Count(*)Over() CountNo  
         FROM  UserList WHERE 1=1  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'       
       )  
  
       SELECT PriceListUserId, Userid, UserName,ListCode,ListName, PriceListId , CultureName, ActivationDate ,ExpirationDate ,Precedence,
	   CurrencyName,RowId,CountNo  
       INTO #TM_PriceList   
       FROM CTE_UserList  
       '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
        
  
  
      --SELECT  DISTINCT PriceListUserId, Userid, UserName, ListCode,ListName, PriceListId , CurrencyName, ActivationDate ,ExpirationDate , Precedence INTO #UserList  from UserList  WHERE 1=1 '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #UserList    
      --SELECT PriceListUserId, Userid, UserName,ListCode,ListName, PriceListId , CurrencyName, ActivationDate ,ExpirationDate , Precedence FROM #UserList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
      END;  
      ELSE  
       BEGIN  
      IF @Mode = 'Account'  
      BEGIN  
      SET @SQL = ' With AccountList AS   
      (SELECT za.Accountid,za.Name AccountName,ZPL.ListCode,ZPL.ListName,ZPL.PriceListId,zc.CultureName + CASE WHEN ISNULL(zc.Symbol,'''') = '''' THEN '''' ELSE '' - '' + ISNULL(zc.Symbol,'''')  END  CultureName,  
      ActivationDate ,ExpirationDate,ZPLA.Precedence,CASE WHEN za.parentAccountId IS NULL OR parentAccountId = 0  THEN CAST(1 AS BIT ) ELSE CAST(0 AS BIT ) END IsParentAccount ,PriceListAccountId  
	  ,ZCC.CurrencyName
      FROM ZnodePriceList AS ZPL INNER JOIN ZnodePriceListAccount AS ZPLA ON ZPL.PriceListId = ZPLA.PriceListId  
      INNER JOIN dbo.ZnodeCulture zc ON ZPL.CultureId = zc.CultureId  
      INNER JOIN dbo.ZnodeAccount za ON za.AccountId = ZPLA.AccountId
	  INNER JOIN  ZnodeCurrency ZCC ON (ZCC.CurrencyId = zc.currencyId)   )
         
      ,CTE_GetAccountList as  
      (  
      SELECT  DISTINCT Accountid,AccountName,ListCode,ListName,PriceListId,CultureName,ActivationDate,ExpirationDate,Precedence,IsParentAccount  
      ,PriceListAccountId,CurrencyName,'+dbo.Fn_GetPagingRowId(@Order_BY,'Accountid DESC')+',Count(*)Over() CountNo   
      FROM AccountList WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'    
      )  
      SELECT Accountid,AccountName,ListCode,ListName,PriceListId,CultureName,ActivationDate,ExpirationDate,Precedence,IsParentAccount,  
      PriceListAccountId,CurrencyName,RowId,CountNo  
      INTO #TM_PriceList   
      FROM CTE_GetAccountList  
      '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)  
  
        
        
      --SELECT  DISTINCT Accountid,AccountName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,IsParentAccount,PriceListAccountId INTO #AccountList   
      --FROM AccountList WHERE 1=1  '+CASE  
      --WHEN @WhereClause = '' THEN '' ELSE ' AND '+@WhereClause END +' SELECT  @Count=Count(1) FROM  #AccountList   
      --SELECT Accountid,AccountName,ListCode,ListName,PriceListId,CurrencyName,ActivationDate,ExpirationDate,Precedence,IsParentAccount,PriceListAccountId FROM #AccountList '+' Order BY '  
      --+ISNULL(CASE WHEN @Order_BY = '' THEN NULL ELSE @Order_BY END, '1')  
      --+' OFFSET '+CAST(@PageNo AS VARCHAR(100))+' ROWS FETCH NEXT '+CAST(@Rows AS VARCHAR(100))+' ROWS ONLY  ';  
      END;  
                      END;  
                    END;  
                 END;  
  
     SET @SQL = @SQL+ ' SET @Count = ISNULL((SELECT TOP 1 CountNo FROM #TM_PriceList ),0)  
                          SELECT * FROM #TM_PriceList  '  
  Print @sql
          EXEC SP_executesql  
                  @SQL,  
                  N'@Count INT OUT',  
                  @Count = @RowsCount OUT;  
        
         END TRY  
         BEGIN CATCH  
            DECLARE @Status BIT ;  
      SET @Status = 0;  
      DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPriceList @WhereClause = '+cast (@WhereClause AS VARCHAR(50))+',
@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Mode='+@Mode+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
            SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
            EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'Znode_GetPriceList',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;  
GO


INSERT INTO znodeglobalsetting (FeatureName,FeatureValues,FeatureSubValues,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'IsLoggingLevelsEnabledWarning','False',NULL,2, GETDATE(),2 , GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM znodeglobalsetting WHERE FeatureName = 'IsLoggingLevelsEnabledWarning')
go

INSERT INTO znodeglobalsetting (FeatureName,FeatureValues,FeatureSubValues,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'IsLoggingLevelsEnabledInfo','False',NULL,2, GETDATE(),2 , GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM znodeglobalsetting WHERE FeatureName = 'IsLoggingLevelsEnabledInfo')
go

INSERT INTO znodeglobalsetting (FeatureName,FeatureValues,FeatureSubValues,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'IsLoggingLevelsEnabledDebug','False',NULL,2, GETDATE(),2 , GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM znodeglobalsetting WHERE FeatureName = 'IsLoggingLevelsEnabledDebug')
go

INSERT INTO znodeglobalsetting (FeatureName,FeatureValues,FeatureSubValues,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'IsLoggingLevelsEnabledError','False',NULL,2, GETDATE(),2 , GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM znodeglobalsetting WHERE FeatureName = 'IsLoggingLevelsEnabledError')
go

INSERT INTO znodeglobalsetting (FeatureName,FeatureValues,FeatureSubValues,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'IsLoggingLevelsEnabledAll','False',NULL,2, GETDATE(),2 , GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM znodeglobalsetting WHERE FeatureName = 'IsLoggingLevelsEnabledAll')
go

INSERT INTO znodeglobalsetting (FeatureName,FeatureValues,FeatureSubValues,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'IsLoggingLevelsEnabledFatal','False',NULL,2, GETDATE(),2 , GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM znodeglobalsetting WHERE FeatureName = 'IsLoggingLevelsEnabledFatal')

GO
Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Content','RedirectToConfigureWidget',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Content' and ActionName = 'RedirectToConfigureWidget')


insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy ,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
  (select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content')	
     ,(select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'RedirectToConfigureWidget'),2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
      (select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content') and ActionId = 
      (select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'RedirectToConfigureWidget'))

insert into ZnodeMenuActionsPermission ( MenuId, ActionId, AccessPermissionId,	CreatedBy	,CreatedDate, ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content'),
(select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'RedirectToConfigureWidget')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'RedirectToConfigureWidget'))

--------------------------------------------------------------------------

Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Content','GetPreviewContentPage',0,2,Getdate(),2,Getdate() 
where not exists(select * from ZnodeActions where ControllerName = 'Content' and ActionName = 'GetPreviewContentPage')

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy ,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
  (select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content')	
     ,(select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'GetPreviewContentPage'),2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
      (select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content') and ActionId = 
      (select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'GetPreviewContentPage'))

insert into ZnodeMenuActionsPermission ( MenuId, ActionId, AccessPermissionId,	CreatedBy	,CreatedDate, ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content'),
(select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'GetPreviewContentPage')	
,1,2,Getdate(),2,Getdate() 
where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'CMS' AND ControllerName = 'Content') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Content' and ActionName= 'GetPreviewContentPage'))

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_UpdateQuoteStatus')
BEGIN 
	DROP PROCEDURE Znode_UpdateQuoteStatus
END
GO

CREATE PROCEDURE [dbo].[Znode_UpdateQuoteStatus]
(   @OmsQuoteId      VARCHAR(2000),
    @OmsOrderStateId INT           = NULL,
    @Status          INT           = 0 OUT, -- 1 for  sucessfull delete and update 
	@ExceptUpdateStatus VARCHAR(max) = '', -- in this status Quote are not updated 
	@ModifiedBy INT = 0 , 
	@IsAdminUser BIT = 0 
)
AS
  /* 
	Summary :- This Procedure is used to update the Quote status 
				returns 0 or 1 as result depends upon the status
	Unit Testing 
	begin tran
	DECLARE @OutIds INT = 0 
	EXEC Znode_UpdateQuoteStatus '306,281,263',80,@OutIds OUT,'Ordered,Draft'
	SELECT @OutIds
	rollback tran
	SELECT * FROM [ZNodeUserQuoteOrderLineItem]  WHERE omsQuoteId IN (306,281,263)
	SELECT * FROM ZnodeOmsOrderState
   */
BEGIN 
   BEGIN TRY
      SET NOCOUNT ON;
			 DECLARE @TBL_NotUpdateStatus TABLE (value  VARCHAR(max))
			 DECLARE @RejectOmsOrderStateId INT = (SELECT TOP 1 OmsOrderStateId FROM ZnodeOmsOrderState WHERE OrderStateName = 'REJECTED')
			 DECLARE @ApprovedOmsOrderStateId INT = (SELECT TOP 1 OmsOrderStateId FROM ZnodeOmsOrderState WHERE OrderStateName = 'APPROVED')
			 DECLARE @TBL_UpdateApprovalState TABLE (UserId INT ,ApprovalLevelId INT ,ApproverUserId INT, ApproverOrder INT   )
			 DECLARE @TBL_OrderState TABLE
             (FirstName  VARCHAR(100),
              LastName   VARCHAR(100),
              Email      VARCHAR(50),
              [Status]   NVARCHAR(MAX),
              OmsQuoteId INT,
              UserId     INT,
              PortalId   INT
             );
             
			 IF @ExceptUpdateStatus = '' 
			 BEGIN 
				 INSERT INTO @TBL_NotUpdateStatus 
				 SELECT value 
				 FROM dbo.[Fn_GetProcedureAttributeDefault]('OrderState') FNGP
			 END 
			 ELSE 
			 BEGIN 
				 INSERT INTO @TBL_NotUpdateStatus 
				 SELECT item 
				 FROM dbo.split(@ExceptUpdateStatus,',') FNGP
			 END 

			 IF EXISTS (SELECT TOP 1 1  FROM  ZnodeUser ZU 
									INNER JOIN AspNetUsers AU ON (AU.Id = ZU.AspNetUserId)
									INNER JOIN AspNetUserRoles RTY ON (RTY.UserId = AU.Id)
									INNER JOIN AspNetRoles TU ON (TU.Id = RTY.RoleId)
									WHERE ZU.UserId = @ModifiedBy  AND (ISNULL(TU.TypeOfRole,'') <> 'B2B' AND   TU.Name <> 'Customer'))
BEGIN 
  SET @IsAdminUser = 1 
END 
	

			 	 
			 INSERT INTO @TBL_OrderState
             (FirstName,
              LastName,
              Email,
              [Status],
              OmsQuoteId,
              UserId,
              PortalId
             )
                    SELECT ZU.FirstName,
                           Zu.LastName,
                           ZU.Email,
                           ZOOS.OrderStateName,
                           ZOQ.OmsQuoteId,
                           ZU.UserId,
                           ZOQ.PortalId
                    FROM ZnodeUser ZU
                         INNER JOIN ZnodeOmsQuote ZOQ ON(ZOQ.UserId = ZU.UserId)
                         INNER JOIN ZnodeOmsOrderState ZOOS ON(ZOOS.OmsOrderStateId = ZOQ.OmsOrderStateId)
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM dbo.Split(@OmsQuoteId, ',') SP
                        WHERE ZOQ.OmsQuoteId = SP.Item
                    );
         


		   UPDATE ZnodeOMSQuoteApproval
               SET OmsOrderStateId = @OmsOrderStateId
			   , ModifiedBy = @ModifiedBy,ModifiedDate = GetDate()
             WHERE EXISTS
             (
                 SELECT 1
                 FROM dbo.Split(@OmsQuoteId, ',') AS f
                 WHERE f.item = ZnodeOMSQuoteApproval.OmsQuoteId
             )
             AND ( (NOT EXISTS 
             (
                 SELECT TOP 1 1
                 FROM @TBL_OrderState TBOS
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_NotUpdateStatus FNGP
                     WHERE FNGP.Value = TBOS.[Status]
                 )
                 AND ZnodeOMSQuoteApproval.OmsQuoteId = TBOS.OmsQuoteId
             )
			 AND( ApproverUserId = @ModifiedBy  OR ApproverUserId  IN (SELECT ApproverUserId FROM ZnodeUserApprovers WHERE ApproverOrder IN (SELECT ApproverOrder FROM  ZnodeUserApprovers WHERE ApproverUserId = @ModifiedBy) )) ) OR @IsAdminUser = 1 ) ;
			 
			 DECLARE @AmountOfQuote NUMERIC(28,8) = (SELECT TOP 1 QuoteOrderTotal FROM ZnodeOmsQuote WHERE OmsQuoteId = @OmsQuoteId  )

			INSERT INTO @TBL_UpdateApprovalState 
			SELECT UserId  ,ApproverLevelId  ,ApproverUserId , ApproverOrder
			FROM ZnodeUserApprovers a 
			WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOMSQuoteApproval TY 
			WHERE TY.UserId = a.UserId 
			AND TY.ApproverOrder = a.ApproverOrder  
			AND  TY.OmsOrderStateId = @ApprovedOmsOrderStateId
			AND EXISTS
             (
                 SELECT 1
                 FROM dbo.Split(@OmsQuoteId, ',') AS f
                 WHERE f.item = TY.OmsQuoteId
             )
			 )
			AND EXISTS (SELECT TOP 1 1 FROM ZnodeOMSQuoteApproval TY 
			WHERE TY.UserId = a.UserId 
			AND EXISTS
             (
                 SELECT 1
                 FROM dbo.Split(@OmsQuoteId, ',') AS f
                 WHERE f.item = TY.OmsQuoteId
             ) )
			 AND  a.FromBudgetAmount <= @AmountOfQuote
			
			UPDATE ZnodeOMSQuoteApproval 
			SET IsApprovalRoutingComplete = 1 
			   , ModifiedBy = @ModifiedBy,ModifiedDate = GetDate()
             WHERE EXISTS
             (
                 SELECT 1
                 FROM dbo.Split(@OmsQuoteId, ',') AS f
                 WHERE f.item = ZnodeOMSQuoteApproval.OmsQuoteId
             )
             AND (NOT EXISTS (SELECT TOP 1 1  FROM @TBL_UpdateApprovalState) OR @IsAdminUser = 1) 
			 AND (@IsAdminUser = 1 OR ZnodeOMSQuoteApproval.ApproverUserId = @ModifiedBy)
			 ;

			--- SELECT @IsAdminUser 

			 UPDATE ZnodeOmsQuote
               SET OmsOrderStateId = @OmsOrderStateId
			   , ModifiedBy = @ModifiedBy
			   ,ModifiedDate = GetDate()
             WHERE EXISTS
             (
                 SELECT 1
                 FROM dbo.Split(@OmsQuoteId, ',') AS f
                 WHERE f.item = ZnodeOmsQuote.OmsQuoteId
             )
             AND ((
			 NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_OrderState TBOS
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_NotUpdateStatus FNGP
                     WHERE FNGP.Value = TBOS.[Status]
                 )
                 AND ZnodeOmsQuote.OmsQuoteId = TBOS.OmsQuoteId
             )
			 AND (EXISTS (SELECT TOP 1  1  FROM ZnodeOMSQuoteApproval TY WHERE TY.OmsQuoteId = ZnodeOmsQuote.OmsQuoteId AND TY.IsApprovalRoutingComplete = 1   )
			 OR EXISTS (SELECT TOP 1 1   FROM ZnodeOMSQuoteApproval TY WHERE TY.OmsQuoteId = ZnodeOmsQuote.OmsQuoteId  AND TY.OmsOrderStateId = @RejectOmsOrderStateId)) 
			 ) OR @IsAdminUser = 1 ) ;
			
		     IF NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_OrderState TBOS
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_NotUpdateStatus FNGP
                     WHERE FNGP.Value = TBOS.[Status]
                 )
             )  AND EXISTS (SELECT TOP 1 1 FROM @TBL_OrderState TBOS) 
                 BEGIN
                    SELECT FirstName,
                            LastName,
                            Email,
                            ZOOS.OrderStateName [Status],
                            a.OmsQuoteId,
                            a.UserId,
                            a.PortalId, 
							ZOOS2.OrderStateName ChildOrderStatus,
							aa.QuoteOrderTotal 
                     FROM @TBL_OrderState a 
					 INNER JOIN ZnodeOmsQuote aa ON (aa.OmsQuoteId =a.OmsQuoteId)
					 INNER JOIN ZnodeOmsOrderState ZOOS ON(ZOOS.OmsOrderStateId =  aa.OmsOrderStateId )
					  INNER JOIN ZnodeOmsOrderState ZOOS2 ON(ZOOS2.OmsOrderStateId =  @OmsOrderStateId )
                     SET @Status = 1;
                  
                 END;
             ELSE
                 BEGIN
                     SET @Status = 0;
                 END;
         END TRY
         BEGIN CATCH
              
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_UpdateQuoteStatus @OmsQuoteId = '+@OmsQuoteId+',@OmsOrderStateId='+CAST(@OmsOrderStateId AS VARCHAR(50))+',@ExceptUpdateStatus='+@ExceptUpdateStatus+',@Status='+CAST(@Status AS VARCHAR(10))+',@ModifiedBy='+@ModifiedBy;
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_UpdateQuoteStatus',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;

	 GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetDefaultCurrencySymbol')
BEGIN
DROP FUNCTION dbo.Fn_GetDefaultCurrencySymbol
END
GO
CREATE FUNCTION [dbo].[Fn_GetDefaultCurrencySymbol]
(
)
RETURNS NVARCHAR(100)
AS
     BEGIN
         -- Declare the return variable here
         DECLARE @DefaultCurrency NVARCHAR(100);
         SET @DefaultCurrency =
         (
             SELECT TOP 1 ZCC.Symbol
             FROM ZnodeGlobalSetting ZGS 
			 LEFT JOIN ZnodeCulture ZCC ON (ZCC.CultureCode = ZGS.FeatureValues)
             WHERE ZGS.FeatureName = 'Currency'
         );
         RETURN @DefaultCurrency;
     END;
	GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetDefaultPriceRoundOffReturnNumeric')
BEGIN
DROP FUNCTION dbo.Fn_GetDefaultPriceRoundOffReturnNumeric
END
GO

-- =============================================
-- Create the Order by clause for dyanamic statement  
-- =============================================
CREATE FUNCTION [dbo].[Fn_GetDefaultPriceRoundOffReturnNumeric]
(@Price NUMERIC(28, 6)
)
RETURNS NUMERIC(28, 6)
AS
     -- Summary :- This function is used to round off the price value based on global setting 
     BEGIN
         -- Declare the return variable here
         DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
         DECLARE @PriceDetail NUMERIC(28, 6);
         SET @PriceDetail = SUBSTRING(CAST(@Price AS VARCHAR(100)),1, CHARINDEX('.', CAST(@Price AS VARCHAR(100)))+@RoundOffValue);
         RETURN @PriceDetail;
     END;
	 GO
	 IF NOT EXISTS (SELECT * FROM sys.tables where name = 'ZnodeReportCategories')
BEGIN
	 CREATE TABLE [dbo].[ZnodeReportCategories] (
    [ReportCategoryId] INT           IDENTITY (1, 1) NOT NULL,
    [CategoryName]     VARCHAR (100) NULL,
    [IsActive]         BIT           NOT NULL,
    [CreatedBy]        INT           NOT NULL,
    [CreatedDate]      DATETIME      NOT NULL,
    [ModifiedBy]       INT           NOT NULL,
    [ModifiedDate]     DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeReportCategories] PRIMARY KEY CLUSTERED ([ReportCategoryId] ASC)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.tables where name = 'ZnodeReportDetails')
BEGIN
CREATE TABLE [dbo].[ZnodeReportDetails] (
    [ReportDetailId]   INT            IDENTITY (1, 1) NOT NULL,
    [ReportCategoryId] INT            NOT NULL,
    [ReportCode]       VARCHAR (50)   NOT NULL,
    [ReportName]       VARCHAR (100)  NOT NULL,
    [Description]      VARCHAR (1000) NULL,
    [CreatedBy]        INT            NOT NULL,
    [CreatedDate]      DATETIME       NOT NULL,
    [ModifiedBy]       INT            NOT NULL,
    [ModifiedDate]     DATETIME       NOT NULL,
    [IsActive]         BIT            NULL,
    CONSTRAINT [PK_ZnodeReportDetails] PRIMARY KEY CLUSTERED ([ReportDetailId] ASC),
    CONSTRAINT [FK_ZnodeReportDetails_ZnodeReportCategories] FOREIGN KEY ([ReportCategoryId]) REFERENCES [dbo].[ZnodeReportCategories] ([ReportCategoryId])
)
END
GO

IF NOT EXISTS (SELECT * FROM sys.tables where name = 'ZnodeReportSetting')
BEGIN
CREATE TABLE [dbo].[ZnodeReportSetting] (
    [ReportSettingId]  INT           IDENTITY (1, 1) NOT NULL,
    [ReportCode]       VARCHAR (100) NULL,
    [SettingXML]       TEXT          NULL,
    [CreatedBy]        INT           NOT NULL,
    [CreatedDate]      DATETIME      NOT NULL,
    [ModifiedBy]       INT           NOT NULL,
    [ModifiedDate]     DATETIME      NOT NULL,
    [DisplayMode]      BIT           NULL,
    [StyleSheetId]     INT           NULL,
    [DefaultLayoutXML] NTEXT         NULL,
    CONSTRAINT [PK_ZNnodeReportSetting] PRIMARY KEY CLUSTERED ([ReportSettingId] ASC)
)
END

GO
IF NOT EXISTS (SELECT * FROM sys.tables where name = 'ZnodeReportStyleSheets')
BEGIN
CREATE TABLE [dbo].[ZnodeReportStyleSheets] (
    [StyleSheetId]  INT            IDENTITY (1, 1) NOT NULL,
    [StyleSheetXml] NVARCHAR (MAX) NULL,
    [IsDefault]     BIT            NULL,
    [CreatedBy]     INT            NOT NULL,
    [CreatedDate]   DATETIME       NOT NULL,
    [ModifiedBy]    INT            NOT NULL,
    [ModifiedDate]  DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeReportStyleSheets] PRIMARY KEY CLUSTERED ([StyleSheetId] ASC)
)
END

GO
IF NOT EXISTS (SELECT * FROM sys.tables where name = 'ZnodeSavedReportViews')
BEGIN
CREATE TABLE [dbo].[ZnodeSavedReportViews] (
    [ReportViewId] INT            IDENTITY (1, 1) NOT NULL,
    [UserId]       INT            NOT NULL,
    [ReportCode]   VARCHAR (50)   NOT NULL,
    [ReportName]   VARCHAR (100)  NOT NULL,
    [LayoutXml]    NVARCHAR (MAX) NULL,
    [CreatedBy]    INT            NOT NULL,
    [CreatedDate]  DATETIME       NOT NULL,
    [ModifiedBy]   INT            NOT NULL,
    [ModifiedDate] DATETIME       NOT NULL,
    [IsActive]     BIT            NULL,
    CONSTRAINT [PK_ZnodeSavedReportViews] PRIMARY KEY CLUSTERED ([ReportViewId] ASC)
)
END

GO
IF NOT EXISTS (SELECT TOP 1 1 FROM ZnodeActions WHERE ControllerName ='DevExpressReport')
BEGIN 

INSERT INTO ZnodeActions
(AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT  NULL,'DevExpressReport','Index',1,2,GETDATE()	,2,GETDATE()

END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetStoresWithCurrency')
BEGIN 
	DROP PROCEDURE Znode_GetStoresWithCurrency
END
GO
CREATE PROCEDURE [dbo].[Znode_GetStoresWithCurrency]  
(  
 @UserId int =0  
)  
AS  
/*  
EXEC Znode_GetStoresWithCurrency @UserId = 7  
  
*/  
BEGIN   
 SELECT DISTINCT ZP.PortalId,ZP.StoreName, ZP.StoreName + ' ('+ZCL.Symbol+')' AS StoreNameWithCurrencySymbol   
   
  FROM    
  ZnodePortal ZP   
  INNER JOIN ZnodePortalunit ZPU on   (ZPU.PortalId =ZP.PortalId)  
  INNER JOIN ZnodeCulture ZCL on   (ZCL.CultureId =ZPU.CultureId)  
  INNER JOIN ZnodeCurrency ZC on   (ZCL.CurrencyId =ZC.CurrencyId)  
  WHERE EXISTS (SELECT TOP 1 1 FROM ZnodeUserPortal ZUP WHERE (ZUP.PortalId=ZP.PortalId OR ZUP.PortalId IS NULL)   AND ZUP.UserId=@UserId )  
  
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetAbandonedProductPricingBySku')
BEGIN 
	DROP PROCEDURE Znode_GetAbandonedProductPricingBySku
END
GO

CREATE PROCEDURE [dbo].[Znode_GetAbandonedProductPricingBySku]
(   
    @SKU              SelectColumnList READONLY,
    @PortalId         TransferId READONLY,
    @currentUtcDate   VARCHAR(100), -- this date is required for the user date r
    @UserId           INT          = 0 -- userid is optional 
    
	)
AS 
   /* 
    --Summary: Retrive Price of product from pricelist
    --Input Parameters:
    --UserId, SKU(Comma separated multiple), PortalId
    --Conditions :
    --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --2. If There is no any PriceList having given sku associated to profile  then check for  
    --PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --4. If There is no any PriceList having given sku associated to user  then check for  
    --PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --5. If There is no any PriceList having given sku associated to account  then check for  
    --PriceList associated Profile having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --6. If There is no any PriceList having given sku associated to Profile  then check for  
    --PriceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --7. If in each case Precedence is same then get PriceList according to higher PriceListId ActivationDate and ExpirationDate for PriceList and SKU also.
    --8. Also get the Tier Price, Tier Quantity of given sku.
    --Unit Testing   
    --Exec Znode_GetPublishProductPricingBySku  @SKU = 'Levi''s T-Shirt & Jeans - Bundle Product',@PortalId = 1, @currentUtcDate = '2016-07-31 00:00:00.000'
	*/
    
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );

			  DECLARE @DefaultLocaleId INT = dbo.FN_GETDEFAULTLocaleId()

			 --IF @SKU = '' 
			 --BEGIN 
			 -- INSERT INTO @Tlb_SKU(SKU)
			 -- 	SELECT (SELECT ''+SKU FOR XML PATH('')) 
				--	FROM ZnodePublishProductDetail a
				--	WHERE LocaleId = @DefaultLocaleId


			 --END 
			 --ELSE 
			 --BEGIN
			 --  INSERT INTO @Tlb_SKU(SKU)
    --                SELECT Item
    --                FROM Dbo.split(@SKU, ',');
			  

			 --END 

          
             DECLARE @TLB_SKUPRICELIST TABLE
             (SKU          VARCHAR(100),
              RetailPrice  NUMERIC(28, 6),
              SalesPrice   NUMERIC(28, 6),
              PriceListId  INT,
              TierPrice    NUMERIC(28, 6),
              TierQuantity NUMERIC(28, 6),
			  ExternalId NVARCHAR(2000),
			  Custom1 NVARCHAR(MAX),
			  Custom2 NVARCHAR(MAX),
			  Custom3 NVARCHAR(MAX)
             );
             DECLARE @PriceListId INT, @PriceRoundOff INT;
             SELECT @PriceRoundOff = CONVERT( INT, FeatureValues)
             FROM ZnodeGlobalSetting
             WHERE FeatureName = 'PriceRoundOff';
		
             --Retrive portal wise pricelist  
             DECLARE @Tbl_PortalWisePriceList TABLE
             (PriceListId    INT,
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              Precedence     INT,
			  SKU NVARCHAR(300)
             );
             --Retrive price for respective pricelist   
             DECLARE @Tbl_PriceListWisePrice TABLE
             (
				  PriceListId    INT,
				  SKU            VARCHAR(300),
				  SalesPrice     NUMERIC(28, 6),
				  RetailPrice    NUMERIC(28, 6),
				  UomId          INT,
				  UnitSize       NUMERIC(28, 6),
				  ActivationDate DATETIME,
				  ExpirationDate DATETIME NULL,
				  TierPrice      NUMERIC(28, 6),
				  TierQuantity   NUMERIC(28, 6),
				  TierUomId      INT,
				  TierUnitSize   NUMERIC(28, 6), 
				  ExternalId NVARCHAR(2000),
				  Custom1 NVARCHAR(MAX),
				  Custom2 NVARCHAR(MAX),
				  Custom3 NVARCHAR(MAX)
             );
			 DECLARE @Tbl_SKUWisePriceList TABLE (PriceListId INT, SKU NVARCHAR(300))

			 insert into @Tbl_SKUWisePriceList(PriceListId,SKU) 
			 SELECT  PriceListId,SKU from ZnodePrice where (SELECT ''+SKU FOR XML PATH('')) in (Select StringColumn from @SKU )
			 Union
			 SELECT PriceListId,SKU  from ZnodePriceTier where (SELECT ''+SKU FOR XML PATH('')) in (Select StringColumn from @SKU )
			 
			 --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
            IF @UserId = 0
                 BEGIN
					INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
					SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
					FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
						ON b.PortalProfileId = c.PortalProfileID AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId 
						inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
					WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND 
					 EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = c.PortalId) -- c.PortalId = @PortalId
					ORDER BY b.Precedence;
		
			 
                     --2. If There is no any PriceList having given sku associated to profile  then check for PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
			IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
							INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId   
							inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
							AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
							WHERE @CurrentUtcDate BETWEEN a.ActivationDate 
							AND ISNULL(a.ExpirationDate, @GetDate) AND 
							 EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = b.PortalId) --b.PortalId = @PortalId
							ORDER BY b.Precedence
							;
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						
                         END;
                 END;
                     --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
             ELSE
                 BEGIN
				 
                     INSERT INTO @Tbl_PortalWisePriceList (PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
                            SELECT a.PriceListId, ActivationDate,ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                            FROM ZnodePriceList AS a INNER JOIN ZnodePriceListUser AS b ON a.PriceListId = b.PriceListId
                                 INNER JOIN ZnodePortalunit zupu ON (a.CultureId = zupu.CultureId 
								 AND EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = zupu.PortalId) )--zupu.PortalId = @PortalId  )
								 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								 
                            WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.UserID = @UserId
							ORDER BY b.Precedence ;

                --4. If There is no any PriceList having given sku associated to user  then check for PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
						BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
								   SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), c.Precedence,tsw.SKU
								   FROM ZnodePriceList AS a INNER JOIN ZnodePriceListAccount AS c ON a.PriceListId = c.PriceListId
										INNER JOIN ZnodeUser AS d ON c.Accountid = d.Accountid INNER JOIN ZnodePortalunit AS zupu ON (a.CultureId = zupu.CultureId   
										AND EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = zupu.PortalId) )--AND zupu.PortalId = @PortalId
										inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								   WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND d.UserID = @UserId
									ORDER BY c.Precedence
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						 END;
                     -- 5. If There is no any PriceList having given sku associated to account  then check for PriceList associated Profile having PortalId and having higher   Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
				where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
                             INSERT INTO @Tbl_PortalWisePriceList(PriceListId,ActivationDate,ExpirationDate,Precedence,SKU)
                                    SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                                    FROM ZnodePriceList AS a
                                         INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId 
										 INNER JOIN ZnodePortalProfile AS c ON (b.PortalProfileId = c.PortalProfileId  
										 AND EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = c.PortalId) )--AND c.PortalId = @PortalId 
                                         INNER JOIN dbo.ZnodeUserProfile zup ON c.ProfileId = zup.ProfileId AND IsDefault = 1
                                         INNER JOIN ZnodePortalunit zupu ON (a.CultureId = zupu.CultureId 
										 AND EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = zupu.PortalId) )--AND zupu.PortalId = @PortalId 
										 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                                    WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND zup.UserId = @UserId;
									--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )

					     END;
                   

                     ---6. If There is no any PriceList having given sku associated to Profile  then check for priceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
                  				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
								where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
								INNER JOIN ZnodePortalunit AS zupu ON a.CultureId = zupu.CultureId AND  zupu.PortalId = b.PortalId    
								inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) 
								AND EXISTS (SELECT TOP 1 1 FROM @PortalId WHERE Id = b.PortalId) --AND b.PortalId = @PortalId
							    ORDER BY b.Precedence
								;
								--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
                         END;
						 
				--IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				--WHERE tspl.SKU = tpwl.SKU))
				--BEGIN
				
				--	INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
				--	SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
				--	FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
				--	ON b.ProfileId = c.ProfileId AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
				--	inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
				--	AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
				--	WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId;
				--END

                 END;
			
             SET @PriceListId = 0;
             -- Check Activation date and expiry date 
             IF EXISTS( SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList)
                 BEGIN
				
                     -- Declare  @d datetime
                     -- SET @d = @GetDate
                     -- Select ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ),b.Precedence,* from ZnodePriceList  a inner join ZnodePriceListPortal b on a.PriceListId = b.PriceListId where @d between ISNULL(ActivationDate,@d) 
                     -- and ISNULL(ExpirationDate,@GetDate ) --and a.PriceListId <>  80
                     -- Order by ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ) ,  b.Precedence DESC 
                     --	Retrive pricelist wise price
                   INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize , ExternalId ,Custom1,Custom2,Custom3)
				   SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize, ZP.ExternalId,
				   ZPT.Custom1,ZPT.Custom2,ZPT.Custom3
				   FROM [ZnodePrice] AS ZP 
				   INNER JOIN @SKU AS TSKU ON (SELECT ''+ZP.SKU FOR XML PATH ('')) = TSKU.StringColumn 
				   LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND ZP.PriceListId = ZPT.PriceListId
				   WHERE ZP.PriceListId IN
				   (
					   SELECT TOP 1 PriceListId
					   FROM @Tbl_PortalWisePriceList AS TBPWPL
					   WHERE  TBPWPL.SKU = ZP.SKU
					   ORDER BY Precedence 
				   );
				  


                     -- Check Activation date and expiry date 
                    INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3 )
					   SELECT DISTINCT  PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					   FROM @Tbl_PriceListWisePrice
					   WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					   
					  
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId ,Custom1,Custom2,Custom3)
					   SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					   FROM @Tbl_PriceListWisePrice
					   WHERE SKU NOT IN(SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null 
				
                 END;
                     -- Retrive data as per precedance from ZnodePriceListPortal table  
					
             ELSE
                 BEGIN
                     SET @PriceListId =( SELECT TOP 1 PriceListId FROM @Tbl_PortalWisePriceList ORDER BY Precedence  );

                     --Retrive pricelist wise price  
                     INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize, ExternalId ,Custom1,Custom2,Custom3)
					 SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), 
							ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize, zp.ExternalId,Custom1,Custom2,Custom3
					 FROM [ZnodePrice] AS ZP INNER JOIN @SKU AS TSKU ON ZP.SKU = TSKU.StringColumn LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND 
							   ZP.PriceListId = ZPT.PriceListId WHERE ZP.PriceListId = @PriceListId; 

                     -- Check Activation date and expiry date 
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId ,Custom1,Custom2,Custom3)
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					FROM @Tbl_PriceListWisePrice WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId ,Custom1,Custom2,Custom3)
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId,Custom1,Custom2,Custom3
					FROM @Tbl_PriceListWisePrice
					WHERE SKU NOT IN ( SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null;

                 END;
             SELECT SKU,
                      ROUND(RetailPrice, @PriceRoundOff) AS RetailPrice
                    --ROUND(SalesPrice, @PriceRoundOff) AS SalesPrice,
                    --ROUND(TierPrice, @PriceRoundOff) AS TierPrice,
                    --ROUND(TierQuantity, @PriceRoundOff) AS TierQuantity
					--ZCC.CurrencyCode  AS CurrencyCode,    
                    --ZC.Symbol AS CurrencySuffix,  ZC.CultureCode,
					--TSPL.ExternalId,
					--Custom1,Custom2,Custom3
             FROM @TLB_SKUPRICELIST AS TSPL
                  INNER JOIN ZnodePriceList AS ZPL ON TSPL.PriceListId = ZPL.PriceListId
                  INNER JOIN ZnodeCulture AS ZC ON ZPL.CultureId = ZC.CultureId    
				  LEFT JOIN ZnodeCurrency AS ZCC ON ZC.CurrencyId = ZCC.CurrencyId   
				  ORDER BY TierQuantity ASC;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
			SET @Status = 0;
			SELECT ERROR_MESSAGE()
			--DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishProductPricingBySku @SKU = '+@SKU+',@PortalId = '+CAST(@PortalId AS VARCHAR(10))+',@currentUtcDate = '+@currentUtcDate+',@UserId='+CAST(@UserId AS VARCHAR(100))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			--SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			--EXEC Znode_InsertProcedureErrorLog
			--	@ProcedureName = 'Znode_GetPublishProductPricingBySku',
			--	@ErrorInProcedure = @Error_procedure,
			--	@ErrorMessage = @ErrorMessage,
			--	@ErrorLine = @ErrorLine,
			--	@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCMSWidgetSliderBanner')
BEGIN 
	DROP PROCEDURE Znode_GetCMSWidgetSliderBanner
END
GO


CREATE   PROCEDURE [dbo].[Znode_GetCMSWidgetSliderBanner]
( @PortalId INT = 0 ,
  @UserId   INT = 0
 ,@CMSSliderId INT = 0 
 ,@LocaleId INT = 0
 ,@CMSContentPagesId INT = 0
 )
AS 
   /* 
    Summary : Get all ZnodeCMSWidgetSliderBanner associated to PortalId and to all Contentpages
    		  associated to portal ID(using PortalMapping,ContentPageMapping)
    		  Get ZnodeCMSSliderBanner Associated to ZnodeCMSWidgetSliderBanner
    		  Data should Repeat According to LocaleId
     Unit Testing 
     EXEC [Znode_GetCMSWidgetSliderBanner_bak]  @PortalId = 1,@CMSContentPagesId =88
	
	*/
     BEGIN
         BEGIN TRAN;
         BEGIN TRY 
             
             DECLARE @TBL_Locale TABLE
             (RowId      INT IDENTITY(1, 1),
              LocaleId   INT,
              LocaleCode NVARCHAR(600),
              IsDefault  BIT
             );

             INSERT INTO @TBL_Locale(LocaleId,LocaleCode,IsDefault)
                    SELECT LocaleId,Name,IsDefault
                    FROM ZnodeLocale
                    WHERE IsActive = 1 
					AND ( LocaleId = @LocaleId  OR ISNULL(@LocaleId,0) = 0 ) ;

             DECLARE @V_LocaleId INT, @V_LocaleDefaultId INT=
             (
                 SELECT FeatureValues
                 FROM ZnodeGlobalSetting
                 WHERE FeatureName = 'Locale'
             );

             DECLARE @V_LocaleCode NVARCHAR(600);
             DECLARE @v_Count INT= 1;
             DECLARE @v_Count_forProduct INT= 1;
             DECLARE @Xmlreturn TABLE
             (CMSWidgetSliderBannerId INT,
              ReturnXML               NVARCHAR(MAX)
             );
             DECLARE @XmlFullreturn TABLE(ReturnXML XML);

             --CMSContentPage associated with portal 
			 DECLARE @TBL_CMSContentPagesPortalWise TABLE(CMSContentPagesId INT);
	

             INSERT INTO @TBL_CMSContentPagesPortalWise(CMSContentPagesId)
                    SELECT CMSContentPagesId
                    FROM ZnodeCMSContentPages
                    WHERE PortalId = @PortalId
                          AND IsActive = 1
						 AND (CMSContentPagesId = @CMSContentPagesId OR @CMSContentPagesId  = 0)

						

             WHILE @v_Count <= ISNULL(
                                     (
                                         SELECT MAX(RowId)
                                         FROM @TBL_Locale
                                     ), 0)
                 BEGIN
                     SET @V_LocaleId =
                     (
                         SELECT LocaleId
                         FROM @TBL_Locale
                         WHERE RowID = @v_Count
                     );
                     SET @V_LocaleCode =
                     (
                         SELECT LocaleCode
                         FROM @TBL_Locale
                         WHERE RowID = @v_Count
                     );

                     DECLARE @Tlb_ZnodeCMSWidgetSliderBanner TABLE
                     (CMSWidgetSliderBannerId INT,
                      CMSMappingId            INT,
                      PortalId                INT,
                      Type                    NVARCHAR(100) NULL,
                      Navigation              NVARCHAR(100) NULL,
                      AutoPlay                BIT,
                      AutoplayTimeOut         INT,
                      AutoplayHoverPause      BIT,
                      TransactionStyle        NVARCHAR(100) NULL,
                      WidgetsKey              NVARCHAR(256),
                      TypeOFMapping           NVARCHAR(100),
                      CMSSliderId             INT
                     );

                     DECLARE @TBL_ZnodeCMSSliderDetail TABLE
                     (CMSSliderId        INT,
                      CMSSliderBannerId  INT,
                      MediaPath          VARCHAR(300),
                      Title              NVARCHAR(1000),
                      ButtonLabelName    NVARCHAR(1200),
                      ButtonLink         NVARCHAR(600),
                      TextAlignment      NVARCHAR(200),
                      BannerSequence     INT,
                      ActivationDate     DATETIME,
                      ExpirationDate     DATETIME,
                      ImageAlternateText NVARCHAR(1000),
                      DEscription        NVARCHAR(MAX)
                     );

                     DECLARE @TBL_ZnodeCMSSliderDetail_Locale TABLE
                     (CMSSliderId        INT,
                      CMSSliderBannerId  INT,
                      MediaPath          VARCHAR(300),
                      Title              NVARCHAR(1000),
                      ButtonLabelName    NVARCHAR(1200),
                      ButtonLink         NVARCHAR(600),
                      TextAlignment      NVARCHAR(200),
                      BannerSequence     INT,
                      ActivationDate     DATETIME,
                      ExpirationDate     DATETIME,
                      ImageAlternateText NVARCHAR(1000),
                      DEscription        NVARCHAR(MAX),
                      LocaleId           INT
                     );

                    
                     INSERT INTO @Tlb_ZnodeCMSWidgetSliderBanner(CMSWidgetSliderBannerId,CMSMappingId,PortalId,Type,Navigation,AutoPlay,AutoplayTimeOut,AutoplayHoverPause,TransactionStyle,WidgetsKey,TypeOFMapping,CMSSliderId)
                            SELECT ACWSB.CMSWidgetSliderBannerId,ACWSB.CMSMappingId,CASE @CMSContentPagesId WHEN 0 THEN ACWSB.CMSMappingId
													ELSE @PortalId END
							AS PortalId,ACWSB.Type,ACWSB.Navigation,ACWSB.AutoPlay,ACWSB.AutoplayTimeOut
							,ACWSB.AutoplayHoverPause,ACWSB.TransactionStyle,ACWSB.WidgetsKey,ACWSB.TypeOfMapping
							OFMapping,ACWSB.CMSSliderId
                            FROM ZnodeCMSWidgetSliderBanner AS ACWSB
                            WHERE(  (TypeOfMapping = 'PortalMapping'
                                  AND CMSMappingId = @PortalId OR @PortalId = 0 )
                                  OR (TypeOfMapping = 'ContentPageMapping'
                                     AND CMSMappingId IN
                                    (
                                        SELECT CMSContentPagesId
                                        FROM @TBL_CMSContentPagesPortalWise
                                    ) ))
							   AND (ACWSB.CMSSliderId = @CMSSliderId OR @CMSSliderId = 0   )
							   AND (CMSMappingId = @CMSContentPagesId OR @CMSContentPagesId  = 0);

                     INSERT INTO @TBL_ZnodeCMSSliderDetail_Locale
                            SELECT ZCSB.CMSSliderId,ZCSB.CMSSliderBannerId,ZM.Path,ZCSBL.Title,ZCSBL.ButtonLabelName,ZCSBL.ButtonLink,ZCSB.TextAlignment,ZCSB.BannerSequence,ZCSB.ActivationDate,ZCSB.ExpirationDate,ZCSBL.ImageAlternateText,ZCSBL.DEscription,ISNULL(ZCSBL.LocaleId, @V_LocaleDefaultId) AS LocaleId
                            FROM ZnodeCMSSliderBanner AS ZCSB
                                 LEFT JOIN ZnodeCMSSliderBannerLocale AS ZCSBL ON(ZCSB.CMSSliderBannerId = ZCSBL.CMSSliderBannerId
                                                                                  AND ZCSBL.LocaleId IN(@V_LocaleDefaultId, @V_LocaleId))
                                 LEFT OUTER JOIN ZnodeMEdia  AS ZM ON ZCSBL.MediaId = ZM.MediaId
								 
                            WHERE EXISTS
                            (
                                SELECT TOP 1 1
                                FROM @Tlb_ZnodeCMSWidgetSliderBanner AS ACWSB
                                WHERE ACWSB.CMSSliderId = ZCSB.CMSSliderId
                            )
							--AND (ZCSB.CMSSliderId = @CMSSliderId OR @CMSSliderId = 0   )
							;

				

                     INSERT INTO @TBL_ZnodeCMSSliderDetail
                            SELECT CMSSliderId,CMSSliderBannerId,MediaPath,Title,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence,ActivationDate,ExpirationDate,ImageAlternateText,DEscription
                            FROM @TBL_ZnodeCMSSliderDetail_Locale
                            WHERE LocaleId = @V_LocaleId;


                     INSERT INTO @TBL_ZnodeCMSSliderDetail
                            SELECT CMSSliderId,CMSSliderBannerId,MediaPath,Title,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence,ActivationDate,ExpirationDate,ImageAlternateText,DEscription
                            FROM @TBL_ZnodeCMSSliderDetail_Locale AS TZCSDL
                            WHERE LocaleId = @V_LocaleDefaultId
              AND NOT EXISTS
                            (
                                SELECT TOP 1 1
                                FROM @TBL_ZnodeCMSSliderDetail AS TZCSD
                                WHERE TZCSD.CMSSliderBannerId = TZCSDL.CMSSliderBannerId
                                      AND TZCSD.CMSSliderId = TZCSDL.CMSSliderId
                            );		 


                     INSERT INTO @Xmlreturn
                            SELECT CMSWidgetSliderBannerId,
                            (
                                SELECT
                                (
                                    SELECT CMSSliderId AS SliderId,CMSSliderBannerId AS SliderBannerId,MediaPath,Title,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence,ActivationDate,ExpirationDate,ImageAlternateText,Description
                                    FROM @TBL_ZnodeCMSSliderDetail AS wd
                                    WHERE wd.CMSSliderId = TZCWSB.CMSSliderId 
                                    FOR XML PATH('SliderBannerEntity'), TYPE
                                )
                                FROM @Tlb_ZnodeCMSWidgetSliderBanner AS a
                                WHERE a.CMSWidgetSliderBannerId = TZCWSB.CMSWidgetSliderBannerId
                                FOR XML PATH(''), ROOT('SliderBanners')
                            ) AS XMLGEM

                            FROM @Tlb_ZnodeCMSWidgetSliderBanner AS TZCWSB;

                     INSERT INTO @XmlFullreturn
                            SELECT DISTINCT
                                   '<WidgetSliderBannerEntity>'+
                            (
                                SELECT DISTINCT
                                       CMSWidgetSliderBannerId AS WidgetSliderBannerId,CMSMappingId AS MappingId,PortalId,@V_LocaleId AS LocaleId,Type,Navigation,AutoPlay,AutoplayTimeOut,AutoplayHoverPause,TransactionStyle,WidgetsKey,TypeOFMapping,CMSSliderId AS SliderId,TransactionStyle
                                FROM @Tlb_ZnodeCMSWidgetSliderBanner AS pr
                                WHERE pr.CMSWidgetSliderBannerId = p.CMSWidgetSliderBannerId
                                FOR XML PATH('')
                            )+
                            (
                                SELECT ReturnXML
                                FROM @Xmlreturn AS q
                                WHERE q.CMSWidgetSliderBannerId = p.CMSWidgetSliderBannerId
                            )+'</WidgetSliderBannerEntity>'
                            FROM @Tlb_ZnodeCMSWidgetSliderBanner AS p;

                     DELETE FROM @Xmlreturn;
                     DELETE FROM @TBL_ZnodeCMSSliderDetail_Locale;
                     DELETE FROM @TBL_ZnodeCMSSliderDetail;
                     DELETE FROM @Tlb_ZnodeCMSWidgetSliderBanner;
                     SET @v_Count = @v_Count + 1;
                 END;
             SELECT *
             FROM @XmlFullreturn;
             COMMIT TRAN;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCMSWidgetSliderBanner @PortalId = '+CAST(@PortalId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		     ROLLBACK TRAN;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCMSWidgetSliderBanner',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCMSWidgetTitle')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCMSWidgetTitle
END
GO

CREATE PROCEDURE [dbo].[Znode_GetPublishCMSWidgetTitle]
(
 @PortalId INT = 0 
  ,@LocaleId INT = 0 
  ,@CMSContentPagesId INT = 0
)
AS 
/*
 This Procedure is used to get the record of content pages for publish  portal 
  EXEC Znode_GetPublishCMSWidgetTitle @PortalId =1,  @CMSContentPagesId = 88
*/
BEGIN 
 BEGIN TRY 
  SET NOCOUNT ON 
   
   DECLARE @TBL_LocaleId TABLE ( RowId INT IDENTITY(1,1) PRIMARY KEY , LocaleId INT )
   DECLARE @TBL_GetDATATable TABLE (WidgetTitleConfigurationId INT ,MappingId INT ,  PortalId INT 
			, LocaleId INT , MediaPath   VARCHAR(300) , Title nvarchar (600) ,TitleCode nvarchar(600) ,TypeOFMapping NVARCHAR(100) 
			,Url nvarchar(600)  , WidgetsKey  NVARCHAR(256),IsNewTab bit)
   INSERT INTO @TBL_LocaleId (LocaleId )
   SELECT LocaleId 
   FROm ZnodeLocale 
   WHERE IsActive = 1
   AND (LocaleId = @LocaleId OR   ISNULL(@LocaleId,0) = 0)
    
    DECLARE @SetLocaleId INT  ,@DefaultLocaleId INT = dbo.FN_GEtDEFAULTLocaleID() 
   DECLARE @CounterId INT = 1 , @MaxRowId INT = (SELECT Max(RowId ) FROM @TBL_LocaleId)  

   WHILE @CounterId <= @MaxRowId
   BEGIN 
   SET @SetLocaleId = (SELECT TOP 1 LocaleID FROM @TBL_LocaleId WHERe RowId =@CounterId )  
  
   DECLARE @TBL_TitleWidgetsData TABLE (CMSWidgetTitleConfigurationId INT , CMSWidgetTitleConfigurationLocaleId INT )
  ;With Cte_GetContentPagesId AS 
   (
     SELECT ZCWTC.CMSWidgetTitleConfigurationId , ZCWTCL.CMSWidgetTitleConfigurationLocaleId ,LocaleId, IsNewTab
	 FROM ZnodeCMSWidgetTitleConfiguration ZCWTC 
	 INNER JOIN ZnodeCMSWidgetTitleConfigurationLocale  ZCWTCL ON (ZCWTCL.CMSWidgetTitleConfigurationId = ZCWTC.CMSWidgetTitleConfigurationId )
     WHERE ZCWTCL.LocaleId   IN (@DefaultLocaleId,@SetLocaleId) 
   ) 
   , Cte_LocaleIdFiletr AS 
   (
    SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
    FROM Cte_GetContentPagesId CET1 
	WHERE LocaleId = @SetLocaleId
    )
	,Cte_CompleteRecords AS 
	(
	 SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	 FROM Cte_LocaleIdFiletr
	 UNION ALL 
	 SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	 FROM Cte_GetContentPagesId  CTE2
	 WHERE Cte2.localeId = @DefaultLocaleId
	 AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_LocaleIdFiletr CTE1 WHERE Cte1.CMSWidgetTitleConfigurationId = CTE2.CMSWidgetTitleConfigurationId )
	)

	INSERT INTO @TBL_TitleWidgetsData (CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId)
	SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	FROM Cte_CompleteRecords 
	 
	 INSERT INTO @TBL_GetDATATable (WidgetTitleConfigurationId  ,MappingId  ,  PortalId  , LocaleId  , MediaPath   , Title  ,TitleCode  ,TypeOFMapping  ,Url   , WidgetsKey,IsNewTab )
	 SELECT ZCWTC.CMSWidgetTitleConfigurationId WidgetTitleConfigurationId,ZCWTC.CMSMappingId MappingId,CASE @CMSContentPagesId WHEN 0 THEN ZCWTC.CMSMappingId
													ELSE @PortalId END
							AS PortalId,@SetLocaleId LocaleId,ZM.[path]MediaPath,ZCWTCL.Title,ZCWTC.TitleCode,ZCWTC.TypeOFMapping,ZCWTCl.Url,ZCWTC.WidgetsKey,IsNewTab
	 FROM ZnodeCMSWidgetTitleConfiguration ZCWTC 
	 INNER JOIN ZnodeCMSWidgetTitleConfigurationLocale  ZCWTCL ON (ZCWTCL.CMSWidgetTitleConfigurationId = ZCWTC.CMSWidgetTitleConfigurationId )
	 INNER JOIN @TBL_TitleWidgetsData TBLW ON (TBLW.CMSWidgetTitleConfigurationLocaleId  =  ZCWTCL.CMSWidgetTitleConfigurationLocaleId)
	 LEFT JOIN ZnodeMedia ZM ON (Zm.MediaId = ZCWTCL.MediaId)
	 --WHERE ZCWTC.TypeOFMapping = 'PortalMapping'
	 --AND ZCWTC.CMSMappingId  = @PortalId
	 WHERE
	 ((ZCWTC.TypeOfMapping = 'PortalMapping'
                                  AND ZCWTC.CMSMappingId = @PortalId OR  @PortalId = 0)
                                  OR (ZCWTC.TypeOfMapping = 'ContentPageMapping'
                                     AND ZCWTC.CMSMappingId  = @CMSContentPagesId OR @CMSContentPagesId  = 0)
                                    )
	 AND (CMSMappingId = @CMSContentPagesId OR @CMSContentPagesId  = 0); 


	 SET @CounterId = @CounterId+1 
	 DELETE FROM @TBL_TitleWidgetsData
   END 

   SELECT WidgetTitleConfigurationId  ,MappingId  ,  PortalId  , LocaleId  , MediaPath   , Title  ,TitleCode  ,TypeOFMapping  ,Url   , WidgetsKey,IsNewTab
   FROM @TBL_GetDATATable

   END TRY 
   BEGIN CATCH 
   SELECT ERROR_MESSAGE()
   END CATCH 
   
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportInsertUpdatePimProduct')
BEGIN 
	DROP PROCEDURE Znode_ImportInsertUpdatePimProduct
END
GO

CREATE PROCEDURE [dbo].[Znode_ImportInsertUpdatePimProduct]
(
    @PimProductDetail  PIMPRODUCTDETAIL READONLY,
    @UserId            INT       ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0,
	@CopyPimProductId  INT	  = 0 )
AS
   /*
     Summary : To Insert / Update single Product with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
			 DECLARE @PimProductId INT;
			 DECLARE @TBL_PimProductId TABLE(PimAttributeValueId INT,ZnodePimAttributeValueLocaleId INT );
			 DECLARE @TBL_CopyPimProductId TABLE(PimAttributeValueId INT,OldPimAttributeValueId INT);
			 DECLARE @PimDefaultFamily INT= dbo.Fn_GetDefaultPimProductFamilyId()
			 DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @TBL_DefaultAttributeId TABLE (PimAttributeId INT PRIMARY KEY , AttributeCode VARCHAR(600))
			 DECLARE @TBL_MediaAttributeId TABLE (PimAttributeId INT PRIMARY KEY, AttributeCode VARCHAR(600))
			 DECLARE @TBL_TextAreaAttributeId TABLE (PimAttributeId INT PRIMARY KEY , AttributeCode VARCHAR(600))
			 DECLARE @TBL_MediaAttributeValue TABLE (PimAttributeValueId INT ,LocaleId INT ,AttributeValue VARCHAr(300),MediaId INT)
			 DECLARE @TBL_DefaultAttributeValue TABLE (PimAttributeValueId INT , LocaleId INT , AttributeValue INT)
			 DECLARE @ZnodePimAttributeValue TABLE (PimAttributeValueId  INT, PimAttributeFamilyId INT,PimAttributeId INT);

			 DECLARE @AssociatedProduct VARCHAR(4000);
			 DECLARE @ConfigureAttributeId VARCHAR(4000);
			 DECLARE @ConfigureFamilyId VARCHAR(4000);
			 DECLARE @PimAttributeFamilyId INT;
			 DECLARE @LocaleId INT 

			 DECLARE @pimSkuAttributeId VARCHAR(50) = [dbo].[Fn_GetProductSKUAttributeId] ()
			 DECLARE @pimProductNameAttributeId VARCHAR(50) =[dbo].Fn_GetProductNameAttributeId ()
			 DECLARE @PimIsDownlodableAttributeId VARCHAR(50) = [dbo].[Fn_GetIsDownloadableAttributeId]()
			 Declare @SKU nvarchar(300),@ProductName nvarchar(300)
			 Select * into #PimProductDetail from @PimProductDetail
			
			--DECLARE @PimAttributeFamily VARCHAR(50) =  [dbo].[Fn_GetAttributeFamilyId]()
			--Update #PimProductDetail SET AttributeValue = 
			--(SELECT FamilyCode from ZnodePimAttributeFamily where PimAttributeFamilyId = @PimAttributeFamilyId)
			--where PimAttributeId = @PimAttributeFamily

			--DECLARE @PimAttributeIsPublish VARCHAR(50) =  [dbo].[Fn_GetAttributeIsPublish]()
			 
			--insert into #PimProductDetail ([PimAttributeId],[PimAttributeFamilyId],[ProductAttributeCode],[ProductAttributeDefaultValueId],
			--[PimAttributeValueId],	[LocaleId],[PimProductId],[AttributeValue],[AssociatedProducts],[ConfigureAttributeIds],[ConfigureFamilyIds]) 
			 
			--SELECT TOP 1 @PimAttributeIsPublish,[PimAttributeFamilyId],'PublishStatus' ProductAttributeCode,NULL ProductAttributeDefaultValueId,
			--NULL PimAttributeValueId,	[LocaleId],[PimProductId],
			--CASE when isnull([PimProductId] ,0) > 1 then 'Draft' else 'Not Publish' END AttributeValue,
			--[AssociatedProducts],[ConfigureAttributeIds],[ConfigureFamilyIds]
			--from @PimProductDetail  


			INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  [dbo].[Fn_GetDefaultAttributeId] ()
			 
			 INSERT INTO @TBL_MediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM [dbo].[Fn_GetProductMediaAttributeId]()

			 INSERT INTO @TBL_TextAreaAttributeId (PimAttributeId ,AttributeCode)
			 SELECT PimAttributeId, AttributeCode   FROM [dbo].[Fn_GetTextAreaAttributeId]()

			 
			 SELECT TOP 1 @PimAttributeFamilyId = PimAttributeFamilyId
                FROM #PimProductDetail;
             
			 

			 
			 
			 SELECT TOP 1 @LocaleId = LocaleId
                FROM #PimProductDetail;

             -- Retrive input productId from #PimProductDetail table ( having multiple attribute values with common productId) 

             SELECT TOP 1 @PimProductId = PimProductId
             FROM #PimProductDetail;
			
			DECLARE @PublishStateIdForDraft INT =  [dbo].[Fn_GetPublishStateIdForDraftState]()
			  DECLARE @PublishStateIdForNotPublished INT = [dbo].[Fn_GetPublishStateIdForForNotPublishedState]()

			

             IF ISNULL(@PimProductId, 0) = 0
                 BEGIN
                     INSERT INTO ZnodePimProduct
                     (PimAttributeFamilyId,
                      CreatedBy,
                      CreatedDate,
                      ModifiedBy,
                      ModifiedDate ,PublishStateId
                     )
                            SELECT @PimAttributeFamilyId,
                                   @UserId,
                                   @GetDate,
                                   @UserId,
                                   @GetDate,@PublishStateIdForNotPublished ;
                     SET @PimProductId = SCOPE_IDENTITY();
					 If EXISTS (select TOP 1 1 from #PimProductDetail where PimAttributeId = @PimIsDownlodableAttributeId and AttributeValue = 'true'  )
					 Begin
						
						Select TOP 1 @SKU  =  AttributeValue from  #PimProductDetail where PimAttributeId =  @pimSkuAttributeId
						Select TOP 1 @ProductName  = AttributeValue from  #PimProductDetail where PimAttributeId =  @pimProductNameAttributeId
						insert into ZnodePimDownloadableProduct(SKU,ProductName,  CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						Select @SKU, @ProductName, @UserId , @GetDate, @UserId , @GetDate 
					 End
		

                 END;
             ELSE 
                 BEGIN
                     UPDATE ZNodePimProduct
                       SET
                           PimAttributeFamilyId = @PimAttributeFamilyId,
						   PublishStateId = @PublishStateIdForDraft,
                           ModifiedBy = @UserId,
                           ModifiedDate = @GetDate
                     WHERE PimProductId = @PimProductId;
            									
					 INSERT INTO @TBL_PimProductId(PimAttributeValueId)
					 SELECT ZPAV.PimAttributeValueId
                     FROM ZnodePimAttributeValue ZPAV
					 INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId AND ( @localeID = @DefaultLocaleId OR ZPA.IsLocalizable = 1 OR EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetProductMediaAttributeId]() FN WHERE FN.PimAttributeId = ZPAV.PimAttributeId)))
					 INNER JOIN ZnodePimFamilyGroupMapper ZPFGMI  ON (ZPFGMI.PimAttributeId = ZPAV.PimAttributeId AND ZPFGMI.PimAttributeFamilyId = @PimAttributeFamilyId)
					 WHERE ZPAV.PimProductId = @PimProductId
					 AND NOT EXISTS
                            (
                                SELECT TOP 1 1
                                FROM #PimProductDetail TBPDI
                                WHERE TBPDI.PimAttributeId = ZPAV.PimAttributeId
                                      AND TBPDI.PimProductId = ZPAV.PimProductId
							 )
                     
				    --  SELECT * FROM @TBL_PimProductId

			
                     DELETE FROM ZnodePimAttributeValueLocale
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimAttributeValueLocale.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					 DELETE  ZnodePimProductAttributeDefaultValue 
					  WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					


					 DELETE FROM ZnodePimProductAttributeMedia 
					  WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeMedia.PimAttributeValueId 
								
                     ) 
					 AND LocaleId = @LocaleId;

					-- SELECT * FROM @TBL_PimProductId
					

					 DELETE FROM ZnodePimProductAttributeTextAreaValue
					   WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeTextAreaValue.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId ;

					 
                     DELETE FROM ZnodePimAttributeValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId
                     )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeTextAreaValue ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId );
					
				
					
					If EXISTS (select TOP 1 1 from #PimProductDetail where PimAttributeId = @PimIsDownlodableAttributeId and AttributeValue = 'true'  )
					 Begin
						Select TOP 1 @SKU  =  AttributeValue from  #PimProductDetail where PimAttributeId =  @pimSkuAttributeId
						Select TOP 1 @ProductName  = AttributeValue from  #PimProductDetail where PimAttributeId =  @pimProductNameAttributeId

						insert into ZnodePimDownloadableProduct(SKU,ProductName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						Select TOP 1 PD.AttributeValue, @ProductName,@UserId , @GetDate, @UserId , @GetDate from  #PimProductDetail PD where  PD.PimAttributeId = @pimSkuAttributeId 
						AND not exists (select top 1 1 from  ZnodePimDownloadableProduct where  ZnodePimDownloadableProduct.SKU  =  PD.AttributeValue)
						IF NOT Exists (	select top 1 1 from  ZnodePimDownloadableProduct where  ZnodePimDownloadableProduct.SKU  = @SKU)
							insert into ZnodePimDownloadableProduct(SKU,ProductName,  CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
							Select @SKU, @ProductName, @UserId , @GetDate, @UserId , @GetDate 

					 End
                 END;
		
		 

		    MERGE INTO ZnodePimAttributeValue TARGET
              USING #PimProductDetail SOURCE
              ON(
				TARGET.PimProductId = @PimProductId
                AND TARGET.PimAttributeId = SOURCE.PimAttributeId)
                --AND ISNULL(TARGET.PimAttributeFamilyId, 0) = ISNULL(SOURCE.PimAttributeFamilyId, 0))
                 WHEN MATCHED
                 THEN UPDATE SET
                                 TARGET.PimAttributeFamilyId = CASE
                                                                   WHEN Source.PimAttributeFamilyId = 0
                                                                   THEN NULL
                                                                   ELSE Source.PimAttributeFamilyId
                                                               END,
                                 --TARGET.PimAttributeDefaultValueId = CASE
                                 --                                        WHEN SOURCE.ProductAttributeDefaultValueId = 0
                                 --                                        THEN NULL
                                 --                                        ELSE SOURCE.ProductAttributeDefaultValueId
                                 --                                    END, 
                                 -- ,TARGET.AttributeValue					= SOURCE.AttributeValue
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN INSERT(PimAttributeFamilyId,
                             PimProductId,
                             PimAttributeId,
                             PimAttributeDefaultValueId,
                             --,AttributeValue
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) VALUES
             (CASE
                  WHEN Source.PimAttributeFamilyId = 0
                  THEN @PimDefaultFamily
                  ELSE Source.PimAttributeFamilyId
              END,
              @PimProductId,
              SOURCE.PimAttributeId,
              CASE
                  WHEN SOURCE.ProductAttributeDefaultValueId = 0
                  THEN NULL
                  ELSE SOURCE.ProductAttributeDefaultValueId
              END, 
              --,SOURCE.AttributeValue
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             )
             --WHEN NOT MATCHED BY SOURCE AND TARGET.PimProductId = @PimProductId
             --                               AND Target.PimAttributeFamilyId IS NOT NULL
             --THEN DELETE
             OUTPUT INSERTED.PimAttributeValueId,
                    INSERTED.PimAttributeFamilyId,
                    INSERTED.PimAttributeId
                    INTO @ZnodePimAttributeValue;
        		
		DECLARE @MediaData Table (MediaId INT , PimProductId INT , PimAttributeId INT ,PimAttributeFamilyId INT,LocaleId INT  )
	    
		INSERT INTO @MediaData 
		SELECT SP.Item,a.PimProductId, a.PimAttributeId ,PimAttributeFamilyId,a.LocaleId
		
		FROM #PimProductDetail a 
		INNER JOIN @TBL_MediaAttributeId c ON ( c.PimAttributeId  = a.PimAttributeId )
		CROSS APPLY dbo.split(a.AttributeValue ,',') SP 
				
				 
		INSERT INTO @TBL_MediaAttributeValue (PimAttributeValueId,LocaleId , AttributeValue,MediaId)
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                         zm.Path AttributeValue
						 ,ZM.MediaId
        FROM @ZnodePimAttributeValue AS a
        INNER JOIN  @MediaData AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
				INNER JOIN ZnodeMedia ZM ON ( b.MediaId = ZM.MediaId )
		
		DELETE FROM ZnodePimProductAttributeMedia 
		WHERE EXISTS 
		 (SELECT TOP 1 1 FROM @TBL_MediaAttributeValue TBLM WHERE ZnodePimProductAttributeMedia.PimAttributeValueId = TBLM.PimAttributeValueId 
		 AND TBLM.MediaId <> ZnodePimProductAttributeMedia.MediaId  AND ZnodePimProductAttributeMedia.Localeid = @LocaleId)



		MERGE INTO ZnodePimProductAttributeMedia TARGET 
		USING @TBL_MediaAttributeValue SOURCE 
		ON (        TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
		        AND TARGET.MediaPAth = SOURCE.AttributeValue
                  AND TARGET.LocaleId = SOURCE.LocaleId)
		WHEN MATCHED THEN 
		UPDATE SET
                                 TARGET.MediaPath = SOURCE.AttributeValue,
						   TARGET.MediaId   = SOURCE.MediaId,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN 
		    INSERT(PimAttributeValueId,
                             LocaleId,
                             MediaPath,
							 MediaId ,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) 
			VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
			  SOURCE.MediaId,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
		 --WHEN NOT MATCHED BY SOURCE AND EXISTS 
		 --(SELECT TOP 1 1 FROM @TBL_MediaAttributeValue TBLM WHERE TARGET.PimAttributeValueId = TBLM.PimAttributeValueId AND TBLM.MediaId = TARGET.MediaId  AND TARGET.Localeid = @LocaleId)
		 --  THEN 
		 --DELETE  ;


	   ;With Cte_TextAreaAttributeValue AS 
		 (
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        AttributeValue
        FROM @ZnodePimAttributeValue AS a
        INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_TextAreaAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		
		)
		
		MERGE INTO ZnodePimProductAttributeTextAreaValue TARGET 
		USING Cte_TextAreaAttributeValue SOURCE 
		ON (TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
                AND TARGET.LocaleId = SOURCE.LocaleId)
		WHEN MATCHED THEN 
		UPDATE SET
                                 TARGET.AttributeValue = SOURCE.AttributeValue,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN 
		    INSERT(PimAttributeValueId,
                             LocaleId,
                             AttributeValue,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) 
			VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
		-- SELECT a.PimAttributeValueId,
  --                      b.LocaleId,
  --                      d.PimAttributeDefaultValueId  AttributeValue,b.PimAttributeId
  --      FROM @ZnodePimAttributeValue AS a
  --        INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
  --                                              AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		--INNER JOIN @TBL_DefaultAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		--INNER JOIN ZnodePimAttributeDefaultValue d ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,',') SP WHERE d.PimAttributeId = b.PimAttributeId AND SP.Item = d.AttributeDefaultValueCode))
	



        INSERT INTO @TBL_DefaultAttributeValue (PimAttributeValueId,LocaleId,AttributeValue)  
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        d.PimAttributeDefaultValueId  AttributeValue
        FROM @ZnodePimAttributeValue AS a
          INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_DefaultAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		INNER JOIN ZnodePimAttributeDefaultValue d ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,',') SP WHERE d.PimAttributeId = b.PimAttributeId AND SP.Item = d.AttributeDefaultValueCode))
	
	     -- SELECT * FROM @TBL_DefaultAttributeValue

		--  SELECT * FROM Cte_DefaultAttributeValue
		DELETE FROM ZnodePimProductAttributeDefaultValue 
		WHERE  EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeValue TBLAV WHERE TBLAV.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId 
												AND TBLAV.AttributeValue   <> ZnodePimProductAttributeDefaultValue.PimAttributeDefaultValueId 
												 AND ZnodePimProductAttributeDefaultValue.LocaleId = @LocaleId )

		MERGE INTO ZnodePimProductAttributeDefaultValue TARGET 
		USING @TBL_DefaultAttributeValue SOURCE 
		ON (TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
              AND TARGET.PimAttributeDefaultValueId =  SOURCE.AttributeValue
			    AND TARGET.LocaleId = SOURCE.LocaleId)
		WHEN MATCHED THEN 
		UPDATE SET
                                 TARGET.PimAttributeDefaultValueId = SOURCE.AttributeValue,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN 
		    INSERT(PimAttributeValueId,
                             LocaleId,
                             PimAttributeDefaultValueId,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) 
			VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
			 --WHEN NOT MATCHED BY SOURCE  AND EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeValue TBLAV WHERE TBLAV.PimAttributeValueId = TARGET.PimAttributeValueId 
				--								AND TBLAV.AttributeValue   = TARGET.PimAttributeDefaultValueId  AND TARGET.LocaleId = @LocaleId )
			 --THEN 
			 --DELETE 
			 --;
		
   
			 
		   MERGE INTO ZnodePimAttributeValueLocale TARGET
             USING
             (
                 SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        AttributeValue
                 FROM @ZnodePimAttributeValue AS a
                      INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                             AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
                 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBLDA WHERE TBLDA.PimAttributeId = b.PimAttributeId  )
			     AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_MediaAttributeId TBLMA WHERE TBLMA.PimAttributeId = b.PimAttributeId  )
				 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBLTA WHERE TBLTA.PimAttributeId = b.PimAttributeId  )
			 ) SOURCE
             ON(TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
                AND TARGET.LocaleId = SOURCE.LocaleId)
                 WHEN MATCHED
                 THEN UPDATE SET
                                 TARGET.AttributeValue = SOURCE.AttributeValue,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN INSERT(PimAttributeValueId,
                             LocaleId,
                             AttributeValue,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
             SET @AssociatedProduct =
             (
                 SELECT MAX(AssociatedProducts)
                 FROM #PimProductDetail AS a
             );
             INSERT INTO ZnodePimProductTypeAssociation
             (PimParentProductId,
              PimProductId,
              DisplayOrder,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT @PimProductId,
                           Item,
                           ID AS RowId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM dbo.Split(@AssociatedProduct, ',') AS b
                         INNER JOIN ZNodePimProduct AS q ON(q.PimProductId = b.Item);
             SET @ConfigureAttributeId =
             (
                 SELECT MAX(ConfigureAttributeIds)
                 FROM #PimProductDetail AS a
             );
             SET @ConfigureFamilyId =
             (
                 SELECT MAX(ConfigureFamilyIds)
                 FROM #PimProductDetail AS a
             );
             INSERT INTO [ZnodePimConfigureProductAttribute]
             (PimProductId,
              PimFamilyId,
              PimAttributeId,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT @PimProductId,
                           @ConfigureFamilyId,
                           q.PimAttributeId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM dbo.Split(@ConfigureAttributeId, ',') AS b
                         INNER JOIN ZnodePimAttribute AS q ON(q.PimAttributeId = b.Item)
					WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute RTR  WHERE  RTR.PimProductId = @PimProductId AND RTR.PimAttributeId = q.PimAttributeId);



             IF @IsNotReturnOutput = 0
                 SELECT @PimProductId AS Id,
                        CAST(1 AS BIT) AS Status;
             SET @status = 1;

			 IF @CopyPimProductId > 0 
			 BEGIN 
			   INSERT INTO ZnodePimAttributeValueLocale  (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.AttributeValue,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimAttributeValueLocale ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId

			    INSERT INTO ZnodePimProductAttributeDefaultValue  (PimAttributeValueId,LocaleId,PimAttributeDefaultValueId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.PimAttributeDefaultValueId,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeDefaultValue ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId


			   INSERT INTO ZnodePimProductAttributeTextAreaValue  (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.AttributeValue,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeTextAreaValue ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId
			   			   
			   INSERT INTO ZnodePimProductAttributeMedia  (PimAttributeValueId,LocaleId,MediaPath,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.MediaPath,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeMedia ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId
			   
			 END 

             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdatePimProduct @UserId = '+CAST(@UserId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@CopyPimProductId='+CAST(@CopyPimProductId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdatePimProduct',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO


INSERT INTO znodeGlobalattribute (AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsActive,DisplayOrder,HelpDescription,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT (select AttributeTypeId FROM ZnodeAttributeType WHERE Attributetypename = 'Yes/No'), 'HideeProOrdersFromShopper',0,1,0,500,'Hide ePro Orders from Shopper',2 ,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP  1 1 FROM znodeGlobalattribute WHERE AttributeCode = 'HideeProOrdersFromShopper')

INSERT INTO ZnodeGlobalAttributeLocale (LocaleId,GlobalAttributeId,AttributeName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 1,(select GlobalAttributeId FROM znodeGlobalattribute WHERE AttributeCode = 'HideeProOrdersFromShopper'),'Hide ePro Orders from Shopper',NULL,2 ,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeGlobalAttributeLocale WHERE AttributeName = 'Hide ePro Orders from Shopper' )
GO

INSERT INTO ZnodeGlobalAttributeGroup (GroupCode,DisplayOrder,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'EProSettings',NULL,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeGlobalAttributeGroup WHERE GroupCode = 'EProSettings')

INSERT INTO ZnodeGlobalAttributeGroupLocale (LocaleId,GlobalAttributeGroupId,AttributeGroupName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 1,(select GlobalAttributeGroupId from ZnodeGlobalAttributeGroup where GroupCode = 'EProSettings'), 'ePro Settings',NULL,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROm ZnodeGlobalAttributeGroupLocale WHERE AttributeGroupName = 'ePro Settings')

GO

INSERT INTO ZnodeGlobalAttributeGroupMapper (GlobalAttributeGroupId,GlobalAttributeId,AttributeDisplayOrder,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT (Select GlobalAttributeGroupId from ZnodeGlobalAttributeGroup where GroupCode = 'EProSettings'),(select GlobalAttributeId from znodeGlobalattribute where Attributecode = 'HideeProOrdersFromShopper'),
NULL,2,getdate(),2,getdate()
WHERE NOT EXISTS (select top 1 1 from ZnodeGlobalAttributeGroupMapper where GlobalAttributeGroupId = (select GlobalAttributeGroupId from ZnodeGlobalAttributeGroup where GroupCode = 'EProSettings')
                  AND GlobalAttributeId = (select GlobalAttributeId from znodeGlobalattribute where Attributecode = 'HideeProOrdersFromShopper'))

GO

INSERT INTO ZnodeGlobalGroupEntityMapper (GlobalAttributeGroupId,GlobalEntityId,AttributeGroupDisplayOrder,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT (Select GlobalAttributeGroupId from ZnodeGlobalAttributeGroup where GroupCode = 'EProSettings' ),(select GlobalEntityId from ZnodeGlobalEntity where EntityName = 'Store' ),999,2,getdate(),2,getdate()
WHERE NOT EXISTS (select top 1 1 from ZnodeGlobalGroupEntityMapper where GlobalAttributeGroupId = (select GlobalAttributeGroupId from ZnodeGlobalAttributeGroup where GroupCode = 'EProSettings')
				AND GlobalEntityId = (select GlobalEntityId from ZnodeGlobalEntity where EntityName = 'Store'))

GO


INSERT INTO ZnodeOmsQuoteType (QuoteTypeCode,QuoteTypeName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'PENDING_APPROVAL','PENDING APPROVAL',2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsQuoteType WHERE QuoteTypeCode = 'PENDING_APPROVAL')
GO
INSERT INTO ZnodeOmsQuoteType (QuoteTypeCode,QuoteTypeName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'OAB','OAB',2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsQuoteType WHERE QuoteTypeCode = 'OAB')
GO
INSERT INTO ZnodeOmsQuoteType (QuoteTypeCode,QuoteTypeName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'QUOTE','QUOTE',2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsQuoteType WHERE QuoteTypeCode = 'QUOTE')
GO
INSERT INTO ZnodeOmsQuoteType (QuoteTypeCode,QuoteTypeName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'EPRO','EPRO',2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsQuoteType WHERE QuoteTypeCode = 'EPRO')
GO

UPDATE znodeApplicationsetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimAttributeId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>AttributeCode</name>      <headertext>Attribute Code</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeName</name>      <headertext>Attribute Label</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/PIM/CategoryAttribute/Edit</islinkactionurl>      <islinkparamfield>PimAttributeId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>y</allowdetailview>    </column>    <column>      <id>4</id>      <name>AttributeTypeName</name>      <headertext>Attribute Type</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/PIM/PIMAttribute/Edit</islinkactionurl>      <islinkparamfield>PimAttributeId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>y</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsRequired</name>      <headertext>Is Required</headertext>      <width>10</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>IsLocalizable</name>      <headertext>Is Localizable</headertext>      <width>10</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsSystemDefined</name>      <headertext>Is System Defined</headertext>      <width>10</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/CategoryAttribute/Edit|/PIM/CategoryAttribute/Delete</manageactionurl>      <manageparamfield>PimAttributeId|pimAttributeId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
WHERE ItemName = 'ZnodeCategoryAttribute'

GO

UPDATE znodeApplicationsetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimAttributeGroupId</name>      <headertext>Checkbox</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>GroupCode</name>      <headertext>Group Code</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeGroupName</name>      <headertext>Group Label</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/PIM/CategoryAttributeGroup/Edit</islinkactionurl>      <islinkparamfield>pimAttributeGroupId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>Id</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>y</allowdetailview>    </column>    <column>      <id>4</id>      <name>IsSystemDefined</name>      <headertext>Is System Defined</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>CreatedDate</name>      <headertext>Created Date</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ModifiedDate</name>      <headertext>Modified Date</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/CategoryAttributeGroup/Edit|/PIM/CategoryAttributeGroup/Delete</manageactionurl>      <manageparamfield>pimAttributeGroupId|pimAttributeGroupId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
WHERE ItemName = 'ZnodeCategoryAttributeGroup'

GO

UPDATE znodeApplicationsetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimAttributeFamilyId</name>      <headertext>Checkbox</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>FamilyCode</name>      <headertext>Family Code</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/PIM/CategoryAttributeFamily/Edit</islinkactionurl>      <islinkparamfield>pimAttributeFamilyId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeFamilyName</name>      <headertext>Family Label</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/PIM/CategoryAttributeFamily/Edit</islinkactionurl>      <islinkparamfield>pimAttributeFamilyId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>IsSystemDefined</name>      <headertext>Is System Defined</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsDefaultFamily</name>      <headertext>Is Default Family</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>CreatedDate</name>      <headertext>Created</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ModifiedDate</name>      <headertext>Modified</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/CategoryAttributeFamily/Edit|/PIM/CategoryAttributeFamily/Delete</manageactionurl>      <manageparamfield>pimAttributeFamilyId|pimAttributeFamilyId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
WHERE ItemName = 'ZnodeCategoryAttributeFamily'

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_CopyPortal')
BEGIN 
	DROP PROCEDURE Znode_CopyPortal
END
GO
    
CREATE PROCEDURE [dbo].[Znode_CopyPortal]    
(    
   @PortalId int,     
   @StoreName varchar(500),    
   @CompanyName varchar(500),     
   @UserId int,    
   @StoreCode nvarchar(200),    
   @Status bit OUT)    
AS    
    /*    
     
 Summary: Create copy of existing portal    
 Copy all corresponding data into following list of tables Catalog,Profile,Units,Countries,Shipping,Locale,SMTP    
    
 ZnodeTaxClass ZnodeTaxClassPortal;ZnodeTaxRuleTypes ZnodeCaseRequest,ZnodeUserPortal ZnodeDomain,AspNetZnodeUser ZnodePortalAccount,    
 ZnodePortal ZnodePortalAddress,ZnodePortalCatalog ZnodePortalLocale,ZnodePortalFeatureMapper, ZnodeOmsUsersReferralUrl,ZnodePortalProfile ,ZnodePortalSetting    
 ZnodePortalShippingDetails ZnodePortalSmtpSetting,ZnodePortalWarehouse ,ZnodeOmsCookieMapping,ZnodePortalUnit ,ZnodePromotion,    
 ZnodePriceListPortal ,ZnodeActivityLog,ZnodeShippingPortal,ZnodeGiftCard ,ZnodeCMSContentPages,ZnodePortalDisplaySetting ,ZnodeCMSPortalMessage,    
 ZnodeCMSPortalProductPage ,ZnodeCMSPortalSEOSetting ,ZnodeCMSPortalTheme    
        
 Unit Testing       
    ------------------------------------------------------------------------------    
               
    begin tran    
    DECLARE @Status  bit     
       EXEC Znode_CopyPortal @PortalId =2 ,@StoreName  ='copy OF Maxwells FF' , @CompanyName = 'copy OF Maxwells FF' ,@UserId = 2, @StoreCode = '',@Status = @Status OUT     
       rollback tran    
    select @Status    
       SELECT * FROM dbo.ZnodePortal zp WHERE zp.CompanyName = 'copy OF Maxwells FF'    
       SELECT * FROM ZnodePortalCatalog WHERE dbo.ZnodePortalCatalog.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
       SELECT * FROM ZnodePortalProfile WHERE dbo.ZnodePortalProfile.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
       SELECT * FROM ZnodePortalUnit WHERE dbo.ZnodePortalUnit.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
       SELECT * FROM ZnodePortalCountry WHERE dbo.ZnodePortalCountry.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
       SELECT * FROM ZnodePortalShippingDetails WHERE dbo.ZnodePortalShippingDetails.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
       SELECT * FROM ZnodePortalLocale WHERE dbo.ZnodePortalLocale.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
       SELECT * FROM ZnodePortalSmtpSetting WHERE dbo.ZnodePortalSmtpSetting.PortalId IN (SELECT portalid FROM dbo.ZnodePortal zp  WHERE zp.CompanyName = 'copy OF Maxwells FF')    
          
    ---------------------------------------------------------------------------     
     */    
BEGIN    
 BEGIN TRAN A;    
 BEGIN TRY    
  SET NOCOUNT ON;    
  DECLARE @GetDate DATETIME = dbo.Fn_GetDate();    
  -- hold the newly created pim catalog id     
  DECLARE @NewPortalId int;     
  --Check if store name is not already exist then process copy    
      
      
  IF @StoreCode NOT IN (select  storecode from ZnodePortal )    
  BEGIN    
      
  IF EXISTS ( SELECT TOP 1 1 FROM dbo.ZnodePortal AS zp WHERE PortalId = @PortalId  )     
  AND @CompanyName <> '' AND @StoreName <> '' AND @StoreCode <> '' --AND  @StoreCode <> (select  storecode from ZnodePortal )     
      
  BEGIN    
    
   INSERT INTO dbo.ZnodePortal(    
   --PortalId - this column value is auto-generated    
   CompanyName, StoreName, LogoPath, UseSSL, AdminEmail, SalesEmail, CustomerServiceEmail, SalesPhoneNumber, CustomerServicePhoneNumber, ImageNotAvailablePath, ShowSwatchInCategory, ShowAlternateImageInCategory, ExternalID, MobileLogoPath, DefaultOrderStateID, DefaultReviewStatus, SplashCategoryID, SplashImageFile, MobileTheme,InStockMsg,OutOfStockMsg,BackOrderMsg,CreatedBy, CreatedDate, ModifiedBy, ModifiedDate ,StoreCode)    
   SELECT @CompanyName, @StoreName, LogoPath, UseSSL, AdminEmail, SalesEmail, CustomerServiceEmail, SalesPhoneNumber, CustomerServicePhoneNumber, ImageNotAvailablePath, ShowSwatchInCategory, ShowAlternateImageInCategory, ExternalID, MobileLogoPath, DefaultOrderStateID, DefaultReviewStatus, SplashCategoryID, SplashImageFile, MobileTheme,InStockMsg,OutOfStockMsg,BackOrderMsg, @UserId, @GetDate, @UserId, @GetDate ,@StoreCode    
   FROM ZnodePortal    
   WHERE PortalId = @PortalId;    
   SET @NewPortalId = SCOPE_IDENTITY();    
  END;    
  END    
    
  -- copy all data if New portalId will generate    
  IF @NewPortalId > -0     
  BEGIN    
   INSERT INTO dbo.ZnodePortalCatalog(    
   --PortalCatalogId - this column value is auto-generated    
   PortalId, PublishCatalogId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, PublishCatalogId, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalCatalog    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalProfile(    
   --PortalProfileID - this column value is auto-generated    
   PortalId, ProfileId, IsDefaultAnonymousProfile, IsDefaultRegistedProfile, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, ProfileId, IsDefaultAnonymousProfile, IsDefaultRegistedProfile, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalProfile    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalUnit(    
   --PortalUnitId - this column value is auto-generated    
   PortalId, CurrencyId,CultureId, WeightUnit, DimensionUnit,CurrencySuffix, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, CurrencyId,CultureId, WeightUnit, DimensionUnit,CurrencySuffix, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalUnit    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalCountry(    
   --PortalCountryId - this column value is auto-generated    
   PortalId, CountryCode, IsDefault, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, CountryCode, IsDefault, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalCountry    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodeShippingPortal(    
   --ShippingPortalId - this column value is auto-generated    
   PortalId, ShippingOriginAddress1, ShippingOriginAddress2, ShippingOriginCity, ShippingOriginStateCode, ShippingOriginZipCode, ShippingOriginCountryCode, ShippingOriginPhone, FedExAccountNumber, FedExLTLAccountNumber, FedExMeterNumber, FedExProductionKey, FedExSecurityCode, FedExDropoffType, FedExPackagingType, FedExUseDiscountRate, FedExAddInsurance, UPSUserName, UPSPassword, UPSKey, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, ShippingOriginAddress1, ShippingOriginAddress2, ShippingOriginCity, ShippingOriginStateCode, ShippingOriginZipCode, ShippingOriginCountryCode, ShippingOriginPhone, FedExAccountNumber, FedExLTLAccountNumber, FedExMeterNumber, FedExProductionKey, FedExSecurityCode, FedExDropoffType, FedExPackagingType, FedExUseDiscountRate, FedExAddInsurance, UPSUserName, UPSPassword, UPSKey, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodeShippingPortal    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalLocale(    
   --PortalLocaleId - this column value is auto-generated    
   PortalId, LocaleId, IsDefault, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, LocaleId, IsDefault, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalLocale    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalSmtpSetting(    
   --PortalSmtpSettingId - this column value is auto-generated    
   PortalId, ServerName, UserName, Password, Port, IsEnableSsl, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate,DisableAllEmails )    
       SELECT @NewPortalId, ServerName, UserName, Password, Port, IsEnableSsl, @UserId, @GetDate, @UserId, @GetDate,DisableAllEmails    
 FROM ZnodePortalSmtpSetting    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalDisplaySetting(    
   --PortalDisplaySettingsId - this column value is auto-generated    
   PortalId, MediaId, MaxDisplayItems, MaxSmallThumbnailWidth, MaxSmallWidth, MaxMediumWidth, MaxThumbnailWidth, MaxLargeWidth, MaxCrossSellWidth, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, MediaId, MaxDisplayItems, MaxSmallThumbnailWidth, MaxSmallWidth, MaxMediumWidth, MaxThumbnailWidth, MaxLargeWidth, MaxCrossSellWidth, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalDisplaySetting    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodeCMSPortalTheme(    
   --CMSPortalThemeId - this column value is auto-generated    
   PortalId, CMSThemeId, CMSThemeCSSId, MediaId, WebsiteTitle, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, CMSThemeId, CMSThemeCSSId, MediaId, WebsiteTitle, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodeCMSPortalTheme    
       WHERE PortalId = @PortalId;    
   INSERT INTO dbo.ZnodePortalFeatureMapper(    
   --PortalFeatureMapperId - this column value is auto-generated    
   PortalId, PortalFeatureId, PortalFeatureMapperValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )    
       SELECT @NewPortalId, PortalFeatureId, PortalFeatureMapperValue, @UserId, @GetDate, @UserId, @GetDate    
       FROM ZnodePortalFeatureMapper    
       WHERE PortalId = @PortalId;    
       
      EXEC Znode_CopyPortalMessageAndContentPages @PortalId,@NewPortalId,@userId,0    
          
   EXEC Znode_CopyPortalEmailTemplate @NewPortalId,@PortalId,@userId    
   -- If copy process will complete successfully then return status 1     
   -- return the data set if     
   SELECT @PortalId AS ID, CAST(1 AS bit) AS [Status];     
   SET @Status = CAST(1 AS bit);    
   COMMIT TRAN A;    
  END;    
  ELSE    
  BEGIN    
   -- If copy process will not complete successfully then return status 0     
   SELECT @PortalId AS ID, CAST(0 AS bit) AS [Status];    
   SET @Status = CAST(0 AS bit);    
   ROLLBACK TRAN A;    
  END;    
 END TRY    
 BEGIN CATCH     
   select ERROR_MESSAGE()    
       SET @Status = 0;    
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_CopyPortal @PortalId = '+CAST(@PortalId AS VARCHAR(200))+',@StoreName='+@StoreName+',@CompanyName='+@CompanyName+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));    
                      
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                        
        
             EXEC Znode_InsertProcedureErrorLog    
    @ProcedureName = 'Znode_CopyPortal',    
    @ErrorInProcedure = @Error_procedure,    
    @ErrorMessage = @ErrorMessage,    
    @ErrorLine = @ErrorLine,    
    @ErrorCall = @ErrorCall;    
 END CATCH;    
END;
GO
IF NOT EXISTS (SELECT TOP 1 1 FROM ZnodeMenu WHERE MenuName ='Advance Report')
BEGIN 
INSERT INTO ZnodeMenu
(ParentMenuId,MenuName,MenuSequence,AreaName,ControllerName,ActionName,CSSClassName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT NULL,'Advance Report',NULL,NULL,'DevExpressReport','Index','z-devexpress-report',1,2,'2018-11-06 00:00:00.000',2,'2018-11-06 00:00:00.000'

END

GO

UPDATE ZnodeMenu
SET MenuName = 'Advanced Report'
WHERE MenuName = 'Advance Report' AND ControllerName = 'DevExpressReport'

GO

UPDATE ZnodeMenu
SET ParentMenuId = (SELECT TOP 1 MenuId FROM ZnodeMenu WHERE MenuName = 'Reports' AND ControllerName = 'MyReports' AND IsActive = 1)
WHERE MenuName = 'Advanced Report' AND ControllerName = 'DevExpressReport'

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetAbandonedCart')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetAbandonedCart
END
GO
CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetAbandonedCart]  
(
 @BeginDate    DATETIME        ,  
 @EndDate      DATETIME       ,  
 @StoreName   NVARCHAR(max) = '',  
 @ShowOnlyRegisteredUsers BIT = 1   
 
 )  
AS   
/*  
     Summary :- This Procedure is used to get frequently Appear users    
     Unit Testing   
     EXEC ZnodeDevExpressReport_GetAbandonedCart @BeginDate = '2018/11/30',@EndDate= '2018/12/20'  
	a.ModifiedDate,a.CreatedDate,
*/  
     BEGIN  
         BEGIN TRY  
         DECLARE @SQL NVARCHAR(MAX)  
         DECLARE @GetDate DATETIME = dbo.Fn_GetDate()
   DECLARE @TBL_ReportOrderDetails TABLE (OmsSavedCartId INT ,Quantity NUMERIC(28,6) 
   , CartCreatedAt datetime,CartUpdatedAt datetime,CustomerName VARCHAR(300),StoreName nvarchar(max),Email  VARCHAR(50),
   CustomerType  VARCHAR(50), SKU nvarchar(4000),PortalId INT
   );  
  
   DECLARE @TBL_PortalId TABLE (PortalId INT );  
   INSERT INTO @TBL_PortalId  
   SELECT PortalId   
   FROM ZnodePortal ZP   
   INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)  
  
   INSERT INTO @TBL_ReportOrderDetails  
   select DISTINCT a.OmsSavedCartId,sum(Quantity) as Quantity,MAX(b.CreatedDate) AS CartCreatedAt,  
   MAX(b.ModifiedDate) as CartUpdatedAt, CASE WHEN REPLACE(ISNULL(FirstName,'')+' '+ISNULL(LastName,''),' ','') = ''   
   THEN f.UserName ELSE ISNULL(FirstName,'')+' '+ISNULL(LastName,'') END  CustomerName , p.StoreName ,d.Email AS Email
   ,CASE WHEN  d.AspNetUserId IS NULL THEN 'GuestUser' ELSE 'Registered User' END  CustomerType, b.SKU, p.PortalId
   from ZnodeOmsSavedCart a  
   INNER JOIN ZnodeOmsSavedCartLineItem b on a.OmsSavedCartId = b.OmsSavedCartId  
   INNER JOIN ZnodeOmsCookieMapping c on a.OmsCookieMappingId = c.OmsCookieMappingId  
   INNER JOIN ZnodePortal p on c.PortalId = p.PortalId  
   LEFT JOIN ZnodeUser d on c.UserId = d.UserId  
   LEFT JOIN AspNetUsers e on d.AspNetUserId = e.Id  
   LEFT JOIN AspNetZnodeUser f on f.AspNetZnodeUserId = e.UserName  
   WHERE 
    (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = p.PortalId)
				      OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId )) 
	AND ((@ShowOnlyRegisteredUsers = 1 and d.AspNetUserId  IS NOT NULL) or (@ShowOnlyRegisteredUsers <> 1 ))
	AND CAST(b.ModifiedDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
   group by a.OmsSavedCartId,f.UserName, p.StoreName,FirstName, LastName  ,d.Email,d.AspNetUserId,b.SKU,p.PortalId
       
	DECLARE @skuuu SelectColumnList, @PortalId TransferId
  
    INSERT INTO @skuuu
	SELECT SKU FROM @TBL_ReportOrderDetails

	INSERT INTO @PortalId
	SELECT DISTINCT PortalId FROM @TBL_ReportOrderDetails
	
	DECLARE @TBL_ProductPricing TABLE (SKU VARCHAR(1000),RetailPrice VARCHAR(1000) );
		 
	INSERT INTO @TBL_ProductPricing (SKU,RetailPrice)
	EXEC Znode_GetAbandonedProductPricingBySku  @skuuu, @PortalId, @GetDate
	 
  
   SELECT  A.OmsSavedCartId,COUNT(*) Products,MAx(CartCreatedAt) CartCreatedAt,MAX(CartUpdatedAt) CartUpdatedAt,CustomerName,StoreName,Email ,
   CustomerType , SUM(B.RetailPrice * Quantity) AS SubTotal , SUM(Quantity) Quantity
   FROM @TBL_ReportOrderDetails  A
   INNER JOIN @TBL_ProductPricing B ON (A.SKU = B.SKU)
   GROUP BY A.OmsSavedCartId,CustomerName,StoreName,Email ,
   CustomerType
   ORDER BY StoreName DESC,CartUpdatedAt DESC,CustomerName DESC  
                    
         END TRY  
         BEGIN CATCH  
		
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeDevExpressReport_GetAbandonedCart @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeDevExpressReport_GetAbandonedCart',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetOrderDetails')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetOrderDetails
END
GO
CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetOrderDetails]
(   
	@BeginDate      DATETIME         ,
    @EndDate        DATETIME         ,
    @StoreName      NVARCHAR(max) = '',
	@OrderStatus    NVARCHAR(MAX) = ''
	)
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeDevExpressReport_GetOrderDetails @BeginDate = '2018-10-13 14:29:34.513', @EndDate = '2018-10-13 14:29:34.513',@OrderStatus = 'Failed|Success'
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;

		 IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		DECLARE @SQL NVARCHAR(MAX)
        DECLARE @DateFormateId int 
	    SET @DateFormateId  = DBO.Fn_GetReportDateTimeFormat();
		DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
		
		DECLARE @TBL_PortalId TABLE (PortalId INT );
		INSERT INTO @TBL_PortalId
		SELECT PortalId 
		FROM ZnodePortal ZP 
		INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

		SELECT DISTINCT
		ZOO.OrderNumber,ZOO.[OmsOrderID],ZOOD.[PortalId],ZOOD.[UserId],ZOOD.[OmsOrderStateId],ZOOD.[ShippingID],ZOOD.[PaymentTypeId],ZOOD.[BillingFirstName],ZOOD.[BillingLastName],
        ZOOD.[BillingCompanyName], ZOOD.[BillingStreet1],ZOOD.[BillingStreet2], ZOOD.[BillingCity],ZOOD.[BillingStateCode],ZOOD.[BillingPostalCode],ZOOD.[BillingCountry], ZOOD.[BillingPhoneNumber],ZOOD.[BillingEmailId],
		SUBSTRING(CAST(ZOOD.[TaxCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[TaxCost] AS VARCHAR(100)))+@RoundOffValue) as TaxCost,
		SUBSTRING(CAST(ZOOD.[ShippingCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[ShippingCost] AS VARCHAR(100)))+@RoundOffValue) as [ShippingCost],
		SUBSTRING(CAST(ZOOD.[SubTotal] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[SubTotal] AS VARCHAR(100)))+@RoundOffValue) as [SubTotal],
		SUBSTRING(CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)))+@RoundOffValue) as [DiscountAmount],
		SUBSTRING(CAST(ZOOD.[Total] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[Total] AS VARCHAR(100)))+@RoundOffValue) as [TotalAmount],
        CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
        ZOOD.[ShippingNumber],
		ZOOD.[TrackingNumber],
		ZOOD.[CouponCode],
		ZOOD.[PromoDescription],
		ZOOD.[ReferralUserId],
		ZOOD.[PurchaseOrderNumber],
		ZOOD.[OmsPaymentStateId],
        ZOOD.[WebServiceDownloadDate],
		ZOOD.[PaymentSettingID],
		ZOOD.[ShipDate],
		ZOOD.[ReturnDate],
		ZOTOD.[SalesTax],ZOTOD.[VAT],ZOTOD.[GST],ZOTOD.[PST],ZOTOD.[HST],
        P.[StoreName] AS 'StoreName',
		OS.[OrderStateName] AS 'OrderStatus',
		ZOOD.PaymentDisplayName AS 'PaymentTypeName',
		ST.[Name] AS 'ShippingTypeName' ,
		CASE WHEN REPLACE(ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,''),' ','') = '' THEN APZ.UserName ELSE ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,'') END  CustomerName ,
		ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
		,ZA.CityName AS 'ShippingCity',
		ZA.StateName AS 'ShippingState',
		ZA.CountryName AS 'ShippingCountry'
		INTO #TBL_OMSOrder
		FROM ZNodeOmsOrder ZOO 
        INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1) 
		INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
        LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
        LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                            (  SELECT TOP 1 1 FROM ZnodeOmsOrderLineItems ZOOLI WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId ))
        LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)
        LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
        LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
        LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
		LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode  = ZOOD.CultureCode )
		LEFT JOIN ZnodeUserAddress ZSP ON (ZSP.UserId = ZOOD.UserId)
		LEFT JOIN ZnodeAddress ZA ON (ZA.AddressId = ZSP.AddressId)
		LEFT JOIN ZnodeUser  ZU ON (ZU.UserId = ZOOD.UserId )
		LEFT JOIN AspNetUsers AP ON (AP.Id = ZU.AspNetUserId)
		LEFT JOIN AspNetZnodeUser APZ ON (APZ.AspNetZnodeUserId = AP.UserName)
        WHERE CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
		AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))
		AND EXISTS (SELECT TOP 1 1 FROM dbo.split(@OrderStatus,'|') SP WHERE SP.Item = OS.OrderStateName)
		
		SELECT OrderNumber,OmsOrderID,PortalId ,UserId,OmsOrderStateId,ShippingID,PaymentTypeId,BillingFirstName,BillingLastName,
		BillingCompanyName,BillingStreet1,BillingStreet2, BillingCity,BillingStateCode,BillingPostalCode,BillingCountry,BillingPhoneNumber,BillingEmailId,
		CAST(tbl.TaxCost AS NUMERIC(28,6)) TaxCost,CAST(ShippingCost AS NUMERIC(28,6)) ShippingCost,
		CAST(SubTotal AS NUMERIC(28,6)) SubTotal,CAST(DiscountAmount AS NUMERIC(28,6)) DiscountAmount,CAST(TotalAmount AS NUMERIC(28,6)) TotalAmount,OrderDate,ShippingNumber,TrackingNumber,CouponCode,PromoDescription,ReferralUserId,PurchaseOrderNumber,OmsPaymentStateId,
        WebServiceDownloadDate,PaymentSettingID,ShipDate,ReturnDate, SalesTax,VAT,GST,PST,HST,StoreName,OrderStatus,PaymentTypeName,ShippingTypeName,CustomerName,Symbol 
		,ShippingCity,ShippingCountry,ShippingState
		FROM #TBL_OMSOrder tbl
			
		IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetPopularProductFiltered')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetPopularProductFiltered
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetPopularProductFiltered](
      @BeginDate   DATETIME          ,
      @EndDate     DATETIME          ,
      @StoreName   NVARCHAR(max) = '',
	  @ShowAllProducts BIT = 1,  
	  @TopProducts INT = 10 
	  )
AS 
/*
     Sumarry : - This Procedure is used to find the Popular products filtered 
     Unit Testing 
     EXEC ZnodeDevExpressReport_GetPopularProductFiltered @BeginDate = '2018/01/01',@EndDate= '2018/12/12'   
	*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
          DECLARE @SQL NVARCHAR(MAX)
		  DECLARE @PageNo int = 1; 
		  DECLARE @TBL_PortalId TABLE (PortalId INT );
		  DECLARE @TBL_ReportPopularProduct TABLE (PortalId INT,StoreName NVARCHAR(MAX),SKU NVARCHAR(MAX),ProductName  NVARCHAR(MAX),QuantityOrdered NUMERIC(28,6)
		  ,UnitOfMeasurement nvarchar(20)
		  )--,  TotalAmtSold NUMERIC(28,6))

		  IF OBJECT_ID('TEMPDB..#PopularProduct') IS NOT NULL
			    DROP TABLE #PopularProduct	 

			INSERT INTO @TBL_PortalId
			SELECT PortalId 
			FROM ZnodePortal ZP 
			INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

			SELECT SKU,ProductName,UOM, LOcaleId
					INTO #PopularProduct
					FROM --CTE_ProductDetail
					(
					SELECT  c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId
					FROM znodePimProduct c 
					 INNER JOIN ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
					 INNER JOIN ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
					 INNER JOIN ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
					WHERE  AttributeCode IN ('SKU','ProductName')
					UNION ALL

					SELECT a.PimProductId, c.AttributeCode,ZPADV.AttributeDefaultValueCode,ZPPADV.LocaleId
					FROM ZnodePimProductAttributeDefaultValue ZPPADV
					INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
					INNER JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
					INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId  )
					WHERE AttributeCode IN ('UOM')
					) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,UOM))AS PVT


			INSERT INTO @TBL_ReportPopularProduct
			    SELECT  ZOOD.PortalId,ZP.StoreName AS 'StoreName' , ZOOLI.SKU , ZOOLI.ProductName , SUM(ZOOLI.Quantity) AS 'QuantityOrdered'
				,PP.UOM UnitOfMeasurement 
			    --,SUM(ZOOLI.Quantity) * ZOOLI.Price AS TotalAmtSold
                      FROM ZnodeOmsOrder AS ZOO INNER JOIN ZnodeOmsOrderDetails AS ZOOD ON ( ZOOD.OmsOrderId = ZOO.OmsOrderId )
                                                INNER JOIN ZnodeOmsOrderLineItems AS ZOOLI ON (Zood.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId)
												INNER JOIN #PopularProduct PP ON (PP.SKU = ZOOLI.Sku)
                                                INNER JOIN ZnodePortal AS ZP ON (Zp.PortalID = ZOOD.PortalId)
                                                
                      WHERE  CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
					  AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				      OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))                         
                      GROUP BY ZP.StoreName , ZOOLI.SKU , ZOOLI.ProductName , ZOOD.PortalId	,PP.UOM
                      HAVING SUM(ZOOLI.Quantity) > 0 
					 
				SET @TopProducts = CASE WHEN @ShowAllProducts = 1 THEN (SELECT COUNT(1) FROM @TBL_ReportPopularProduct ) ELSE @TopProducts END 


					Select TOP (@TopProducts)  SKU , ProductName ,StoreName ,QuantityOrdered,UnitOfMeasurement--,TotalAmtSold    
					from @TBL_ReportPopularProduct  
					ORder by StoreName ASC, CAST (QuantityOrdered AS Numeric) DESC, ProductName ASC

					--IF (CAST(@ShowAllProducts AS NVARCHAR(10))) =0 
					--BEGIN  
					--Select top (@TopProducts) StoreName , SKU , ProductName ,QtySold--, TotalAmtSold 
					--from @TBL_ReportPopularProduct  
					--ORder by CAST (QtySold AS INT) DESC  
					--END  
					--ELSE  
					--BEGIN  
					--Select StoreName , SKU , ProductName ,QtySold--,TotalAmtSold   
					--from @TBL_ReportPopularProduct  ORder by CAST (QtySold AS INT) DESC  
					--END 
			   
			     IF OBJECT_ID('TEMPDB..#PopularProduct') IS NOT NULL
			    DROP TABLE #PopularProduct	

         END TRY

         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetPopularProductFiltered @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetPopularProductFiltered',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetTopOrderingcustomers')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetTopOrderingcustomers
END
GO
CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetTopOrderingcustomers]  
(   
	 @BeginDate			DATETIME ,  
	 @EndDate			DATETIME ,   
	 @StoreName			NVARCHAR(max) = '',  
	 @ShowAllCustomers  BIT = 0,  
	 @TopCustomers		INT = 100 
 )  
AS   
/*  
     Summary :- This Procedure is used to get frequently Appear users    
     Unit Testing   
     EXEC ZnodeDevExpressReport_GetTopOrderingcustomers @BeginDate = '2018-10-13 14:29:34.513', @EndDate = '2018-10-13 14:29:34.513'  
  
     exec ZnodeDevExpressReport_GetTopOrderingcustomers_bak '2018/01/01','2018/12/12'  
*/   
BEGIN  
  BEGIN TRY  
   DECLARE @TBL_ReportOrderUser TABLE (OrderCount INT, UserId     INT, PortalId   INT ,Total NUMERIC(28,8),Symbol  VARCHAR(100)  );  
   DECLARE @TBL_PortalId TABLE (PortalId INT );
    INSERT INTO @TBL_PortalId
	SELECT PortalId 
	FROM ZnodePortal ZP 
	INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName) 
			
	INSERT INTO @TBL_ReportOrderUser (OrderCount, UserId,PortalId)                     
    SELECT COUNT(ZOOD.OmsOrderId) OrderCount, UserId, PortalId
	FROM ZnodeOmsOrderDetails ZOOD 
	INNER JOIN ZnodeOmsOrderState ZOOS ON (ZOOD.OmsOrderStateId = ZOOS.OmsOrderStateId) 
	WHERE ZOOD.IsActive = 1   
	AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))   
    AND CAST(OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate 
	AND ZOOS.OrderStateName NOT IN ('CANCELLED','RETURNED','REJECTED','FAILED')		               
    GROUP BY UserId,PortalId;  
	
	SET @TopCustomers = CASE WHEN @ShowAllCustomers = 1 THEN (SELECT COUNT(1) FROM @TBL_ReportOrderUser ) ELSE @TopCustomers END 

    SELECT TOP (@TopCustomers) TBL.UserID , CASE WHEN REPLACE(ISNULL(FirstName,'')+' '+ISNULL(LastName,''),' ','') = '' THEN APZ.UserName ELSE ISNULL(FirstName,'')+' '+ISNULL(LastName,'') END  CustomerName 
				, StoreName , OrderCount , --dbo.Fn_GetDefaultPriceRoundOffReturnNumeric(Total) Total, Symbol,
				ZU.Email, CASE WHEN  ZU.AspNetUserId IS NULL THEN 'Guest User' ELSE 'Registered User' END  CustomerType  
	FROM @TBL_ReportOrderUser TBL
	INNER JOIN ZnodePortal ZP ON (ZP.portalId = TBL.PortalId )
	LEFT JOIN ZnodeUser  ZU ON (ZU.UserId = TBL.UserId )
	LEFT JOIN AspNetUsers AP ON (AP.Id = ZU.AspNetUserId)
	LEFT JOIN AspNetZnodeUser APZ ON (APZ.AspNetZnodeUserId = AP.UserName)
	ORDER BY StoreName ASC ,OrderCount DESC,CustomerName ASC ,Email ASC 

	END TRY  
    BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetFrequentUsers @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetFrequentUsers',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetTopSpendingCustomers')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetTopSpendingCustomers
END
GO
CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetTopSpendingCustomers]
(   @BeginDate    DATETIME        ,
	@EndDate      DATETIME       ,
	@StoreName    NVARCHAR(max) = '',
	@ShowAllCustomers BIT = 1,  
    @TopCustomers INT = 100 ,
	@AmountGreaterThan NVARCHAR(50) = 0 
	)
AS 
/*
     Summary :- This Procedure is used to get frequently Appear users  
     Unit Testing 
     EXEC ZnodeDevExpressReport_GetTopSpendingCustomers_bak @BeginDate = '2018/01/01',@EndDate= '2018/12/12'  , @AmountGreaterThan = '40'
*/
     BEGIN
	 BEGIN TRY
         DECLARE @TBL_ReportOrderUser TABLE (OrderCount INT, UserId     INT, PortalId   INT ,Total NUMERIC(28,6),Symbol  VARCHAR(100),
		 TotalShippingCost NUMERIC(28,6),TotalTaxCost NUMERIC(28,6),SubTotalAmount  NUMERIC(28,6) );  
         DECLARE @TBL_PortalId TABLE (PortalId INT );
		 INSERT INTO @TBL_PortalId
		 SELECT PortalId 
		 FROM ZnodePortal ZP 
		 INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName) 
	
	INSERT INTO @TBL_ReportOrderUser (OrderCount, UserId,PortalId,Total,Symbol,TotalShippingCost,TotalTaxCost,SubTotalAmount)                     
    SELECT COUNT(ZOOD.OmsOrderId) OrderCount, UserId, PortalId, SUM(Total)  Total, ZC.Symbol, SUM(ShippingCost) AS TotalShippingCost,
	Sum(TaxCost) AS TotalTaxCost, SUM(SubTotal) AS SubTotalAmount
	FROM ZnodeOmsOrderDetails ZOOD  
	INNER JOIN ZnodeCulture ZC ON (ZC.CultureCode  = ZOOD.CultureCode )
	INNER JOIN ZnodeOmsOrderState ZOOS ON (ZOOD.OmsOrderStateId = ZOOS.OmsOrderStateId)  
	WHERE ZOOD.IsActive = 1   
	AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))   
    AND CAST(OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate 
	AND ZOOS.OrderStateName NOT IN ('CANCELLED','RETURNED','REJECTED','FAILED')				               
    GROUP BY UserId,PortalId,ZC.Symbol
	HAVING SUM(Total)  >= CAST(@AmountGreaterThan AS NUMERIC(28,6))  
	;  
	
	SET @TopCustomers = CASE WHEN @ShowAllCustomers = 1 THEN (SELECT COUNT(1) FROM @TBL_ReportOrderUser ) ELSE @TopCustomers END 

    SELECT TOP (@TopCustomers) TBL.UserID , CASE WHEN REPLACE(ISNULL(FirstName,'')+' '+ISNULL(LastName,''),' ','') = '' THEN APZ.UserName ELSE ISNULL(FirstName,'')+' '+ISNULL(LastName,'') END  CustomerName 
				, StoreName , OrderCount ,dbo.Fn_GetDefaultPriceRoundOffReturnNumeric(Total) TotalAmount, Symbol,ZU.Email, CASE WHEN  ZU.AspNetUserId IS NULL THEN 'GuestUser' ELSE 'Registered User' END  CustomerType  
				,dbo.Fn_GetDefaultPriceRoundOffReturnNumeric(Total/OrderCount)  AverageTotalAmount,TotalShippingCost,TotalTaxCost,SubTotalAmount
	FROM @TBL_ReportOrderUser TBL
	INNER JOIN ZnodePortal ZP ON (ZP.portalId = TBL.PortalId )
	LEFT JOIN ZnodeUser  ZU ON (ZU.UserId = TBL.UserId )
	LEFT JOIN AspNetUsers AP ON (AP.Id = ZU.AspNetUserId)
	LEFT JOIN AspNetZnodeUser APZ ON (APZ.AspNetZnodeUserId = AP.UserName)
	ORDER BY StoreName ASC,TotalAmount DESC ,CustomerName ASC
                 
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetTopSpendingCustomers @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetTopSpendingCustomers',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetUserList')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetUserList
END
GO
CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetUserList]
(   @BeginDate   DATETIME          = NULL,
    @EndDate     DATETIME          = NULL,
	@StoreName   NVARCHAR(Max) = '',
	@CustomerStatus NVARCHAR(100)
	)
AS 
/*
     Summary :- This Procedure is used in user report for fetting the user details
     Unit Testing
     Exec [ZnodeDevExpressReport_GetUserList] @CustomerStatus = 1,@BeginDate= '2018-11-16 11:58:56.667',@EndDate= '2018-11-19 10:47:06.120'
*/	 
     BEGIN
         BEGIN TRY 
			SET NOCOUNT ON
			DECLARE @SQL NVARCHAR(MAX)
			DECLARE @TBL_PortalId TABLE (PortalId INT )
			DECLARE @TBL_UserReport TABLE ([RegistrationDate] DATETIME,UserId INT,CustomerName NVARCHAR(500),Email NVARCHAR(50),
			StoreName NVARCHAR(MAX),StoreCount INT,ProfileName NVARCHAR(200),PortalId INT, LockoutEndDateUtc datetime  )

			INSERT INTO @TBL_PortalId
			SELECT PortalId 
			FROM ZnodePortal ZP 
			INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

			INSERT INTO @TBL_UserReport
			SELECT DISTINCT  CONVERT(datetime, ZUP.CreatedDate) AS [RegistrationDate],   zu.UserId,ZU.FirstName + ' ' + ZU.LastName AS CustomerName,
			zu.Email,Zp.StoreName,COUNT(Zp.StoreName) as StoreCount,
			SUBSTRING( ( SELECT ','+ISNULL(zp.ProfileName, '') FROM dbo.ZnodeUserProfile zup
			INNER JOIN dbo.ZnodeProfile zp ON zup.ProfileId = zp.ProfileId AND zup.UserId = zu.userID
			ORDER BY zp.ProfileName FOR XML PATH('') ), 2, 4000) ProfileName,ZP.PortalId, AU.LockoutEndDateUtc
			FROM dbo.ZnodeUser zu
			INNER JOIN AspNetUsers AU ON(AU.Id = Zu.AspNetUserId)
			INNER JOIN ZnodeUserPortal AUP ON(AUP.UserId = ZU.UserId)
			INNER JOIN dbo.ZnodeUserProfile zup ON zu.UserId = zup.UserId
			INNER JOIN dbo.ZnodePortalProfile zpp ON zup.ProfileId = zpp.ProfileId
			INNER JOIN dbo.ZnodePortal ZP ON(ZP.PortalId = zpp.PortalId AND Zp.PortalId = AUP.PortalId)
			WHERE CAST(zu.CreatedDate AS DATETIME) BETWEEN @BeginDate AND @EndDate	
			AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = AUP.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))		
			group by zu.UserId,ZU.FirstName,ZU.LastName,zu.Email,ZP.PortalId,Zp.StoreName,ZUP.CreatedDate,AU.LockoutEndDateUtc
                      
				
				  IF @CustomerStatus IN (1) 
				  BEGIN
				  SELECT DISTINCT UserId,CustomerName, Email, StoreName,StoreCount, [RegistrationDate],'Active' AS CustomerStatus
				  FROM @TBL_UserReport
				  WHERE LockoutEndDateUtc IS NULL
				  ORDER BY StoreName,CustomerName
				  END 
				  ELSE IF @CustomerStatus IN (0)
				  BEGIN
				  SELECT DISTINCT UserId,CustomerName, Email, StoreName,StoreCount, [RegistrationDate],'InActive' AS CustomerStatus
				  FROM @TBL_UserReport
				  WHERE LockoutEndDateUtc IS NOT NULL
				  ORDER BY StoreName,CustomerName
				  END
				  ELSE 
				  BEGIN
				  SELECT DISTINCT UserId,CustomerName, Email, StoreName,StoreCount, [RegistrationDate],
				  CASE WHEN LockoutEndDateUtc IS NULL THEN 'Active' ELSE  'InActive' END AS CustomerStatus
				  FROM @TBL_UserReport
				  ORDER BY StoreName,CustomerName
				  END  
				  
		
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetUserList @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetUserList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
	IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_LowInventoryProduct')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_LowInventoryProduct
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_LowInventoryProduct]
(   
	@WarehouseName NVARCHAR(max) = '',
	@StoreName NVARCHAR(Max) = '',
	@ShowOnlyActiveProducts BIT = 0 
)
AS 
/*
     Summary :- THis Procedure is used to find the ReOrder level of order 
     Unit Testing
     EXEC ZnodeDevExpressReport_LowInventoryProduct   1
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultValue('Locale');
             DECLARE @TBL_PortalWarehouse TABLE (PortalId INT , WarehouseId INT,WarehouseName VARCHAR(100) )
			 DECLARE @TBL_PortalId TABLE (PortalId INT )
		     DECLARE @TBL_WarehouseId TABLE (WarehouseId INT )
					
			IF OBJECT_ID('TEMPDB..#ProductDetailInventory') IS NOT NULL
			    DROP TABLE #ProductDetailInventory	 

			  INSERT INTO @TBL_PortalId
			  SELECT PortalId 
			  FROM ZnodePortal ZP 
			  INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName) 
			
			  INSERT INTO @TBL_WarehouseId
			  SELECT WarehouseId
			  FROM ZnodeWarehouse ZW
			  INNER JOIN dbo.split(@WarehouseName,'|') SP ON (SP.Item = ZW.WarehouseName)
			

				;With Cte_WareHouse AS 
				(  
				SELECT WarehouseId ,PortalId,ZPW.PortalWarehouseId
				FROM ZnodePortalWarehouse ZPW 
				WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZPW.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))  
				)	
				, Cte_AlternetPortal AS 
				( 
				SELECT ZPAW.WarehouseId,CTW.PortalId
				FROM ZnodePortalAlternateWarehouse ZPAW 
				INNER JOIN Cte_WareHouse CTW ON (CTW.PortalWarehouseId = ZPAW.PortalWarehouseId)  
				)
				
				INSERT INTO @TBL_PortalWarehouse(portalId , WarehouseId )
				SELECT portalId , WarehouseId 
				FROM Cte_WareHouse ZPW
				WHERE  (EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId rt WHERE rt.WarehouseId = ZPW.WarehouseId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId ))  
				UNION 
				SELECT portalId , WarehouseId 
				FROM Cte_AlternetPortal ZPWP
				WHERE  (EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId rt WHERE rt.WarehouseId = ZPWP.WarehouseId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId ))  

		        UPDATE  TBPW
				SET WarehouseName = a.WarehouseName
				FROM @TBL_PortalWarehouse TBPW
				INNER JOIN  ZnodeWarehouse a  ON (a.WarehouseId = TBPW.WarehouseId )
				  
				
					SELECT SKU,ProductName,IsActive,UOM, LOcaleId
					INTO #ProductDetailInventory
					FROM 
					(
					SELECT  c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId
					FROM znodePimProduct c 
					 INNER JOIN ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
					 INNER JOIN ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
					 INNER JOIN ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
					WHERE  AttributeCode IN ('SKU','ProductName','IsActive')
					UNION ALL

					SELECT a.PimProductId, c.AttributeCode,ZPADV.AttributeDefaultValueCode,ZPPADV.LocaleId
					FROM ZnodePimProductAttributeDefaultValue ZPPADV
					INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
					INNER JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
					INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId  )
					WHERE AttributeCode IN ('UOM')
					) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,IsActive,UOM))AS PVT
		

		       SELECT  ZPPD.SKU,dbo.Fn_GetDefaultInventoryRoundOff(ZI.Quantity)  Quantity,dbo.Fn_GetDefaultInventoryRoundOff(ZI.Reorderlevel ) ReOrderLevel,
						ZPPD.ProductName    ,TBPW.WarehouseName ,
						CASE WHEN ZPPD.IsActive = 'true' Then 'Active' ELSE 'Inactive' END AS [ProductStatus],
						ZPPD.UOM UnitOfMeasurement
				FROM ZnodeInventory ZI
				INNER JOIN #ProductDetailInventory ZPPD ON(ZPPD.SKu = ZI.SkU AND ZPPD.LOcaleId = @DefaultLocaleId)
				INNER JOIN @TBL_PortalWarehouse TBPW ON (TBPW.WarehouseId = ZI.WarehouseId)
				INNER JOIN ZnodePortal ZP ON (ZP.PortalId = TBPW.PortalId)
				WHERE ZI.Reorderlevel IS NOT NULL 
				AND ZI.Quantity <= ZI.Reorderlevel 
				AND ZPPD.IsActive = CASE WHEN @ShowOnlyActiveProducts = 1 THEN  'true' ELSE ZPPD.IsActive END
				GROUP BY  ZPPD.SKU  ,ZI.Quantity,ZI.Reorderlevel,ZPPD.ProductName ,TBPW.WarehouseName ,ZPPD.IsActive,ZPPD.UOM
                ORDER BY TBPW.WarehouseName,  ZI.Quantity, ZPPD.ProductName ASC


				--SELECT  ZI.SKU,dbo.Fn_GetDefaultInventoryRoundOff(ZI.Quantity)  Quantity,dbo.Fn_GetDefaultInventoryRoundOff(ZI.Reorderlevel ) ReOrderLevel,
				--		ZPPD.ProductName    ,TBPW.WarehouseName ,ZPPD.IsActive AS [Product Status],@DefaultDisplayUnit UnitOfMeasurement--,ZP.StoreName --,TBPW.PortalId
				--FROM ZnodeInventory ZI
				--INNER JOIN ZnodePublishProductDetail ZPPD ON(ZPPD.SKu = ZI.SkU AND ZPPD.LOcaleId = @DefaultLocaleId)
				--INNER JOIN @TBL_PortalWarehouse TBPW ON (TBPW.WarehouseId = ZI.WarehouseId)
				--INNER JOIN ZnodePortal ZP ON (ZP.PortalId = TBPW.PortalId)
				--WHERE ZI.Reorderlevel IS NOT NULL 
				--AND ZI.Quantity <= ZI.Reorderlevel 
				--GROUP BY  ZI.SKU  ,ZI.Quantity,ZI.Reorderlevel,ZPPD.ProductName ,TBPW.WarehouseName ,ZPPD.IsActive
    --            ORDER BY TBPW.WarehouseName,  ZI.Quantity, ZPPD.ProductName ASC

				IF OBJECT_ID('TEMPDB..#ProductDetailInventory') IS NOT NULL
			    DROP TABLE #ProductDetailInventory

			
		 END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeDevExpressReport_LowInventoryProduct @Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeDevExpressReport_LowInventoryProduct',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemBundle')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemBundle
END
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemBundle]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, BundleProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdBundle, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE BundleProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, BundleProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 
		 --select * from #tempoi

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.BundleProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 


		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon	

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
	 

		 DECLARE @parenTofAddon INT  = 0 
		 SET @parenTofAddon = (SELECT TOP 1 ParentOmsSavedCartLineItemId 
		 FROM #OldValue a
		 WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  )

		 DELETE FROM #OldValue WHERE ParentOmsSavedCartLineItemId <> @parenTofAddon  AND ParentOmsSavedCartLineItemId IS NOT NULL  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId =@parenTofAddon AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		 END 
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		   ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 

		END 
		 

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		    DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		 
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 

		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is different for same line item then New lineItem will generate
		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is same for same line item then Quantity will added
		;with cte as
		(
			SELECT b.OmsSavedCartLineItemId ,a.ParentOmsSavedCartLineItemId , a.BundleProductIds as SKU
					,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			FROM @SaveCartLineItemType a 
			Inner Join #OldValue b on a.BundleProductIds = b.SKU
			CROSS APPLY a.PersonalisedAttribute.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
			Inner join ZnodeOmsPersonalizeCartItem c on b.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId
			WHERE a.OmsSavedCartLineItemId = 0
		)
		delete c1
		from cte a1		  
		Inner Join #OldValue b1 on a1.SKU = b1.SKU
		inner join #OldValue c1 on (b1.ParentOmsSavedCartLineItemId = c1.OmsSavedCartLineItemId OR b1.OmsSavedCartLineItemId = c1.OmsSavedCartLineItemId)
		where not exists(select * from ZnodeOmsPersonalizeCartItem c where a1.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId and a1.PersonalizeValue = c.PersonalizeValue)

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon

		 UPDATE a
		 SET a.Quantity = a.Quantity+s.AddOnQuantity
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.ParentOmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 INNER JOIN @SaveCartLineItemType S on a.OmsSavedCartId = s.OmsSavedCartId and a.SKU = s.AddOnValueIds
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

		 UPDATE Ab SET ab.Quantity = a.Quantity   
         FROM ZnodeOmsSavedCartLineItem a  
         INNER JOIN ZnodeOmsSavedCartLineItem ab ON (ab.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)  
         INNER JOIN @SaveCartLineItemType b ON (a.OmsSavedCartId = b.OmsSavedCartId  )   
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdBundle  

		END 
	    ELSE 
		BEGIN 
			
		UPDATE #tempoi
			SET ParentSKU = (SELECT TOP 1 SKU FROM #tempoi WHERE OrderLineItemRelationshipTypeID IS NULL )
			WHERE OrderLineItemRelationshipTypeID  = @OrderLineItemRelationshipTypeIdAddon 
			AND EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) 
		   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
   
	DELETE FROM #yuuete WHERE Quantity <=0  

	;WITH Add_Dup AS
	(
		SELECT  Min(NewRowId)NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID 
		FROM  #yuuete
		GROUP BY SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID
		HAVING OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon	
	)

	DELETE FROM #yuuete
	WHERE NOT EXISTS (SELECT TOP 1 1 FROM Add_Dup WHERE Add_Dup.NewRowId = #yuuete.NewRowId)
	AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID IN ( @OrderLineItemRelationshipTypeIdAddon , @OrderLineItemRelationshipTypeIdBundle)   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
      
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID   
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL  
	AND  EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId ) 
  
  --------------------------------------------------------------------------------------------------------

   ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )

	UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon   
	AND  EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId ) 
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 


 -----------------------------------------------------------------------------------------------------

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( CASE WHEN EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) THEN 0 ELSE 1 END = b.id OR b.Id = 1  ))  
    INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1
    WHERE ( CASE WHEN EXISTS (SELECT TOP 1 1 FROM #tempoi WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdBundle) THEN 0 ELSE 1 END = ISNULL(a.ParentOmsSavedCartLineItemId,0) OR ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  
   -- SELECT * FROM #Cte_newAddon

   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	
    -- SELECT * FROM ZnodeOmsSavedCartLineItem WHERE OmsSavedCartId = 1709
  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE Ab SET ab.Quantity = a.Quantity   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN ZnodeOmsSavedCartLineItem ab ON (ab.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)  
    INNER JOIN @SaveCartLineItemType b ON (a.OmsSavedCartId = b.OmsSavedCartId  )   
    WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdBundle  
  
    

    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS not nULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem	WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 
END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemConfigurable')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemConfigurable
END
GO
--DROP PROC Znode_InsertUpdateSaveCartLineItemConfigurable

CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemConfigurable]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, ConfigurableProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdConfigurable, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE ConfigurableProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, ConfigurableProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.ConfigurableProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

	

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue a  WHERE a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId IN (SELECT ParentOmsSavedCartLineItemId FROM @parenTofAddon)AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		    AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END  
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdConfigurable AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 

		END 

		


		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		  IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		    DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		 
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
	
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 

		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is different for same line item then New lineItem will generate
		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is same for same line item then Quantity will added
		;with cte as
		(
			SELECT b.OmsSavedCartLineItemId ,a.ParentOmsSavedCartLineItemId , a.ConfigurableProductIds as SKU
					,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			FROM @SaveCartLineItemType a 
			Inner Join #OldValue b on a.ConfigurableProductIds = b.SKU
			CROSS APPLY a.PersonalisedAttribute.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
			Inner join ZnodeOmsPersonalizeCartItem c on b.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId
			WHERE a.OmsSavedCartLineItemId = 0
		)
		delete c1
		from cte a1		  
		Inner Join #OldValue b1 on a1.SKU = b1.SKU
		inner join #OldValue c1 on (b1.ParentOmsSavedCartLineItemId = c1.OmsSavedCartLineItemId OR b1.OmsSavedCartLineItemId = c1.OmsSavedCartLineItemId)
		where not exists(select * from ZnodeOmsPersonalizeCartItem c where a1.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId and a1.PersonalizeValue = c.PersonalizeValue)

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon
		 
		 UPDATE a
		 SET a.Quantity = a.Quantity+s.AddOnQuantity
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.ParentOmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 INNER JOIN @SaveCartLineItemType S on a.OmsSavedCartId = s.OmsSavedCartId and a.SKU = s.AddOnValueIds
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon


		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeID  
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    )   
	
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
    AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )

	---------------------------------------------------------------------------------------------------------------------

	 ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
	-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID			
    ) 

	UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon     
    AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 
 
	---------------------------------------------------------------------------------------------------------------------------
    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId  )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1 
	WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET  
    --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 

    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId  and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS not nULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 




END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemGroup')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemGroup
END
GO
--DROP PROC Znode_InsertUpdateSaveCartLineItemGroup

CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemGroup]
 (
	 @SaveCartLineItemType TT_SavecartLineitems READONLY  
	,@Userid  INT = 0 
	
 )
AS 
BEGIN 
BEGIN TRY 
 SET NOCOUNT ON 
   DECLARE @GetDate datetime= dbo.Fn_GetDate(); 
   DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
	DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
    DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
	DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT ) 	

	INSERT INTO @TBL_Personalise
	SELECT  NULL 
				,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
			,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
			,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
	FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @SaveCartLineItemType TRTR  ) a 
	CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 

	 CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
	 
	       INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @SaveCartLineItemType a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
	 
			INSERT INTO #tempoi 
			SELECT   Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, GroupProductIds
						,Quantity, @OrderLineItemRelationshipTypeIdGroup, CustomText, CartAddOnDetails, Sequence
						,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU  
			FROM @SaveCartLineItemType  a 
			WHERE GroupProductIds <> ''
			GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, GroupProductIds
			,Quantity,  CustomText, CartAddOnDetails, Sequence ,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
			 
			INSERT INTO #tempoi
			SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
			,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
			,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
			,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
				  WHEN  GroupProductIds <> '' THEN GroupProductIds 
				  WHEN BundleProductIds <> '' THEN BundleProductIds 
				  ELSE SKU END     ParentSKU 
			FROM @SaveCartLineItemType  a 
			WHERE AddOnValueIds <> ''
				GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
				,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
				,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
		 

        CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.GroupProductIds,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup   

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

		

		IF NOT EXISTS (SELECT TOP 1 1  FROM @SaveCartLineItemType ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
		
		 IF EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue a
		 WHERE a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
		 AND (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem  t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId AND   t.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) = (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  
		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 

		  IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		 IF (SELECT COUNT (DISTINCT SKU ) FROM  ZnodeOmsSavedCartLineItem   WHERE ParentOmsSavedCartLineItemId IN (SELECT ParentOmsSavedCartLineItemId FROM @parenTofAddon)AND   OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 

		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		     AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF (SELECT COUNT (DISTINCT SKU ) FROM  #OldValue  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ) <> (SELECT COUNT (DISTINCT SKU ) FROM  #tempoi  WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  )
		  BEGIN 
		    DELETE FROM #OldValue
		  END 
		   ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdGroup AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @SaveCartLineItemType WHERE ISNULL(AddOnValueIds,'')  = '' )
			 BEGIN 
			   DELETE FROM #OldValue
			 END  
		END 

	


		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		 
		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 
		END 
		
		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is different for same line item then New lineItem will generate
		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is same for same line item then Quantity will added
		;with cte as
		(
			SELECT b.OmsSavedCartLineItemId ,a.ParentOmsSavedCartLineItemId , a.GroupProductIds as SKU
					,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			FROM @SaveCartLineItemType a 
			Inner Join #OldValue b on a.GroupProductIds = b.SKU
			CROSS APPLY a.PersonalisedAttribute.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
			Inner join ZnodeOmsPersonalizeCartItem c on b.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId
			WHERE a.OmsSavedCartLineItemId = 0
		)
		delete c1
		from cte a1		  
		Inner Join #OldValue b1 on a1.SKU = b1.SKU
		inner join #OldValue c1 on (b1.ParentOmsSavedCartLineItemId = c1.OmsSavedCartLineItemId OR b1.OmsSavedCartLineItemId = c1.OmsSavedCartLineItemId)
		where not exists(select * from ZnodeOmsPersonalizeCartItem c where a1.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId and a1.PersonalizeValue = c.PersonalizeValue)
		
		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 WHERE a.OrderLineItemRelationshipTypeId <>  @OrderLineItemRelationshipTypeIdAddon

		 UPDATE a
		 SET a.Quantity = a.Quantity+s.AddOnQuantity
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.ParentOmsSavedCartLineItemId = b.OmsSavedCartLineItemId)
		 INNER JOIN @SaveCartLineItemType S on a.OmsSavedCartId = s.OmsSavedCartId and a.SKU = s.AddOnValueIds
		 WHERE a.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon

		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	    --select * from #yuuete
			
			 
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId)NewRowId ,SKU ,ParentSKU, OrderLineItemRelationshipTypeId 
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU  ,OrderLineItemRelationshipTypeId
	HAVING SKU = ParentSKU AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
    )   
  
   --select * from VTRET

    DELETE FROM #yuuete WHERE NewRowId  IN (SELECT NewRowId FROM VTRET)   
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  
  
 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID	  )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  
  -----------------------------------------------------------------------------------------------------------------------------------

  	 ;with Cte_newData AS   
    (  
    SELECT  MIN(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		-- AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID	  )

	 UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon   
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
	AND  a.sequence in (SELECT  MIN(ab.sequence) FROM ZnodeOmsSavedCartLineItem ab where a.OmsSavedCartId = ab.OmsSavedCartId and 
	 a.SKU = ab.sku and ab.OrderLineItemRelationshipTypeId is not null  ) 


----------------------------------------------------------------------------------------------------------------------------

    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
    INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1
	WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
	AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
  --  )   
  
   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1  FROM @OmsInsertedData ui WHERE ui.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId )
   )

     UPDATE a SET  
    --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU AND a.RowIdNo = r.RowIdNo  GROUP BY r.ParentSKU, r.SKU  )    IS nOT NULL 
	 
	
   
  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
			
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS not nULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem	WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		   WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		END 




END TRY
BEGIN CATCH 
  SELECT ERROR_MESSAGE()
END CATCH 
END
GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItemQuantity')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItemQuantity
END
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItemQuantity](
	  @CartLineItemXML xml, @UserId int,@Status bit OUT )
AS 
   /* 
    Summary: THis Procedure is USed to save and edit the saved cart line item      
    Unit Testing 
	begin tran  
    Exec Znode_InsertUpdateSaveCartLineItem @CartLineItemXML= '<ArrayOfSavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>BlueGreenYellow</SKU>
    <Quantity>1.000000</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>1</Sequence>
    <AddonProducts>YELLOW</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts>GREEN</ConfigurableProducts>
  </SavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>ap1534</SKU>
    <Quantity>1.0</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>2</Sequence>
    <AddonProducts >PINK</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts />
    <PersonaliseValuesList>Address~Hello</PersonaliseValuesList>
  </SavedCartLineItemModel>
</ArrayOfSavedCartLineItemModel>' , @UserId=1 ,@Status=0
	rollback tran
*/
BEGIN
	BEGIN TRAN InsertUpdateSaveCartLineItem;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		DECLARE @AddOnQuantity numeric(28, 6)= 0;
		DECLARE @IsAddProduct   BIT = 0 
		DECLARE @OmsSavedCartLineItemId INT = 0
		DECLARE @TBL_SavecartLineitems TABLE
		( 
			RowId int , OmsSavedCartLineItemId int, ParentOmsSavedCartLineItemId int, OmsSavedCartId int, SKU nvarchar(600), Quantity numeric(28, 6), OrderLineItemRelationshipTypeID int, CustomText nvarchar(max), 
			CartAddOnDetails nvarchar(max), Sequence int, AddOnValueIds varchar(max), BundleProductIds varchar(max), ConfigurableProductIds varchar(max), GroupProductIds varchar(max), PersonalisedAttribute XML, 
			AutoAddon varchar(max), OmsOrderId int, ItemDetails nvarchar(max),
			Custom1	nvarchar(max),Custom2 nvarchar(max),Custom3 nvarchar(max),Custom4
			nvarchar(max),Custom5 nvarchar(max),GroupId NVARCHAR(max) ,ProductName Nvarchar(1000) , Description NVARCHAR(max),AddOnQuantity NVARCHAR(max)
		);

		DECLARE @OrderLineItemRelationshipTypeIdAddon int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
		DECLARE @OrderLineItemRelationshipTypeIdSimple int =
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Simple'
		);
		DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
		DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
		 DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
		INSERT INTO @TBL_SavecartLineitems( RowId,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence, AddOnValueIds, BundleProductIds, ConfigurableProductIds, GroupProductIds, PersonalisedAttribute, AutoAddon, OmsOrderId, ItemDetails,
		Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,Description,AddOnQuantity )
			   SELECT DENSE_RANK()Over(Order BY Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' )) RowId ,Tbl.Col.value( 'OmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartLineItemId, Tbl.Col.value( 'ParentOmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS ParentOmsSavedCartLineItemId, Tbl.Col.value( 'OmsSavedCartId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartId, Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' ) AS SKU, Tbl.Col.value( 'Quantity[1]', 'NVARCHAR(2000)' ) AS Quantity
			   , Tbl.Col.value( 'OrderLineItemRelationshipTypeID[1]', 'NVARCHAR(2000)' ) AS OrderLineItemRelationshipTypeID, Tbl.Col.value( 'CustomText[1]', 'NVARCHAR(2000)' ) AS CustomText, Tbl.Col.value( 'CartAddOnDetails[1]', 'NVARCHAR(2000)' ) AS CartAddOnDetails, Tbl.Col.value( 'Sequence[1]', 'NVARCHAR(2000)' ) AS Sequence, Tbl.Col.value( 'AddonProducts[1]', 'NVARCHAR(2000)' ) AS AddOnValueIds, ISNULL(Tbl.Col.value( 'BundleProducts[1]', 'NVARCHAR(2000)' ),'') AS BundleProductIds, ISNULL(Tbl.Col.value( 'ConfigurableProducts[1]', 'NVARCHAR(2000)' ),'') AS ConfigurableProductIds, ISNULL(Tbl.Col.value( 'GroupProducts[1]', 'NVARCHAR(Max)' ),'') AS GroupProductIds, 
			          Tbl.Col.query('(PersonaliseValuesDetail/node())') AS PersonaliseValuesDetail, Tbl.Col.value( 'AutoAddon[1]', 'NVARCHAR(Max)' ) AS AutoAddon, Tbl.Col.value( 'OmsOrderId[1]', 'NVARCHAR(Max)' ) AS OmsOrderId,
					  Tbl.Col.value( 'ItemDetails[1]', 'NVARCHAR(Max)' ) AS ItemDetails,
					  Tbl.Col.value( 'Custom1[1]', 'NVARCHAR(Max)' ) AS Custom1,
					  Tbl.Col.value( 'Custom2[1]', 'NVARCHAR(Max)' ) AS Custom2,
					  Tbl.Col.value( 'Custom3[1]', 'NVARCHAR(Max)' ) AS Custom3,
					  Tbl.Col.value( 'Custom4[1]', 'NVARCHAR(Max)' ) AS Custom4,
					  Tbl.Col.value( 'Custom5[1]', 'NVARCHAR(Max)' ) AS Custom5,
					  Tbl.Col.value( 'GroupId[1]', 'NVARCHAR(Max)' ) AS GroupId,
					  Tbl.Col.value( 'ProductName[1]', 'NVARCHAR(Max)' ) AS ProductName,
					  Tbl.Col.value( 'Description[1]', 'NVARCHAR(Max)' ) AS Description, 
					  Tbl.Col.value( 'AddOnQuantity[1]', 'NVARCHAR(2000)' ) AS AddOnQuantity
			   FROM @CartLineItemXML.nodes( '//ArrayOfSavedCartLineItemModel/SavedCartLineItemModel' ) AS Tbl(Col);
			  

			  IF OBJECT_ID('tempdb..#TBL_SavecartLineitems') is not null
				drop table #TBL_SavecartLineitems

			  SELECT * INTO #TBL_SavecartLineitems FROM @TBL_SavecartLineitems
			

			  UPDATE  @TBL_SavecartLineitems
			  SET 	Description = ISNUll(Description,'') 

			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' )
			 BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				    SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0 )

					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					WHERE ( OmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					OR ParentOmsSavedCartLineItemId =  @OmsSavedCartLineItemId   ) 
					 
					--UPDATE ZnodeOmsSavedCartLineItem 
					--SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					--WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					--AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = AddOnQuantity
					FROM ZnodeOmsSavedCartLineItem ZOSCLI
					INNER JOIN @TBL_SavecartLineitems SCLI ON ZOSCLI.ParentOmsSavedCartLineItemId = SCLI.OmsSavedCartLineItemId AND ZOSCLI.OmsSavedCartId = SCLI.OmsSavedCartId AND ZOSCLI.SKU = SCLI.AddOnValueIds
					WHERE ZOSCLI.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					AND SCLI.BundleProductIds <> ''

					DELETE	FROM @TBL_SavecartLineitems WHERE BundleProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_bundleProduct TT_SavecartLineitems 
				  INSERT INTO @TBL_bundleProduct 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(BundleProductIds,'') <> '' 
				
				  EXEC Znode_InsertUpdateSaveCartLineItemBundle @TBL_bundleProduct,@userId
				 
				  DELETE FROM  @TBL_SavecartLineitems WHERE ISNULL(BundleProductIds,'') <> '' 
				  SET @OmsSavedCartLineItemId = 0 
				END 
			IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					--UPDATE ZnodeOmsSavedCartLineItem 
					--SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0)
					--WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					--AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = AddOnQuantity
					FROM ZnodeOmsSavedCartLineItem ZOSCLI
					INNER JOIN @TBL_SavecartLineitems SCLI ON ZOSCLI.ParentOmsSavedCartLineItemId = SCLI.OmsSavedCartLineItemId AND ZOSCLI.OmsSavedCartId = SCLI.OmsSavedCartId AND ZOSCLI.SKU = SCLI.AddOnValueIds
					WHERE ZOSCLI.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					AND SCLI.ConfigurableProductIds <> ''

					DELETE	FROM @TBL_SavecartLineitems WHERE ConfigurableProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Configurable TT_SavecartLineitems 
				  INSERT INTO @TBL_Configurable 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> '' 

				  EXEC Znode_InsertUpdateSaveCartLineItemConfigurable @TBL_Configurable,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(ConfigurableProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' )
			    BEGIN 				
				 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
					
					--UPDATE ZnodeOmsSavedCartLineItem 
					--SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND  OmsSavedCartLineItemId <> 0)
					--WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					--AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = AddOnQuantity
					FROM ZnodeOmsSavedCartLineItem ZOSCLI
					INNER JOIN @TBL_SavecartLineitems SCLI ON ZOSCLI.ParentOmsSavedCartLineItemId = SCLI.OmsSavedCartLineItemId AND ZOSCLI.OmsSavedCartId = SCLI.OmsSavedCartId AND ZOSCLI.SKU = SCLI.AddOnValueIds
					WHERE ZOSCLI.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					AND SCLI.GroupProductIds <> ''

					DELETE	FROM @TBL_SavecartLineitems WHERE GroupProductIds <> '' AND OmsSavedCartLineItemId <> 0
				 END 
				  DECLARE @TBL_Group TT_SavecartLineitems 
				  INSERT INTO @TBL_Group 
				  SELECT *  
				  FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> '' 

				
				  EXEC Znode_InsertUpdateSaveCartLineItemGroup @TBL_Group,@userId
				  
				  DELETE FROM @TBL_SavecartLineitems 
				  WHERE ISNULL(GroupProductIds,'') <> ''
				  SET @OmsSavedCartLineItemId = 0  
				END 
				 
                IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0  ) 
				 BEGIN 
				 
				   SET @OmsSavedCartLineItemId  = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0 )
				   	UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = (SELECT TOP 1 Quantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId = @OmsSavedCartLineItemId )
					WHERE OmsSavedCartLineItemId = @OmsSavedCartLineItemId
				
				 --   UPDATE ZnodeOmsSavedCartLineItem 
					--SET Quantity = (SELECT TOP 1 AddOnQuantity FROM @TBL_SavecartLineitems WHERE  OmsSavedCartLineItemId <> 0)
					--WHERE ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId  
					--AND OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					UPDATE ZnodeOmsSavedCartLineItem 
					SET Quantity = AddOnQuantity
					FROM ZnodeOmsSavedCartLineItem ZOSCLI
					INNER JOIN @TBL_SavecartLineitems SCLI ON ZOSCLI.ParentOmsSavedCartLineItemId = @OmsSavedCartLineItemId AND ZOSCLI.OmsSavedCartId = SCLI.OmsSavedCartId AND ZOSCLI.SKU = SCLI.AddOnValueIds
					WHERE ZOSCLI.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon
					
					DELETE	FROM @TBL_SavecartLineitems WHERE OmsSavedCartLineItemId <> 0
				 END 
			 
			

			  DECLARE @OmsInsertedData TABLE (OmsSavedCartLineItemId INT )
			  DECLARE @TBL_Personalise TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
			  INSERT INTO @TBL_Personalise
			  SELECT  NULL 
							,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		  ,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					  ,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					  ,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			  FROM (SELECT TOP 1 PersonalisedAttribute Valuex FROM  @TBL_SavecartLineitems TRTR  ) a 
			  CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col) 
			  
			   ----To update saved cart item personalise value from given line item
			  DECLARE @TBL_Personalise1 TABLE (OmsSavedCartLineItemId INT ,PersonalizeCode NVARCHAr(max),PersonalizeValue NVARCHAr(max),DesignId NVARCHAr(max), ThumbnailURL NVARCHAr(max))
			  INSERT INTO @TBL_Personalise1
			  SELECT  a.OmsSavedCartLineItemId 
					  ,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		  ,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					  ,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					  ,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			  FROM (SELECT TOP 1 OmsSavedCartLineItemId,PersonalisedAttribute Valuex FROM  #TBL_SavecartLineitems TRTR ) a 
			  CROSS APPLY	a.Valuex.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
		    
			
			  CREATE TABLE #tempoi (GenId INT IDENTITY(1,1),RowId	int	,OmsSavedCartLineItemId	int	 ,ParentOmsSavedCartLineItemId	int,OmsSavedCartId	int
									,SKU	nvarchar(max) ,Quantity	numeric(28,6)	,OrderLineItemRelationshipTypeID	int	,CustomText	nvarchar(max)
									,CartAddOnDetails	nvarchar(max),Sequence	int	,AutoAddon	varchar(max)	,OmsOrderId	int	,ItemDetails	nvarchar(max)
									,Custom1	nvarchar(max)  ,Custom2	nvarchar(max),Custom3	nvarchar(max),Custom4	nvarchar(max),Custom5	nvarchar(max)
									,GroupId	nvarchar(max) ,ProductName	nvarchar(max),Description	nvarchar(max),Id	int,ParentSKU NVARCHAR(max))
				   
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,  GroupId ,ProductName,min(Description)Description	,0 Id,NULL ParentSKU 
			   FROM @TBL_SavecartLineitems a 
			   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
			   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity, @OrderLineItemRelationshipTypeIdSimple, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id,SKU ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE ISNULL(BundleProductIds,'') =  '' 
			   AND  ISNULL(GroupProductIds,'') = ''	AND ISNULL(	ConfigurableProductIds,'') = ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU
					,Quantity,  CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName
			  
     		   INSERT INTO #tempoi
			   SELECT  Min(RowId )RowId ,OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,AddOnQuantity, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, Sequence
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,min(Description)Description	,1 Id 
					,CASE WHEN ConfigurableProductIds <> ''  THEN ConfigurableProductIds
					WHEN  GroupProductIds <> '' THEN GroupProductIds 
					WHEN BundleProductIds <> '' THEN BundleProductIds 
					 ELSE SKU END     ParentSKU 
			   FROM @TBL_SavecartLineitems  a 
			   WHERE AddOnValueIds <> ''
			   	   GROUP BY  OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, AddOnValueIds
					,AddOnQuantity,  CustomText, CartAddOnDetails, Sequence ,ConfigurableProductIds,GroupProductIds,	BundleProductIds
					,AutoAddon, OmsOrderId, ItemDetails,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId,ProductName,SKU
				 
            
		
		 CREATE TABLE #OldValue (OmsSavedCartId INT ,OmsSavedCartLineItemId INT,ParentOmsSavedCartLineItemId INT , SKU  NVARCHAr(2000),OrderLineItemRelationshipTypeID INT  )
		 
		INSERT INTO #OldValue  
		SELECT  a.OmsSavedCartId,a.OmsSavedCartLineItemId,a.ParentOmsSavedCartLineItemId , a.SKU  ,a.OrderLineItemRelationshipTypeID 
	  	FROM ZnodeOmsSavedCartLineItem a   
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = a.OmsSavedCartId AND ISNULL(a.SKU,'') = ISNULL(TY.SKU,'')   )   
        AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple   

			

		INSERT INTO #OldValue 
		SELECT DISTINCT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.ParentOmsSavedCartLineItemId  = b.OmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.SKU,'') AND ISNULL(b.Groupid,'-') = ISNULL(TY.Groupid,'-')  )
		AND  b.OrderLineItemRelationshipTypeID IS NULL 

		--select * from #tempoi
			

		DELETE a FROM #OldValue a WHERE NOT EXISTS (SELECT TOP 1 1  FROM #OldValue b WHERE b.ParentOmsSavedCartLineItemId IS NULL AND b.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId)
		AND a.ParentOmsSavedCartLineItemId IS NOT NULL 

		INSERT INTO #OldValue 
		SELECT b.OmsSavedCartId,b.OmsSavedCartLineItemId,b.ParentOmsSavedCartLineItemId , b.SKU  ,b.OrderLineItemRelationshipTypeID  
		FROM ZnodeOmsSavedCartLineItem b 
		INNER JOIN #OldValue c ON (c.OmsSavedCartLineItemId  = b.ParentOmsSavedCartLineItemId AND c.OmsSavedCartId = b.OmsSavedCartId)
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems  TY WHERE TY.OmsSavedCartId = b.OmsSavedCartId AND ISNULL(b.SKU,'') = ISNULL(TY.AddOnValueIds,'') )
		AND  b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon

			

		IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_SavecartLineitems ty WHERE EXISTS (SELECT TOP 1 1 FROM 	#OldValue a WHERE	
		ISNULL(TY.AddOnValueIds,'') = a.SKU AND  a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon ))
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		BEGIN 
		
		DELETE FROM #OldValue 
		END 
		ELSE 
		BEGIN 
	    
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  <> '' )
		 BEGIN 
		 
		 DECLARE @parenTofAddon  TABLE( ParentOmsSavedCartLineItemId INT  )  
		 INSERT INTO  @parenTofAddon 
		 SELECT  ParentOmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ParentOmsSavedCartLineItemId FROM  @parenTofAddon)   
					AND ParentOmsSavedCartLineItemId IS NOT NULL  
					AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon

		 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  
		 
		 END 
		 ELSE IF (SELECT COUNT (OmsSavedCartLineItemId) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS NULL ) > 1 
		 BEGIN 
		 -- SELECT 3
		    DECLARE @TBL_deleteParentOmsSavedCartLineItemId TABLE (OmsSavedCartLineItemId INT )
			INSERT INTO @TBL_deleteParentOmsSavedCartLineItemId 
			SELECT ParentOmsSavedCartLineItemId
			FROM ZnodeOmsSavedCartLineItem a 
			WHERE ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple  )
			AND OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon 

			DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
			OR ParentOmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM @TBL_deleteParentOmsSavedCartLineItemId)
		    
			 DELETE FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT ISNULL(m.ParentOmsSavedCartLineItemId,0) FROM #OldValue m)
		 AND ParentOmsSavedCartLineItemId IS  NULL  

		 END
		 ELSE IF  EXISTS (SELECT TOP 1 1 FROM ZnodeOmsSavedCartLineItem Wt WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue ty WHERE ty.OmsSavedCartId = wt.OmsSavedCartId AND ty.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple AND wt.ParentOmsSavedCartLineItemId= ty.OmsSavedCartLineItemId  ) AND wt.OrderLineItemRelationshipTypeId = @OrderLineItemRelationshipTypeIdAddon)
		      AND EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems WHERE ISNULL(AddOnValueIds,'')  = '' )
		 BEGIN 
		   DELETE FROM #OldValue
		 END 
		END 
			
	

		DECLARE @TBL_Personaloldvalues TABLE (OmsSavedCartLineItemId INT , PersonalizeCode NVARCHAr(max), PersonalizeValue NVARCHAr(max))
		INSERT INTO @TBL_Personaloldvalues
		SELECT OmsSavedCartLineItemId , PersonalizeCode, PersonalizeValue
		FROM ZnodeOmsPersonalizeCartItem  a 
		WHERE EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise TU WHERE TU.PersonalizeCode = a.PersonalizeCode AND TU.PersonalizeValue = a.PersonalizeValue)
		
		

		IF  NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		   AND EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise )
		BEGIN 
		 DELETE FROM #OldValue
		END 
		ELSE 
		BEGIN 
		 IF EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   DELETE FROM #OldValue WHERE OmsSavedCartLineItemId IN (
		   SELECT OmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ) ) 
		   OR OmsSavedCartLineItemId IN ( SELECT ParentOmsSavedCartLineItemId FROM #OldValue WHERE OmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues )
		   AND ParentOmsSavedCartLineItemId NOT IN (SELECT OmsSavedCartLineItemId FROM @TBL_Personaloldvalues ))
		   
		
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_Personaloldvalues)
		 AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) > 1 
		 BEGIN 
		   
		   

		   DELETE n FROM #OldValue n WHERE OmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem WHERE n.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId  )
		   OR ParentOmsSavedCartLineItemId  IN (SELECT OmsSavedCartLineItemId FROM ZnodeOmsPersonalizeCartItem   )
		   
		  
		   
		 END 
		 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		        AND EXISTS (SELECT TOP 1 1 FROM ZnodeOmsPersonalizeCartItem m WHERE EXISTS (SELECT Top 1 1 FROM #OldValue YU WHERE YU.OmsSavedCartLineItemId = m.OmsSavedCartLineItemId )) 
		       AND (SELECT COUNT (DISTINCT OmsSavedCartLineItemId ) FROM #OldValue WHERE ParentOmsSavedCartLineItemId IS nULL ) = 1
		 BEGIN 
		     DELETE FROM #OldValue WHERE NOT EXISTS (SELECT TOP 1 1  FROM @TBL_Personalise)
		 END 


		  
		END 

		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is different for same line item then New lineItem will generate
		--------If lineitem present in ZnodeOmsPersonalizeCartItem and personalize value is same for same line item then Quantity will added
		;with cte as
		(
			SELECT b.OmsSavedCartLineItemId ,a.ParentOmsSavedCartLineItemId , a.SKU
					,Tbl.Col.value( 'PersonalizeCode[1]', 'NVARCHAR(Max)' ) AS PersonalizeCode
			  		,Tbl.Col.value( 'PersonalizeValue[1]', 'NVARCHAR(Max)' ) AS PersonalizeValue
					,Tbl.Col.value( 'DesignId[1]', 'NVARCHAR(Max)' ) AS DesignId
					,Tbl.Col.value( 'ThumbnailURL[1]', 'NVARCHAR(Max)' ) AS ThumbnailURL
			FROM @TBL_SavecartLineitems a 
			Inner Join #OldValue b on a.SKU = b.SKU
			CROSS APPLY a.PersonalisedAttribute.nodes( '//PersonaliseValueModel' ) AS Tbl(Col)  
			Inner join ZnodeOmsPersonalizeCartItem c on b.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId
			WHERE a.OmsSavedCartLineItemId = 0
		)
		delete b1
		from cte a1		  
		Inner Join #OldValue b1 on a1.sku = b1.SKU
		where not exists(select * from ZnodeOmsPersonalizeCartItem c where a1.OmsSavedCartLineItemId = c.OmsSavedCartLineItemId and a1.PersonalizeValue = c.PersonalizeValue)

		IF EXISTS (SELECT TOP 1 1 FROM #OldValue )
		BEGIN 

		 UPDATE a
		 SET a.Quantity = a.Quantity+(SELECT TOP 1  Quantity FROM #tempoi ty WHERE ty.SKU = b.SKU ) 
		 FROM ZnodeOmsSavedCartLineItem a
		 INNER JOIN #OldValue b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId)

		END 
		ELSE 
		BEGIN 
		
		
			   
    SELECT RowId, Id ,Row_number()Over(Order BY RowId, Id,GenId) NewRowId , ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewId() ) Sequence ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,min(Description)Description  ,ParentSKU  
     INTO #yuuete   
     FROM  #tempoi  
     GROUP BY ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails ,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,RowId, Id ,GenId,ParentSKU   
     ORDER BY RowId, Id   
       	
			     
    DELETE FROM #yuuete WHERE Quantity <=0  
  
     ;WITH VTTY AS   
    (  
    SELECT m.RowId OldRowId , TY1.RowId , TY1.SKU   
       FROM #yuuete m  
    INNER JOIN  #yuuete TY1 ON TY1.SKU = m.ParentSKU   
    WHERE m.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon   
    )   
	
    UPDATE m1   
    SET m1.RowId = TYU.RowId  
    FROM #yuuete m1   
    INNER JOIN VTTY TYU ON (TYU.OldRowId = m1.RowId)  
        
    ;WITH VTRET AS   
    (  
    SELECT RowId,id,Min(NewRowId) NewRowId ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID  
    FROM #yuuete   
    GROUP BY RowId,id ,SKU ,ParentSKU ,OrderLineItemRelationshipTypeID
	Having  SKU = ParentSKU  AND OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdSimple
    )   
    
    DELETE FROM #yuuete WHERE NewRowId IN (SELECT NewRowId FROM VTRET)  
	
	

	
     
       INSERT INTO  ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,Sequence,CreatedBY,CreatedDate,ModifiedBy ,ModifiedDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description)  
       OUTPUT INSERTED.OmsSavedCartLineItemId  INTO @OmsInsertedData 
	   SELECT NULL ,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId  
       ,CustomText,CartAddOnDetails,ROW_NUMBER()Over(Order BY NewRowId)  sequence,@UserId,@GetDate,@UserId,@GetDate,AutoAddon  
       ,OmsOrderId,Custom1,Custom2,Custom3 ,Custom4 ,Custom5,GroupId,ProductName ,Description   
       FROM  #yuuete  TH  

 
	 ;with Cte_newData AS   
    (  
    SELECT  MAX(a.OmsSavedCartLineItemId ) OmsSavedCartLineItemId 
	, b.RowId ,b.GroupId ,b.SKU ,b.ParentSKU  
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ISNULL(b.GroupId,'-') = ISNULL(a.GroupId,'-')  )  
    WHERE ISNULL(a.ParentOmsSavedCartLineItemId,0) =0  
	--	AND NOT EXISTS (SELECT TOP 1 1 FROM #OldValue TY WHERE TY.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
		AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon
		AND CASE WHEN EXISTS (SELECT TOP 1 1 FROM #yuuete TU WHERE TU.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdSimple)  THEN ISNULL(a.OrderLineItemRelationshipTypeID,0) ELSE 0 END = 0 
     GROUP BY b.RowId ,b.GroupId ,b.SKU	,b.ParentSKU,b.OrderLineItemRelationshipTypeID
				
    )   
	
  
    UPDATE a SET a.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM  Cte_newData  r  
    WHERE  r.RowId = b.RowId AND ISNULL(r.GroupId,'-') = ISNULL(a.GroupId,'-')  Order by b.RowId )   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =1  )   
    WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
    AND b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon  
    AND a.ParentOmsSavedCartLineItemId IS nULL   
  

    
    --;with Cte_newAddon AS   
    --(  
    SELECT a.OmsSavedCartLineItemId , b.RowId  ,b.SKU ,b.ParentSKU  ,Row_number()Over(Order BY c.OmsSavedCartLineItemId )RowIdNo
    INTO #Cte_newAddon
	FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.ParentSKU AND ( b.Id = 1  ))  
	INNER JOIN ZnodeOmsSavedCartLineItem c on b.sku = c.sku and b.OmsSavedCartId=c.OmsSavedCartId and b.Id = 1 
    WHERE ( ISNULL(a.ParentOmsSavedCartLineItemId,0) <> 0   )
    AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --  )   
  


  --  SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 --FROM ZnodeOmsSavedCartLineItem a
	 --WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
  --   AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
  --   AND a.ParentOmsSavedCartLineItemId IS NULL  
	 --AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 --AND EXISTS (SELECT TOP 1 1 FROM #Cte_newAddon TI WHERE TI.SKU = a.SKU)



   ;with table_update AS 
   (
     SELECT * , ROW_NUMBER()Over(Order BY OmsSavedCartLineItemId  ) RowIdNo
	 FROM ZnodeOmsSavedCartLineItem a
	 WHERE a.OrderLineItemRelationshipTypeId IS NOT NULL   
     AND a.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon  
     AND a.ParentOmsSavedCartLineItemId IS NULL  
	 AND EXISTS (SELECT TOP 1 1  FROM  #yuuete ty WHERE ty.OmsSavedCartId = a.OmsSavedCartId )
	 AND EXISTS (SELECT TOP 1 1 FROM #Cte_newAddon TI WHERE TI.SKU = a.SKU)
   )

    UPDATE a SET  
   --SELECT  a.OmsSavedCartLineItemId,
	a.ParentOmsSavedCartLineItemId =(SELECT TOP 1 max(OmsSavedCartLineItemId) 
	FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU  GROUP BY r.ParentSKU, r.SKU  )   
    FROM table_update a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.OrderLineItemRelationshipTypeID = @OrderLineItemRelationshipTypeIdAddon AND  b.id =1 )   
    WHERE (SELECT TOP 1 max(OmsSavedCartLineItemId) 
	  FROM #Cte_newAddon  r  
    WHERE  r.ParentSKU = b.ParentSKU AND a.SKU = r.SKU   GROUP BY r.ParentSKU, r.SKU  )    IS NOT NULL 
	 

	
	  
    ;with Cte_Th AS   
    (             
      SELECT RowId    
     FROM #yuuete a   
     GROUP BY RowId   
     HAVING COUNT(NewRowId) <= 1   
      )   
    UPDATE a SET a.Quantity =  NULL   
    FROM ZnodeOmsSavedCartLineItem a  
    INNER JOIN #yuuete b ON (a.OmsSavedCartId = b.OmsSavedCartId AND a.SKU = b.SKU AND b.id =0)   
    WHERE NOT EXISTS (SELECT TOP 1 1  FROM Cte_Th TY WHERE TY.RowId = b.RowId )  
     AND a.OrderLineItemRelationshipTypeId IS NULL   
  
    UPDATE  ZnodeOmsSavedCartLineItem   
    SET GROUPID = NULL   
    WHERE  EXISTS (SELECT TOP 1 1  FROM #yuuete RT WHERE RT.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
    AND OrderLineItemRelationshipTypeId IS NOT NULL     
       ;With Cte_UpdateSequence AS   
     (  
       SELECT OmsSavedCartLineItemId ,Row_Number()Over(Order By OmsSavedCartLineItemId) RowId , Sequence   
       FROM ZnodeOmsSavedCartLineItem   
       WHERE EXISTS (SELECT TOP 1 1 FROM #yuuete TH WHERE TH.OmsSavedCartId = ZnodeOmsSavedCartLineItem.OmsSavedCartId )  
     )   
    UPDATE Cte_UpdateSequence  
    SET  Sequence = RowId  
	
	----To update saved cart item personalise value from given line item	
	if exists(select * from @TBL_Personalise1 where isnull(PersonalizeValue,'') <> '' and isnull(OmsSavedCartLineItemId,0) <> 0)
	Begin
		DELETE FROM ZnodeOmsPersonalizeCartItem 
		WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise1 yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )

		MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
		USING @TBL_Personalise1 SOURCE
			   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
		WHEN NOT MATCHED THEN 
				INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
								,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
				VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
								,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
	end		
	
	UPDATE @TBL_Personalise
	SET OmsSavedCartLineItemId = b.OmsSavedCartLineItemId
	FROM @OmsInsertedData a 
	INNER JOIN ZnodeOmsSavedCartLineItem b ON (a.OmsSavedCartLineItemId = b.OmsSavedCartLineItemId and b.OrderLineItemRelationshipTypeID <> @OrderLineItemRelationshipTypeIdAddon)
	WHERE b.ParentOmsSavedCartLineItemId IS NOT NULL 
	
	DELETE FROM ZnodeOmsPersonalizeCartItem 
	WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_Personalise yu WHERE yu.OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId )
						
    MERGE INTO ZnodeOmsPersonalizeCartItem TARGET 
	USING @TBL_Personalise SOURCE
		   ON (TARGET.OmsSavedCartLineItemId = SOURCE.OmsSavedCartLineItemId ) 
	WHEN NOT MATCHED THEN 
		    INSERT  ( OmsSavedCartLineItemId,  CreatedBy, CreatedDate, ModifiedBy, ModifiedDate
							,PersonalizeCode, PersonalizeValue,DesignId	,ThumbnailURL )
			VALUES (  SOURCE.OmsSavedCartLineItemId,  @userId, @getdate, @userId, @getdate
							,SOURCE.PersonalizeCode, SOURCE.PersonalizeValue,SOURCE.DesignId	,SOURCE.ThumbnailURL ) ;
  
		
		 
END 
	SET @Status = 1;
	COMMIT TRAN InsertUpdateSaveCartLineItem;
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE()	
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_InsertUpdateSaveCartLineItem @CartLineItemXML = '+CAST(@CartLineItemXML
 AS varchar(max))+',@UserId = '+CAST(@UserId AS varchar(50))+',@Status='+CAST(@Status AS varchar(10));

		SELECT 0 AS ID, CAST(0 AS bit) AS Status,ERROR_MESSAGE();
		ROLLBACK TRAN InsertUpdateSaveCartLineItem;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_InsertUpdateSaveCartLineItem', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO

UPDATE ZnodeGlobalAttribute 
SET IsRequired = 1
WHERE AttributeCode = 'BillingAccountNumber'

GO

Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'Order','CreateCustomerOrder',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'Order' and ActionName = 'CreateCustomerOrder')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'OMS' AND ControllerName = 'Order')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'OMS' AND ControllerName = 'Order') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'OMS' AND ControllerName = 'Order'),
(select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'OMS' AND ControllerName = 'Order') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder'))

GO

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Orders' AND ControllerName = 'Order')	
      ,(select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Orders' AND ControllerName = 'Order') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Orders' AND ControllerName = 'Order'),
(select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder')	
,2,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Orders' AND ControllerName = 'Order') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'Order' and ActionName= 'CreateCustomerOrder'))

GO

UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>DomainId</name><headertext>Domain ID</headertext><width>10</width><datatype>Int32</datatype><columntype>Int32</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>DomainId</name><headertext>Checkbox</headertext><width>0</width><datatype>String</datatype><columntype>Int32</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>y</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>DomainName</name><headertext>Domain Name</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>100</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>y</iscontrol><controltype>Text</controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>ApiKey</name><headertext>API Key</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>ApplicationType</name><headertext>Application Type</headertext><width>40</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>y</iscontrol><controltype>DropDown</controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>Status</name><headertext>Is Active</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>IsDefault</name><headertext>Is Default</headertext><width>40</width><datatype>Boolean</datatype><columntype>Boolean</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format></format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>Manage</name><headertext>Action</headertext><width>50</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>true</allowpaging><format>Edit|clear-cache|Disable|Delete</format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>y</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield>PortalId</islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Edit|clear-cache|Disable|Delete</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Store/EditUrl|/Store/ClearDemoWebsiteCache|/Store/EnableDisableDomain|/Store/DeleteUrl</manageactionurl><manageparamfield>portalId,domainId,ApiKey,Status|domainName,domainId|PortalId,DomainId,IsActive|domainId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>'
WHERE ItemName = 'ZnodeDomain'

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetOrderDetails')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetOrderDetails
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetOrderDetails]
(   
	@BeginDate      DATETIME         ,
    @EndDate        DATETIME         ,
    @StoreName      NVARCHAR(max) = '',
	@OrderStatus    NVARCHAR(MAX) = ''
	)
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeDevExpressReport_GetOrderDetails_bak @BeginDate = '2018-01-13 14:29:34.513', @EndDate = '2018-12-13 14:29:34.513',@OrderStatus = 'Failed|Success'
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;

		 IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		DECLARE @SQL NVARCHAR(MAX)
        DECLARE @DateFormateId int 
	    SET @DateFormateId  = DBO.Fn_GetReportDateTimeFormat();
		DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
		
		DECLARE @TBL_PortalId TABLE (PortalId INT );
		INSERT INTO @TBL_PortalId
		SELECT PortalId 
		FROM ZnodePortal ZP 
		INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

		SELECT DISTINCT
		ZOO.OrderNumber,ZOO.[OmsOrderID],ZOOD.[PortalId],ZOOD.[UserId],ZOOD.[OmsOrderStateId],ZOOD.[ShippingID],ZOOD.[PaymentTypeId],ZOOD.[BillingFirstName],ZOOD.[BillingLastName],
        ZOOD.[BillingCompanyName], ZOOD.[BillingStreet1],ZOOD.[BillingStreet2], ZOOD.[BillingCity],ZOOD.[BillingStateCode],ZOOD.[BillingPostalCode],ZOOD.[BillingCountry], ZOOD.[BillingPhoneNumber],ZOOD.[BillingEmailId],
		SUBSTRING(CAST(ZOOD.[TaxCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[TaxCost] AS VARCHAR(100)))+@RoundOffValue) as TaxCost,
		SUBSTRING(CAST(ZOOD.[ShippingCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[ShippingCost] AS VARCHAR(100)))+@RoundOffValue) as [ShippingCost],
		SUBSTRING(CAST(ZOOD.[SubTotal] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[SubTotal] AS VARCHAR(100)))+@RoundOffValue) as [SubTotal],
		SUBSTRING(CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)))+@RoundOffValue) as [DiscountAmount],
		SUBSTRING(CAST(ZOOD.[Total] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[Total] AS VARCHAR(100)))+@RoundOffValue) as [TotalAmount],
        CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
        ZOOD.[ShippingNumber],
		ZOOD.[TrackingNumber],
		ZOOD.[CouponCode],
		ZOOD.[PromoDescription],
		ZOOD.[ReferralUserId],
		ZOOD.[PurchaseOrderNumber],
		ZOOD.[OmsPaymentStateId],
        ZOOD.[WebServiceDownloadDate],
		ZOOD.[PaymentSettingID],
		ZOOD.[ShipDate],
		ZOOD.[ReturnDate],
		ZOTOD.[SalesTax],ZOTOD.[VAT],ZOTOD.[GST],ZOTOD.[PST],ZOTOD.[HST],
        P.[StoreName] AS 'StoreName',
		OS.[OrderStateName] AS 'OrderStatus',
		ZOOD.PaymentDisplayName AS 'PaymentTypeName',
		ST.[Name] AS 'ShippingTypeName' ,
		CASE WHEN REPLACE(ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,''),' ','') = '' THEN APZ.UserName ELSE ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,'') END  CustomerName ,
		ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
		,ZA.CityName AS 'ShippingCity',
		ZA.StateName AS 'ShippingState',
		ZA.CountryName AS 'ShippingCountry'
		INTO #TBL_OMSOrder
		FROM ZNodeOmsOrder ZOO 
        INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1) 
		INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
        LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
        LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                            (  SELECT TOP 1 1 FROM ZnodeOmsOrderLineItems ZOOLI WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId ))
        LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)
        LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
        LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
        LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
		LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode  = ZOOD.CultureCode )
		LEFT JOIN ZnodeUserAddress ZSP ON (ZSP.UserId = ZOOD.UserId)
		LEFT JOIN ZnodeAddress ZA ON (ZA.AddressId = ZSP.AddressId )
		LEFT JOIN ZnodeUser  ZU ON (ZU.UserId = ZOOD.UserId )
		LEFT JOIN AspNetUsers AP ON (AP.Id = ZU.AspNetUserId)
		LEFT JOIN AspNetZnodeUser APZ ON (APZ.AspNetZnodeUserId = AP.UserName)
        WHERE CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
		AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))
		AND EXISTS (SELECT TOP 1 1 FROM dbo.split(@OrderStatus,'|') SP WHERE SP.Item = OS.OrderStateName)
		AND ZA.IsShipping = 1
		
		SELECT OrderNumber,OmsOrderID,PortalId ,UserId,OmsOrderStateId,ShippingID,PaymentTypeId,BillingFirstName,BillingLastName,
		BillingCompanyName,BillingStreet1,BillingStreet2, BillingCity,BillingStateCode,BillingPostalCode,BillingCountry,BillingPhoneNumber,BillingEmailId,
		CAST(tbl.TaxCost AS NUMERIC(28,6)) TaxCost,CAST(ShippingCost AS NUMERIC(28,6)) ShippingCost,
		CAST(SubTotal AS NUMERIC(28,6)) SubTotal,CAST(DiscountAmount AS NUMERIC(28,6)) DiscountAmount,CAST(TotalAmount AS NUMERIC(28,6)) TotalAmount,OrderDate,ShippingNumber,TrackingNumber,CouponCode,PromoDescription,ReferralUserId,PurchaseOrderNumber,OmsPaymentStateId,
        WebServiceDownloadDate,PaymentSettingID,ShipDate,ReturnDate, SalesTax,VAT,GST,PST,HST,StoreName,OrderStatus,PaymentTypeName,ShippingTypeName,CustomerName,Symbol 
		,ShippingCity,ShippingCountry,ShippingState
		FROM #TBL_OMSOrder tbl
			
		IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
GO


INSERT INTO ZnodeReportStyleSheets(StyleSheetXml,IsDefault,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT '<?xml version="1.0" encoding="utf-8"?><StyleSheetSerializer SerializerVersion="17.2.7.0" FileName=""><Styles><Item1 Name="TableHeader" BorderStyle="Inset" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="#231B2A" BackColor="#D3D3D3" BorderColor="White" StringFormat="Center;Center;0;None;Character;Default" TextAlignment="MiddleLeft" Padding="5,5,5,5,100" Sides="Top,Bottom" BorderWidthSerializable="1.0" /><Item2 Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" ForeColor="#545659" /><Item3 Name="EvenStyle" BorderStyle="Inset" Padding="1,1,1,1,100" BackColor="255,224,224,224" BorderColor="Gray" Sides="Right, Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidtSerializable="1.0" /><Item3 Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="#FFFFFF" BorderColor="#D3D3D3" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" /><Item4 Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="#FFFFFF" BorderColor="#D3D3D3" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" /><Item5 Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="#3C4145" BorderColor="#53B24D" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4.0" /><Item6 Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="#545659" BackColor="#FFFFFF" StringFormat="Near;Near;0;None;Character;Default" /><Item7 Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="#545659" BackColor="#FFFFFF" StringFormat="Near;Near;0;None;Character;Default" /><Item8 Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item9 Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" /><Item10 Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item11 Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item12 Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item13 Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" StringFormat="Far;Near;0;None;Character;Default" TextAlignment="MiddleRight" ForeColor="#545659"  /><Item14 Name="TableHeaderRightAlignCell" BorderStyle="Inset" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="#231B2A" BackColor="#D3D3D3" BorderColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" Padding="5,5,5,5,100" Sides="Top,Bottom" BorderWidthSerializable="1.0"  /></Styles></StyleSheetSerializer>',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportStyleSheets WHERE StyleSheetXml = '<?xml version="1.0" encoding="utf-8"?><StyleSheetSerializer SerializerVersion="17.2.7.0" FileName=""><Styles><Item1 Name="TableHeader" BorderStyle="Inset" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="#231B2A" BackColor="#D3D3D3" BorderColor="White" StringFormat="Center;Center;0;None;Character;Default" TextAlignment="MiddleLeft" Padding="5,5,5,5,100" Sides="Top,Bottom" BorderWidthSerializable="1.0" /><Item2 Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" ForeColor="#545659" /><Item3 Name="EvenStyle" BorderStyle="Inset" Padding="1,1,1,1,100" BackColor="255,224,224,224" BorderColor="Gray" Sides="Right, Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidtSerializable="1.0" /><Item3 Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="#FFFFFF" BorderColor="#D3D3D3" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" /><Item4 Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="#FFFFFF" BorderColor="#D3D3D3" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" /><Item5 Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="#3C4145" BorderColor="#53B24D" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4.0" /><Item6 Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="#545659" BackColor="#FFFFFF" StringFormat="Near;Near;0;None;Character;Default" /><Item7 Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="#545659" BackColor="#FFFFFF" StringFormat="Near;Near;0;None;Character;Default" /><Item8 Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item9 Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" /><Item10 Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item11 Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item12 Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item13 Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" StringFormat="Far;Near;0;None;Character;Default" TextAlignment="MiddleRight" ForeColor="#545659"  /><Item14 Name="TableHeaderRightAlignCell" BorderStyle="Inset" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="#231B2A" BackColor="#D3D3D3" BorderColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" Padding="5,5,5,5,100" Sides="Top,Bottom" BorderWidthSerializable="1.0"  /></Styles></StyleSheetSerializer>')

GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Sales',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'Sales')
GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Product',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'Product')
GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Review',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'Review')
GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Customer',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'Customer')
GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'General',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'General')
GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Custom Reports',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'Custom Reports')
GO
INSERT INTO ZnodeReportCategories (CategoryName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT 'Product info',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeReportCategories WHERE CategoryName = 'Product info')
GO


INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales'),'Orders','Orders','To view Orders for a particular date range with Order status.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales') AND ReportCode = 'Orders')

GO

INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales'),'Coupons','Coupon Usage','To see the coupon usage on your site.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales') AND ReportCode = 'Coupons')

GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales'),'SalesTax','Sales Tax','To see the sales tax details.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales') AND ReportCode = 'SalesTax')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales'),'AffiliateOrders','Affiliate Orders','To see the affiliate orders on your site.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales') AND ReportCode = 'AffiliateOrders')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales'),'OrderPickList','Order Pick List','To get a list of items to be pulled from inventory for each order with a status of Submitted.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Sales') AND ReportCode = 'OrderPickList')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product'),'BestSellerProduct','Best Sellers','To list your best selling products.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product') AND ReportCode = 'BestSellerProduct')
GO

INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product'),'InventoryReorder','Low Inventory','To list all products whose inventory has dropped below the re-order level.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product') AND ReportCode = 'InventoryReorder')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product info'),'ProductInfo','Product Info','This report show the report product info.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product info') AND ReportCode = 'ProductInfo')
GO

INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product'),'TopEarningProduct','Top Earning Products','To list the products that generate the most revenue on your site.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product') AND ReportCode = 'TopEarningProduct')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product'),'PopularSearch','Popular Search','To see most popular search keywords entered by Customers on your site.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product') AND ReportCode = 'PopularSearch')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer'),'Users','Users','To list Users from each profile and filter them by the date that they were created.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer') AND ReportCode = 'Users')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer'),'EmailOptInCustomer','Email Opt-In Customer','To get a list of all Accounts who have selected to receive promotional email from you.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer') AND ReportCode = 'EmailOptInCustomer')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer'),'MostFrequentCustomer','Most Frequent Customer','To find the customers who purchase from you most often.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer') AND ReportCode = 'MostFrequentCustomer')
GO

INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer'),'TopSpendingCustomers','Top Spending Customers','To list the products that generate the most revenue on your site.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Customer') AND ReportCode = 'TopSpendingCustomers')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'General'),'Vendors','Vendor','To see the Vendor details.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'General') AND ReportCode = 'Vendors')
GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Review'),'ServiceRequest','Service Requests','To get a list of all service requests.',2,GETDATE(),2,GETDATE(),0
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Review') AND ReportCode = 'ServiceRequest')
GO


UPDATE ZnodeReportDetails
SET ReportName = 'Top Ordering Customer'
WHERE ReportCode = 'MostFrequentCustomer'

GO
INSERT INTO ZnodeReportDetails (ReportCategoryId,ReportCode,ReportName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product'),'AbandonedCart','Abandoned Cart','To see the Abandoned Carts details.',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT * FROM ZnodeReportDetails WHERE ReportCategoryId = (SELECT ReportCategoryId FROM ZnodeReportCategories WHERE CategoryName = 'Product') AND ReportCode = 'AbandonedCart')
GO

UPDATE ZnodeReportCategories
SET IsActive = 0
WHERE CategoryName IN ('Review','General','Custom Reports','Product info')
GO

SET IDENTITY_INSERT [dbo].[ZnodeReportSetting] ON 
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (1, N'Orders', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>StoresName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>StoreWithCurrency</value><parametertype>text</parametertype></column><column><id>2</id><name>BeginDate</name><headertext>Begin Date</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>3</id><name>EndDate</name><headertext>End Date</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>OrderStatusName</name><headertext>Order Status</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>OrderNumber</name><headertext>Order No.</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>5</id><name>OrderDate</name><headertext>Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>6</id><name>OrderStatus</name><headertext>Order Status</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>7</id><name>BillingName</name><headertext>Billing Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>BillingFirstName</name><headertext>First Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>BillingLastName</name><headertext>Last Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>BillingCompanyName</name><headertext>Company Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>18</id><name>ShippingCity</name><headertext>Shipping City</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>11</id><name>ShippingStateCode</name><headertext>Shipping State</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>12</id><name>ShippingCountryCode</name><headertext>Shipping Country</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>13</id><name>BillingPhoneNumber</name><headertext>Billing Ph No</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>14</id><name>BillingEmailId</name><headertext>Billing Email ID</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>15</id><name>ShippingTypeName</name><headertext>Shipping Type</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>16</id><name>PaymentTypeName</name><headertext>Payment Type</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>17</id><name>TaxCost</name><headertext>Tax</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>18</id><name>ShippingCost</name><headertext>Shipping Cost</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>19</id><name>SubTotal</name><headertext>Sub Total</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>20</id><name>DiscountAmount</name><headertext>Discount</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>21</id><name>Total</name><headertext>Total Amount</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>22</id><name>PurchaseOrderNumber</name><headertext>Purchase Order Number</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>23</id><name>SalesTax</name><headertext>Sales Tax</headertext><width>0</width><datatype>decimal</datatype><columntype>decimal</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>24</id><name>StoreName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>25</id><name>Symbol</name><headertext>Symbol</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>26</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>27</id><name>ChartType</name><headertext>Chart Type</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value>None,Bar,Pie</value><parametertype>dropdown</parametertype></column><column><id>28</id><name>XAxis</name><headertext>X Axis</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value>Order Date,Customer Name,Store Name</value><parametertype>dropdown</parametertype></column><column><id>29</id><name>YAxis</name><headertext>Y Axis</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value>Total Amount</value><parametertype>dropdown</parametertype></column></columns>', 2, CAST(N'2018-11-06T13:15:24.997' AS DateTime), 2, CAST(N'2018-11-06T13:15:24.997' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="Orders, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Landscape="true" Margins="25, 27, 29, 52" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0" Font="Verdana, 6.75pt">
  <Parameters>
    <Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods ($)|Wine &amp; Cheese ($)|ModernB2C ($)" Name="StoresName" />
    <Item2 Ref="6" Description="Begin Date" ValueInfo="2018-12-01" Name="BeginDate" Type="#Ref-5" />
    <Item3 Ref="7" Description="End Date" ValueInfo="2018-12-31" Name="EndDate" Type="#Ref-5" />
    <Item4 Ref="9" Description="Order Status" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="SUBMITTED|SHIPPED|CANCELLED|PENDING APPROVAL|SENDING|ORDER RECEIVED|FAILED|IN PROGRESS|IN PRODUCTION|WAITING TO SHIP|INVOICED|PENDING PAYMENT" Name="OrderStatusName" />
    <Item5 Ref="11" Description="Visible Columns" LookUpSettings="#Ref-10" MultiValue="true" ValueInfo="Store Name|Order No.|Date and Time|Order Status|Billing Name|Payment Type|Tax|Shipping Cost|Sub Total|Discount|Total Amount" Name="VisibleColumns" />
  </Parameters>
  <Bands>
    <Item1 Ref="12" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="13" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle">
          <Rows>
            <Item1 Ref="14" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="15" ControlType="XRTableCell" Name="xrTableCell26" Weight="0.068246096482670215" CanShrink="true" Text="xrTableCell26" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="16" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item1>
                <Item2 Ref="17" ControlType="XRTableCell" Name="xrTableCell18" Weight="0.056427902627327151" CanShrink="true" TextTrimming="None" Text="xrTableCell18" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="18" Expression="[OrderNumber]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="19" UseFont="false" />
                </Item2>
                <Item3 Ref="20" ControlType="XRTableCell" Name="xrTableCell19" Weight="0.061983704302449351" CanShrink="true" TextTrimming="None" Text="xrTableCell19" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="21" Expression="[OrderDate]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="22" UseFont="false" />
                </Item3>
                <Item4 Ref="23" ControlType="XRTableCell" Name="xrTableCell20" Weight="0.06060738129186833" CanShrink="true" TextTrimming="None" Text="xrTableCell20" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="24" Expression="[OrderStatus]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="25" UseFont="false" />
                </Item4>
                <Item5 Ref="26" ControlType="XRTableCell" Name="xrTableCell21" Weight="0.07332425447814632" CanShrink="true" TextTrimming="None" Text="xrTableCell21" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="27" Expression="[BillingFirstName] +'' ''+ [BillingLastName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="28" UseFont="false" />
                </Item5>
                <Item6 Ref="29" ControlType="XRTableCell" Name="xrTableCell24" Weight="0.044430920527531552" CanShrink="true" TextTrimming="None" Text="xrTableCell24" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="30" Expression="[ShippingCity]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="31" UseFont="false" />
                </Item6>
                <Item7 Ref="32" ControlType="XRTableCell" Name="xrTableCell25" Weight="0.038953133068130807" CanShrink="true" TextTrimming="None" Text="xrTableCell25" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="33" Expression="[ShippingStateCode]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="34" UseFont="false" />
                </Item7>
                <Item8 Ref="35" ControlType="XRTableCell" Name="xrTableCell27" Weight="0.061946451723105783" CanShrink="true" TextTrimming="None" Text="xrTableCell27" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="36" Expression="[ShippingCountryCode]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="37" UseFont="false" />
                </Item8>
                <Item9 Ref="38" ControlType="XRTableCell" Name="xrTableCell29" Weight="0.074221364001946219" CanShrink="true" TextTrimming="None" Text="xrTableCell29" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="39" Expression="[BillingEmailId]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="40" UseFont="false" />
                </Item9>
                <Item10 Ref="41" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.062831401313047278" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="42" Expression="[ShippingTypeName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="43" UseFont="false" />
                </Item10>
                <Item11 Ref="44" ControlType="XRTableCell" Name="xrTableCell22" Weight="0.060383592656282244" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="45" Expression="[PaymentTypeName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="46" UseFont="false" />
                </Item11>
                <Item12 Ref="47" ControlType="XRTableCell" Name="xrTableCell30" Weight="0.056358764891089728" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell30" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="1,1,1,1,100">
                  <ExpressionBindings>
                    <Item1 Ref="48" Expression="[SubTotal]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="49" UseFont="false" UsePadding="false" />
                </Item12>
                <Item13 Ref="50" ControlType="XRTableCell" Name="xrTableCell31" Weight="0.064935194096351539" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell31" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="51" Expression="[ShippingCost]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="52" UseFont="false" />
                </Item13>
                <Item14 Ref="53" ControlType="XRTableCell" Name="xrTableCell32" Weight="0.058897048605883351" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell32" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="54" Expression="[TaxCost]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="55" UseFont="false" />
                </Item14>
                <Item15 Ref="56" ControlType="XRTableCell" Name="xrTableCell33" Weight="0.063411221826810277" CanShrink="true" TextTrimming="None" Text="xrTableCell33" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="57" Expression="[DiscountAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="58" UseFont="false" />
                </Item15>
                <Item16 Ref="59" ControlType="XRTableCell" Name="xrTableCell34" Weight="0.072790928700972118" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell34" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="60" Expression="[TotalAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="61" UseFont="false" />
                </Item16>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="62" ControlType="TopMarginBand" Name="TopMargin" HeightF="29.16667" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="63" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="52.37503" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="64" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="473.8083,23" LocationFloat="0, 23.00002" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="65" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="974.1901,23" LocationFloat="473.8083, 23.00002" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="66" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.38">
      <SubBands>
        <Item1 Ref="67" ControlType="SubBand" Name="SubBand1" HeightF="290.625" Visible="false">
          <Controls>
            <Item1 Ref="68" ControlType="XRChart" Name="xrChart1" SizeF="1448,290.625" LocationFloat="0, 0" BorderColor="Black" Borders="None">
              <Chart Ref="69" AutoLayout="true" PaletteName="Flow">
                <DataContainer Ref="70">
                  <SeriesSerializable>
                    <Item1 Ref="71" Name="Series 1" ArgumentDataMember="XAxis" ValueDataMembersSerializable="YAxis" LabelsVisibility="True">
                      <Label Ref="72" Position="Top" TypeNameSerializable="SideBySideBarSeriesLabel" BackColor="Window" LineVisibility="True" TextPattern="{V:$0.00}">
                        <Border Ref="73" Visibility="False" />
                      </Label>
                    </Item1>
                  </SeriesSerializable>
                  <SeriesTemplate Ref="74" ToolTipSeriesPattern="{S:$0.00}">
                    <View Ref="75" ExplodeMode="All" TypeNameSerializable="PieSeriesView">
                      <TotalLabel Ref="76" Visible="true" />
                    </View>
                  </SeriesTemplate>
                </DataContainer>
                <Legend Ref="77" Visibility="False" Name="Default Legend" />
                <OptionsPrint Ref="78" ImageFormat="Metafile" />
                <Diagram Ref="79" TypeNameSerializable="XYDiagram">
                  <AxisX Ref="80" VisibleInPanesSerializable="-1" />
                  <AxisY Ref="81" VisibleInPanesSerializable="-1" />
                  <DefaultPane Ref="82" EnableAxisXScrolling="False" EnableAxisYScrolling="False" EnableAxisXZooming="False" EnableAxisYZooming="False">
                    <StackedBarTotalLabel Ref="83">
                      <ConnectorLineStyle Ref="84" />
                    </StackedBarTotalLabel>
                  </DefaultPane>
                </Diagram>
              </Chart>
            </Item1>
          </Controls>
        </Item1>
      </SubBands>
      <Controls>
        <Item1 Ref="85" ControlType="XRTable" Name="xrTable5" SizeF="970.8361,30.00001" LocationFloat="275.87, 64.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="86" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="87" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="88" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="89" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods ($), Wine &amp; Cheese ($), ModernB2C ($)" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="90" ControlType="XRTable" Name="xrTable4" SizeF="275.8668,29.99998" LocationFloat="3.178914E-05, 64.37505" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="91" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8">
              <Cells>
                <Item1 Ref="92" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Order Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="93" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="94" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="12/1/2018 12:00:00 AM - 12/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item2>
        <Item3 Ref="95" ControlType="XRLabel" Name="xrLabel3" Text="Orders" TextAlignment="MiddleLeft" SizeF="221.2345,29.24998" LocationFloat="3.178914E-05, 10.00001" StyleName="ReportHeaderText" Padding="10,2,2,2,100" CanPublish="false">
          <StylePriority Ref="96" UsePadding="false" UseTextAlignment="false" />
        </Item3>
        <Item4 Ref="97" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="98" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48.00002">
      <Controls>
        <Item1 Ref="99" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="100" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="7.947286E-06, 20.00001" Font="Verdana, 6.75pt">
              <Rows>
                <Item1 Ref="101" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="102" ControlType="XRTableCell" Name="xrTableCell23" Weight="0.075828990991525846" CanShrink="true" Text="Store Name" StyleName="TableHeader" />
                    <Item2 Ref="103" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.062697712896730956" CanShrink="true" TextTrimming="None" Text="Order No." StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="104" UseFont="false" />
                    </Item2>
                    <Item3 Ref="105" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.068870757355785031" CanShrink="true" TextTrimming="None" Text="Date and Time" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="106" UseFont="false" />
                    </Item3>
                    <Item4 Ref="107" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.067341551226841975" CanShrink="true" TextTrimming="None" Text="Order Status" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="108" UseFont="false" />
                    </Item4>
                    <Item5 Ref="109" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.081471399904093328" CanShrink="true" TextTrimming="None" Text="Billing Name" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="110" UseFont="false" />
                    </Item5>
                    <Item6 Ref="111" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.049367678877754291" CanShrink="true" TextTrimming="None" Text="Shipping City" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="112" UseFont="false" />
                    </Item6>
                    <Item7 Ref="113" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.043281224224828573" CanShrink="true" TextTrimming="None" Text="Shipping State" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="114" UseFont="false" />
                    </Item7>
                    <Item8 Ref="115" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.068829398553931082" CanShrink="true" TextTrimming="None" Text="Shipping Country" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="116" UseFont="false" />
                    </Item8>
                    <Item9 Ref="117" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.082468141097089123" CanShrink="true" TextTrimming="None" Text="Billing Email ID" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="118" UseFont="false" />
                    </Item9>
                    <Item10 Ref="119" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.069812749685619929" CanShrink="true" TextTrimming="None" Text="Shipping Type" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                      <StylePriority Ref="120" UseFont="false" />
                    </Item10>
                    <Item11 Ref="121" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.0670928480258978" CanShrink="true" TextTrimming="None" Text="Payment Type" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                      <StylePriority Ref="122" UseFont="false" />
                    </Item11>
                    <Item12 Ref="123" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.0626208948088319" CanShrink="true" TextTrimming="None" Text="Sub Total" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="124" UseFont="false" />
                    </Item12>
                    <Item13 Ref="125" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.072150218037083561" CanShrink="true" TextTrimming="None" Text="Shipping Cost" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="126" UseFont="false" />
                    </Item13>
                    <Item14 Ref="127" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.065441166705656251" CanShrink="true" TextTrimming="None" Text="Tax" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="128" UseFont="false" />
                    </Item14>
                    <Item15 Ref="129" ControlType="XRTableCell" Name="xrTableCell16" Weight="0.070456918953480663" CanShrink="true" TextTrimming="None" Text="Discount" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="2,2,0,0,100">
                      <StylePriority Ref="130" UseFont="false" />
                    </Item15>
                    <Item16 Ref="131" ControlType="XRTableCell" Name="xrTableCell17" Weight="0.080878807742879977" CanShrink="true" Multiline="true" TextTrimming="None" Text="Total Amount" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="132" UseFont="false" />
                    </Item16>
                  </Cells>
                </Item1>
              </Rows>
              <StylePriority Ref="133" UseFont="false" />
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="134" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="28">
      <Controls>
        <Item1 Ref="135" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 0" Font="Verdana, 6.75pt">
          <Rows>
            <Item1 Ref="136" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="137" ControlType="XRTableCell" Name="xrTableCell35" Weight="0.075828990991525846" CanShrink="true" Text="Total" StyleName="TableHeader" />
                <Item2 Ref="138" ControlType="XRTableCell" Name="xrTableCell36" Weight="0.062697712896730956" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="139" UseFont="false" />
                </Item2>
                <Item3 Ref="140" ControlType="XRTableCell" Name="xrTableCell37" Weight="0.068870746676420208" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="141" UseFont="false" />
                </Item3>
                <Item4 Ref="142" ControlType="XRTableCell" Name="xrTableCell38" Weight="0.067341557226725648" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="143" UseFont="false" />
                </Item4>
                <Item5 Ref="144" ControlType="XRTableCell" Name="xrTableCell39" Weight="0.081471404583574478" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="145" UseFont="false" />
                </Item5>
                <Item6 Ref="146" ControlType="XRTableCell" Name="xrTableCell40" Weight="0.049367678877754291" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="147" UseFont="false" />
                </Item6>
                <Item7 Ref="148" ControlType="XRTableCell" Name="xrTableCell41" Weight="0.043281224224828573" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="149" UseFont="false" />
                </Item7>
                <Item8 Ref="150" ControlType="XRTableCell" Name="xrTableCell42" Weight="0.068829433694955047" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="151" UseFont="false" />
                </Item8>
                <Item9 Ref="152" ControlType="XRTableCell" Name="xrTableCell44" Weight="0.082468105956065185" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="153" UseFont="false" />
                </Item9>
                <Item10 Ref="154" ControlType="XRTableCell" Name="xrTableCell45" Weight="0.069812711614798281" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                  <StylePriority Ref="155" UseFont="false" />
                </Item10>
                <Item11 Ref="156" ControlType="XRTableCell" Name="xrTableCell46" Weight="0.067092927303642191" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                  <StylePriority Ref="157" UseFont="false" />
                </Item11>
                <Item12 Ref="158" ControlType="XRTableCell" Name="xrTableCell47" Weight="0.062620946298987581" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Sub Total" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="159" Expression="Sum([SubTotal])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="160" UseFont="false" />
                </Item12>
                <Item13 Ref="161" ControlType="XRTableCell" Name="xrTableCell48" Weight="0.072150041085525529" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Shipping Cost" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="162" Expression="Sum([ShippingCost])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="163" UseFont="false" />
                </Item13>
                <Item14 Ref="164" ControlType="XRTableCell" Name="xrTableCell49" Weight="0.065441357241460524" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Tax" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="165" Expression="Sum([TaxCost])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="166" UseFont="false" />
                </Item14>
                <Item15 Ref="167" ControlType="XRTableCell" Name="xrTableCell50" Weight="0.070456833972785168" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Disc" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="168" Expression="Sum([DiscountAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="169" UseFont="false" />
                </Item15>
                <Item16 Ref="170" ControlType="XRTableCell" Name="xrTableCell51" Weight="0.080878878215053948" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Total Amount" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="171" Expression="Sum([TotalAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="172" UseFont="false" />
                </Item16>
              </Cells>
            </Item1>
          </Rows>
          <StylePriority Ref="173" UseFont="false" />
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="174">
    <Xls Ref="175" ShowGridLines="true" />
    <Xlsx Ref="176" ShowGridLines="true" />
    <Csv Ref="177" Separator=";" TextExportMode="Value" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="178" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="179" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="180" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="181" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="182" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="183" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="184" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="185" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="186" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="187" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="188" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="189" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="190" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="191" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="192" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0Lk9yZGVyTW9kZWwsIFpub2RlLkxpYnJhcmllcy5EZXZFeHByZXNzLlJlcG9ydCwgVmVyc2lvbj0wLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwiIC8+PC9PYmplY3REYXRhU291cmNlPg==" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-193" ValueMember="DisplayMember" DisplayMember="DisplayMember" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" />
    <Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-194" ValueMember="Value" DisplayMember="Value" />
    <Item4 Ref="10" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-195" ValueMember="Value" DisplayMember="Value" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportOrderDetailsModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="193" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item7 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="194" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item8 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="195" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>')
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (3, N'MostFrequentCustomer', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>StoresName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>2</id><name>BeginDate</name><headertext>Begin Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>3</id><name>EndDate</name><headertext>End Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>ShowAllCustomers</name><headertext>Show All Customers</headertext><width>0</width><datatype>System.Boolean</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>true</value><parametertype>boolean</parametertype></column><column><id>5</id><name>TopCustomers</name><headertext>Top Customers</headertext><width>0</width><datatype>System.Int32</datatype><columntype>text</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>10</value><parametertype>text</parametertype></column><column><id>6</id><name>StoreName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>7</id><name>CustomerName</name><headertext>Customer Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>CustomerType</name><headertext>Customer Type</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>EmailID</name><headertext>Email ID</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>OrderCount</name><headertext>Order Count</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column></columns>', 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="MostFrequentCustomer, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DisplayName="TopOrderingCustomers" Landscape="true" Margins="25, 27, 29, 42" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0">
  <Parameters>
    <Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods|Wine &amp; Cheese|Nut Wholesaler|ModernB2C|test|mrr|Adidas|NewStore|sadasd|Fine Foods|Copy Of NewStore" Name="StoresName" />
    <Item2 Ref="6" Description="Begin Date and Time" ValueInfo="2018-12-01" Name="BeginDate" Type="#Ref-5" />
    <Item3 Ref="7" Description="End Date and Time" ValueInfo="2018-12-31" Name="EndDate" Type="#Ref-5" />
    <Item4 Ref="9" Description="Visible Columns" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="Store Name|Customer Name|Customer Type|Email ID|Order Count" Name="VisibleColumns" />
    <Item5 Ref="11" Description="Show All Customers" ValueInfo="True" Name="ShowAllCustomers" Type="#Ref-10" />
    <Item6 Ref="13" Description="Top Customers" ValueInfo="10" Name="TopCustomers" Type="#Ref-12" />
  </Parameters>
  <Bands>
    <Item1 Ref="14" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="15" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle">
          <Rows>
            <Item1 Ref="16" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="17" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.1153039785531851" CanShrink="true" Text="xrTableCell7" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="18" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item1>
                <Item2 Ref="19" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.23480083759014422" CanShrink="true" Text="xrTableCell8" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="20" Expression="[CustomerName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item2>
                <Item3 Ref="21" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.23060795710637019" CanShrink="true" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="22" Expression="[CustomerType]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item3>
                <Item4 Ref="23" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.16352201021634616" CanShrink="true" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="24" Expression="[Email]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item4>
                <Item5 Ref="25" ControlType="XRTableCell" Name="xrTableCell11" Weight="0.12129334782293327" CanShrink="true" Text="xrTableCell11" StyleName="RightAlignCell" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="26" Expression="[OrderCount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item5>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="27" ControlType="TopMarginBand" Name="TopMargin" HeightF="29" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="28" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="42" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="29" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="585.7137,23" LocationFloat="0, 6.00001" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="30" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="862.2862,23" LocationFloat="585.7138, 6.00001" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="31" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.38">
      <SubBands>
        <Item1 Ref="32" ControlType="SubBand" Name="SubBand1" HeightF="317.7083" Visible="false">
          <Controls>
            <Item1 Ref="33" ControlType="XRChart" Name="xrChart1" SizeF="1438,297.7084" LocationFloat="10.00001, 10.00001" BorderColor="Black" Borders="None">
              <Chart Ref="34">
                <DataContainer Ref="35">
                  <SeriesSerializable>
                    <Item1 Ref="36" Name="Series 1" ArgumentDataMember="XAxis" ValueDataMembersSerializable="YAxis" LabelsVisibility="True">
                      <Label Ref="37" Position="Top" TypeNameSerializable="SideBySideBarSeriesLabel" />
                    </Item1>
                  </SeriesSerializable>
                </DataContainer>
                <Legend Ref="38" Visibility="False" Name="Default Legend" />
                <OptionsPrint Ref="39" ImageFormat="Metafile" />
                <Diagram Ref="40" TypeNameSerializable="XYDiagram">
                  <AxisX Ref="41" VisibleInPanesSerializable="-1" />
                  <AxisY Ref="42" VisibleInPanesSerializable="-1" />
                  <DefaultPane Ref="43" EnableAxisXScrolling="False" EnableAxisYScrolling="False" EnableAxisXZooming="False" EnableAxisYZooming="False">
                    <StackedBarTotalLabel Ref="44">
                      <ConnectorLineStyle Ref="45" />
                    </StackedBarTotalLabel>
                  </DefaultPane>
                </Diagram>
              </Chart>
            </Item1>
          </Controls>
        </Item1>
      </SubBands>
      <Controls>
        <Item1 Ref="46" ControlType="XRTable" Name="xrTable5" SizeF="862.2863,30" LocationFloat="585.7137, 64.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="47" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="48" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="49" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="50" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods, Wine &amp; Cheese, Nut Wholesaler, ModernB2C, test, mrr, Adidas, NewStore, sadasd, Fine Foods, Copy Of NewStore" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="51" ControlType="XRTable" Name="xrTable4" SizeF="585.7137,29.99997" LocationFloat="0, 64.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="52" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8">
              <Cells>
                <Item1 Ref="53" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Order Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="54" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="55" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="12/1/2018 12:00:00 AM - 12/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item2>
        <Item3 Ref="56" ControlType="XRLabel" Name="xrLabel3" Text="Top Ordering Customers" TextAlignment="MiddleLeft" SizeF="585.7137,29.24998" LocationFloat="0, 10.00001" StyleName="ReportHeaderText" Padding="10,2,2,2,100">
          <StylePriority Ref="57" UsePadding="false" UseTextAlignment="false" />
        </Item3>
        <Item4 Ref="58" ControlType="XRLabel" Name="xrLabel1" SizeF="1446,50" LocationFloat="1.999966, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="59" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48">
      <Controls>
        <Item1 Ref="60" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="61" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="0, 20.00001">
              <Rows>
                <Item1 Ref="62" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="63" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.1153039785531851" Text="Store Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item2 Ref="64" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.23480083759014422" Text="Customer Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item3 Ref="65" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.23060795710637019" Text="Customer Type" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item4 Ref="66" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.16352201021634616" Text="Email ID" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item5 Ref="67" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.12129333924105201" Text="Order Count" StyleName="TableHeaderRightAlignCell" Padding="2,2,0,0,100" />
                  </Cells>
                </Item1>
              </Rows>
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="68" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="31.25">
      <Controls>
        <Item1 Ref="69" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 1.624997">
          <Rows>
            <Item1 Ref="70" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="71" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.1153039785531851" Text="Total" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item2 Ref="72" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.23480083759014422" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item3 Ref="73" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.23060795710637019" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item4 Ref="74" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.16352201021634616" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item5 Ref="75" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.12129333924105201" StyleName="TableHeaderRightAlignCell" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="76" Expression="Sum([OrderCount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item5>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="77">
    <Xls Ref="78" ShowGridLines="true" />
    <Xlsx Ref="79" ShowGridLines="true" />
    <Csv Ref="80" Separator=";" TextExportMode="Value" />
    <PrintPreview Ref="81" DefaultFileName="TopOrderingCustomers" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="82" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="83" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="84" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="85" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="86" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="87" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="88" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="89" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="90" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="91" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="92" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="93" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="94" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="95" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="96" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0Lk1vc3RGcmVxdWVudEN1c3RvbWVyTW9kZWwsIFpub2RlLkxpYnJhcmllcy5EZXZFeHByZXNzLlJlcG9ydCwgVmVyc2lvbj0wLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwiIC8+PC9PYmplY3REYXRhU291cmNlPg==" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-97" ValueMember="Value" DisplayMember="Value" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" />
    <Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-98" ValueMember="Value" DisplayMember="Value" />
    <Item4 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="10" Content="System.Boolean" Type="System.Type" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="12" Content="System.Int32" Type="System.Type" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportMostFrequentCustomerModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item7 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="97" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item8 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="98" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>')
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (5, N'TopSpendingCustomers', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>StoresName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>StoreWithCurrency</value><parametertype>text</parametertype></column><column><id>2</id><name>BeginDate</name><headertext>Begin Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>3</id><name>EndDate</name><headertext>End Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>ShowAllCustomers</name><headertext>Show All Customers</headertext><width>0</width><datatype>System.Boolean</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>true</value><parametertype>boolean</parametertype></column><column><id>5</id><name>TopCustomers</name><headertext>Top Customers</headertext><width>0</width><datatype>System.Int32</datatype><columntype>text</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>10</value><parametertype>text</parametertype></column><column><id>6</id><name>AmountGreaterThan</name><headertext>Amount Greater Than</headertext><width>0</width><datatype>System.Decimal</datatype><columntype>text</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>7</id><name>StoreName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>CustomerName</name><headertext>Customer Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>CustomerType</name><headertext>Customer Type</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>EmailID</name><headertext>Email ID</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>11</id><name>SubTotalAmount</name><headertext>Sub Total Amount</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>12</id><name>TotalShippingCost</name><headertext>Total Shipping Cost</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>12</id><name>TotalTaxCost</name><headertext>Total Tax Cost</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>13</id><name>TotalDiscount</name><headertext>Total Discount</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>14</id><name>AverageTotalAmount</name><headertext>Average Total Amount</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>15</id><name>TotalAmount</name><headertext>Total Amount</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column></columns>', 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="TopSpendingCustomers, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Landscape="true" Margins="25, 27, 29, 42" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0">
  <Parameters>
    <Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods ($)|Wine &amp; Cheese ($)|ModernB2C ($)" Name="StoresName" />
    <Item2 Ref="6" Description="Begin Date and Time" ValueInfo="2018-12-01" Name="BeginDate" Type="#Ref-5" />
    <Item3 Ref="7" Description="End Date and Time" ValueInfo="2018-12-31" Name="EndDate" Type="#Ref-5" />
    <Item4 Ref="9" Description="Visible Columns" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="Store Name|Customer Name|Customer Type|Email ID|Sub Total Amount|Average Total Amount|Total Amount" Name="VisibleColumns" />
    <Item5 Ref="11" Description="Show All Customers" ValueInfo="True" Name="ShowAllCustomers" Type="#Ref-10" />
    <Item6 Ref="13" Description="Top Customers" ValueInfo="10" Name="TopCustomers" Type="#Ref-12" />
    <Item7 Ref="15" Description="Amount Greater Than" ValueInfo="0" Name="AmountGreaterThan" Type="#Ref-14" />
  </Parameters>
  <Bands>
    <Item1 Ref="16" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="17" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle">
          <Rows>
            <Item1 Ref="18" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="19" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.1115789560171274" CanShrink="true" Text="xrTableCell7" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="20" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item1>
                <Item2 Ref="21" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.23578948974609376" CanShrink="true" Text="xrTableCell8" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="22" Expression="[CustomerName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item2>
                <Item3 Ref="23" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.2315789794921875" CanShrink="true" Text="xrTableCell9" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="24" Expression="[CustomerType]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item3>
                <Item4 Ref="25" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.16421054546649638" CanShrink="true" Text="xrTableCell10" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="26" Expression="[Email]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item4>
                <Item5 Ref="27" ControlType="XRTableCell" Name="xrTableCell20" Weight="0.11153085589507192" TextFormatString="{0:$0.00}" Text="xrTableCell20" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="28" Expression="[SubTotalAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item5>
                <Item6 Ref="29" ControlType="XRTableCell" Name="xrTableCell23" Weight="0.11153085589507192" TextFormatString="{0:$0.00}" Text="xrTableCell23" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="30" Expression="[TotalShippingCost]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item6>
                <Item7 Ref="31" ControlType="XRTableCell" Name="xrTableCell26" Weight="0.11153085589507192" TextFormatString="{0:$0.00}" Text="xrTableCell26" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="32" Expression="[TotalTaxCost]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item7>
                <Item8 Ref="33" ControlType="XRTableCell" Name="xrTableCell29" Weight="0.11153085589507192" TextFormatString="{0:$0.00}" Text="xrTableCell29" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="34" Expression="[TotalDiscount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item8>
                <Item9 Ref="35" ControlType="XRTableCell" Name="xrTableCell11" Weight="0.22320602389384034" CanShrink="true" TextFormatString="{0:$0.00}" Text="xrTableCell11" TextAlignment="MiddleRight" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="36" Expression="[AverageTotalAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item9>
                <Item10 Ref="37" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.12814617103834256" CanShrink="true" TextFormatString="{0:$0.00}" Text="xrTableCell12" TextAlignment="MiddleRight" StyleName="RightAlignCell" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="38" Expression="[TotalAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item10>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="39" ControlType="TopMarginBand" Name="TopMargin" HeightF="29" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="40" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="42.00001" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="41" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="698.4742,23" LocationFloat="0, 6.00001" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="42" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="749.5222,23" LocationFloat="698.4778, 6.00001" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="43" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.38">
      <SubBands>
        <Item1 Ref="44" ControlType="SubBand" Name="SubBand1" HeightF="320.8333" Visible="false">
          <Controls>
            <Item1 Ref="45" ControlType="XRChart" Name="xrChart1" SizeF="1438,310.8334" LocationFloat="10.00001, 0" BorderColor="Black" Borders="None">
              <Chart Ref="46">
                <DataContainer Ref="47">
                  <SeriesSerializable>
                    <Item1 Ref="48" Name="Series 1" ArgumentDataMember="XAxis" ValueDataMembersSerializable="YAxis">
                      <Label Ref="49" Position="Top" TypeNameSerializable="SideBySideBarSeriesLabel" />
                    </Item1>
                  </SeriesSerializable>
                </DataContainer>
                <Legend Ref="50" Visibility="False" Name="Default Legend" />
                <OptionsPrint Ref="51" ImageFormat="Metafile" />
                <Diagram Ref="52" TypeNameSerializable="XYDiagram">
                  <AxisX Ref="53" VisibleInPanesSerializable="-1" />
                  <AxisY Ref="54" VisibleInPanesSerializable="-1" />
                  <DefaultPane Ref="55" EnableAxisXScrolling="False" EnableAxisYScrolling="False" EnableAxisXZooming="False" EnableAxisYZooming="False">
                    <StackedBarTotalLabel Ref="56">
                      <ConnectorLineStyle Ref="57" />
                    </StackedBarTotalLabel>
                  </DefaultPane>
                </Diagram>
              </Chart>
            </Item1>
          </Controls>
        </Item1>
      </SubBands>
      <Controls>
        <Item1 Ref="58" ControlType="XRTable" Name="xrTable5" SizeF="903.8635,30" LocationFloat="544.1371, 64.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="59" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="60" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="61" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="62" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods ($), Wine &amp; Cheese ($), ModernB2C ($)" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="63" ControlType="XRTable" Name="xrTable4" SizeF="544.1371,29.99997" LocationFloat="0, 64.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="64" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8">
              <Cells>
                <Item1 Ref="65" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Order Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="66" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="67" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="12/1/2018 12:00:00 AM - 12/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item2>
        <Item3 Ref="68" ControlType="XRLabel" Name="xrLabel3" Text="Top Spending Customers" TextAlignment="MiddleLeft" SizeF="544.1399,29.24998" LocationFloat="0, 10.00001" StyleName="ReportHeaderText" Padding="10,2,2,2,100">
          <StylePriority Ref="69" UsePadding="false" UseTextAlignment="false" />
        </Item3>
        <Item4 Ref="70" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="71" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48">
      <Controls>
        <Item1 Ref="72" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="73" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="0, 20.00001">
              <Rows>
                <Item1 Ref="74" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="75" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.11157894427959736" Text="Store Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item2 Ref="76" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.23578946627103364" Text="Customer Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item3 Ref="77" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.23157895601712741" Text="Customer Type" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item4 Ref="78" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.16421053372896635" Text="Email ID" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item5 Ref="79" ControlType="XRTableCell" Name="xrTableCell19" Weight="0.11153084999980438" Text="Sub Total Amount" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item6 Ref="80" ControlType="XRTableCell" Name="xrTableCell22" Weight="0.11153084999980438" Text="Total Shipping Cost" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item7 Ref="81" ControlType="XRTableCell" Name="xrTableCell25" Weight="0.11153084999980438" Text="Total Tax Cost" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item8 Ref="82" ControlType="XRTableCell" Name="xrTableCell28" Weight="0.11153084999980438" Text="Total Discount" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item9 Ref="83" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.1813755695410112" Text="Average Total Amount" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item10 Ref="84" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.1699765685017523" Text="Total Amount" TextAlignment="MiddleRight" StyleName="TableHeaderRightAlignCell" Padding="2,2,0,0,100" />
                  </Cells>
                </Item1>
              </Rows>
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="85" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="30.20833">
      <Controls>
        <Item1 Ref="86" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 1.619975">
          <Rows>
            <Item1 Ref="87" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="88" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.096574710497347491" Text="Total" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item2 Ref="89" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.20408241330665197" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item3 Ref="90" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.2004381029874231" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item4 Ref="91" ControlType="XRTableCell" Name="xrTableCell16" Weight="0.14212885917359014" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item5 Ref="92" ControlType="XRTableCell" Name="xrTableCell21" Weight="0.0965285131324356" TextFormatString="{0:$0.00}" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="93" Expression="sum([SubTotalAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item5>
                <Item6 Ref="94" ControlType="XRTableCell" Name="xrTableCell24" Weight="0.0965285131324356" TextFormatString="{0:$0.00}" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="95" Expression="SUM([TotalShippingCost])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item6>
                <Item7 Ref="96" ControlType="XRTableCell" Name="xrTableCell27" Weight="0.0965285131324356" TextFormatString="{0:$0.00}" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="97" Expression="sum([TotalTaxCost])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item7>
                <Item8 Ref="98" ControlType="XRTableCell" Name="xrTableCell30" Weight="0.0965285131324356" TextFormatString="{0:$0.00}" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="99" Expression="SUM([TotalDiscount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item8>
                <Item9 Ref="100" ControlType="XRTableCell" Name="xrTableCell18" Weight="0.19319573880300639" TextFormatString="{0:$0.00}" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="101" Expression="SUM([AverageTotalAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="102" UsePadding="false" />
                </Item9>
                <Item10 Ref="103" ControlType="XRTableCell" Name="xrTableCell17" Weight="0.11092073234144614" TextFormatString="{0:$0.00}" StyleName="TableHeaderRightAlignCell" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="104" Expression="Sum([TotalAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item10>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="105">
    <Xls Ref="106" ShowGridLines="true" />
    <Xlsx Ref="107" ShowGridLines="true" />
    <Csv Ref="108" Separator=";" TextExportMode="Value" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="109" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="110" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="111" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="112" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="113" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="114" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="115" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="116" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="117" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="118" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="119" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="120" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="121" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="122" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="123" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LlRvcFNwZW5kaW5nQ3VzdG9tZXJzTW9kZWwsIFpub2RlLkxpYnJhcmllcy5EZXZFeHByZXNzLlJlcG9ydCwgVmVyc2lvbj0wLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwiIC8+PC9PYmplY3REYXRhU291cmNlPg==" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-124" ValueMember="DisplayMember" DisplayMember="DisplayMember" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" />
    <Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-125" ValueMember="Value" DisplayMember="Value" />
    <Item4 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="10" Content="System.Boolean" Type="System.Type" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="12" Content="System.Int32" Type="System.Type" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="14" Content="System.Decimal" Type="System.Type" />
    <Item7 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportTopSpendingCustomersModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item8 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="124" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item9 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="125" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>')
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (6, N'Users', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>StoresName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>2</id><name>BeginDate</name><headertext>Begin Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>3</id><name>EndDate</name><headertext>End Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>5</id><name>Type</name><headertext>Customer Status</headertext><width>0</width><datatype>System.String</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>Active|InActive</value><parametertype>text</parametertype></column><column><id>6</id><name>RegistrationDate</name><headertext>Registration Date</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>7</id><name>StoreName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>CustomerName</name><headertext>Customer Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>Email</name><headertext>Email</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>CustomerStatus</name><headertext>Customer Status</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column></columns>', 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="Users, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" DisplayName="RegisteredUsers" Landscape="true" Margins="25, 27, 29, 46" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0">
  <Parameters>
    <Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods|Wine &amp; Cheese|Nut Wholesaler|ModernB2C|test|mrr|Adidas|NewStore|sadasd|Fine Foods|Copy Of NewStore" Name="StoresName" />
    <Item2 Ref="6" Description="Begin Date and Time" ValueInfo="2018-12-01" Name="BeginDate" Type="#Ref-5" />
    <Item3 Ref="7" Description="End Date and Time" ValueInfo="2018-12-31" Name="EndDate" Type="#Ref-5" />
    <Item4 Ref="9" Description="Visible Columns" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="Registration Date|Store Name|Customer Name|Email" Name="VisibleColumns" />
    <Item5 Ref="11" Description="Customer Status" LookUpSettings="#Ref-10" MultiValue="true" ValueInfo="Active|InActive" Name="Type" />
  </Parameters>
  <Bands>
    <Item1 Ref="12" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="13" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle">
          <Rows>
            <Item1 Ref="14" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="15" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.0839830725110015" CanShrink="true" Text="xrTableCell7" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="16" Expression="[RegistrationDate]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item1>
                <Item2 Ref="17" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.14335810850627762" CanShrink="true" Text="xrTableCell8" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="18" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item2>
                <Item3 Ref="19" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.14817831516823057" CanShrink="true" Text="xrTableCell9" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="20" Expression="[CustomerName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item3>
                <Item4 Ref="21" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.12746329568605017" Text="xrTableCell10" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="22" Expression="[Email]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item4>
                <Item5 Ref="23" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.09355193901415787" Text="xrTableCell14" StyleName="TableRow" Padding="1,1,1,1,100">
                  <ExpressionBindings>
                    <Item1 Ref="24" Expression="[CustomerStatus]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item5>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="25" ControlType="TopMarginBand" Name="TopMargin" HeightF="29" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="26" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="46.00002" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="27" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="551.8372,23" LocationFloat="0, 23.00002" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="28" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="896.1628,23" LocationFloat="551.8373, 23.00002" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="29" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.38">
      <SubBands>
        <Item1 Ref="30" ControlType="SubBand" Name="SubBand1" HeightF="318.75" Visible="false">
          <Controls>
            <Item1 Ref="31" ControlType="XRChart" Name="xrChart1" SizeF="1448,308.75" LocationFloat="0, 0" BorderColor="Black" Borders="None">
              <Chart Ref="32">
                <DataContainer Ref="33">
                  <SeriesSerializable>
                    <Item1 Ref="34" Name="Series 1" ArgumentDataMember="XAxis" ValueDataMembersSerializable="YAxis">
                      <Label Ref="35" Position="Top" TypeNameSerializable="SideBySideBarSeriesLabel" />
                    </Item1>
                  </SeriesSerializable>
                </DataContainer>
                <Legend Ref="36" Visibility="False" Name="Default Legend" />
                <OptionsPrint Ref="37" ImageFormat="Metafile" />
                <Diagram Ref="38" TypeNameSerializable="XYDiagram">
                  <AxisX Ref="39" VisibleInPanesSerializable="-1" />
                  <AxisY Ref="40" VisibleInPanesSerializable="-1" />
                  <DefaultPane Ref="41" EnableAxisXScrolling="False" EnableAxisYScrolling="False" EnableAxisXZooming="False" EnableAxisYZooming="False">
                    <StackedBarTotalLabel Ref="42">
                      <ConnectorLineStyle Ref="43" />
                    </StackedBarTotalLabel>
                  </DefaultPane>
                </Diagram>
              </Chart>
            </Item1>
          </Controls>
        </Item1>
      </SubBands>
      <Controls>
        <Item1 Ref="44" ControlType="XRTable" Name="xrTable5" SizeF="825,30.00001" LocationFloat="551.8372, 64.37996" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="45" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="46" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="47" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="48" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods, Wine &amp; Cheese, Nut Wholesaler, ModernB2C, test, mrr, Adidas, NewStore, sadasd, Fine Foods, Copy Of NewStore" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="49" ControlType="XRTable" Name="xrTable4" SizeF="551.8372,29.99997" LocationFloat="0, 64.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="50" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8">
              <Cells>
                <Item1 Ref="51" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Registration Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="52" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="53" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="12/1/2018 12:00:00 AM - 12/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item2>
        <Item3 Ref="54" ControlType="XRLabel" Name="xrLabel3" Text="Registered Users" TextAlignment="MiddleLeft" SizeF="318.4398,29.24998" LocationFloat="0, 10.00001" StyleName="ReportHeaderText" Padding="10,2,2,2,100">
          <StylePriority Ref="55" UsePadding="false" UseTextAlignment="false" />
        </Item3>
        <Item4 Ref="56" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="57" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48">
      <Controls>
        <Item1 Ref="58" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="59" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="0, 20.00001">
              <Rows>
                <Item1 Ref="60" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="61" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.0839830725110015" Text="Registration Date" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item2 Ref="62" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.14335813365101943" Text="Store Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item3 Ref="63" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.14817826487874705" Text="Customer Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item4 Ref="64" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.12746332083079193" Text="Email" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item5 Ref="65" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.093551915221938384" Text="Customer Status" StyleName="TableHeader" Padding="2,2,0,0,100" />
                  </Cells>
                </Item1>
              </Rows>
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="66" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="28.125">
      <Controls>
        <Item1 Ref="67" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 0">
          <Rows>
            <Item1 Ref="68" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="69" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.083983072511001511" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item2 Ref="70" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.1433581336510194" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item3 Ref="71" ControlType="XRTableCell" Name="xrTableCell11" Weight="0.14817826487874702" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item4 Ref="72" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.12746332083079193" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item5 Ref="73" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.093551915221938384" StyleName="TableHeader" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="74">
    <Xls Ref="75" ShowGridLines="true" />
    <Xlsx Ref="76" ShowGridLines="true" />
    <Csv Ref="77" Separator=";" TextExportMode="Value" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="78" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="79" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="80" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="81" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="82" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="83" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="84" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="85" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="86" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="87" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="88" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="89" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="90" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="91" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="92" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LlVzZXJzTW9kZWwsIFpub2RlLkxpYnJhcmllcy5EZXZFeHByZXNzLlJlcG9ydCwgVmVyc2lvbj0wLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwiIC8+PC9PYmplY3REYXRhU291cmNlPg==" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-93" ValueMember="Value" DisplayMember="Value" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" />
    <Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-94" ValueMember="Value" DisplayMember="Value" />
    <Item4 Ref="10" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-95" ValueMember="Value" DisplayMember="Value" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportUsersModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="93" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item7 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="94" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item8 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="95" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>')
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (8, N'BestSellerProduct', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>StoresName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>2</id><name>BeginDate</name><headertext>Begin Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>3</id><name>EndDate</name><headertext>End Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>ShowAllProducts</name><headertext>Show All Products</headertext><width>0</width><datatype>System.Boolean</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>True</value><parametertype>boolean</parametertype></column><column><id>5</id><name>TopProducts</name><headertext>Top Products</headertext><width>0</width><datatype>System.Int32</datatype><columntype>text</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>10</value><parametertype>text</parametertype></column><column><id>6</id><name>StoreName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>7</id><name>ProductName</name><headertext>Product Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>SKU</name><headertext>SKU</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>UnitOfMeasurement</name><headertext>Unit Of Measurement</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>QuantityOrdered</name><headertext>Quantity Ordered</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column></columns>', 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?><XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="BestSellerProduct, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Landscape="true" Margins="25, 27, 29, 48" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0"><Parameters><Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods|Wine &amp; Cheese|Nut Wholesaler|ModernB2C" Name="StoresName" /><Item2 Ref="6" Description="Begin Date and Time" ValueInfo="2018-12-01" Name="BeginDate" Type="#Ref-5" /><Item3 Ref="7" Description="End Date and Time" ValueInfo="2018-12-31" Name="EndDate" Type="#Ref-5" /><Item4 Ref="9" Description="Visible Columns" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="Store Name|Product Name|SKU|Quantity Ordered" Name="VisibleColumns" /><Item5 Ref="11" Description="Show All Products" ValueInfo="True" Name="ShowAllProducts" Type="#Ref-10" /><Item6 Ref="13" Description="Top Products" ValueInfo="10" Name="TopProducts" Type="#Ref-12" /></Parameters><Bands><Item1 Ref="14" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100"><Controls><Item1 Ref="15" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle"><Rows><Item1 Ref="16" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5"><Cells><Item1 Ref="17" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.17410714956430287" CanShrink="true" Text="xrTableCell8" StyleName="TableRow" Padding="2,2,0,0,100"><ExpressionBindings><Item1 Ref="18" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" /></ExpressionBindings></Item1><Item2 Ref="19" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.11840277028695143" CanShrink="true" Text="xrTableCell9" StyleName="TableRow" Padding="2,2,0,0,100"><ExpressionBindings><Item1 Ref="20" Expression="[ProductName]" PropertyName="Text" EventName="BeforePrint" /></ExpressionBindings></Item2><Item3 Ref="21" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.18421220474302694" CanShrink="true" Text="xrTableCell10" StyleName="TableRow" Padding="2,2,0,0,100"><ExpressionBindings><Item1 Ref="22" Expression="[SKU]" PropertyName="Text" EventName="BeforePrint" /></ExpressionBindings></Item3><Item4 Ref="23" ControlType="XRTableCell" Name="xrTableCell11" Weight="0.10730566457053051" CanShrink="true" Text="xrTableCell11" TextAlignment="MiddleRight" StyleName="TableRow" Padding="2,2,0,0,100"><ExpressionBindings><Item1 Ref="24" Expression="[UnitOfMeasurement]" PropertyName="Text" EventName="BeforePrint" /></ExpressionBindings></Item4><Item5 Ref="25" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.16765857069483886" CanShrink="true" Text="xrTableCell12" TextAlignment="MiddleRight" StyleName="RightAlignCell" Padding="2,2,0,0,100"><ExpressionBindings><Item1 Ref="26" Expression="[QuantityOrdered]" PropertyName="Text" EventName="BeforePrint" /></ExpressionBindings></Item5></Cells></Item1></Rows></Item1></Controls></Item1><Item2 Ref="27" ControlType="TopMarginBand" Name="TopMargin" HeightF="29" TextAlignment="TopLeft" Padding="0,0,0,0,100" /><Item3 Ref="28" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="48" TextAlignment="TopLeft" Padding="0,0,0,0,100"><Controls><Item1 Ref="29" ControlType="XRPageInfo" Name="xrPageInfo5" PageInfo="None" SizeF="206.7067,23" LocationFloat="918.33, 23" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" /><Item2 Ref="30" ControlType="XRPageInfo" Name="xrPageInfo4" PageInfo="None" SizeF="354.8544,23" LocationFloat="563.47, 23" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" /><Item3 Ref="31" ControlType="XRPageInfo" Name="xrPageInfo3" PageInfo="None" SizeF="228.0834,23" LocationFloat="335.39, 23" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" /><Item4 Ref="32" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="335.3888,23" LocationFloat="0, 23" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" /><Item5 Ref="33" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="322.9668,23" LocationFloat="1125.03, 23" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" /></Controls></Item3><Item4 Ref="34" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="93.33335"><SubBands><Item1 Ref="35" ControlType="SubBand" Name="SubBand1" Expanded="false" HeightF="316.6667" Visible="false"><Controls><Item1 Ref="36" ControlType="XRChart" Name="xrChart1" SizeF="750,316.6667" LocationFloat="0, 3.178914E-05" BorderColor="Gray" Borders="None"><Chart Ref="37"><DataContainer Ref="38"><SeriesSerializable><Item1 Ref="39" Name="Series 1" ArgumentDataMember="XAxis" ValueDataMembersSerializable="YAxis" LabelsVisibility="True"><Label Ref="40" Position="Top" TypeNameSerializable="SideBySideBarSeriesLabel" /></Item1></SeriesSerializable></DataContainer><Legend Ref="41" Visibility="False" Name="Default Legend" /><OptionsPrint Ref="42" ImageFormat="Metafile" /><Diagram Ref="43" TypeNameSerializable="XYDiagram"><AxisX Ref="44" VisibleInPanesSerializable="-1" /><AxisY Ref="45" VisibleInPanesSerializable="-1" /><DefaultPane Ref="46" EnableAxisXScrolling="False" EnableAxisYScrolling="False" EnableAxisXZooming="False" EnableAxisYZooming="False"><StackedBarTotalLabel Ref="47"><ConnectorLineStyle Ref="48" /></StackedBarTotalLabel></DefaultPane></Diagram></Chart><StylePriority Ref="49" UseBorderColor="false" UseBorders="false" /></Item1></Controls></Item1></SubBands><Controls><Item1 Ref="50" ControlType="XRTable" Name="xrTable5" SizeF="789.6445,30" LocationFloat="335.3887, 63.33335" StyleName="ReportHeaderTable1"><Rows><Item1 Ref="51" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8"><Cells><Item1 Ref="52" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" /></Cells></Item1><Item2 Ref="53" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993"><Cells><Item1 Ref="54" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods, Wine &amp; Cheese, Nut Wholesaler, ModernB2C" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" /></Cells></Item2></Rows></Item1><Item2 Ref="55" ControlType="XRTable" Name="xrTable4" SizeF="335.3888,29.99998" LocationFloat="0, 63.33335" StyleName="ReportHeaderTable1"><Rows><Item1 Ref="56" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8"><Cells><Item1 Ref="57" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Order Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" /></Cells></Item1><Item2 Ref="58" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993"><Cells><Item1 Ref="59" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="12/1/2018 12:00:00 AM - 12/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" /></Cells></Item2></Rows></Item2><Item3 Ref="60" ControlType="XRLabel" Name="xrLabel3" Text="Best Sellers" TextAlignment="MiddleLeft" SizeF="335.3888,29.24998" LocationFloat="0, 10.00001" StyleName="ReportHeaderText" Padding="10,2,2,2,100"><StylePriority Ref="61" UsePadding="false" UseTextAlignment="false" /></Item3><Item4 Ref="62" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false"><StylePriority Ref="63" UsePadding="false" /></Item4></Controls></Item4><Item5 Ref="64" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48"><Controls><Item1 Ref="65" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0"><Controls><Item1 Ref="66" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="0, 20.00001"><Rows><Item1 Ref="67" ControlType="XRTableRow" Name="xrTableRow1" Weight="1"><Cells><Item1 Ref="68" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.20089287296756209" Text="Store Name" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item2 Ref="69" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.1366185798588592" Text="Product Name" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item3 Ref="70" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.21255252519359646" Text="SKU" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item4 Ref="71" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.12381418124905627" Text="Unit Of Measurement" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item5 Ref="72" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.19345228561988559" Text="Quantity Ordered" TextAlignment="MiddleRight" StyleName="TableHeaderRightAlignCell" Padding="2,2,0,0,100" /></Cells></Item1></Rows></Item1></Controls></Item1></Controls></Item5><Item6 Ref="73" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="28.125"><Controls><Item1 Ref="74" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 0"><Rows><Item1 Ref="75" ControlType="XRTableRow" Name="xrTableRow3" Weight="1"><Cells><Item1 Ref="76" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.20089287296756209" Text="Total" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item2 Ref="77" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.1366185798588592" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item3 Ref="78" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.21255252519359646" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item4 Ref="79" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.12381418124905627" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" /><Item5 Ref="80" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.19345228561988559" TextAlignment="MiddleRight" StyleName="TableHeaderRightAlignCell" Padding="2,2,0,0,100"><ExpressionBindings><Item1 Ref="81" Expression="Sum([QuantityOrdered])" PropertyName="Text" EventName="BeforePrint" /></ExpressionBindings></Item5></Cells></Item1></Rows></Item1></Controls></Item6></Bands><ExportOptions Ref="82"><Xls Ref="83" ShowGridLines="true" /><Xlsx Ref="84" ShowGridLines="true" /><Csv Ref="85" Separator=";" TextExportMode="Value" /></ExportOptions><StyleSheet><Item1 Ref="86" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" /><Item2 Ref="87" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" /><Item3 Ref="88" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" /><Item4 Ref="89" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" /><Item5 Ref="90" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item6 Ref="91" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" /><Item7 Ref="92" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" /><Item8 Ref="93" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item9 Ref="94" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" /><Item10 Ref="95" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item11 Ref="96" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item12 Ref="97" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" /><Item13 Ref="98" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" /><Item14 Ref="99" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" /></StyleSheet><ComponentStorage><Item1 Ref="100" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LkJlc3RTZWxsZXJQcm9kdWN0TW9kZWwsIFpub2RlLkxpYnJhcmllcy5EZXZFeHByZXNzLlJlcG9ydCwgVmVyc2lvbj0wLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwiIC8+PC9PYmplY3REYXRhU291cmNlPg==" /></ComponentStorage><ObjectStorage><Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-101" ValueMember="Value" DisplayMember="Value" /><Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" /><Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-102" ValueMember="Value" DisplayMember="Value" /><Item4 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="10" Content="System.Boolean" Type="System.Type" /><Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="12" Content="System.Int32" Type="System.Type" /><Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportBestSellerProductModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" /><Item7 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="101" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" /><Item8 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="102" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" /></ObjectStorage></XtraReportsLayoutSerializer>')
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (10, N'InventoryReorder', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>WareHousesName</name><headertext>Ware House Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>2</id><name>ShowOnlyActiveProducts</name><headertext>Show Only Active Products</headertext><width>0</width><datatype>System.Boolean</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>true</value><parametertype>boolean</parametertype></column><column><id>3</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>WarehouseName</name><headertext>Ware house Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>5</id><name>ProductName</name><headertext>Product Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>6</id><name>SKU</name><headertext>SKU</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>7</id><name>Quantity</name><headertext>Quantity</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>UnitOfMeasurement</name><headertext>Unit Of Measurement</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>Reorderlevel</name><headertext>Reorder level</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>ProductStatus</name><headertext>Product Status</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column></columns>', 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="InventoryReorder, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Landscape="true" Margins="25, 27, 29, 46" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0">
  <Parameters>
    <Item1 Ref="4" Description="Ware House Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods" Name="WareHousesName" />
    <Item2 Ref="6" Description="Show Only Active Products" ValueInfo="True" Name="ShowOnlyActiveProducts" Type="#Ref-5" />
    <Item3 Ref="8" Description="Visible Columns" LookUpSettings="#Ref-7" MultiValue="true" ValueInfo="Ware house Name|Product Name|SKU|Quantity|Reorder level|Product Status" Name="VisibleColumns" />
  </Parameters>
  <Bands>
    <Item1 Ref="9" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="10" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle">
          <Rows>
            <Item1 Ref="11" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="12" ControlType="XRTableCell" Name="xrTableCell20" Weight="0.10875900405867928" Text="xrTableCell20" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="13" Expression="[WarehouseName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="14" UsePadding="false" />
                </Item1>
                <Item2 Ref="15" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.11673821693655406" CanShrink="true" Text="xrTableCell7" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="16" Expression="[ProductName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item2>
                <Item3 Ref="17" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.13448042381182854" CanShrink="true" Text="xrTableCell8" TextAlignment="MiddleRight" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="18" Expression="[SKU]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item3>
                <Item4 Ref="19" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.091416079822092017" CanShrink="true" Text="xrTableCell10" TextAlignment="MiddleRight" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="20" Expression="[Quantity]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item4>
                <Item5 Ref="21" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.11516541231452851" Text="xrTableCell9" TextAlignment="TopLeft" StyleName="TableRow" Padding="1,1,1,1,100">
                  <ExpressionBindings>
                    <Item1 Ref="22" Expression="[UnitOfMeasurement]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="23" UsePadding="false" UseTextAlignment="false" />
                </Item5>
                <Item6 Ref="24" ControlType="XRTableCell" Name="xrTableCell11" Weight="0.11206224642960536" CanShrink="true" Text="xrTableCell11" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="25" Expression="[ReOrderLevel]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item6>
                <Item7 Ref="26" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.11364302262758261" CanShrink="true" Text="xrTableCell12" StyleName="TableRow" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="27" Expression="[ProductStatus]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item7>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="28" ControlType="TopMarginBand" Name="TopMargin" HeightF="29" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="29" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="46" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="30" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="825,23" LocationFloat="0, 22.99999" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="31" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="623,23" LocationFloat="825, 22.99999" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="32" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.37501">
      <Controls>
        <Item1 Ref="33" ControlType="XRTable" Name="xrTableWareHouse" SizeF="825,30.00001" LocationFloat="0, 64.375" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="34" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="35" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Ware House Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="36" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="37" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="38" ControlType="XRLabel" Name="xrLabel3" Text="Low Inventory" TextAlignment="MiddleLeft" SizeF="412.1351,29.24998" LocationFloat="0, 10.00001" StyleName="ReportHeaderText" Padding="10,2,2,2,100">
          <StylePriority Ref="39" UsePadding="false" UseTextAlignment="false" />
        </Item2>
        <Item3 Ref="40" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="41" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48">
      <Controls>
        <Item1 Ref="42" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="43" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="0, 20.00001">
              <Rows>
                <Item1 Ref="44" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="45" ControlType="XRTableCell" Name="xrTableCell19" Weight="0.10875899484321375" Text="Ware house Name" StyleName="TableHeader" Padding="2,2,0,0,100">
                      <StylePriority Ref="46" UsePadding="false" />
                    </Item1>
                    <Item2 Ref="47" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.11673817324991417" Text="Product Name" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item3 Ref="48" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.13448043094913448" Text="SKU" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item4 Ref="49" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.091416066724690354" Text="Quantity" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item5 Ref="50" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.11516537096777454" Text="Unit Of Measurement" TextAlignment="MiddleCenter" StyleName="TableHeader" Padding="2,2,0,0,100">
                      <StylePriority Ref="51" UsePadding="false" UseTextAlignment="false" />
                    </Item5>
                    <Item6 Ref="52" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.11206223154700118" Text="Reorder level" StyleName="TableHeader" Padding="2,2,0,0,100" />
                    <Item7 Ref="53" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.11364303086571086" Text="Product Status" StyleName="TableHeader" Padding="2,2,0,0,100" />
                  </Cells>
                </Item1>
              </Rows>
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="54" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="39.58333">
      <Controls>
        <Item1 Ref="55" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 0">
          <Rows>
            <Item1 Ref="56" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="57" ControlType="XRTableCell" Name="xrTableCell21" Weight="0.10875897958609984" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <StylePriority Ref="58" UsePadding="false" />
                </Item1>
                <Item2 Ref="59" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.11673817437021809" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item3 Ref="60" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.13448042964592388" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item4 Ref="61" ControlType="XRTableCell" Name="xrTableCell16" Weight="0.091416066572303237" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item5 Ref="62" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.11516539490893492" TextAlignment="MiddleRight" StyleName="TableHeader" Padding="2,2,0,0,100">
                  <StylePriority Ref="63" UsePadding="false" UseTextAlignment="false" />
                </Item5>
                <Item6 Ref="64" ControlType="XRTableCell" Name="xrTableCell17" Weight="0.11206229909150778" StyleName="TableHeader" Padding="2,2,0,0,100" />
                <Item7 Ref="65" ControlType="XRTableCell" Name="xrTableCell18" Weight="0.11364292319056646" StyleName="TableHeader" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="66">
    <Xls Ref="67" ShowGridLines="true" />
    <Xlsx Ref="68" ShowGridLines="true" />
    <Csv Ref="69" Separator=";" TextExportMode="Value" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="70" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="71" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="72" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="73" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="74" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="75" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="76" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="77" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="78" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="79" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="80" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="81" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="82" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="83" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="84" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LkludmVudG9yeVJlb3JkZXJNb2RlbCwgWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LCBWZXJzaW9uPTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbCIgLz48L09iamVjdERhdGFTb3VyY2U+" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-85" ValueMember="Value" DisplayMember="Value" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.Boolean" Type="System.Type" />
    <Item3 Ref="7" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-86" ValueMember="Value" DisplayMember="Value" />
    <Item4 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportInventoryReorderModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="85" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="86" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>')
GO
INSERT [dbo].[ZnodeReportSetting] ([ReportSettingId], [ReportCode], [SettingXML], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate], [DisplayMode], [StyleSheetId], [DefaultLayoutXML]) VALUES (11, N'AbandonedCart', N'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>StoresName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>StoreWithCurrency</value><parametertype>text</parametertype></column><column><id>2</id><name>BeginDate</name><headertext>Min. Update Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>3</id><name>EndDate</name><headertext>Max. Update Date and Time</headertext><width>0</width><datatype>datetime</datatype><columntype>datetime</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>4</id><name>VisibleColumns</name><headertext>Visible Columns</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>5</id><name>ShowOnlyRegisteredUsers</name><headertext>Show Only Registered Users</headertext><width>0</width><datatype>System.Boolean</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><value>true</value><parametertype>boolean</parametertype></column><column><id>7</id><name>StoreName</name><headertext>Store Name</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>8</id><name>CustomerEmailID</name><headertext>Customer Email ID</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>9</id><name>CustomerType</name><headertext>Customer Type</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>10</id><name>Products</name><headertext>Products</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>11</id><name>Quantity</name><headertext>Quantity</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>12</id><name>Subtotal</name><headertext>Sub Total</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>13</id><name>CartCreatedAt</name><headertext>Cart Created At</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column><column><id>14</id><name>CartUpdatedAt</name><headertext>Cart Updated At</headertext><width>0</width><datatype>string</datatype><columntype>string</columntype><isvisible>y</isvisible><mustshow>y</mustshow><musthide>y</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><value></value><parametertype>text</parametertype></column></columns>', 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 2, CAST(N'2018-11-06T00:00:00.000' AS DateTime), 1, 1, N'<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="AbandonedCart, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Landscape="true" Margins="25, 27, 29, 52" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0">
  <Parameters>
    <Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods ($)|Wine &amp; Cheese ($)|Nut Wholesaler ($)|ModernB2C ($)|test ($)|mrr ($)|Adidas ($)|NewStore ($)|sadasd ($)|Fine Foods ($)|Copy Of NewStore ($)" Name="StoresName" />
    <Item2 Ref="6" Description="Min. Update Date and Time" ValueInfo="2018-12-01" Name="BeginDate" Type="#Ref-5" />
    <Item3 Ref="7" Description="Max. Update Date and Time" ValueInfo="2018-12-31" Name="EndDate" Type="#Ref-5" />
    <Item4 Ref="9" Description="Visible Columns" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="Store Name|Customer Email ID|Customer Type|Products|Quantity|Sub Total|Cart Created At|Cart Updated At" Name="VisibleColumns" />
    <Item5 Ref="11" Description="Show Only Registered Users" ValueInfo="True" Name="ShowOnlyRegisteredUsers" Type="#Ref-10" />
  </Parameters>
  <Bands>
    <Item1 Ref="12" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="13" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle" Font="Verdana, 6.75pt">
          <Rows>
            <Item1 Ref="14" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="15" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.17381900873443315" Text="xrTableCell10" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="16" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="17" UseFont="false" />
                </Item1>
                <Item2 Ref="18" ControlType="XRTableCell" Name="xrTableCell11" Weight="0.14998955425060873" Text="xrTableCell11" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="19" Expression="[CustomerType]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="20" UseFont="false" />
                </Item2>
                <Item3 Ref="21" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.20601583167251952" Text="xrTableCell12" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="22" Expression="[Email]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="23" UseFont="false" />
                </Item3>
                <Item4 Ref="24" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.065213098976335329" Text="xrTableCell13" TextAlignment="TopCenter" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="25" Expression="[Products]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="26" UseFont="false" UseTextAlignment="false" />
                </Item4>
                <Item5 Ref="27" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.061226887221568972" Text="xrTableCell14" TextAlignment="TopCenter" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="28" Expression="[Quantity]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="29" UseFont="false" UseTextAlignment="false" />
                </Item5>
                <Item6 Ref="30" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.0745354274609554" TextFormatString="{0:C2}" Text="xrTableCell15" TextAlignment="TopCenter" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="31" Expression="[SubTotal]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="32" UseFont="false" UseTextAlignment="false" />
                </Item6>
                <Item7 Ref="33" ControlType="XRTableCell" Name="xrTableCell17" Weight="0.097316638049766035" Text="xrTableCell17" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="34" Expression="[CartCreatedAt]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="35" UseFont="false" />
                </Item7>
                <Item8 Ref="36" ControlType="XRTableCell" Name="xrTableCell18" Weight="0.088212840649287638" Text="xrTableCell18" TextAlignment="TopRight" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="37" Expression="[CartUpdatedAt]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="38" UseFont="false" UseTextAlignment="false" />
                </Item8>
              </Cells>
            </Item1>
          </Rows>
          <StylePriority Ref="39" UseFont="false" />
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="40" ControlType="TopMarginBand" Name="TopMargin" HeightF="29" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="41" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="52" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="42" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="837.2372,23" LocationFloat="0.0007947286, 14.50001" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="43" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="610.7612,23" LocationFloat="837.238, 14.50001" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="44" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.62998">
      <Controls>
        <Item1 Ref="45" ControlType="XRTable" Name="xrTable4" SizeF="511.6873,29.99999" LocationFloat="0.0007947286, 64.62504" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="46" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8">
              <Cells>
                <Item1 Ref="47" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Cart Update Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="48" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="49" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="12/1/2018 12:00:00 AM - 12/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="50" ControlType="XRTable" Name="xrTable5" SizeF="912.5415,30.00001" LocationFloat="511.6881, 64.62501" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="51" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="52" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="53" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="54" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods ($), Wine &amp; Cheese ($), Nut Wholesaler ($), ModernB2C ($), test ($), mrr ($), Adidas ($), NewStore ($), sadasd ($), Fine Foods ($), Copy Of NewStore ($)" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item2>
        <Item3 Ref="55" ControlType="XRLabel" Name="xrLabel3" Text="Abandoned Carts" TextAlignment="MiddleLeft" SizeF="371.0632,29.24998" LocationFloat="0, 15.38" StyleName="ReportHeaderText" Padding="10,2,2,2,100" CanPublish="false">
          <StylePriority Ref="56" UsePadding="false" UseTextAlignment="false" />
        </Item3>
        <Item4 Ref="57" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 5" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="58" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" HeightF="48">
      <Controls>
        <Item1 Ref="59" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="60" ControlType="XRTable" Name="xrTable1" SizeF="1447.999,28" LocationFloat="0, 20.00001" StyleName="TableHeader">
              <Rows>
                <Item1 Ref="61" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="62" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.173819131340947" Text="Store Name" Padding="2,2,0,0,100" />
                    <Item2 Ref="63" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.1499896450196852" Text="Customer Type" Padding="2,2,0,0,100" />
                    <Item3 Ref="64" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.20601596972754588" Text="Customer Email ID" Padding="2,2,0,0,100" />
                    <Item4 Ref="65" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.0652131350452209" Text="Products" TextAlignment="MiddleCenter" Padding="2,2,0,0,100">
                      <StylePriority Ref="66" UseTextAlignment="false" />
                    </Item4>
                    <Item5 Ref="67" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.0612269698266699" Text="Quantity" TextAlignment="MiddleCenter" Padding="2,2,0,0,100">
                      <StylePriority Ref="68" UseTextAlignment="false" />
                    </Item5>
                    <Item6 Ref="69" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.07453539942606674" Text="Sub Total" TextAlignment="MiddleCenter" Padding="2,2,0,0,100">
                      <StylePriority Ref="70" UseTextAlignment="false" />
                    </Item6>
                    <Item7 Ref="71" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.097316779089259786" Text="Cart Created At" Padding="2,2,0,0,100" />
                    <Item8 Ref="72" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.088212245802549272" Text="Cart Updated At" TextAlignment="MiddleCenter" Padding="2,2,0,0,100">
                      <StylePriority Ref="73" UsePadding="false" UseTextAlignment="false" />
                    </Item8>
                  </Cells>
                </Item1>
              </Rows>
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="74" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="28.125">
      <Controls>
        <Item1 Ref="75" ControlType="XRTable" Name="xrTable3" SizeF="1447.998,28" LocationFloat="0.0007947286, 0" Font="Verdana, 6.75pt">
          <Rows>
            <Item1 Ref="76" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="77" ControlType="XRTableCell" Name="xrTableCell35" Weight="0.10881718449176046" Text="Total" StyleName="TableHeader" />
                <Item2 Ref="78" ControlType="XRTableCell" Name="xrTableCell36" Weight="0.093899362336350628" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="79" UseFont="false" />
                </Item2>
                <Item3 Ref="80" ControlType="XRTableCell" Name="xrTableCell37" Weight="0.12897398932744783" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="81" UseFont="false" />
                </Item3>
                <Item4 Ref="82" ControlType="XRTableCell" Name="xrTableCell46" Weight="0.040825952705474365" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                  <StylePriority Ref="83" UseFont="false" />
                </Item4>
                <Item5 Ref="84" ControlType="XRTableCell" Name="xrTableCell47" Weight="0.038330432741481769" TextTrimming="None" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="85" UseFont="false" />
                </Item5>
                <Item6 Ref="86" ControlType="XRTableCell" Name="xrTableCell48" Weight="0.046662053727560646" TextTrimming="None" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="87" UseFont="false" />
                </Item6>
                <Item7 Ref="88" ControlType="XRTableCell" Name="xrTableCell50" Weight="0.06092407127203113" TextTrimming="None" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="2,2,0,0,100">
                  <StylePriority Ref="89" UseFont="false" />
                </Item7>
                <Item8 Ref="90" ControlType="XRTableCell" Name="xrTableCell51" Weight="0.055224209240192126" TextTrimming="None" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="91" UseFont="false" />
                </Item8>
              </Cells>
            </Item1>
          </Rows>
          <StylePriority Ref="92" UseFont="false" />
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="93">
    <Xls Ref="94" ShowGridLines="true" />
    <Xlsx Ref="95" ShowGridLines="true" />
    <Csv Ref="96" Separator=";" TextExportMode="Value" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="97" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="98" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="99" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="100" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="101" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="102" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="103" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="104" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="105" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="106" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="107" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="108" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="109" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="110" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="111" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LkFiYW5kb25lZENhcnRNb2RlbCwgWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0LCBWZXJzaW9uPTAuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbCIgLz48L09iamVjdERhdGFTb3VyY2U+" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-112" ValueMember="DisplayMember" DisplayMember="DisplayMember" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" />
    <Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-113" ValueMember="Value" DisplayMember="Value" />
    <Item4 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="10" Content="System.Boolean" Type="System.Type" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportAbandonedCartModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="112" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item7 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="113" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.1.0.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>')
GO
SET IDENTITY_INSERT [dbo].[ZnodeReportSetting] OFF
GO



INSERT INTO ZnodeSavedReportViews(UserId,ReportCode,ReportName,LayoutXml,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,IsActive)
SELECT 2,'Orders','orders','<?xml version="1.0" encoding="utf-8"?>
<XtraReportsLayoutSerializer SerializerVersion="17.2.7.0" Ref="1" ControlType="Orders, Znode.Libraries.DevExpress.Report, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null" Landscape="true" Margins="25, 27, 29, 42" PaperKind="Custom" PageWidth="1500" PageHeight="827" Version="17.2" RequestParameters="false" DataSource="#Ref-0" Font="Verdana, 6.75pt">
  <Parameters>
    <Item1 Ref="4" Description="Store Name" LookUpSettings="#Ref-2" MultiValue="true" ValueInfo="Fine Foods|Wine &amp; Cheese|Nut Wholesaler|ModernB2C" Name="StoresName" />
    <Item2 Ref="6" Description="Begin Date" ValueInfo="2018-10-01" Name="BeginDate" Type="#Ref-5" />
    <Item3 Ref="7" Description="End Date" ValueInfo="2018-10-31" Name="EndDate" Type="#Ref-5" />
    <Item4 Ref="9" Description="Visible Columns" LookUpSettings="#Ref-8" MultiValue="true" ValueInfo="Store Name|Order No.|Date and Time|Status|Billing Name|Payment Type|Tax|Shipping Cost|Sub Total|Discount|Total Amount" Name="VisibleColumns" />
  </Parameters>
  <Bands>
    <Item1 Ref="10" ControlType="DetailBand" Name="Detail" HeightF="25" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="11" ControlType="XRTable" Name="xrTable2" SizeF="1448,25" LocationFloat="0, 0" EvenStyleName="EvenStyle" OddStyleName="OddStyle">
          <Rows>
            <Item1 Ref="12" ControlType="XRTableRow" Name="xrTableRow2" Weight="11.5">
              <Cells>
                <Item1 Ref="13" ControlType="XRTableCell" Name="xrTableCell26" Weight="0.068246096482670215" CanShrink="true" Text="xrTableCell26" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="14" Expression="[StoreName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                </Item1>
                <Item2 Ref="15" ControlType="XRTableCell" Name="xrTableCell18" Weight="0.056427902627327151" CanShrink="true" TextTrimming="None" Text="xrTableCell18" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="16" Expression="[OrderNumber]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="17" UseFont="false" />
                </Item2>
                <Item3 Ref="18" ControlType="XRTableCell" Name="xrTableCell19" Weight="0.061983704302449351" CanShrink="true" TextTrimming="None" Text="xrTableCell19" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="19" Expression="[OrderDate]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="20" UseFont="false" />
                </Item3>
                <Item4 Ref="21" ControlType="XRTableCell" Name="xrTableCell20" Weight="0.06060738129186833" CanShrink="true" TextTrimming="None" Text="xrTableCell20" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="22" Expression="[OrderStatus]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="23" UseFont="false" />
                </Item4>
                <Item5 Ref="24" ControlType="XRTableCell" Name="xrTableCell21" Weight="0.07332425447814632" CanShrink="true" TextTrimming="None" Text="xrTableCell21" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="25" Expression="[BillingFirstName] +'' ''+ [BillingLastName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="26" UseFont="false" />
                </Item5>
                <Item6 Ref="27" ControlType="XRTableCell" Name="xrTableCell24" Weight="0.044430920527531552" CanShrink="true" TextTrimming="None" Text="xrTableCell24" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="28" Expression="[ShippingCity]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="29" UseFont="false" />
                </Item6>
                <Item7 Ref="30" ControlType="XRTableCell" Name="xrTableCell25" Weight="0.038953133068130807" CanShrink="true" TextTrimming="None" Text="xrTableCell25" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="31" Expression="[ShippingStateCode]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="32" UseFont="false" />
                </Item7>
                <Item8 Ref="33" ControlType="XRTableCell" Name="xrTableCell27" Weight="0.061946451723105783" CanShrink="true" TextTrimming="None" Text="xrTableCell27" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="34" Expression="[ShippingCountryCode]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="35" UseFont="false" />
                </Item8>
                <Item9 Ref="36" ControlType="XRTableCell" Name="xrTableCell29" Weight="0.074221364001946219" CanShrink="true" TextTrimming="None" Text="xrTableCell29" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="37" Expression="[BillingEmailId]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="38" UseFont="false" />
                </Item9>
                <Item10 Ref="39" ControlType="XRTableCell" Name="xrTableCell6" Weight="0.062831401313047278" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="40" Expression="[ShippingTypeName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="41" UseFont="false" />
                </Item10>
                <Item11 Ref="42" ControlType="XRTableCell" Name="xrTableCell22" Weight="0.060383592656282244" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableRow" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="43" Expression="[PaymentTypeName]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="44" UseFont="false" />
                </Item11>
                <Item12 Ref="45" ControlType="XRTableCell" Name="xrTableCell30" Weight="0.056358764891089728" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell30" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="1,1,1,1,100">
                  <ExpressionBindings>
                    <Item1 Ref="46" Expression="[SubTotal]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="47" UseFont="false" UsePadding="false" />
                </Item12>
                <Item13 Ref="48" ControlType="XRTableCell" Name="xrTableCell31" Weight="0.064935194096351539" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell31" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="49" Expression="[ShippingCost]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="50" UseFont="false" />
                </Item13>
                <Item14 Ref="51" ControlType="XRTableCell" Name="xrTableCell32" Weight="0.058897048605883351" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell32" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="52" Expression="[TaxCost]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="53" UseFont="false" />
                </Item14>
                <Item15 Ref="54" ControlType="XRTableCell" Name="xrTableCell33" Weight="0.063411221826810277" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell33" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="55" Expression="[DiscountAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="56" UseFont="false" />
                </Item15>
                <Item16 Ref="57" ControlType="XRTableCell" Name="xrTableCell34" Weight="0.072790928700972118" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="xrTableCell34" StyleName="RightAlignCell" Font="Verdana, 6.75pt" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="58" Expression="[TotalAmount]" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="59" UseFont="false" />
                </Item16>
              </Cells>
            </Item1>
          </Rows>
        </Item1>
      </Controls>
    </Item1>
    <Item2 Ref="60" ControlType="TopMarginBand" Name="TopMargin" HeightF="29.16667" TextAlignment="TopLeft" Padding="0,0,0,0,100" />
    <Item3 Ref="61" ControlType="BottomMarginBand" Name="BottomMargin" HeightF="41.91666" TextAlignment="TopLeft" Padding="0,0,0,0,100">
      <Controls>
        <Item1 Ref="62" ControlType="XRPageInfo" Name="xrPageInfo1" PageInfo="DateTime" SizeF="501.5417,23" LocationFloat="0, 6.00001" StyleName="ReportFooterDateTime" Padding="2,2,0,0,100" CanPublish="false" />
        <Item2 Ref="63" ControlType="XRPageInfo" Name="xrPageInfo2" TextFormatString="Page {0} of {1}" TextAlignment="TopRight" SizeF="946.4584,23" LocationFloat="501.5417, 6.00001" StyleName="ReportFooterPaging" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item3>
    <Item4 Ref="64" ControlType="ReportHeaderBand" Name="reportHeaderBand1" HeightF="94.37502">
      <SubBands>
        <Item1 Ref="65" ControlType="SubBand" Name="SubBand1" HeightF="290.625" Visible="false">
          <Controls>
            <Item1 Ref="66" ControlType="XRChart" Name="xrChart1" SizeF="1448,290.625" LocationFloat="0, 0" BorderColor="Black" Borders="None">
              <Chart Ref="67" AutoLayout="true" PaletteName="Flow">
                <DataContainer Ref="68">
                  <SeriesSerializable>
                    <Item1 Ref="69" Name="Series 1" ArgumentDataMember="XAxis" ValueDataMembersSerializable="YAxis" LabelsVisibility="True">
                      <Label Ref="70" Position="Top" TypeNameSerializable="SideBySideBarSeriesLabel" BackColor="Window" LineVisibility="True" TextPattern="{V:$0.00}">
                        <Border Ref="71" Visibility="False" />
                      </Label>
                    </Item1>
                  </SeriesSerializable>
                  <SeriesTemplate Ref="72" ToolTipSeriesPattern="{S:$0.00}">
                    <View Ref="73" ExplodeMode="All" TypeNameSerializable="PieSeriesView">
                      <TotalLabel Ref="74" Visible="true" />
                    </View>
                  </SeriesTemplate>
                </DataContainer>
                <Legend Ref="75" Visibility="False" Name="Default Legend" />
                <OptionsPrint Ref="76" ImageFormat="Metafile" />
                <Diagram Ref="77" TypeNameSerializable="XYDiagram">
                  <AxisX Ref="78" VisibleInPanesSerializable="-1" />
                  <AxisY Ref="79" VisibleInPanesSerializable="-1" />
                  <DefaultPane Ref="80" EnableAxisXScrolling="False" EnableAxisYScrolling="False" EnableAxisXZooming="False" EnableAxisYZooming="False">
                    <StackedBarTotalLabel Ref="81">
                      <ConnectorLineStyle Ref="82" />
                    </StackedBarTotalLabel>
                  </DefaultPane>
                </Diagram>
              </Chart>
            </Item1>
          </Controls>
        </Item1>
      </SubBands>
      <Controls>
        <Item1 Ref="83" ControlType="XRTable" Name="xrTable5" SizeF="825,30.00001" LocationFloat="297.9584, 60.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="84" ControlType="XRTableRow" Name="xrTableRow6" Weight="0.8">
              <Cells>
                <Item1 Ref="85" ControlType="XRTableCell" Name="xrTableCell54" Weight="1" Text="Store Name Equals:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="86" ControlType="XRTableRow" Name="xrTableRow7" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="87" ControlType="XRTableCell" Name="xrTableCell55" Weight="1" Text="Fine Foods, Wine &amp; Cheese, Nut Wholesaler, ModernB2C" StyleName="ReportHeaderTableRow" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item1>
        <Item2 Ref="88" ControlType="XRTable" Name="xrTable4" SizeF="287.3843,29.99998" LocationFloat="9.536743E-05, 60.38" StyleName="ReportHeaderTable1">
          <Rows>
            <Item1 Ref="89" ControlType="XRTableRow" Name="xrTableRow5" Weight="0.8">
              <Cells>
                <Item1 Ref="90" ControlType="XRTableCell" Name="xrTableCell53" Weight="1" Text="Order Date is Between:" StyleName="ReportHeaderTable1" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item1>
            <Item2 Ref="91" ControlType="XRTableRow" Name="xrTableRow4" Weight="0.79999999999999993">
              <Cells>
                <Item1 Ref="92" ControlType="XRTableCell" Name="xrTableCell52" Weight="1" Text="10/1/2018 12:00:00 AM - 10/31/2018 12:00:00 AM" StyleName="ReportHeaderTableRow" Font="Verdana, 6.75pt" Padding="2,2,0,0,100" />
              </Cells>
            </Item2>
          </Rows>
        </Item2>
        <Item3 Ref="93" ControlType="XRLabel" Name="xrLabel3" Text="ORDERS" TextAlignment="MiddleLeft" SizeF="211.2345,29.24998" LocationFloat="9.999998, 10.00001" StyleName="ReportHeaderText" Padding="2,2,0,0,100" CanPublish="false">
          <StylePriority Ref="94" UseTextAlignment="false" />
        </Item3>
        <Item4 Ref="95" ControlType="XRLabel" Name="xrLabel1" SizeF="1448,50" LocationFloat="0, 0" StyleName="ReportTitle" Padding="2,2,0,0,100" CanPublish="false" />
      </Controls>
    </Item4>
    <Item5 Ref="96" ControlType="GroupHeaderBand" Name="groupHeaderBand1" GroupUnion="WithFirstDetail" RepeatEveryPage="true" HeightF="48.00002">
      <Controls>
        <Item1 Ref="97" ControlType="XRPanel" Name="xrPanel1" SizeF="1448,48" LocationFloat="0, 0">
          <Controls>
            <Item1 Ref="98" ControlType="XRTable" Name="xrTable1" SizeF="1448,28" LocationFloat="7.947286E-06, 20.00001" Font="Verdana, 6.75pt">
              <Rows>
                <Item1 Ref="99" ControlType="XRTableRow" Name="xrTableRow1" Weight="1">
                  <Cells>
                    <Item1 Ref="100" ControlType="XRTableCell" Name="xrTableCell23" Weight="0.075828990991525846" CanShrink="true" Text="Store Name" StyleName="TableHeader" />
                    <Item2 Ref="101" ControlType="XRTableCell" Name="xrTableCell1" Weight="0.062697712896730956" CanShrink="true" TextTrimming="None" Text="Order No." StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="102" UseFont="false" />
                    </Item2>
                    <Item3 Ref="103" ControlType="XRTableCell" Name="xrTableCell2" Weight="0.068870757355785031" CanShrink="true" TextTrimming="None" Text="Date and Time" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="104" UseFont="false" />
                    </Item3>
                    <Item4 Ref="105" ControlType="XRTableCell" Name="xrTableCell3" Weight="0.067341551226841975" CanShrink="true" TextTrimming="None" Text="Status" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="106" UseFont="false" />
                    </Item4>
                    <Item5 Ref="107" ControlType="XRTableCell" Name="xrTableCell4" Weight="0.081471399904093328" CanShrink="true" TextTrimming="None" Text="Billing Name" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="108" UseFont="false" />
                    </Item5>
                    <Item6 Ref="109" ControlType="XRTableCell" Name="xrTableCell7" Weight="0.049367678877754291" CanShrink="true" TextTrimming="None" Text="Shipping City" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="110" UseFont="false" />
                    </Item6>
                    <Item7 Ref="111" ControlType="XRTableCell" Name="xrTableCell8" Weight="0.043281224224828573" CanShrink="true" TextTrimming="None" Text="Shipping State" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="112" UseFont="false" />
                    </Item7>
                    <Item8 Ref="113" ControlType="XRTableCell" Name="xrTableCell10" Weight="0.068829398553931082" CanShrink="true" TextTrimming="None" Text="Shipping Country" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="114" UseFont="false" />
                    </Item8>
                    <Item9 Ref="115" ControlType="XRTableCell" Name="xrTableCell12" Weight="0.082468141097089123" CanShrink="true" TextTrimming="None" Text="Billing Email ID" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="116" UseFont="false" />
                    </Item9>
                    <Item10 Ref="117" ControlType="XRTableCell" Name="xrTableCell5" Weight="0.069812749685619929" CanShrink="true" TextTrimming="None" Text="Shipping Type" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                      <StylePriority Ref="118" UseFont="false" />
                    </Item10>
                    <Item11 Ref="119" ControlType="XRTableCell" Name="xrTableCell9" Weight="0.0670928480258978" CanShrink="true" TextTrimming="None" Text="Payment Type" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                      <StylePriority Ref="120" UseFont="false" />
                    </Item11>
                    <Item12 Ref="121" ControlType="XRTableCell" Name="xrTableCell13" Weight="0.0626208948088319" CanShrink="true" TextTrimming="None" Text="Sub Total" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="122" UseFont="false" />
                    </Item12>
                    <Item13 Ref="123" ControlType="XRTableCell" Name="xrTableCell14" Weight="0.072150218037083561" CanShrink="true" TextTrimming="None" Text="Shipping Cost" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="124" UseFont="false" />
                    </Item13>
                    <Item14 Ref="125" ControlType="XRTableCell" Name="xrTableCell15" Weight="0.065441166705656251" CanShrink="true" TextTrimming="None" Text="Tax" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="126" UseFont="false" />
                    </Item14>
                    <Item15 Ref="127" ControlType="XRTableCell" Name="xrTableCell16" Weight="0.070456918953480663" CanShrink="true" TextTrimming="None" Text="Discount" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="2,2,0,0,100">
                      <StylePriority Ref="128" UseFont="false" />
                    </Item15>
                    <Item16 Ref="129" ControlType="XRTableCell" Name="xrTableCell17" Weight="0.080878807742879977" CanShrink="true" Multiline="true" TextTrimming="None" Text="Total Amount" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                      <StylePriority Ref="130" UseFont="false" />
                    </Item16>
                  </Cells>
                </Item1>
              </Rows>
              <StylePriority Ref="131" UseFont="false" />
            </Item1>
          </Controls>
        </Item1>
      </Controls>
    </Item5>
    <Item6 Ref="132" ControlType="GroupFooterBand" Name="GroupFooter1" HeightF="28">
      <Controls>
        <Item1 Ref="133" ControlType="XRTable" Name="xrTable3" SizeF="1448,28" LocationFloat="0, 0" Font="Verdana, 6.75pt">
          <Rows>
            <Item1 Ref="134" ControlType="XRTableRow" Name="xrTableRow3" Weight="1">
              <Cells>
                <Item1 Ref="135" ControlType="XRTableCell" Name="xrTableCell35" Weight="0.075828990991525846" CanShrink="true" Text="Total" StyleName="TableHeader" />
                <Item2 Ref="136" ControlType="XRTableCell" Name="xrTableCell36" Weight="0.062697712896730956" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="137" UseFont="false" />
                </Item2>
                <Item3 Ref="138" ControlType="XRTableCell" Name="xrTableCell37" Weight="0.068870746676420208" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="139" UseFont="false" />
                </Item3>
                <Item4 Ref="140" ControlType="XRTableCell" Name="xrTableCell38" Weight="0.067341557226725648" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="141" UseFont="false" />
                </Item4>
                <Item5 Ref="142" ControlType="XRTableCell" Name="xrTableCell39" Weight="0.081471404583574478" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="143" UseFont="false" />
                </Item5>
                <Item6 Ref="144" ControlType="XRTableCell" Name="xrTableCell40" Weight="0.049367678877754291" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="145" UseFont="false" />
                </Item6>
                <Item7 Ref="146" ControlType="XRTableCell" Name="xrTableCell41" Weight="0.043281224224828573" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="147" UseFont="false" />
                </Item7>
                <Item8 Ref="148" ControlType="XRTableCell" Name="xrTableCell42" Weight="0.068829433694955047" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="149" UseFont="false" />
                </Item8>
                <Item9 Ref="150" ControlType="XRTableCell" Name="xrTableCell44" Weight="0.082468105956065185" CanShrink="true" TextTrimming="None" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <StylePriority Ref="151" UseFont="false" />
                </Item9>
                <Item10 Ref="152" ControlType="XRTableCell" Name="xrTableCell45" Weight="0.069812711614798281" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                  <StylePriority Ref="153" UseFont="false" />
                </Item10>
                <Item11 Ref="154" ControlType="XRTableCell" Name="xrTableCell46" Weight="0.067092927303642191" CanShrink="true" TextTrimming="None" TextAlignment="MiddleLeft" StyleName="TableHeader" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100" BorderWidth="0">
                  <StylePriority Ref="155" UseFont="false" />
                </Item11>
                <Item12 Ref="156" ControlType="XRTableCell" Name="xrTableCell47" Weight="0.062620946298987581" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Sub Total" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="157" Expression="Sum([SubTotal])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="158" UseFont="false" />
                </Item12>
                <Item13 Ref="159" ControlType="XRTableCell" Name="xrTableCell48" Weight="0.072150041085525529" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Shipping Cost" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="160" Expression="Sum([ShippingCost])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="161" UseFont="false" />
                </Item13>
                <Item14 Ref="162" ControlType="XRTableCell" Name="xrTableCell49" Weight="0.065441357241460524" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Tax" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="163" Expression="Sum([TaxCost])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="164" UseFont="false" />
                </Item14>
                <Item15 Ref="165" ControlType="XRTableCell" Name="xrTableCell50" Weight="0.070456833972785168" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Disc" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="2,2,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="166" Expression="Sum([DiscountAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="167" UseFont="false" />
                </Item15>
                <Item16 Ref="168" ControlType="XRTableCell" Name="xrTableCell51" Weight="0.080878878215053948" CanShrink="true" TextFormatString="{0:$0.00}" TextTrimming="None" Text="Total Amount" StyleName="TableHeaderRightAlignCell" Font="Verdana, 6.75pt, style=Bold" ForeColor="Transparent" BackColor="Transparent" Padding="4,4,0,0,100">
                  <ExpressionBindings>
                    <Item1 Ref="169" Expression="Sum([TotalAmount])" PropertyName="Text" EventName="BeforePrint" />
                  </ExpressionBindings>
                  <StylePriority Ref="170" UseFont="false" />
                </Item16>
              </Cells>
            </Item1>
          </Rows>
          <StylePriority Ref="171" UseFont="false" />
        </Item1>
      </Controls>
    </Item6>
  </Bands>
  <ExportOptions Ref="172">
    <Xls Ref="173" ShowGridLines="true" />
    <Xlsx Ref="174" ShowGridLines="true" />
    <Csv Ref="175" Separator=";" TextExportMode="Value" />
  </ExportOptions>
  <StyleSheet>
    <Item1 Ref="176" Name="TableHeader" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Near;Center;0;None;Character;Default" TextAlignment="MiddleLeft" BorderWidthSerializable="1" />
    <Item2 Ref="177" Name="TableRow" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" StringFormat="Near;Near;0;None;Character;Default" TextAlignment="TopLeft" />
    <Item3 Ref="178" Name="EvenStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item4 Ref="179" Name="OddStyle" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" BackColor="White" BorderColor="LightGray" Sides="Bottom" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="1" />
    <Item5 Ref="180" Name="ReportTitle" BorderStyle="Inset" Font="Verdana, 12pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,60,65,69" BorderColor="255,83,178,77" Sides="Top" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item6 Ref="181" Name="ReportFooterPaging" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item7 Ref="182" Name="ReportFooterDateTime" BorderStyle="Inset" Padding="4,4,4,4,100" Font="Verdana, 6.75pt, charSet=0" ForeColor="255,84,86,89" BackColor="White" StringFormat="Near;Near;0;None;Character;Default" />
    <Item8 Ref="183" Name="ReportNameText" BorderStyle="Inset" Font="Candara, 15.75pt, style=Bold, charSet=0" ForeColor="White" BackColor="255,64,64,64" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item9 Ref="184" Name="ReportHeaderTitleText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 9.75pt, style=Bold, Italic, charSet=0" StringFormat="Near;Near;0;None;Character;Default" />
    <Item10 Ref="185" Name="ReportHeaderText" BorderStyle="Inset" Padding="2,2,2,2,100" Font="Segoe UI, 12pt, style=Bold, Italic, charSet=0" ForeColor="White" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item11 Ref="186" Name="ReportHeaderTable1" BorderStyle="Inset" Padding="4,4,4,4,100" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item12 Ref="187" Name="ReportHeaderTableRow" BorderStyle="Inset" Padding="4,1,1,1,100" Font="Verdana, 6.75pt" BorderColor="255,71,180,86" Sides="Left" StringFormat="Near;Near;0;None;Character;Default" BorderWidthSerializable="4" />
    <Item13 Ref="188" Name="RightAlignCell" BorderStyle="Inset" Padding="1,4,1,1,100" ForeColor="255,84,86,89" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" />
    <Item14 Ref="189" Name="TableHeaderRightAlignCell" BorderStyle="Inset" Padding="5,5,5,5,100" Font="Verdana, 6.75pt, style=Bold, charSet=0" ForeColor="255,35,27,42" BackColor="LightGray" BorderColor="White" Sides="Top, Bottom" StringFormat="Far;Center;0;None;Character;Default" TextAlignment="MiddleRight" BorderWidthSerializable="1" />
  </StyleSheet>
  <ComponentStorage>
    <Item1 Ref="190" ObjectType="DevExpress.DataAccess.ObjectBinding.ObjectDataSource,DevExpress.DataAccess.v17.2" Name="objectDataSource1" Base64="PE9iamVjdERhdGFTb3VyY2U+PE5hbWU+b2JqZWN0RGF0YVNvdXJjZTE8L05hbWU+PERhdGFTb3VyY2UgVHlwZT0iWm5vZGUuTGlicmFyaWVzLkRldkV4cHJlc3MuUmVwb3J0Lk9yZGVyTW9kZWwsIFpub2RlLkxpYnJhcmllcy5EZXZFeHByZXNzLlJlcG9ydCwgVmVyc2lvbj0wLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGwiIC8+PC9PYmplY3REYXRhU291cmNlPg==" />
  </ComponentStorage>
  <ObjectStorage>
    <Item1 Ref="2" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-191" ValueMember="Value" DisplayMember="Value" />
    <Item2 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="5" Content="System.DateTime" Type="System.Type" />
    <Item3 Ref="8" ObjectType="DevExpress.XtraReports.Parameters.DynamicListLookUpSettings, DevExpress.Printing.v17.2.Core" DataSource="#Ref-192" ValueMember="Value" DisplayMember="Value" />
    <Item4 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="0" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.ReportOrderDetailsModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item5 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="191" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
    <Item6 ObjectType="DevExpress.XtraReports.Serialization.ObjectStorageInfo, DevExpress.XtraReports.v17.2" Ref="192" Content="~Xtra#NULL" Type="System.Collections.Generic.List`1[[Znode.Engine.Api.Models.DevExpressReportParameterModel, Znode.Engine.Api.Models, Version=9.0.6.0, Culture=neutral, PublicKeyToken=null]]" />
  </ObjectStorage>
</XtraReportsLayoutSerializer>',2,GETDATE(),2,GETDATE(),1
WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeSavedReportViews WHERE ReportCode = 'Orders')

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderDetails')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderDetails
END
GO
CREATE PROCEDURE [dbo].[ZnodeReport_GetOrderDetails]
(   @BeginDate      DATE          = NULL,
    @EndDate        DATE          = NULL,
    @PortalId       VARCHAR(MAX)  = '',
    @OrderStateId   VARCHAR(MAX)  = '',
    @PayemntTypeId  VARCHAR(MAX)  = '',
    @ShippingTypeId VARCHAR(MAX)  = '',
    @CustomerName   NVARCHAR(400) = '',
    @EmailId        NVARCHAR(100) = '')
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeReport_GetOrderDetails 
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;
         Declare @DateFormateId int 
		 DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');

	    Select @DateFormateId  = DBO.Fn_GetDateTimeFormat();
         SELECT DISTINCT
			 ZOO.OrderNumber,
                ZOO.[OmsOrderID],
                ZOOD.[PortalId],
                ZOOD.[UserId],
                ZOOD.[OmsOrderStateId],
                ZOOD.[ShippingID],
                ZOOD.[PaymentTypeId],
                ZOOD.[BillingFirstName],
                ZOOD.[BillingLastName],
                ZOOD.[BillingCompanyName],
                ZOOD.[BillingStreet1],
                ZOOD.[BillingStreet2],
                ZOOD.[BillingCity],
                ZOOD.[BillingStateCode],
                ZOOD.[BillingPostalCode],
                ZOOD.[BillingCountry],
                ZOOD.[BillingPhoneNumber],
                ZOOD.[BillingEmailId],
				SUBSTRING(CAST(ZOOD.[TaxCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[TaxCost] AS VARCHAR(100)))+@RoundOffValue) as TaxCost,
				SUBSTRING(CAST(ZOOD.[ShippingCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[ShippingCost] AS VARCHAR(100)))+@RoundOffValue) as [ShippingCost],
				SUBSTRING(CAST(ZOOD.[SubTotal] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[SubTotal] AS VARCHAR(100)))+@RoundOffValue) as [SubTotal],
				SUBSTRING(CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)))+@RoundOffValue) as [DiscountAmount],
				SUBSTRING(CAST(ZOOD.[Total] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[Total] AS VARCHAR(100)))+@RoundOffValue) as [Total],
                CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
                ZOOD.[ShippingNumber],
                ZOOD.[TrackingNumber],
                ZOOD.[CouponCode],
                ZOOD.[PromoDescription],
                ZOOD.[ReferralUserId],
                ZOOD.[PurchaseOrderNumber],
                ZOOD.[OmsPaymentStateId],
                ZOOD.[WebServiceDownloadDate],
                ZOOD.[PaymentSettingID],
                ZOOD.[ShipDate],
                ZOOD.[ReturnDate],
                ZOTOD.[SalesTax],
                ZOTOD.[VAT],
                ZOTOD.[GST],
                ZOTOD.[PST],
                ZOTOD.[HST],
                P.[StoreName] AS 'StoreName',
                OS.[OrderStateName] AS 'OrderStatus',
                PT.[Name] AS 'PaymentTypeName',
                ST.[Name] AS 'ShippingTypeName',
			 ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
         FROM ZNodeOmsOrder ZOO
              INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId
                                                      AND IsActive = 1)
              INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
              LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
              LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                                    (
                                                        SELECT TOP 1 1
                                                        FROM ZnodeOmsOrderLineItems ZOOLI
                                                        WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId
                                                              AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId
                                                    ))
              LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)
              LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
              LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
              LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
			  --LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode )
			  LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode )
         WHERE
	    ((EXISTS
               (
                   SELECT TOP 1 1
                   FROM dbo.split(@PortalId, ',') SP
                   WHERE CAST(P.PortalId AS VARCHAR(100)) = SP.Item
                         OR @PortalId = ''
               )))
              AND ((EXISTS
                   (
                       SELECT TOP 1 1
                       FROM dbo.split(@OrderStateId, ',') SP
                       WHERE CAST(ZOOD.[OmsOrderStateId] AS VARCHAR(100)) = SP.Item
                             OR @OrderStateId = ''
                   )))
		  AND ((EXISTS
				(
				    SELECT TOP 1 1
				    FROM dbo.split(@PayemntTypeId, ',') SP
				    WHERE CAST(ZOOD.[PaymentTypeId] AS VARCHAR(100)) = SP.Item
					   OR @PayemntTypeId = '' OR ZOOD.PaymentTypeId IS NULL
				)))
		  AND ((EXISTS
				(
				    SELECT TOP 1 1
				    FROM dbo.split(@ShippingTypeId, ',') SP
				    WHERE CAST(ST.ShippingTypeID AS VARCHAR(100)) = SP.Item
					   OR @ShippingTypeId = ''
				)))
		  AND (ZOOD.[BillingFirstName]+' '+ISNULL(ZOOD.[BillingLastName], '') LIKE '%'+@CustomerName+'%'
				OR @CustomerName = '')
		  AND (ZOOD.[BillingEmailId] LIKE '%'+@EmailId+'%'
				OR @EmailId = '')
		  AND (CAST(ZOOD.OrderDate AS DATE) BETWEEN CASE
												WHEN @BeginDate IS NULL
												THEN CAST(ZOOD.OrderDate AS DATE)
												ELSE @BeginDate
											 END AND CASE
													   WHEN @EndDate IS NULL
													   THEN CAST(ZOOD.OrderDate AS DATE)
													   ELSE @EndDate
												    END);

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@OrderStateId='+@OrderStateId+',@PayemntTypeId='+@PayemntTypeId+',@ShippingTypeId='+@ShippingTypeId+',@CustomerName='+@CustomerName+',@EmailId='+@EmailId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_GetOrderLineItemByOrderId')
BEGIN 
	DROP PROCEDURE ZnodeReport_GetOrderLineItemByOrderId
END
GO
CREATE  PROCEDURE [dbo].[ZnodeReport_GetOrderLineItemByOrderId](@OmsOrderId INT)
AS 
    -- Summary :- This Procedure is Used to get the Order line item details 
    -- Unit Testing 
    -- EXEC  ZnodeReport_GetOrderLineItemByOrderId 5
  BEGIN
    SET NOCOUNT ON;

			DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
			DECLARE @RoundOffValue1 INT= Dbo.Fn_GetDefaultValue('InventoryRoundOff');

			SELECT OmsOrderLineItemsId,
					ParentOmsOrderLineItemsId,
					OrderLineItemRelationshipTypeId,
					ZOOD.OmsOrderId OmsOrderDetailsId,
					ZO.OrderNumber,
					OmsOrderShipmentId,
					Sku,
					ProductName,
					[Description],
					SUBSTRING(CAST(Quantity AS VARCHAR(100)), 1, CHARINDEX('.', CAST(Quantity AS VARCHAR(100)))+@RoundOffValue1) as Quantity,
					SUBSTRING(CAST(Price AS VARCHAR(100)),1, CHARINDEX('.', CAST(Price AS VARCHAR(100)))+@RoundOffValue) as Price,
					SUBSTRING(CAST([Weight] AS VARCHAR(100)), 1, CHARINDEX('.', CAST([Weight] AS VARCHAR(100)))+@RoundOffValue1) as [Weight],
					DownloadLink,
					SUBSTRING(CAST(ZOLI.DiscountAmount AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOLI.DiscountAmount AS VARCHAR(100)))+@RoundOffValue) as DiscountAmount,
					ShipSeparately,
					ZOLI.ShipDate,
					ZOLI.ReturnDate,
					SUBSTRING(CAST(ZOLI.ShippingCost AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOLI.ShippingCost AS VARCHAR(100)))+@RoundOffValue) as ShippingCost,
					ZOLI.PromoDescription,
					TransactionNumber,
					PaymentStatusId,
					ZOLI.TrackingNumber,
					IsAutoGeneratedTracking,
					OrderLineItemStateId,
					IsRecurringBilling,
					RecurringBillingPeriod,
					RecurringBillingCycles,
					RecurringBillingFrequency,
					RecurringBillingAmount,
					AppliedPromo,
					CouponsApplied,
					ZOLI.ExternalId,
					ZOLI.IsActive,
					ZOLI.CreatedBy,
					ZOLI.CreatedDate,
					ZOLI.ModifiedBy,
					ZOLI.ModifiedDate,
					ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol,
					SUBSTRING(CAST((	Quantity *Price) AS VARCHAR(100)),1, CHARINDEX('.', CAST((	Quantity *Price) AS VARCHAR(100)))+@RoundOffValue) as SubTotal,
				    [dbo].[Fn_GetDefaultPriceRoundOff](SUm(	Quantity *Price)OVER()) GrandTotal
			FROM ZnodeOmsorderLineItems ZOLI 
			LEFT JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderDetailsId = ZOLI.OmsOrderDetailsId)
			--LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)
			LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)
			LEFT JOIN ZnodeOmsOrder ZO ON ZOOD.OmsOrderId =ZO.OmsOrderId
			WHERE ZOOD.OmsOrderId = @OmsOrderId
			AND zood.IsActive = 1 
			and Quantity > 0 
			AND ZOLI.RmaReasonForReturnId  IS NULL ;
     END;
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCategoryProducts')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCategoryProducts
END
GO

CREATE PROCEDURE [dbo].[Znode_GetPublishCategoryProducts]
( @pimCatalogId int = 0,@pimCategoryHierarchyId int = 0,@userId int,@versionId int= 0,@status int = 0 OUT,@isDebug bit = 0 ,@LocaleId TransferId READONLY , @PublishStateId INT = 0   )  AS  /*
    Summary :	Publish Product on the basis of publish catalog and category
				Calling sp [Znode_InsertPublishProductIds] to retrive category and their child category with associated products 
				 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.
	
	Unit Testing
    ------------------------------------------------------------------------------------------------
	Declare @Status int 
	DECLARE @r transferid 
	INSERT INTO @r
	VALUES (1)
	,(24)
	EXEC [Znode_GetPublishCategoryProducts]  @PimCatalogId = 9
	, @PimCategoryHierarchyId = 48 
	, @UserId = 2 
	, @VersionId = 0
	, @IsDebug = 1
	, @Status  = @Status  out
	,@localeId = @r
	,@PublishStateId = 4
	Select @Status  

 */
	BEGIN   
		BEGIN TRY
			SET NOCOUNT ON;
			 DECLARE @IsCatalogPublishInProcess INT  = 0
			DECLARE @tBL_PublishIds table (PublishProductId int,PimProductId int,PublishCatalogId int)
			DECLARE @publishCatalogId int= isnull((SELECT TOP 1 PublishCatalogId FROM ZnodePublishCatalog ZPC WHERE ZPC.PimCatalogId = @pimCatalogId),0),@publishCataloglogId int= 0;
			DECLARE @tBL_CategoryCategoryHierarchyIds table (CategoryId int,ParentCategoryId int ,PimCategoryHierarchyId INT ,ParentPimCategoryHierarchyId INT  )
			DECLARE @pimProductId TransferId
			DECLARE @insertPublishProductIds table (PublishProductId int,PimProductId int,PublishCatalogId int )
			--DECLARE @TBL_CategoryXml TABLE ( CategoryXml XML);
				SELECT @versionId = max(PublishCataloglogId)
			FROM ZnodePublishCatalogLog 
			WHERE PublishCatalogId =@publishCatalogId

				 IF EXISTS (SELECT TOP 1 1  FROM ZnodePublishCatalogLog a 
			   INNER JOIN ZnodePimCatalogCategory b ON (b.PimCatalogId =a.PimCatalogId )
			   WHERE b.PimCategoryHierarchyId = @PimCategoryHierarchyId
			   AND a.IsCatalogPublished IS NULL 
			   ) 
			   BEGIN 
				 SET   @IsCatalogPublishInProcess =1 
			   END 


			INSERT INTO @tBL_CategoryCategoryHierarchyIds(CategoryId,ParentCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId ) 
			SELECT DISTINCT PimCategoryId, Null,PimCategoryHierarchyId,NULL  FROM ( SELECT PimCategoryId,ParentPimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId
			FROM DBO.[Fn_GetRecurciveCategoryIds_PimCategoryHierarchy](@pimCategoryHierarchyId,@pimCatalogId) 
			UNION SELECT PimCategoryId, Null,PimCategoryHierarchyId,NULL FROM ZnodePimCategoryHierarchy WHERE PimCategoryHierarchyId = @pimCategoryHierarchyId 
			UNION SELECT PimCategoryId, Null,PimCategoryHierarchyId,NULL  FROM dbo.[Fn_GetRecurciveCategoryIds_PimCategoryHierarchyIdnew] (@pimCategoryHierarchyId,@pimCatalogId) ) Category

			

			
			IF NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ty 
			WHERE EXISTS (SELECT TOP 1 1 FROM ( SELECT PimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId 
			FROM dbo.[Fn_GetRecurciveCategoryIds_ForChild](@pimCategoryHierarchyId,@pimCatalogId) UNION ALL SELECT NULL ,@pimCategoryHierarchyId,NULL  ) TN WHERE TN.PimCategoryHierarchyId = TY.PimCategoryHierarchyId  ) AND ty.PimProductId IS NOT NULL )
			BEGIN 
			  SET @IsCatalogPublishInProcess = 2 

			END 

			IF (isnull(@publishCatalogId,0) = 0 ) 
				BEGIN 
					SET @status = 1
					-- Catalog Not Published 
					RETURN 0;
				END
			
			IF @IsCatalogPublishInProcess =  0 
			BEGIN 
			

			-- Any other catalog was in process dont intitiate category publish	
			If Exists ( SELECT TOP 1 1 FROM ZnodePublishcatalogLog  WHERE  IsCatalogPublished  IS NULL  )
			Begin
					SET @status = 2
					RETURN 0;
			End

			
				EXEC [Znode_GetPublishCategoryGroup] @publishCatalogId = @PublishCatalogId,@VersionId = 0,@userId =2,@isDebug = 1,@PimCategoryHierarchyId = @PimCategoryHierarchyId,@localeId =@localeID,@PublishStateId=@PublishStateId
			
			BEGIN 
				INSERT INTO @insertPublishProductIds EXEC [Dbo].[Znode_InsertPublishProductIds] @publishCatalogId = @publishCatalogId,@userid = @userid,@pimProductId = @pimProductId,@pimCategoryHierarchyId = @pimCategoryHierarchyId
				INSERT INTO @pimProductId SELECT PimProductId FROM @insertPublishProductIds

				EXEC [Dbo].[Znode_GetPublishProductbulk] @publishCatalogId = @publishCatalogId,@versionId = @versionId,@pimProductId = @pimProductId,@userid = @userid,@pimCategoryHierarchyId = @pimCategoryHierarchyId,@pimCatalogId = @pimCatalogId,@localeIds = @localeId ,@publishstateId =@publishStateId 
				
				UPDATE ZnodePimProduct 		SET IsProductPublish = 1 ,PublishStateId = @PublishStateId		
				WHERE EXISTS (SELECT TOP 1 1 
					FROM ZnodePublishProduct ZPP
					WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId 
						AND ZPP.PublishCatalogId = @publishCatalogId
					)
			END
			DECLARE @tBL_PublishCatalogId table(PublishCatalogId int,PublishProductId int,PublishCategoryId int,PimProductId int,VersionId int,LocaleId INT  );
			
			INSERT INTO @tBL_PublishCatalogId (PublishCatalogId,PublishProductId,PublishCategoryId,PimProductId,VersionId ,Localeid)  
			SELECT DISTINCT ZPC.PublishCatalogId,ZPX.PublishProductId,ZPX.PublishCategoryId,ZPP.PimProductId,Max(TH.PublishCatalogLogId),TH.Localeid 
			FROM ZnodePublishCategory ZPC 
			INNER JOIN ZnodePublishCatalogLog TH ON (TH.PublishCatalogId = ZPC.PublishCatalogId)
			INNER JOIN @tBL_CategoryCategoryHierarchyIds CTC ON (ZPC.PimCategoryHierarchyId = CTC .PimCategoryHierarchyId )
			INNER JOIN ZnodePublishCategoryProduct ZPX  ON ZPC.PublishCategoryId = ZPX.PublishCategoryId AND ZPX.PublishCatalogId = ZPC.PublishCatalogId 
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishCatalogId = ZPC.PublishCatalogId AND ZPX.PublishProductId = ZPP.PublishProductId 
			WHERE ZPC.PublishCatalogId = @PublishCatalogId 
			AND  TH.PublishStateId = @PublishStateId
			AND EXISTS (SELECT TOP 1 1 FROM @LocaleId WHERE id = TH.LocaleId)
			GROUP BY ZPC.PublishCatalogId,ZPX.PublishProductId ,ZPX.PublishCategoryId,ZPP.PimProductId,TH.Localeid 
		
			INSERT INTO @tBL_PublishCatalogId (PublishCatalogId,PublishProductId,PublishCategoryId,PimProductId,VersionId,Localeid ) 
			SELECT IPP.PublishCatalogId,IPP.PublishProductId,0,IPP.PimProductId,max(PublishCatalogLogId) VersionId ,h.Localeid
			FROM @insertPublishProductIds IPP 
			LEFT JOIN ZnodePublishCatalogLog h ON (h.PublishCatalogId = IPP.PublishCatalogId )
			WHERE NOT EXISTS (SELECT TOP 1 1 FROM @tBL_PublishCatalogId PCI WHERE IPP.PublishProductId = PCI.PublishProductId)
			AND EXISTS (SELECT TOP 1 1 FROM @LocaleId WHERE id = h.LocaleId)
			AND h.PublishStateId = @PublishStateId
			GROUP BY IPP.PublishCatalogId,IPP.PublishProductId,IPP.PimProductId,Localeid
			
			UPDATE ZnodePublishCatalogLog 
			SET IsProductPublished = 1,PublishProductId = (SELECT count(PublishProductId) FROM ZnodePublishProduct ZPP WHERE ZPP.PublishCatalogId = ZnodePublishCatalogLog.PublishCatalogId ) 
			WHERE PublishCatalogLogId IN (SELECT VersionId FROM @tBL_PublishCatalogId)

			UPDATE ZnodePimProduct 
			SET IsProductPublish = 1 ,PublishStateId = @PublishStateId	
			WHERE EXISTS (SELECT TOP 1 1 
				FROM @tBL_PublishCatalogId ZPP
				WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId
				)
		
				SELECT PublishCatalogId
					,PublishProductId
					,PublishCategoryId
					,VersionId,LocaleId
			FROM @tBL_PublishCatalogId
			END 
			 IF @IsCatalogPublishInProcess = 1 
				BEGIN 
				SELECT 1 Id , 'Single category publish request cannot be processed as catalog publish is in progress. Please try after catalog publish is complete.' MessageDetails,  CAST(0 AS BIT ) Status
				END 
				ELSE IF @IsCatalogPublishInProcess = 2 
				BEGIN
				
				SELECT 1 Id , 'Please associate products to the category or to at least one child category to publish the category.' MessageDetails,  CAST(0 AS BIT ) Status
				END 
				ELSE 
				BEGIN 
				SELECT 1 Id , ' Publish Successfull' MessageDetails, CAST(1 AS BIT ) Status
				END 
		END TRY
		BEGIN CATCH
			SELECT error_message()
				,error_procedure();
			UPDATE ZnodePublishCatalogLog 
			SET IsCatalogPublished = 0 
			WHERE PublishCatalogLogId = @versionId
			SET @status = 0;
			DECLARE @error_procedure varchar(1000)= error_procedure(),@errorMessage nvarchar(max)= error_message(),@errorLine varchar(100)= error_line(),@errorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PimCatalogId = '+cast(@pimCatalogId AS varchar(max))+',@@PimCategoryHierarchyId='+@pimCategoryHierarchyId+',@UserId='+cast(@userId AS varchar(50))+',@UserId = '+cast(@userId AS varchar(50))+',@VersionId='+cast(@versionId AS varchar(50))+',@Status='+cast(@status AS varchar(10));
			SELECT 0 AS ID
				,cast(0 AS bit) AS Status;
			ROLLBACK TRAN GetPublishProducts;
			EXEC Znode_InsertProcedureErrorLog @procedureName = 'Znode_GetPublishCategoryProducts',@errorInProcedure = @error_procedure,@errorMessage = @errorMessage,@errorLine = @errorLine,@errorCall = @errorCall;
		END CATCH;
		END;
		GO

IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetReportDateTimeFormat')
BEGIN
DROP FUNCTION dbo.Fn_GetReportDateTimeFormat
END
GO
CREATE FUNCTION [dbo].[Fn_GetReportDateTimeFormat]
(
)
RETURNS INT
AS
     BEGIN
         -- Declare the return variable here
         DECLARE @MSSqlConvertId INT;
         SELECT @MSSqlConvertId = FeaturesubValues
         FROM ZnodeGlobalSetting
         WHERE FeatureName = 'TimeFormat';
         RETURN @MSSqlConvertId;
     END;
GO
UPDATE ZnodeMenu
SET MenuName = 'Advanced'
WHERE MenuName = 'Advanced Report' AND ControllerName = 'DevExpressReport'
GO

INSERT INTO ZnodeMenu
(ParentMenuId,MenuName,MenuSequence,AreaName,ControllerName,ActionName,CSSClassName,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
SELECT (SELECT  MenuId FROM ZnodeMenu WHERE MenuName = 'Reports' AND ControllerName = 'MyReports' AND IsActive = 1)
,'General',2,NULL,'MyReports','Index','z-Reports',1,2,GETDATE(),2,GETDATE()
WHERE NOT EXISTS 
(SELECT * FROM ZnodeMenu WHERE ParentMenuId = (SELECT  MenuId FROM ZnodeMenu WHERE MenuName = 'Reports' AND ControllerName = 'MyReports' AND IsActive = 1)
AND MenuName = 'General' AND ControllerName = 'MyReports')

Go


IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetOrderDetails')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetOrderDetails
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetOrderDetails]
(   
	@BeginDate      DATETIME         ,
    @EndDate        DATETIME         ,
    @StoreName      NVARCHAR(max) = '',
	@OrderStatus    NVARCHAR(MAX) = ''
	)
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeDevExpressReport_GetOrderDetails_bak @BeginDate = '2018-01-13 14:29:34.513', @EndDate = '2018-12-13 14:29:34.513',@OrderStatus = 'Failed|Success'
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;

		 IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		DECLARE @SQL NVARCHAR(MAX)
        DECLARE @DateFormateId int 
	    SET @DateFormateId  = DBO.Fn_GetReportDateTimeFormat();
		DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
		
		DECLARE @TBL_PortalId TABLE (PortalId INT );
		INSERT INTO @TBL_PortalId
		SELECT PortalId 
		FROM ZnodePortal ZP 
		INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

		SELECT DISTINCT
		ZOO.OrderNumber,ZOO.[OmsOrderID],ZOOD.[PortalId],ZOOD.[UserId],ZOOD.[OmsOrderStateId],ZOOD.[ShippingID],ZOOD.[PaymentTypeId],ZOOD.[BillingFirstName],ZOOD.[BillingLastName],
        ZOOD.[BillingCompanyName], ZOOD.[BillingStreet1],ZOOD.[BillingStreet2], ZOOD.[BillingCity],ZOOD.[BillingStateCode],ZOOD.[BillingPostalCode],ZOOD.[BillingCountry], ZOOD.[BillingPhoneNumber],ZOOD.[BillingEmailId],
		SUBSTRING(CAST(ZOOD.[TaxCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[TaxCost] AS VARCHAR(100)))+@RoundOffValue) as TaxCost,
		SUBSTRING(CAST(ZOOD.[ShippingCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[ShippingCost] AS VARCHAR(100)))+@RoundOffValue) as [ShippingCost],
		SUBSTRING(CAST(ZOOD.[SubTotal] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[SubTotal] AS VARCHAR(100)))+@RoundOffValue) as [SubTotal],
		SUBSTRING(CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)))+@RoundOffValue) as [DiscountAmount],
		SUBSTRING(CAST(ZOOD.[Total] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[Total] AS VARCHAR(100)))+@RoundOffValue) as [TotalAmount],
        CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
        ZOOD.[ShippingNumber],
		ZOOD.[TrackingNumber],
		ZOOD.[CouponCode],
		ZOOD.[PromoDescription],
		ZOOD.[ReferralUserId],
		ZOOD.[PurchaseOrderNumber],
		ZOOD.[OmsPaymentStateId],
        ZOOD.[WebServiceDownloadDate],
		ZOOD.[PaymentSettingID],
		ZOOD.[ShipDate],
		ZOOD.[ReturnDate],
		ZOTOD.[SalesTax],ZOTOD.[VAT],ZOTOD.[GST],ZOTOD.[PST],ZOTOD.[HST],
        P.[StoreName] AS 'StoreName',
		OS.[OrderStateName] AS 'OrderStatus',
		ZOOD.PaymentDisplayName AS 'PaymentTypeName',
		ST.[Name] AS 'ShippingTypeName' ,
		CASE WHEN REPLACE(ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,''),' ','') = '' THEN APZ.UserName ELSE ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,'') END  CustomerName ,
		ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
		,ZA.CityName AS 'ShippingCity',
		ZA.StateName AS 'ShippingState',
		ZA.CountryName AS 'ShippingCountry'
		INTO #TBL_OMSOrder
		FROM ZNodeOmsOrder ZOO 
        INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1) 
		INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
        LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
        LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                            (  SELECT TOP 1 1 FROM ZnodeOmsOrderLineItems ZOOLI WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId ))
        LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)
        LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
        LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
        LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
		LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode  = ZOOD.CultureCode )
		LEFT JOIN ZnodeUserAddress ZSP ON (ZSP.UserId = ZOOD.UserId)
		LEFT JOIN ZnodeAddress ZA ON (ZA.AddressId = ZSP.AddressId )
		LEFT JOIN ZnodeUser  ZU ON (ZU.UserId = ZOOD.UserId )
		LEFT JOIN AspNetUsers AP ON (AP.Id = ZU.AspNetUserId)
		LEFT JOIN AspNetZnodeUser APZ ON (APZ.AspNetZnodeUserId = AP.UserName)
        WHERE CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
		AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))
		AND EXISTS (SELECT TOP 1 1 FROM dbo.split(@OrderStatus,'|') SP WHERE SP.Item = OS.OrderStateName)
		AND ZA.IsShipping = 1
		
		SELECT OrderNumber,OmsOrderID,PortalId ,UserId,OmsOrderStateId,ShippingID,PaymentTypeId,BillingFirstName,BillingLastName,
		BillingCompanyName,BillingStreet1,BillingStreet2, BillingCity,BillingStateCode,BillingPostalCode,BillingCountry,BillingPhoneNumber,BillingEmailId,
		CAST(tbl.TaxCost AS NUMERIC(28,6)) TaxCost,CAST(ShippingCost AS NUMERIC(28,6)) ShippingCost,
		CAST(SubTotal AS NUMERIC(28,6)) SubTotal,CAST(DiscountAmount AS NUMERIC(28,6)) DiscountAmount,CAST(TotalAmount AS NUMERIC(28,6)) TotalAmount,OrderDate,ShippingNumber,TrackingNumber,CouponCode,PromoDescription,ReferralUserId,PurchaseOrderNumber,OmsPaymentStateId,
        WebServiceDownloadDate,PaymentSettingID,ShipDate,ReturnDate, SalesTax,VAT,GST,PST,HST,StoreName,OrderStatus,PaymentTypeName,ShippingTypeName,CustomerName,Symbol 
		,ShippingCity,ShippingCountry,ShippingState
		FROM #TBL_OMSOrder tbl
			
		IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
	 GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetPopularProductFiltered')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetPopularProductFiltered
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetPopularProductFiltered](
      @BeginDate   DATETIME          ,
      @EndDate     DATETIME          ,
      @StoreName   NVARCHAR(max) = '',
	  @ShowAllProducts BIT = 1,  
	  @TopProducts INT = 10 
	  )
AS 
/*
     Sumarry : - This Procedure is used to find the Popular products filtered 
     Unit Testing 
     EXEC ZnodeDevExpressReport_GetPopularProductFiltered @BeginDate = '2018/01/01',@EndDate= '2018/12/12'   
	*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
          DECLARE @SQL NVARCHAR(MAX)
		  DECLARE @PageNo int = 1; 
		  DECLARE @TBL_PortalId TABLE (PortalId INT );
		  DECLARE @TBL_ReportPopularProduct TABLE (PortalId INT,StoreName NVARCHAR(MAX),SKU NVARCHAR(MAX),ProductName  NVARCHAR(MAX),QuantityOrdered NUMERIC(28,6)
		  ,UnitOfMeasurement nvarchar(20)
		  )--,  TotalAmtSold NUMERIC(28,6))

		  IF OBJECT_ID('TEMPDB..#PopularProduct') IS NOT NULL
			    DROP TABLE #PopularProduct	 

			INSERT INTO @TBL_PortalId
			SELECT PortalId 
			FROM ZnodePortal ZP 
			INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

			SELECT SKU,ProductName,UOM, LOcaleId
					INTO #PopularProduct
					FROM --CTE_ProductDetail
					(
					SELECT  c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId
					FROM znodePimProduct c 
					 INNER JOIN ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
					 INNER JOIN ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
					 INNER JOIN ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
					WHERE  AttributeCode IN ('SKU','ProductName')
					UNION ALL

					SELECT a.PimProductId, c.AttributeCode,ZPADV.AttributeDefaultValueCode,ZPPADV.LocaleId
					FROM ZnodePimProductAttributeDefaultValue ZPPADV
					INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
					INNER JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
					INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId  )
					WHERE AttributeCode IN ('UOM')
					) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,UOM))AS PVT


			INSERT INTO @TBL_ReportPopularProduct
			    SELECT  ZOOD.PortalId,ZP.StoreName AS 'StoreName' , ZOOLI.SKU , ZOOLI.ProductName , SUM(ZOOLI.Quantity) AS 'QuantityOrdered'
				,PP.UOM UnitOfMeasurement
			    --,SUM(ZOOLI.Quantity) * ZOOLI.Price AS TotalAmtSold
                      FROM ZnodeOmsOrder AS ZOO INNER JOIN ZnodeOmsOrderDetails AS ZOOD ON ( ZOOD.OmsOrderId = ZOO.OmsOrderId )
                                                INNER JOIN ZnodeOmsOrderLineItems AS ZOOLI ON (Zood.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId)
												INNER JOIN #PopularProduct PP ON (PP.SKU = ZOOLI.Sku)
                                                INNER JOIN ZnodePortal AS ZP ON (Zp.PortalID = ZOOD.PortalId)
												INNER JOIN ZnodeOmsOrderState ZOOS ON (ZOOD.OmsOrderStateId = ZOOS.OmsOrderStateId)
												                          
                      WHERE  CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
					  AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				      OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))  
					  AND ZOOS.OrderStateName NOT IN ('CANCELLED','RETURNED','REJECTED','FAILED')
					  AND ZOOLI.OrderLineItemStateId NOT IN (SELECT OmsOrderStateId FROM ZnodeOmsOrderState WHERE OrderStateName NOT IN ('CANCELLED','RETURNED','REJECTED','FAILED'))                     
                      GROUP BY ZP.StoreName , ZOOLI.SKU , ZOOLI.ProductName , ZOOD.PortalId	,PP.UOM
                      HAVING SUM(ZOOLI.Quantity) > 0 
					 
				SET @TopProducts = CASE WHEN @ShowAllProducts = 1 THEN (SELECT COUNT(1) FROM @TBL_ReportPopularProduct ) ELSE @TopProducts END 


					Select TOP (@TopProducts)  SKU , ProductName ,StoreName ,QuantityOrdered,UnitOfMeasurement   
					from @TBL_ReportPopularProduct  
					ORder by StoreName ASC, CAST (QuantityOrdered AS Numeric) DESC, ProductName ASC

					--IF (CAST(@ShowAllProducts AS NVARCHAR(10))) =0 
					--BEGIN  
					--Select top (@TopProducts) StoreName , SKU , ProductName ,QtySold--, TotalAmtSold 
					--from @TBL_ReportPopularProduct  
					--ORder by CAST (QtySold AS INT) DESC  
					--END  
					--ELSE  
					--BEGIN  
					--Select StoreName , SKU , ProductName ,QtySold--,TotalAmtSold   
					--from @TBL_ReportPopularProduct  ORder by CAST (QtySold AS INT) DESC  
					--END 
			   
			     IF OBJECT_ID('TEMPDB..#PopularProduct') IS NOT NULL
			    DROP TABLE #PopularProduct	

         END TRY

         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetPopularProductFiltered @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetPopularProductFiltered',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
	 GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertSaveCartLineItemsForReOrder')
BEGIN 
	DROP PROCEDURE Znode_InsertSaveCartLineItemsForReOrder
END
GO

CREATE PROCEDURE [dbo].[Znode_InsertSaveCartLineItemsForReOrder] 
(
 @OmsOrderId INT, 
 @OmsSavedCartId INT ,
 @UserId INT ,
 @OmsOrderLineItemsId INT = 0,
 @Status BIT = 0 OUT
)
AS 
BEGIN 
 BEGIN TRY 
  SET NOCOUNT ON 
  DECLARE @TBL_ZnodeOmsSavedCartLineItem TABLE (OmsSavedCartLineItemId INT , RowId INT  )
  DECLARE @GetDate DATETIME = dbo.FN_getDate() 
  DECLARE @AddOnOrderLineItemRelationshipTypeId INT = (SELECT TOP 1 OrderLineItemRelationshipTypeId 
															FROM ZnodeOmsOrderLineItemRelationshipType
															WHERE Name = 'Addons')
  --DELETE FROM ZnodeOmsPersonalizeCartItem  WHERE OmsSavedCartLineItemId IN (SELECT OmsSavedCartLineItemId FROM  ZnodeOmsSavedCartLineItem WHERE  OmsSavedCartId = @OmsSavedCartId )
  --DELETE FROM ZnodeOmsSavedCartLineItem WHERE   OmsSavedCartId = @OmsSavedCartId
   CREATE TABLE #ZnodeOmsOrderLineItems_temp (OmsOrderLineItemsId INT ,ParentOmsOrderLineItemsId INT,OmsOrderDetailsId INT , SKU  NVARCHAr(2000),
   OrderLineItemRelationshipTypeID INT ,AutoAddonSKU NVARCHAR(400),Custom1 NVARCHAR(MAX),Custom2 NVARCHAR(MAX),Custom3 NVARCHAR(MAX),Custom4 NVARCHAR(MAX)
   ,Custom5 NVARCHAR(MAX), GroupId nvarchar(MAX),ProductName NVARCHAr(2000), Description nvarchar(MAX),Quantity NUMERIC(28,6), ROWID INT, ParentRowID INT)

  IF EXISTS (SELECT TOP 1 OmsOrderDetailsId  FROM ZnodeOmsOrderDetails WHERE  OmsOrderId =  @OmsOrderId AND IsActive =1 )
  BEGIN 
  INSERT INTO #ZnodeOmsOrderLineItems_temp
  SELECT OmsOrderLineItemsId, ParentOmsOrderLineItemsId,OmsOrderDetailsId,SKU,OrderLineItemRelationshipTypeID,AutoAddonSKU,
  Custom1,Custom2,Custom3,Custom4,
  Custom5,GroupId,ProductName,Description,Quantity
  ,Row_number()Over(Order By OmsOrderLineItemsId )  RowId, NULL ParentRowId
  FROM ZnodeOmsOrderLineItems 
  WHERE  OmsOrderDetailsId = (SELECT TOP 1 OmsOrderDetailsId  FROM ZnodeOmsOrderDetails WHERE  OmsOrderId =  @OmsOrderId AND IsActive =1 ) 
  ORDER BY OmsOrderLineItemsId 
   
  END

  ELSE 
  BEGIN
  
    
  INSERT INTO #ZnodeOmsOrderLineItems_temp
  SELECT ParentOmsOrderLineItemsId, NULL ParentOmsOrderLineItemsId,ZOO.OmsOrderDetailsId,ZOO.SKU,ZOO.OrderLineItemRelationshipTypeID,ZOO.AutoAddonSKU,
  ZOO.Custom1,ZOO.Custom2,ZOO.Custom3,ZOO.Custom4,
  ZOO.Custom5,ZOO.GroupId,ZOO.ProductName,ZOO.Description,ZOO.Quantity
  ,0  RowId, NULL ParentRowId
  FROM ZnodeOmsOrderLineItems ZOO
  WHERE ZOO.OmsOrderLineItemsId = @OmsOrderLineItemsId
  AND EXISTS (select top 1 1 from ZnodeOmsOrderLineItems tt WHERE tt.OmsOrderLineItemsId = ZOO.ParentOmsOrderLineItemsId 
 )

  
 
   
  INSERT INTO #ZnodeOmsOrderLineItems_temp 
  SELECT ZOO.OmsOrderLineItemsId,ZOO.ParentOmsOrderLineItemsId,ZOO.OmsOrderDetailsId,ZOO.SKU,ZOO.OrderLineItemRelationshipTypeID,ZOO.AutoAddonSKU,
  ZOO.Custom1,ZOO.Custom2,ZOO.Custom3,ZOO.Custom4,
  ZOO.Custom5,ZOO.GroupId,ZOO.ProductName,ZOO.Description,ZOO.Quantity
  ,Row_number()Over(Order By ZOO.OmsOrderLineItemsId )  RowId, NULL ParentRowId
  FROM ZnodeOmsOrderLineItems ZOO
  WHERE 
 ( ZOO.ParentOmsOrderLineItemsId = @OmsOrderLineItemsId OR ZOO.OmsOrderLineItemsId =  @OmsOrderLineItemsId)
  
  
  END

     DECLARE @TBL_OmsSavedCartOld TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn NVARCHAR(2000) ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 DECLARE @TBL_OmsSavedCartNew TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn NVARCHAR(2000) ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 
	 SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemOld
	 FROM #ZnodeOmsOrderLineItems_temp a 
	


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemOld
	 FROM ZnodeOmsPersonalizeItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsOrderLineItems_temp t WHERE t.OmsOrderLineItemsId = a.OmsOrderLineItemsId)

	  SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemNew
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE OmsSavedCartId = @OmsSavedCartId 


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemNew
	 FROM ZnodeOmsPersonalizeCartItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)

	 

	 INSERT INTO @TBL_OmsSavedCartOld (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsOrderLineItemsId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemOld TBL_B WHERE TBL_B.OmsOrderLineItemsId = ISNULL(TBL_A.ParentOmsOrderLineItemsId,0)  ) ParentSKU
					, ParentOmsOrderLineItemsId
		FROM #ZnodeOmsSavedCartLineItemOld TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	

	 ;With Cte_UpdateOld AS 
	 (
		SELECT ParentOmsOrderLineItemsId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsOrderLineItemsId = a.ParentOmsOrderLineItemsId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsOrderLineItemsId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsOrderLineItemsId = a.ParentOmsOrderLineItemsId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemOld a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 INNER JOIN Cte_UpdateOld TBL_ON ON (TBL_ON.ParentOmsOrderLineItemsId  = TBL_O.OmsSavedCartLineItemId )
	   
     UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = SUBSTRING((SELECT ','+TBL_ON.PersonalizeCode FROM #ZnodeOmsPersonalizeCartItemOld TBL_ON WHERE  TBL_ON.OmsOrderLineItemsId  = TBL_O.OmsSavedCartLineItemId  FOR XML PATH ('')),2,4000)
		,TBL_O.PersonalizeValue =  SUBSTRING((SELECT ','+TBL_ON.PersonalizeValue FROM #ZnodeOmsPersonalizeCartItemOld TBL_ON WHERE  TBL_ON.OmsOrderLineItemsId  = TBL_O.OmsSavedCartLineItemId  FOR XML PATH ('')),2,4000) 
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 

	

	  INSERT INTO @TBL_OmsSavedCartNew (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsSavedCartLineItemId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemNew TBL_B WHERE TBL_B.OmsSavedCartLineItemId = ISNULL( TBL_A.ParentOmsSavedCartLineItemId,0)   ) ParentSKU
					, ParentOmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	 ;With Cte_UpdateNew AS 
	 (
		SELECT ParentOmsSavedCartLineItemId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsSavedCartLineItemId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartNew TBL_O 
	 INNER JOIN Cte_UpdateNew TBL_ON ON (TBL_ON.ParentOmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )
	   

	    
    
	 UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = SUBSTRING((SELECT ','+TBL_ON.PersonalizeCode FROM #ZnodeOmsPersonalizeCartItemNew TBL_ON WHERE TBL_ON.OmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId   FOR XML PATH ('')),2,4000) 
		,TBL_O.PersonalizeValue =  SUBSTRING((SELECT ','+TBL_ON.PersonalizeValue FROM #ZnodeOmsPersonalizeCartItemNew TBL_ON WHERE TBL_ON.OmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId   FOR XML PATH ('')),2,4000)  
	 FROM @TBL_OmsSavedCartNew TBL_O 
	
	
	 UPDATE a 
	 SET   a.PersonalizeCode = (SELECT TOP 1 PersonalizeCode FROM @TBL_OmsSavedCartOld RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  )
	  ,a.PersonalizeValue = (SELECT TOP 1 PersonalizeValue FROM @TBL_OmsSavedCartOld RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  )
	  FROM @TBL_OmsSavedCartOld a 
	  WHERE a.ParentOmsSavedCartLineItemId IS NOT NULL 

	
	 UPDATE a 
	 SET   a.PersonalizeCode = (SELECT TOP 1 PersonalizeCode FROM @TBL_OmsSavedCartNew RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  )
	  ,a.PersonalizeValue = (SELECT TOP 1 PersonalizeValue FROM @TBL_OmsSavedCartNew RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  )
	  FROM @TBL_OmsSavedCartNew a 
	  WHERE a.ParentOmsSavedCartLineItemId IS NOT NULL 

	
	 
	 UPDATE a 
	 SET  a.Quantity =  a.Quantity+d.Quantity 
	 FROM ZnodeOmsSavedCartLineItem a 
	 INNER JOIN @TBL_OmsSavedCartNew b ON (b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	 INNER JOIN @TBL_OmsSavedCartOld c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1')) 
	 INNER JOIN #ZnodeOmsSavedCartLineItemOld d ON (d.OmsOrderLineItemsId = c.OmsSavedCartLineItemId)
	 
	

	 
	 ;WITH CTE_UpdateOrder 
	 AS 
	 (
	   SELECT Sequence,  ROW_NUMBER()Over(order BY OmsSavedCartLineItemId ASC) RowId
	   FROM ZnodeOmsSavedCartLineItem
	   WHERE  OmsSavedCartId = @OmsSavedCartId
	 
	 ) 
	 UPDATE CTE_UpdateOrder 
	 SET Sequence =RowId


	
	 DELETE FROM #ZnodeOmsOrderLineItems_temp WHERE OmsOrderLineItemsId IN (SELECT c.OmsSavedCartLineItemId FROM ZnodeOmsSavedCartLineItem a 
	 INNER JOIN @TBL_OmsSavedCartNew b ON (b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	 INNER JOIN @TBL_OmsSavedCartOld c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1')) 
	 INNER JOIN #ZnodeOmsSavedCartLineItemOld d ON (d.OmsOrderLineItemsId = c.OmsSavedCartLineItemId))


	

	 DELETE TR FROM #ZnodeOmsOrderLineItems_temp TR WHERE NOT EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsOrderLineItems_temp YU WHERE TR.OmsOrderLineItemsId = YU.ParentOmsOrderLineItemsId  ) 
	 AND TR.ParentOmsOrderLineItemsId IS NULL 



   UPDATE #ZnodeOmsOrderLineItems_temp 
  SET ParentRowId = (SELECT TOP 1 RowId FROM #ZnodeOmsOrderLineItems_temp a WHERE a.OmsOrderLineItemsId = #ZnodeOmsOrderLineItems_temp.ParentOmsOrderLineItemsId ) 

  
  INSERT INTO ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId,CustomText,CartAddOnDetails
										,Sequence,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,AutoAddon,OmsOrderId,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId
										,ProductName,Description)
  OUTPUT INSERTED.OmsSavedCartLineItemId,INSERTED.Sequence  INTO @TBL_ZnodeOmsSavedCartLineItem
  SELECT NULL,@OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId,NULL CustomText, NULL CartAddOnDetails
										,RowId,@UserId,@GetDate,@UserId,@GetDate,AutoAddonSKU,NULL OmsOrderId,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId
										,ProductName,Description
  FROM #ZnodeOmsOrderLineItems_temp 
  ORDER BY OmsOrderLineItemsId 

            
  UPDATE ab 
  SET ab.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_ZnodeOmsSavedCartLineItem av WHERE av.RowId = b.ParentRowId   )
  FROM ZnodeOmsSavedCartLineItem ab 
  INNER JOIN @TBL_ZnodeOmsSavedCartLineItem a ON (a.OmsSavedCartLineItemId = ab.OmsSavedCartLineItemId ) 
  INNER JOIN #ZnodeOmsOrderLineItems_temp b ON  (b.RowId = a.RowId  ) 

  INSERT INTO ZnodeOmsPersonalizeCartItem (OmsSavedCartLineItemId,PersonalizeCode,PersonalizeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,DesignId,ThumbnailURL)
  SELECT c.OmsSavedCartLineItemId,PersonalizeCode,PersonalizeValue,@UserId,@GetDate,@UserId,@GetDate,DesignId,ThumbnailURL
  FROM ZnodeOmsPersonalizeItem  a 
  INNER JOIN #ZnodeOmsOrderLineItems_temp b ON (a.OmsOrderLineItemsId = b.OmsOrderLineItemsId)
  INNER JOIN @TBL_ZnodeOmsSavedCartLineItem c ON (c.RowId = b.RowId )

   SET @status = 1 

   
 END TRY 
 BEGIN CATCH 
 
 SELECT ERROR_MESSAGE()
 SET @status = 0 
 END CATCH 
END
GO

UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>DomainId</name>      <headertext>Domain ID</headertext>      <width>10</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>DomainId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>DomainName</name>      <headertext>Domain Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>100</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ApiKey</name>      <headertext>API Key</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ApplicationType</name>      <headertext>Application Type</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>DropDown</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Status</name>      <headertext>Is Active</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsDefault</name>      <headertext>Is Default</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>DropDown</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|clear-cache|Disable|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>PortalId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|clear-cache|Disable|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Store/EditUrl|/Store/ClearDemoWebsiteCache|/Store/EnableDisableDomain|/Store/DeleteUrl</manageactionurl>      <manageparamfield>portalId,domainId,ApiKey,Status,IsDefault|domainName,domainId|PortalId,DomainId,IsActive|domainId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
WHERE ItemName = 'ZnodeDomain'

GO

UPDATE ZnodeReportDetails
SET Description = 'This report shows the details of all the orders, placed during the selected date/time range.'
WHERE ReportCode = 'Orders' 
GO
UPDATE ZnodeReportDetails
SET Description = 'This report shows the sale count and details of all the best selling products.'
WHERE ReportCode = 'BestSellerProduct' 
GO
UPDATE ZnodeReportDetails
SET Description = 'This report shows the details of all the products, whose current inventory level is below the re-order level.'
WHERE ReportCode = 'InventoryReorder' 
GO
UPDATE ZnodeReportDetails
SET Description = 'This report shows the details of all the customers registered during the selected date/time range.'
WHERE ReportCode = 'Users' 
GO
UPDATE ZnodeReportDetails
SET ReportName = 'Registered Users'
WHERE ReportCode = 'Users' 
GO
UPDATE ZnodeReportDetails
SET ReportName = 'Top Ordering Customers'
WHERE ReportCode = 'MostFrequentCustomer' 
GO
UPDATE ZnodeReportDetails
SET Description = 'This report shows the order count and details of all the top ordering customers.'
WHERE ReportCode = 'MostFrequentCustomer' 
GO
UPDATE ZnodeReportDetails
SET ReportName = 'Top Spending Customers'
WHERE ReportCode = 'TopSpendingCustomers' 
GO
UPDATE ZnodeReportDetails
SET Description = 'This report shows the order total and details of all the top spending customers.'
WHERE ReportCode = 'TopSpendingCustomers' 
GO
UPDATE ZnodeReportDetails
SET ReportName = 'Abandoned Carts'
WHERE ReportCode = 'AbandonedCart' 
GO
UPDATE ZnodeReportDetails
SET Description = 'This report shows the details of the abandoned carts, created/updated during the selected date/time range.'
WHERE ReportCode = 'AbandonedCart' 
GO

update ZnodeCMSMessage
SET Message = '<ul><li>&lt;i class="zf-fedex"&gt;fedex&lt;/i&gt;</li><li>&lt;i class="zf-ups"&gt;ups&lt;/i&gt;</li></ul>'
WHERE Message = '<ul><li><i class="zf-fedex"></i></li><li><i class="zf-ups"></i></li></ul>'
GO

update ZnodeCMSMessage
SET Message = '<ul><li>&lt;i class="zf-paypal-payment"&gt;paypal&lt;/i&gt;</li><li>&lt;i class="zf-visa-payment"&gt;visa&lt;/i&gt;</li><li>&lt;i class="zf-mastercard-payment"&gt;mastercard&lt;/i&gt;</li><li>&lt;i class="zf-amex-payment"&gt;amex&lt;/i&gt;</li></ul>'
WHERE Message = '<ul><li><i class="zf-paypal-payment"></i></li><li><i class="zf-visa-payment"></i></li><li><i class="zf-mastercard-payment"></i></li><li><i class="zf-amex-payment"></i></li></ul>'

Go
UPDATE ZnodeApplicationSetting
SET Setting = '<?xml version="1.0" encoding="utf-16"?> <columns>      <column>   <id>1</id>   <name>DomainId</name>   <headertext>Checkbox</headertext>   <width>0</width>   <datatype>String</datatype>   <columntype>Int32</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>y</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>y</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>2</id>   <name>DomainId</name>   <headertext>Domain ID</headertext>   <width>10</width>   <datatype>Int32</datatype>   <columntype>Int32</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>3</id>   <name>DomainName</name>   <headertext>Domain Name</headertext>   <width>40</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>y</mustshow>   <musthide>n</musthide>   <maxlength>100</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>y</iscontrol>   <controltype>Text</controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>4</id>   <name>ApiKey</name>   <headertext>API Key</headertext>   <width>40</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>5</id>   <name>ApplicationType</name>   <headertext>Application Type</headertext>   <width>40</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>true</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>y</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>y</iscontrol>   <controltype>DropDown</controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>6</id>   <name>Status</name>   <headertext>Is Active</headertext>   <width>40</width>   <datatype>Boolean</datatype>   <columntype>Boolean</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>7</id>   <name>IsDefault</name>   <headertext>Is Default</headertext>   <width>40</width>   <datatype>Boolean</datatype>   <columntype>Boolean</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format></format>   <isvisible>y</isvisible>   <mustshow>n</mustshow>   <musthide>n</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>n</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield></islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>y</iscontrol>   <controltype>DropDown</controltype>   <controlparamfield></controlparamfield>   <displaytext></displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl></manageactionurl>   <manageparamfield></manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column>  <column>   <id>8</id>   <name>Manage</name>   <headertext>Action</headertext>   <width>50</width>   <datatype>String</datatype>   <columntype>String</columntype>   <allowsorting>false</allowsorting>   <allowpaging>true</allowpaging>   <format>Edit|clear-cache|Disable|Delete</format>   <isvisible>y</isvisible>   <mustshow>y</mustshow>   <musthide>y</musthide>   <maxlength>0</maxlength>   <isallowsearch>n</isallowsearch>   <isconditional>y</isconditional>   <isallowlink>n</isallowlink>   <islinkactionurl></islinkactionurl>   <islinkparamfield>PortalId</islinkparamfield>   <ischeckbox>n</ischeckbox>   <checkboxparamfield></checkboxparamfield>   <iscontrol>n</iscontrol>   <controltype></controltype>   <controlparamfield></controlparamfield>   <displaytext>Edit|clear-cache|Disable|Delete</displaytext>   <editactionurl></editactionurl>   <editparamfield></editparamfield>   <deleteactionurl></deleteactionurl>   <deleteparamfield></deleteparamfield>   <viewactionurl></viewactionurl>   <viewparamfield></viewparamfield>   <imageactionurl></imageactionurl>   <imageparamfield></imageparamfield>   <manageactionurl>/Store/EditUrl|/Store/ClearDemoWebsiteCache|/Store/EnableDisableDomain|/Store/DeleteUrl</manageactionurl>   <manageparamfield>portalId,domainId,ApiKey,Status,IsDefault|domainName,domainId|PortalId,DomainId,IsActive|domainId</manageparamfield>   <copyactionurl></copyactionurl>   <copyparamfield></copyparamfield>   <xaxis>n</xaxis>   <yaxis>n</yaxis>   <isadvancesearch>y</isadvancesearch>   <Class></Class>   <SearchControlType>--Select--</SearchControlType>   <SearchControlParameters></SearchControlParameters>   <DbParamField></DbParamField>   <useMode>DataBase</useMode>   <IsGraph>n</IsGraph>   <allowdetailview>n</allowdetailview>  </column> </columns>'
WHERE ItemName = 'ZnodeDomain'

GO
Update ZnodeApplicationSetting 
Set Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PublishProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PublishProductId,Quantity,SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Image</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Single</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ImageSmallThumbnailPath,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>sku</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Name</name>      <headertext>Product Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>productname</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>SalesPriceWithCurrency</name>      <headertext>Sales Price</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>RetailPriceWithCurrency</name>      <headertext>Retail Price</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit</format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/SEO/SEODetails</manageactionurl>      <manageparamfield>ItemName,ItemId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>'
Where ItemName = 'ZnodeOrderProductList'
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishProductbulk')
BEGIN 
	DROP PROCEDURE Znode_GetPublishProductbulk
END
GO

CREATE PROCEDURE [dbo].[Znode_GetPublishProductbulk]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    TransferId Readonly
,@UserId		  INT = 0 
,@PimCategoryHierarchyId  INT = 0 
,@PimCatalogId INT = 0 
,@LocaleIds TransferId READONLY
,@PublishStateId INT = 0 
)
With RECOMPILE
AS
-- EXEC Znode_GetPublishProductbulk @PublishCatalogId=6, @VersionId=0 ,@UserId= 2 
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

  --DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )

   IF OBJECT_ID('tempdb..#PimProductAttributeXML') is not null
   BEGIN 
	 DROP TABLE #PimProductAttributeXML
   END
   IF OBJECT_ID('tempdb..#PimDefaultValueLocale') is not null
   BEGIN 
    DROP TABLE #PimDefaultValueLocale
   END
   IF OBJECT_ID('tempdb..#TBL_CategoryCategoryHierarchyIds') is not null
   BEGIN 
    DROP TABLE #TBL_CategoryCategoryHierarchyIds
   END

   
   CREATE TABLE #PimProductAttributeXML (PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )
  	
   CREATE TABLE #TBL_CategoryCategoryHierarchyIds  (CategoryId int , ParentCategoryId int ) 
	
   If (@PimCategoryHierarchyId <> 0 AND @PimCatalogId <> 0 )
		INSERT INTO #TBL_CategoryCategoryHierarchyIds(CategoryId , ParentCategoryId )
			Select Distinct PimCategoryId , Null FROM (
				SELECT PimCategoryId,ParentPimCategoryId from DBO.[Fn_GetRecurciveCategoryIds](@PimCategoryHierarchyId,@PimCatalogId)
				Union 
				Select PimCategoryId , null  from ZnodePimCategoryHierarchy where PimCategoryHierarchyId = @PimCategoryHierarchyId 
				Union 
				Select PimCategoryId , null  from [Fn_GetRecurciveCategoryIds_new] (@PimCategoryHierarchyId,@PimCatalogId) ) Category  


   CREATE TABLE #PimDefaultValueLocale  (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
   DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
   DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
   DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale MT 
			WHERE IsActive = 1
			AND (EXISTS (SELECT TOP 1 1  FROM @LocaleIds RT WHERE RT.Id = MT.LocaleId )
			OR NOT EXISTS (SELECT TOP 1 1 FROM @LocaleIds )) 

  DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 
 
 --DECLARE #TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

 CREATE TABLE #TBL_PublishCatalogId (PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT, PublishCategoryId int ,LocaleId INT )

 CREATE INDEX idx_#TBL_PublishCatalogIdPimProductId on #TBL_PublishCatalogId(PimProductId)

  CREATE INDEX idx_#TBL_PublishCatalogIdPimPublishCatalogId on #TBL_PublishCatalogId(PublishCatalogId)

  If (@PimCategoryHierarchyId <> 0 AND @PimCatalogId <> 0 )
  BEGIN
			 INSERT INTO #TBL_PublishCatalogId(PublishCatalogId ,PublishProductId ,PimProductId  , VersionId ,PublishCategoryId ,LocaleId)  
			 SELECT distinct ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,MAX(ZPCP.PublishCataloglogId ) VersionId ,ZPC.PublishCategoryId,ZPCP.LocaleId
				 FROM ZnodePublishProduct ZPP INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
				 INNER JOIN ZnodePublishCategoryProduct ZPPP ON ZPP.PublishProductId  = ZPPP.PublishProductId  
				 AND ZPCP.PublishCatalogId = ZPPP.PublishCatalogId
				 INNER JOIN ZnodePublishCategory ZPC ON ZPC.PublishCatalogId = ZPPP.PublishCatalogId AND ZPPP.PublishCategoryId = ZPC.PublishCategoryId 
				 WHERE ZPP.PublishCatalogId = @PublishCatalogId  and ZPCP.PublishStateId =  @PublishStateId
				 AND 
				 ZPC.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds )
				 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId ,ZPC.PublishCategoryId,ZPCP.LocaleId	

			INSERT INTO #TBL_PublishCatalogId(PublishCatalogId ,PublishProductId ,PimProductId  , VersionId ,PublishCategoryId ,LocaleId)
			SELECT DISTINCT ZPP.PublishCatalogId,ZPP.PublishProductId,PimProductId,MAX(ZPCP.PublishCatalogLogId) VersionId,NULL, ZPCP.LocaleId
				 FROM ZnodePublishProduct ZPP 
				 INNER JOIN ZnodePublishCatalogLog ZPCP ON 
				 (ZPCP.PublishCatalogId = ZPP.PublishCatalogId) 
				 WHERE				 (EXISTS (SELECT TOP 1 1 FROM @pimProductId SP WHERE SP.Id = ZPP.PimProductId ))
				 AND (ZPP.PublishCatalogId = @publishCatalogId )
				 AND NOT Exists (Select TOP 1 1 from #TBL_PublishCatalogId TPL where TPL.PublishProductId = ZPP.PublishProductId)
				 AND ZPCP.PublishStateId =  @PublishStateId
			GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId , ZPCP.LocaleId



  END
  ELSE 
  BEGIN
			INSERT INTO #TBL_PublishCatalogId(PublishCatalogId ,PublishProductId,PimProductId ,VersionId,LocaleId  ) 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,  
											MAX(PublishCatalogLogId) ,ZPCP.LocaleId
				 FROM ZnodePublishProduct ZPP 
				 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
				 WHERE (EXISTS (SELECT TOP 1 1 FROM @PimProductId SP 
				 WHERE SP.Id = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
				 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
				 --AND  ZPCP.PublishStateId =  @PublishStateId
				 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId ,ZPCP.LocaleId
  END
           
		     DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

		
WHILE @Counter <= @maxCountId
BEGIN
 
 SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId MT 
  WHERE  RowId = @Counter)
 
  INSERT INTO #PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId
  
  IF( @LocaleId <> @DefaultLocaleId )
  BEGIN
	INSERT INTO #PimProductAttributeXML 
	SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
	FROM ZnodePimAttributeXML ZPAX
	WHERE ZPAX.LocaleId = @DefaultLocaleId  
	AND NOT EXISTS (SELECT TOP 1 1 FROM #PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )
  END

  INSERT INTO #PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  IF( @LocaleId <> @DefaultLocaleId )
  BEGIN
	INSERT INTO #PimDefaultValueLocale 
	SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
	FROM ZnodePimAttributeDefaultXML ZX
	WHERE localeId = @DefaultLocaleId
	AND NOT EXISTS (SELECT TOP 1 1 FROM #PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  END
  	 
  CREATE TABLE #TBL_CustomeFiled  (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO #TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,RTR.LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId AND RTR.LocaleID = ZPP.LocaleId)
  WHERE RTR.LocaleId = @LocaleId
 
 
  INSERT INTO #TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,ITR.LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId AND ITR.LocaleID = ZPP.LocaleId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM #TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
       
       
	 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId , VIR.AttributeValue, VIR.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE ( LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  UNION ALL 
	 SELECT VIR.PimProductId,VIR.PimAttributeId,ZPDE.PimProductAttributeMediaId,ZPDE.LocaleId ,ZPDE.MediaPath AS AttributeValue, d.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,VIR.PimAttributeId ORDER BY VIR.PimProductId,VIR.PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
	 INNER JOIN ZnodePimAttribute d ON ( d.PimAttributeId=VIR.PimAttributeId )
	 WHERE ( ZPDE.LocaleId = @DefaultLocaleId OR ZPDE.LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  Union All
	 SELECT VIR.PimProductId,VIR.PimAttributeId,ZPDVL.PimAttributeDefaultValueLocaleId,ZPDVL.LocaleId ,ZPDVL.AttributeDefaultValue AS AttributeValue, d.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,VIR.PimAttributeId ORDER BY VIR.PimProductId,VIR.PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimAttribute D ON ( D.PimAttributeId=VIR.PimAttributeId AND D.IsPersonalizable =1  )
	 INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON ZPADV.PimAttributeId = D.PimAttributeId
	 INNER JOIN ZnodePimAttributeDefaultValueLocale ZPDVL   on (ZPADV.PimAttributeDefaultValueId = ZPDVL.PimAttributeDefaultValueId)
	 --INNER JOIN ZnodePimProductAttributeDefaultValue ZPDVP ON (ZPDVP.PimAttributeValueId = VIR.PimAttributeValueId AND ZPADV.PimAttributeDefaultValueId = ZPDVP.PimAttributeDefaultValueId )
	 WHERE ( ZPDVL.LocaleId = @DefaultLocaleId OR ZPDVL.LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )

	 
	 UPDATE #TBL_AttributeVAlue SET rowid = (SELECT MAX(rowid) from #TBL_AttributeVAlue b where a.PimProductId=b.PimProductId and a.PimAttributeId = b.PimAttributeId )
	 from #TBL_AttributeVAlue a
	 
	 --select * from #TBL_AttributeVAlue
	 --return
  SET @versionId = (SELECT TOP 1 VersionId FROM #TBL_PublishCatalogId) 
  

 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END 

 create table #Cte_GetData (PimProductId int,AttributeCode varchar(600),AttributeValue nvarchar(max),VersionId INT)

 create index idx_#Cte_GetDataPimProductId on #Cte_GetData(PimProductId)


insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue,VersionId
FROM #TBL_AttributeVAlue a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN #PimProductAttributeXML b ON (b.PimAttributeXMLId = c.PimAttributeXMLId)
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
where a.LocaleId  = CASE WHEN a.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END
AND NOT EXISTS (SELECT TOP 1 1 FROM Fn_GetProductMediaAttributeId() TY WHERE TY.PimAttributeId = c.PimAttributeId)
 


INSERT INTO #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML+'</AttributeEntity></Attributes>' ,VersionId
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN #TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = THB.PimProductId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN #PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue ,VersionId
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)



insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT  ',' +ZPPG.MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     INNER JOIN #TBL_AttributeVAlue FTRE ON (FTRE.PimProductId = ZPAV.PimProductId AND FTRE.PimAttributeId = ZPAV.PimAttributeId  AND FTRE.LocaleId  = CASE WHEN FTRE.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
	 WHERE ZPPG.PimProductAttributeMediaId = FTRE.ZnodePimAttributeValueLocaleId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue ,VersionId	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM #TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue ,ZPP.VersionId
							
FROM ZnodePimLinkProductDetail ZPLP  
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
where exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId,ZPP.VersionId



SELECT a.PimProductId ,CAST((SELECT ''+dbo.FN_trim(b.AttributeValue) FOR XML PATH(''))  AS NVARCHAR(max)) AttributeValue , b.LocaleId  ,a.PimAttributeId,c.AttributeCode ,b.ZnodePimAttributeValueLocaleId
into #View_LoadManageProductInternal
FROM ZnodePimAttributeValue a 
INNER JOIN  ZnodePimAttributeValueLocale b ON ( b.PimAttributeValueId = a.PimAttributeValueId )
INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )
where c.AttributeCode = 'SKU'

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue,VersionId)
SELECT ZPAV.PimProductId,'DefaultSkuForConfigurable' ,'<Attributes><AttributeEntity>'+REPLACE(REPLACE (c.AttributeXML,'ProductType','DefaultSkuForConfigurable'),'Product Type','Default Sku For Configurable')+'<AttributeValues>'+
 (SELECT TOP 1 AttributeValue FROM #View_LoadManageProductInternal ad 
 INNER JOIN ZnodePimProductTypeAssociation yt ON (yt.PimProductId = ad.PimProductId)
 WHERE Ad.AttributeCode = 'SKU'
 AND yt.PimParentProductId = ZPAV.PimProductId
 ORDER BY yt.DisplayOrder , yt.PimProductTypeAssociationId ASC)
+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue ,ZPP.VersionId
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL 
INNER JOIN ZnodePimAttributeDefaultValue dr ON (dr.PimAttributeDefaultValueId = ZPADVL.PimAttributeDefaultValueId)
 WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId
 AND dr.AttributeDefaultValueCode= 'ConfigurableProduct' 
)
AND EXISTS (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)
AND c.AttributeCode = 'ProductType' 


---------brand details 
CREATE TABLE #Cte_BrandData (PimProductId int,BrandXML nvarchar(max))

INSERT INTO #Cte_BrandData ( PimProductId, BrandXML )
SELECT  DISTINCT ZBP.PimProductId,'<Brands><BrandEntity><BrandId>'+CAST(ZBD.BrandId AS VARCHAR(50))+'</BrandId><BrandCode>'+ZBD.BrandCode+'</BrandCode><BrandName>'+ZBDL.BrandName+'</BrandName></BrandEntity></Brands>' as BrandXML					   		   
FROM [ZnodeBrandDetails] AS ZBD
INNER JOIN ZnodeBrandDetaillocale ZBDL ON ZBD.BrandId = ZBDL.BrandId
INNER JOIN [ZnodeBrandProduct] AS ZBP ON ZBD.BrandId = ZBP.BrandId

--  --CREATE INDEX IND_Znode

  DELETE tu FROM ZnodePublishedXml tu  WHERE 
  EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId TY WHERE TY.VersionId = tu.PublishCatalogLogId AND Tu.PublishedId = ty.PublishProductId  )
  AND IsProductXML = 1   AND LocaleId = @LocaleId 

  
--  --ALTER INDEX ALL ON ZnodePublishedXml  REBUILD WITH (FILLFACTOR = 80 ) 
  If (@PimCategoryHierarchyId <> 0 AND @PimCatalogId <> 0 )
  BEGIN
		
		--Collect index of other categorys
		IF OBJECT_ID('tempdb..#Index') is not null
		BEGIN 
			DROP TABLE #Index
		END 
		CREATE TABLE #Index (RowIndex int ,PublishCategoryId int , PublishProductId  int )		
		insert into  #Index ( RowIndex ,PublishCategoryId , PublishProductId )
		Select CAST(ROW_NUMBER()Over(Partition BY ZPC.PublishProductId 
		Order BY ISNULL(ZPC.PublishCategoryId,'0') desc )   AS VARCHAR(100)),
		ZPC.PublishCategoryId , ZPC.PublishProductId
		FROM ZnodePublishCategoryProduct ZPC where ZPC.PublishCatalogId = @PublishCatalogId
		
	

		--Publish parent products with index number 
		INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsProductXML,LocaleId
		,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,PublishCategoryId)
		SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPCP.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
		+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
		+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPFC 
						INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
						WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+
						'</TempProfileIds>
						 <ProductIndex>'+ 
								--CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPCP.PublishCategoryId,'0') desc ) 
								CAST(Isnull((select RowIndex from #Index WHERE PublishProductId = zpp.PublishProductId
								AND PublishCategoryId = ZPCP.PublishCategoryId ) ,0)
								AS VARCHAr(100))+
						'</ProductIndex>
						<IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
		'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
		ISNULL(STUFF(( SELECT '  '+ BrandXML  FROM #Cte_BrandData BD WHERE BD.PimProductId = ZPP.PimProductId   
				FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, ''),'')+
		STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId AND TY.VersionId = ZPP.VersionId   
		FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
		,ZPCP.PublishCategoryId
		FROM  #TBL_PublishCatalogId zpp
		INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
		INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
		LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
		LEFT JOIN ZnodePublishCategory ZPC ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId 
		AND ZPP.PublishCategoryId = ZPC.PublishCategoryId 
		)
		LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId AND  ZPCCF.PimCategoryHierarchyId =  ZPC.PimCategoryHierarchyId
		)
		LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ISNULL(ZPCP.PublishCategoryId,0) AND ZPCD.LocaleId = @LocaleId )
		WHERE ZPPDFG.LocaleId = @LocaleId AND ZPP.LocaleId = @LocaleId AND  ZPC.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds ) 
		and zpp.PublishCategoryId IS NOT NULL

		
	
	 --Publish only associate product 
	 INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsProductXML,LocaleId
		,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,PublishCategoryId)
		SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPCP.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
		+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
		+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPFC 
						INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
						WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+
						'</TempProfileIds>
						 <ProductIndex>'+ 
								--CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPCP.PublishCategoryId,'0') desc ) 
								CAST(Isnull((select  RowIndex from #Index WHERE PublishProductId = zpp.PublishProductId
								AND   (PublishCategoryId = ZPCP.PublishCategoryId  OR PublishCategoryId is null ) AND PublishCategoryId = ZPP.PublishCategoryId ) ,0)
								AS VARCHAr(100))+
						'</ProductIndex>
						<IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
		'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
		STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   AND TY.VersionId= ZPP.VersionId
		FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
		,ZPCP.PublishCategoryId
		FROM  #TBL_PublishCatalogId zpp
		INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
		INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
		LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
		LEFT JOIN ZnodePublishCategory ZPC ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId 
		AND ZPP.PublishCategoryId = ZPC.PublishCategoryId )
		AND ZPC.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds )
		LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId AND  ZPCCF.PimCategoryHierarchyId =  ZPC.PimCategoryHierarchyId
		AND ZPCCF.PimCategoryId in (Select CategoryId from #TBL_CategoryCategoryHierarchyIds ))
		LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ISNULL(ZPCP.PublishCategoryId,0) AND ZPCD.LocaleId = @LocaleId )
		WHERE ZPPDFG.LocaleId = @LocaleId AND ZPP.LocaleId = @LocaleId AND zpp.PublishCategoryId IS NULL
		
  END
  ELSE
  BEGIN

      INSERT INTO ZnodePublishedXml (PublishCatalogLogId
		,PublishedId
		,PublishedXML
		,IsProductXML
		,LocaleId
		,CreatedBy
		,CreatedDate
		,ModifiedBy
		,ModifiedDate
		,PublishCategoryId)
		SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPCP.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
		+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
		+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPFC 
						INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
						WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
		'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
		STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   AND TY.VersionId = ZPP.VersionId
		FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
		,ZPCP.PublishCategoryId
		FROM  #TBL_PublishCatalogId zpp
		INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
		INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
		LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
		LEFT JOIN ZnodePublishCategory ZPC ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId )
		LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId AND  ZPCCF.PimCategoryHierarchyId =  ZPC.PimCategoryHierarchyId)
		LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ISNULL(ZPCP.PublishCategoryId,0) AND ZPCD.LocaleId = @LocaleId )
		WHERE ZPPDFG.LocaleId = @LocaleId AND ZPP.LocaleId = @LocaleId
END 
 


--DELETE FROM @PimProductAttributeXML
DELETE FROM #TBL_CustomeFiled
DELETE FROM #PimDefaultValueLocale
 IF OBJECT_ID('tempdb..#PimProductAttributeXML') is not null
 BEGIN 
 DELETE FROM #PimProductAttributeXML
 END
 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END
   IF OBJECT_ID('tempdb..#Cte_BrandData') is not null
 BEGIN 
 DROP TABLE #Cte_BrandData
 END
  IF OBJECT_ID('tempdb..#TBL_AttributeVAlue') is not null
 BEGIN 
 DROP TABLE #TBL_AttributeVAlue
 END
 IF OBJECT_ID('tempdb..#View_LoadManageProductInternal') is not null
 BEGIN 
 DROP TABLE #View_LoadManageProductInternal
 END
 IF OBJECT_ID('tempdb..#TBL_CustomeFiled') is not null
 BEGIN 
 DROP TABLE #TBL_CustomeFiled
 END
SET @Counter = @counter + 1 
END 

END

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCategoryGroup')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCategoryGroup
END
GO

CREATE  PROCEDURE [dbo].[Znode_GetPublishCategoryGroup]
(   
	@PublishCatalogId INT,
    @UserId           INT,
    @VersionId        INT,
    @Status           BIT = 0 OUT,
	@PimCategoryHierarchyId int = 0, 
    @IsDebug          BIT = 0,
	@LocaleId TransferId READONLY,
	@PublishStateId INT = 0 
)
AS 
/*

       Summary:Publish category with their respective products and details 
	            The result is fetched in xml form   
       Unit Testing   
       Begin transaction 
       SELECT * FROM ZnodePIMAttribute 
	   SELECT * FROM ZnodePublishCatalog 
	   SELECT * FROM ZnodePublishCategory WHERE publishCAtegoryID = 167 


       EXEC [Znode_GetPublishCategory] @PublishCatalogId = 5,@VersionId = 0 ,@UserId =2 ,@IsDebug = 1 
       EXEC [Znode_GetPublishCategory] @PublishCatalogId = 5,@VersionId = 0 ,@UserId =2 ,@IsDebug = 1 ,@PimCategoryHierarchyId = ? 


       Rollback Transaction 
	*/
     BEGIN
         BEGIN TRAN GetPublishCategory;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @LocaleIdIn INT= 0, @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId(), @Counter INT= 1, @MaxId INT= 0, @CategoryIdCount INT;
             DECLARE @IsActive BIT= [dbo].[Fn_GetIsActiveTrue]();
             DECLARE @AttributeIds VARCHAR(MAX)= '', @PimCategoryIds VARCHAR(MAX)= '', @DeletedPublishCategoryIds VARCHAR(MAX)= '', @DeletedPublishProductIds VARCHAR(MAX);
             --get the pim catalog id 
			 DECLARE @PimCatalogId INT=(SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId); 

             DECLARE @TBL_AttributeIds TABLE
             (PimAttributeId       INT,
              ParentPimAttributeId INT,
              AttributeTypeId      INT,
              AttributeCode        VARCHAR(600),
              IsRequired           BIT,
              IsLocalizable        BIT,
              IsFilterable         BIT,
              IsSystemDefined      BIT,
              IsConfigurable       BIT,
              IsPersonalizable     BIT,
              DisplayOrder         INT,
              HelpDescription      VARCHAR(MAX),
              IsCategory           BIT,
              IsHidden             BIT,
              CreatedDate          DATETIME,
              ModifiedDate         DATETIME,
              AttributeName        NVARCHAR(MAX),
              AttributeTypeName    VARCHAR(300)
             );
             DECLARE @TBL_AttributeDefault TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder   INT
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             DECLARE @TBL_LocaleIds TABLE
             (RowId     INT IDENTITY(1, 1),
              LocaleId  INT,
              IsDefault BIT
             );
             DECLARE @TBL_PimCategoryIds TABLE
             (PimCategoryId       INT,
              PimParentCategoryId INT,
              DisplayOrder        INT,
              ActivationDate      DATETIME,
              ExpirationDate      DATETIME,
              CategoryName        NVARCHAR(MAX),
              ProfileId           VARCHAR(MAX),
              IsActive            BIT,PimCategoryHierarchyId INT,ParentPimCategoryHierarchyId INT   ,
			  CategoryCode  NVARCHAR(MAX)    );


             DECLARE @TBL_PublishPimCategoryIds TABLE
             (PublishCategoryId       INT,
              PimCategoryId           INT,
              PublishProductId        varchar(max),
              PublishParentCategoryId INT ,
			  PimCategoryHierarchyId INT ,parentPimCategoryHierarchyId INT
             );

			  DECLARE @TBL_PublishPimCategoryIdsLatest TABLE
             (PublishCategoryId       INT,
              PimCategoryId           INT,
              PublishProductId        varchar(max),
              PublishParentCategoryId INT ,
			  PimCategoryHierarchyId INT ,parentPimCategoryHierarchyId INT,PublishCatalogLogId INT,LocaleId INT  
             );

             DECLARE @TBL_DeletedPublishCategoryIds TABLE
             (PublishCategoryId INT,
              PublishProductId  INT
             );
             DECLARE @TBL_CategoryXml TABLE
             (PublishCategoryId INT,
              CategoryXml       XML,
              LocaleId          INT
			  ,PublishCatalogLogId INT
             );
             INSERT INTO @TBL_LocaleIds
             (LocaleId,
              IsDefault
             )
			  -- here collect all locale ids
             SELECT LocaleId,IsDefault FROM ZnodeLocale mt WHERE IsActive = @IsActive
			  AND (EXISTS (SELECT TOP 1 1  FROM @LocaleId RT WHERE RT.Id = MT.LocaleId )
			 OR NOT EXISTS (SELECT TOP 1 1 FROM @LocaleId ));


			IF @PimCategoryHierarchyId > 0 
			Begin 
				 DECLARE @TBL_CategoryCategoryHierarchyIds TABLE (CategoryId int,ParentCategoryId int,PimCategoryHierarchyId INT ,ParentPimCategoryHierarchyId INT  ) 
				 INSERT INTO @TBL_CategoryCategoryHierarchyIds(CategoryId , ParentCategoryId, PimCategoryHierarchyId , ParentPimCategoryHierarchyId)
				 Select Distinct PimCategoryId , Null,PimCategoryHierarchyId,NULL FROM (
				 SELECT PimCategoryId,ParentPimCategoryId,PimCategoryHierarchyId,ParentPimCategoryHierarchyId from DBO.[Fn_GetRecurciveCategoryIds_PimCategoryHierarchy](@PimCategoryHierarchyId,@PimCatalogId)
				 Union 
				 Select PimCategoryId , null,PimCategoryHierarchyId,NULL  from ZnodePimCategoryHierarchy where PimCategoryHierarchyId = @PimCategoryHierarchyId 
				 Union 
				 Select PimCategoryId , null,PimCategoryHierarchyId,NULL  from [Fn_GetRecurciveCategoryIds_PimCategoryHierarchyIdNew] (@PimCategoryHierarchyId,@PimCatalogId) ) Category  

			
				 INSERT INTO @TBL_PimCategoryIds(PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive,PimCategoryHierarchyId,ParentPimCategoryHierarchyId)
				
				 SELECT DISTINCT ZPCH.PimCategoryId,ZPCH2.PimCategoryId  PimParentCategoryId,ZPCH.DisplayOrder,ZPCH.ActivationDate,ZPCH.ExpirationDate,ZPCH.IsActive ,ZPCH.PimCategoryHierarchyId,ZPCH.ParentPimCategoryHierarchyId
				 FROM ZnodePimCategoryHierarchy AS ZPCH 
				 LEFT JOIN ZnodePimCategoryHierarchy AS ZPCH2 ON (ZPCH2.PimCategoryHierarchyId = ZPCH. ParentPimCategoryHierarchyId ) 
				 WHERE ZPCH.PimCatalogId = @PimCatalogId  AND ZPCH.PimCategoryHierarchyId in 
				 (SELECT PimCategoryHierarchyId from @TBL_CategoryCategoryHierarchyIds where CategoryId is not null )  ; 
				
				-- Delete from @TBL_PimCategoryIds where PimCategoryId  in (
				-- select PimCategoryId  from ZnodePublishCategory where PublishCatalogId = @PublishCatalogId 
				--)
		
	
		  
				SELECT @VersionId  = PublishCatalogLogId from ZnodePublishCatalogLog where PublishCatalogId = @PublishCatalogId  and IsCatalogPublished =1 

			

			 	 INSERT INTO @TBL_DeletedPublishCategoryIds (PublishCategoryId,PublishProductId)
				 SELECT ZPC.PublishCategoryId,ZPCP.PublishProductId 
				 FROM ZnodePublishCategory AS ZPC 
				 LEFT JOIN  ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishCategoryId = ZPC.PublishCategoryId AND ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND  ZPCP.PimCategoryHierarchyId = ZPC.PimCategoryHierarchyId  )                                                  
				 LEFT JOIN ZnodePublishProduct ZPP ON (zpp.PublishProductId = zpcp.PublishProductId AND zpp.PublishCatalogId = zpcp.PublishCatalogId)
				 LEFT JOIN ZnodePublishCatalog ZPCC ON (ZPCC.PublishCatalogId = ZPCP.PublishCatalogId)
				 WHERE ZPC.PublishCatalogId = @PublishCataLogId 
				 --AND NOT EXISTS
				 --(SELECT TOP 1 1 FROM ZnodePimCatalogCategory AS TBPC WHERE TBPC.PimCategoryId = ZPC.PimCategoryId 
				 --AND TBPC.PimCategoryHierarchyId = ZPC.PimCategoryHierarchyId AND TBPC.PimProductId = ZPP.PimProductId 
				 --AND TBPC.PimCatalogId = ZPCC.PimCatalogId  AND  ZPCP.PimCategoryHierarchyId=  @PimCategoryHierarchyId   ) 
				 AND ZPC.PimCategoryHierarchyId in (select PimCategoryHierarchyId FROM @TBL_PimCategoryIds) ;
				
			End
			ELSE 
			Begin
				INSERT INTO @TBL_PimCategoryIds(PimCategoryId,PimParentCategoryId,DisplayOrder,ActivationDate,ExpirationDate,IsActive,PimCategoryHierarchyId,ParentPimCategoryHierarchyId)
				SELECT DISTINCT ZPCH.PimCategoryId,ZPCH2.PimCategoryId  PimParentCategoryId,ZPCH.DisplayOrder,ZPCH.ActivationDate,ZPCH.ExpirationDate,ZPCH.IsActive ,ZPCH.PimCategoryHierarchyId,ZPCH.ParentPimCategoryHierarchyId
				FROM ZnodePimCategoryHierarchy AS ZPCH 
				LEFT JOIN ZnodePimCategoryHierarchy AS ZPCH2 ON (ZPCH2.PimCategoryHierarchyId = ZPCH. ParentPimCategoryHierarchyId ) 
				WHERE ZPCH.PimCatalogId = @PimCatalogId; 

			 -- AND IsActive = @IsActive ; -- As discussed with @anup active flag maintain on demo site 23/12/2016
			 --	SELECT * FROM @TBL_PimCategoryIds
			 -- here is find the deleted publish category id on basis of publish catalog

             INSERT INTO @TBL_DeletedPublishCategoryIds(PublishCategoryId,PublishProductId)
			 SELECT ZPC.PublishCategoryId,ZPCP.PublishProductId 
				 FROM ZnodePublishCategoryProduct ZPCP
				 INNER JOIN ZnodePublishCategory AS ZPC ON(ZPCP.PublishCategoryId = ZPC.PublishCategoryId AND ZPCP.PublishCatalogId = ZPC.PublishCatalogId)                                                  
				 INNER JOIN ZnodePublishProduct ZPP ON(zpp.PublishProductId = zpcp.PublishProductId AND zpp.PublishCatalogId = zpcp.PublishCatalogId)
				 INNER JOIN ZnodePublishCatalog ZPCC ON(ZPCC.PublishCatalogId = ZPCP.PublishCatalogId)
				 WHERE ZPC.PublishCatalogId = @PublishCataLogId 
				 AND NOT EXISTS
				 (SELECT TOP 1 1 FROM ZnodePimCatalogCategory AS TBPC WHERE TBPC.PimCategoryId = ZPC.PimCategoryId 
				 AND TBPC.PimCategoryHierarchyId = ZPC.PimCategoryHierarchyId AND TBPC.PimProductId = ZPP.PimProductId 
				 AND TBPC.PimCatalogId = ZPCC.PimCatalogId);

			End
			
          

			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishCategoryIds = ISNULL(SUBSTRING((SELECT ','+CAST(PublishCategoryId AS VARCHAR(50)) FROM @TBL_DeletedPublishCategoryIds AS ZPC
                                              GROUP BY ZPC.PublishCategoryId FOR XML PATH('') ), 2, 4000), '');
			 -- here is find the deleted publish category id on basis of publish catalog
             SET @DeletedPublishProductIds = '';
			 -- Delete the publish category id 
	         EXEC Znode_DeletePublishCatalog @PublishCatalogIds = @PublishCatalogId,@PublishCategoryIds = @DeletedPublishCategoryIds,@PublishProductIds = @DeletedPublishProductIds; 
			
			

             MERGE INTO ZnodePublishCategory TARGET USING  @TBL_PimCategoryIds SOURCE ON
			 (
				 TARGET.PimCategoryId = SOURCE.PimCategoryId 
				 AND TARGET.PublishCatalogId = @PublishCataLogId 
				 AND TARGET.PimCategoryHierarchyId = SOURCE.PimCategoryHierarchyId
			 )
			 WHEN MATCHED THEN UPDATE SET TARGET.PimParentCategoryId = SOURCE.PimParentCategoryId,TARGET.CreatedBy = @UserId,TARGET.CreatedDate = @GetDate,
             TARGET.ModifiedBy = @UserId,TARGET.ModifiedDate = @GetDate,PimCategoryHierarchyId = SOURCE.PimCategoryHierarchyId,ParentPimCategoryHierarchyId=SOURCE.ParentPimCategoryHierarchyId
             WHEN NOT MATCHED THEN INSERT(PimCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,PimCategoryHierarchyId,ParentPimCategoryHierarchyId) 
			 VALUES(SOURCE.PimCategoryId,@PublishCatalogId,@UserId,@GetDate,@UserId,@GetDate,SOURCE.PimCategoryHierarchyId
			 ,SOURCE.ParentPimCategoryHierarchyId)
             OUTPUT INSERTED.PublishCategoryId,INSERTED.PimCategoryId,INSERTED.PimCategoryHierarchyId,
			 INSERTED.parentPimCategoryHierarchyId 
			 INTO @TBL_PublishPimCategoryIds(PublishCategoryId,PimCategoryId,PimCategoryHierarchyId,parentPimCategoryHierarchyId);
			       
				   
		     -- here update the publish parent category id
             UPDATE ZPC SET [PimParentCategoryId] =TBPC.[PimCategoryId] 
				FROM ZnodePublishCategory ZPC
				INNER JOIN ZnodePublishCategory TBPC ON(ZPC.parentPimCategoryHierarchyId = TBPC.PimCategoryHierarchyId  ) 
				WHERE ZPC.PublishCatalogId =@PublishCatalogId
				AND ZPC.ParentPimCategoryHierarchyId IS NOT NULL
				AND TBPC.PublishCatalogId =@PublishCatalogId
				AND ZPC.PimCategoryId in (select PimCategoryId FROM @TBL_PimCategoryIds);
				;
			 UPDATE a
				SET  a.PublishParentCategoryId = b.PublishCategoryId
				FROM ZnodePublishCategory a 
				INNER JOIN ZnodePublishCategory b   ON (a.parentpimCategoryHierarchyId = b.pimCategoryHierarchyId)
				WHERE a.parentpimCategoryHierarchyId IS NOT NULL 
				AND a.PublishCatalogId =@PublishCatalogId
				AND b.PublishCatalogId =@PublishCatalogId
				AND a.PimCategoryId in (select PimCategoryId FROM @TBL_PimCategoryIds);

			 --UPDATE ZPC SET [PimParentCategoryId] = TBPC.[PimCategoryId] 
			 --FROM ZnodePublishCategory ZPC
    --         INNER JOIN ZnodePublishCategory TBPC ON(ZPC.parentPimCategoryHierarchyId = TBPC.PimCategoryHierarchyId  ) 
			 --WHERE ZPC.PublishCatalogId =@PublishCatalogId
			 --AND ZPC.ParentPimCategoryHierarchyId IS NOT NULL ;

			 -- product are published here 
            --  EXEC Znode_GetPublishProducts @PublishCatalogId,0,@UserId,1,0,0;

             SET @MaxId =(SELECT MAX(RowId)FROM @TBL_LocaleIds);
			 DECLARE @TransferID TRANSFERID 
			 INSERT INTO @TransferID 
			 SELECT DISTINCT  PimCategoryId
			 FROM @TBL_PublishPimCategoryIds 

          
			 INSERT INTO @TBL_PublishPimCategoryIdsLatest 
			 SELECT a.*,Max(b.PublishCatalogLogId) PublishCatalogLogId,b.LocaleId
			 FROM @TBL_PublishPimCategoryIds a
			 LEFT JOIN ZnodePublishCatalogLog b ON (b.PublishCatalogId = @PublishCatalogId)
			 WHERE EXISTS (SELECT TOP 1 1  FROM @LocaleId YTU WHERE YTU.Id = b.LocaleId )
			 AND b.PublishStateId = @PublishStateId
			 GROUP BY a.PublishCategoryId  ,PimCategoryId ,a.PublishProductId ,PublishParentCategoryId ,
			  PimCategoryHierarchyId  ,parentPimCategoryHierarchyId,b.LocaleId

			 
			 
             WHILE @Counter <= @MaxId -- Loop on Locale id 
                 BEGIN
                     SET @LocaleIdIn =(SELECT LocaleId FROM @TBL_LocaleIds WHERE RowId = @Counter);
                   
				     SET @AttributeIds = SUBSTRING((SELECT ','+CAST(ZPCAV.PimAttributeId AS VARCHAR(50)) FROM ZnodePimCategoryAttributeValue ZPCAV 
										 WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC WHERE TBPC.PimCategoryId = ZPCAV.PimCategoryId) GROUP BY ZPCAV.PimAttributeId FOR XML PATH('')), 2, 4000);
                
				     SET @CategoryIdCount =(SELECT COUNT(1) FROM @TBL_PimCategoryIds);

                     INSERT INTO @TBL_AttributeIds (PimAttributeId,ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined,
					 IsConfigurable,IsPersonalizable,DisplayOrder,HelpDescription,IsCategory,IsHidden,CreatedDate,ModifiedDate,AttributeName,AttributeTypeName)
                     EXEC [Znode_GetPimAttributesDetails] @AttributeIds,@LocaleIdIn;

                     INSERT INTO @TBL_AttributeDefault (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
                     EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @AttributeIds,@LocaleIdIn;

                     INSERT INTO @TBL_AttributeValue (PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
                     EXEC [dbo].[Znode_GetCategoryAttributeValueId] @TransferID,@AttributeIds,@LocaleIdIn;

					-- SELECT * FROM @TBL_AttributeValue WHERE PimCategoryId = 281


                     ;WITH Cte_UpdateDefaultAttributeValue
                     AS (
					  SELECT TBAV.PimCategoryId,TBAV.PimAttributeId,SUBSTRING((SELECT ','+AttributeDefaultValue FROM @TBL_AttributeDefault TBD WHERE TBAV.PimAttributeId = TBD.PimAttributeId
						AND EXISTS(SELECT TOP 1 1 FROM Split(TBAV.CategoryValue, ',') SP WHERE SP.Item = TBD.AttributeDefaultValueCode)FOR XML PATH('')), 2, 4000) DefaultCategoryAttributeValue
						FROM @TBL_AttributeValue TBAV WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_AttributeDefault TBAD WHERE TBAD.PimAttributeId = TBAV.PimAttributeId))
					 
					 -- update the default value with locale 
                     UPDATE TBAV SET CategoryValue = CTUDFAV.DefaultCategoryAttributeValue FROM @TBL_AttributeValue TBAV 
					 INNER JOIN Cte_UpdateDefaultAttributeValue CTUDFAV ON(CTUDFAV.PimCategoryId = TBAV.PimCategoryId AND CTUDFAV.PimAttributeId = TBAV.PimAttributeId)
					 WHERE CategoryValue IS NULL ;
					 
					 -- here is update the media path  
                     WITH Cte_productMedia
                     AS (SELECT TBA.PimCategoryId,TBA.PimAttributeId,[dbo].[FN_GetThumbnailMediaPathPublish](SUBSTRING((SELECT ','+zm.PATH FROM ZnodeMedia ZM WHERE EXISTS
					    (SELECT TOP 1 1 FROM dbo.split(TBA.CategoryValue, ',') SP WHERE SP.Item = CAST(Zm.MediaId AS VARCHAR(50)))FOR XML PATH('')), 2, 4000)) CategoryValue
						FROM @TBL_AttributeValue TBA WHERE EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetProductMediaAttributeId]() FNMA WHERE FNMA.PImAttributeId = TBA.PimATtributeId))
                         
					 UPDATE TBAV SET CategoryValue = CTCM.CategoryValue 
					 FROM @TBL_AttributeValue TBAV 
					 INNER JOIN Cte_productMedia CTCM ON(CTCM.PimCategoryId = TBAV.PimCategoryId
					 AND CTCM.PimAttributeId = TBAV.PimAttributeId);

                     WITH Cte_PublishProductIds
					 AS (SELECT TBPC.PublishcategoryId,SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50))
					  FROM ZnodePublishCategoryProduct ZPCP 
					  WHERE ZPCP.PublishCategoryId = TBPC.publishCategoryId
					  AND ZPCP.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId
                      AND ZPCP.PublishCatalogId = @PublishCatalogId FOR XML PATH('')), 2, 8000) PublishProductId ,PimCategoryHierarchyId
					  FROM @TBL_PublishPimCategoryIds TBPC)
                          
					 UPDATE TBPPC SET PublishProductId = CTPP.PublishProductId FROM @TBL_PublishPimCategoryIds TBPPC INNER JOIN Cte_PublishProductIds CTPP ON(TBPPC.PublishCategoryId = CTPP.PublishCategoryId 
					 AND TBPPC.PimCategoryHierarchyId = CTPP.PimCategoryHierarchyId);

					 WITH Cte_CategoryProfile
						AS (SELECT PimCategoryId,ZPCC.PimCategoryHierarchyId,SUBSTRING(( SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
						FROM ZnodeProfileCatalog ZPC 
						INNER JOIN ZnodeProfileCategoryHierarchy ZPRCC ON(ZPRCC.PimCategoryHierarchyId = ZPCC.PimCategoryHierarchyId
						AND ZPRCC.ProfileCatalogId = ZPC.ProfileCatalogId) 
						WHERE ZPC.PimCatalogId = ZPCC.PimCatalogId FOR XML PATH('')), 2, 4000) ProfileIds
                      
						FROM ZnodePimCategoryHierarchy ZPCC 
						WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimCategoryIds TBPC 
						WHERE TBPC.PimCategoryId = ZPCC.PimCategoryId AND ZPCC.PimCatalogId = @PimCatalogId 
						AND ZPCC.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId))
                          
				     UPDATE TBPC SET TBPC.ProfileId = CTCP.ProfileIds FROM @TBL_PimCategoryIds TBPC 
					 LEFT JOIN Cte_CategoryProfile CTCP ON(CTCP.PimCategoryId = TBPC.PimCategoryId AND CTCP.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId );
                     
					 UPDATE TBPC SET TBPC.CategoryName = TBAV.CategoryValue FROM @TBL_PimCategoryIds TBPC INNER JOIN @TBL_AttributeValue TBAV ON(TBAV.PimCategoryId = TBPC.PimCategoryId
                     AND EXISTS(SELECT TOP 1 1 FROM [dbo].[Fn_GetCategoryNameAttribute]() FNGCNA WHERE FNGCNA.PimAttributeId = TBAV.PimAttributeId));

					   UPDATE TBPC SET TBPC.CategoryCode = TBAV.CategoryValue FROM @TBL_PimCategoryIds TBPC INNER JOIN @TBL_AttributeValue TBAV ON(TBAV.PimCategoryId = TBPC.PimCategoryId
					 AND EXISTS(SELECT TOP 1 1 FROM dbo.Fn_GetCategoryCodeAttribute() FNGCNA WHERE FNGCNA.PimAttributeId = TBAV.PimAttributeId)
					 )


					-- SELECT * FROM @TBL_AttributeValue WHERE pimCategoryId = 369

					 -- here update the publish category details 
                     ;WITH Cte_UpdateCategoryDetails
                     AS 
					 (
							 SELECT TBC.PimCategoryId,PublishCategoryId,CategoryName, TBPPC.PimCategoryHierarchyId,CategoryCode
							 FROM @TBL_PimCategoryIds TBC
							 INNER JOIN @TBL_PublishPimCategoryIds TBPPC ON(TBC.PimCategoryId = TBPPC.PimCategoryId AND TBC.PimCategoryHierarchyId = TBPPC.PimCategoryHierarchyId)
					 )						
                     MERGE INTO ZnodePublishCategoryDetail TARGET USING Cte_UpdateCategoryDetails SOURCE ON(
					 TARGET.PublishCategoryId = SOURCE.PublishCategoryId
					 AND TARGET.LocaleId = @LocaleIdIn)
                     WHEN MATCHED THEN UPDATE SET PublishCategoryId = SOURCE.PublishcategoryId,PublishCategoryName = SOURCE.CategoryName,LocaleId = @LocaleIdIn,ModifiedBy = @userId,ModifiedDate = @GetDate,CategoryCode=SOURCE.CategoryCode
                     WHEN NOT MATCHED THEN INSERT(PublishCategoryId,PublishCategoryName,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,CategoryCode) VALUES
                     (SOURCE.PublishCategoryId,SOURCE.CategoryName,@LocaleIdIn,@userId,@GetDate,@userId,@GetDate,SOURCE.CategoryCode);

                     ;WITH Cte_CategoryXML
                     AS (SELECT PublishCatalogLogId,PublishcategoryId,PimCategoryId,(SELECT PublishCatalogLogId VersionId,TBPC.PublishCategoryId ZnodeCategoryId,@PublishCatalogId ZnodeCatalogId
																		,THR.PublishParentCategoryId TempZnodeParentCategoryIds,ZPC.CatalogName ,
																		 ISNULL(DisplayOrder, '0') DisplayOrder,@LocaleIdIn LocaleId,ActivationDate 
																		 ,ExpirationDate,TBC.IsActive,ISNULL(CategoryName, '') Name,ProfileId TempProfileIds,ISNULL(PublishProductId, '') TempProductIds,ISNULL(CategoryCode,'') CategoryCode 
                        FROM @TBL_PublishPimCategoryIdsLatest TBPC 
						INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId= @PublishCatalogId)
						INNER JOIN ZnodePublishCAtegory THR ON (THR.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId AND THR.PimCategoryId = TBPC.PimCategoryId AND THR.PublishCatalogId= @PublishCatalogId )
						INNER JOIN @TBL_PimCategoryIds TBC ON(TBC.PimCategoryId = TBPC.PimCategoryId AND TBC.PimCategoryHierarchyId = TBPC.PimCategoryHierarchyId) 
						WHERE TBPC.PublishCategoryId = TBPCO.PublishCategoryId 
						AND TBPC.LocaleId = @localeIdIn
						FOR XML PATH('')) CategoryXml 
						FROM @TBL_PublishPimCategoryIdsLatest TBPCO 
						WHERE LocaleId = @localeIdIn),

                     Cte_CategoryAttributeXml
                     AS (SELECT PublishCatalogLogId, CTCX.PublishCategoryId,'<CategoryEntity>'+ISNULL(CategoryXml, '')+ISNULL((SELECT(SELECT TBA.AttributeCode,TBA.AttributeName,ISNULL(IsUseInSearch, 0) IsUseInSearch,
                        ISNULL(IsHtmlTags, 0) IsHtmlTags,ISNULL(IsComparable, 0) IsComparable,(SELECT ''+TBAV.CategoryValue FOR XML PATH('')) AttributeValues,TBA.AttributeTypeName FROM @TBL_AttributeValue TBAV
                        INNER JOIN @TBL_AttributeIds TBA ON(TBAV.PimAttributeId = TBA.PimAttributeId) LEFT JOIN ZnodePimFrontendProperties ZPFP ON(ZPFP.PimAttributeId = TBA.PimAttributeId)
                        WHERE CTCX.PimCategoryId = TBAV.PimCategoryId AND TBAO.PimAttributeId = TBA.PimAttributeId FOR XML PATH('AttributeEntity'), TYPE) FROM @TBL_AttributeIds TBAO
                        FOR XML PATH('Attributes')), '')+'</CategoryEntity>' CategoryXMl FROM Cte_CategoryXML CTCX)

                     INSERT INTO @TBL_CategoryXml(PublishCategoryId,CategoryXml,LocaleId,PublishCatalogLogId)
                     SELECT PublishCategoryId,CategoryXml,@localeIdIn LocaleId,PublishCatalogLogId 
					 FROM Cte_CategoryAttributeXml;
                   
				     DELETE FROM @TBL_AttributeIds;
                     DELETE FROM @TBL_AttributeDefault;
                     DELETE FROM @TBL_AttributeValue;
                     SET @Counter = @Counter + 1;
                 END;

				

				 -----------------------
			IF @PimCategoryHierarchyId > 0 
			Begin 
				Select PublishCategoryId ,PublishCatalogLogId VersionId	, @PimCatalogId PimCatalogId	, LocaleId
				into #OutPublish  
				FROM @TBL_CategoryXml  
				--group by PimCatalogId,VersionId,PublishCategoryId
  

				Alter TABLE #OutPublish ADD Id int Identity 

				SET @MaxId =(SELECT COUNT(*) FROM #OutPublish);
				--SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(50)) FROM @TBL_PublishPimCategoryIds FOR XML PATH('')), 2, 4000);
				Declare @ExistingPublishCategoryId  nvarchar(max), @PublishCategoryId  int 
				SET @Counter =1 
				WHILE @Counter <= @MaxId -- Loop on Locale id 
				BEGIN
					SELECT @VersionId = VersionId  ,
					@PublishCategoryId = PublishCategoryId 
					from #OutPublish where Id = @Counter

					SELECT @ExistingPublishCategoryId  = PublishCategoryId 
					FROM ZnodePublishCatalogLog ZPCL 
					where ZPCL.PublishCatalogLogId = @VersionId  and IsCategoryPublished =1 

			IF NOT EXISTS (SELECT TOP 1 1 FROM Split(@ExistingPublishCategoryId  , ',') SP WHERE SP.Item = Convert(nvarchar(50),  @PublishCategoryId) )
					BEGIN
					
						If Isnull(@ExistingPublishCategoryId,'')  = '' 
							SET @ExistingPublishCategoryId  = Convert(nvarchar(100),@PublishCategoryId )
						else 
							SET @ExistingPublishCategoryId  = Isnull(@ExistingPublishCategoryId,'') + ',' +  Convert(nvarchar(100),@PublishCategoryId )

							
				
						UPDATE ZnodePublishCatalogLog SET PublishCategoryId = @MaxId ,
						ModifiedDate = @GetDate
						WHERE PublishCatalogLogId = @VersionId;
					END
					DELETE FROM ZnodePublishedXml where  IsCategoryXML =1  and  PublishCataloglogId = @VersionId  and  PublishedId = @PublishCategoryId 
					SET @Counter  = @Counter  + 1  
				END
			END 
			ElSE
			Begin
				 UPDATE ZnodePublishCatalogLog 
				 SET PublishCategoryId = (SELECT COUNT(PublishCategoryId)  FROM @TBL_CategoryXml
				 GROUP BY PublishCategoryId																				
				 ), IsCategoryPublished = 1 WHERE PublishCatalogLogId = @VersionId;

				 DELETE FROM ZnodePublishedXml WHERE PublishCataloglogId = @VersionId;
             End
             
			 INSERT INTO ZnodePublishedXml (PublishCatalogLogId,PublishedId,PublishedXML,IsCategoryXML,IsProductXML,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
             SELECT PublishCatalogLogId PublishCataloglogId,PublishCategoryId,CategoryXml,1,0,LocaleId,@UserId,@GetDate,@UserId,@GetDate 
			 FROM @TBL_CategoryXml 
		
			
			-----------------------------------------------------------------------------------------------------------------------------
		
	
			 Select Distinct PublishCategoryId from @TBL_DeletedPublishCategoryIds
			 UNION
			--not published parentcategory
			SELECT DISTINCT PublishCategoryId FROM ZnodePublishCategory A
			LEFT JOIN @TBL_PimCategoryIds B ON (A.PimCategoryId = B.PimCategoryId)
			WHERE A.PublishCatalogId = @PublishCataLogId AND B.PimCategoryHierarchyId = A.PimCategoryHierarchyId
			UNION
			SELECT DISTINCT PublishCategoryId from ZnodePublishCategory A
			INNER JOIN @TBL_PimCategoryIds B ON (A.PimParentCategoryId = B.PimCategoryId)
			WHERE
			A.PublishCatalogId =@PublishCataLogId

			 SELECT CategoryXml 
			 FROM @TBL_CategoryXml 
			
			 UPDATE ZnodePimCategory SET IsCategoryPublish =1,PublishStateId = @PublishStateId WHERE pimCategoryId IN (SELECT PimCategoryId FROM @TBL_PimCategoryIds)
             COMMIT TRAN GetPublishCategory;
			 
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE();
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishCategory @PublishCatalogId = '+CAST(@PublishCatalogId AS VARCHAR(50))+',@UserId ='+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             ROLLBACK TRAN GetPublishCategory;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_GetPublishCategory',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;

GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_AdminUsers')
BEGIN 
	DROP PROCEDURE Znode_AdminUsers
END
GO

CREATE PROCEDURE [dbo].[Znode_AdminUsers]
(	@RoleName		VARCHAR(200),
    @UserName		VARCHAR(200),
    @WhereClause	VARCHAR(MAX)  = '',
    @Rows			INT           = 100,
    @PageNo			INT           = 1,
    @Order_By		VARCHAR(1000) = '',
    @RowCount		INT        = 0 OUT,
	@IsCallOnSite   BIT = 0 ,
	@PortalId		VARCHAR(1000) = 0 )
AS
   /* 
      Summary: List of users with detsils and shows link with ASPNet tables 
      This procedure is used for finding both users and admin users 
      here use three view "View_RoleUsers" for check  @UserName is present or not 
      "View_AdminUserDetail"  this view use for admin users 
      "View_CustomerUserDetail" Use for customer users 
      Unit Testing   
	  SELECT * FROM ZnodeUser 
      DECLARE @EDE INT=0  EXEC Znode_AdminUsers '','admin@znode.com',@WhereClause='',@Order_By='',@PageNo= 1 ,@Rows= 214,@IsCallOnSite='false',@PortalId=0,@RowCount=@EDE OUT  SELECT @EDE
   */
     BEGIN
         BEGIN TRY
            SET NOCOUNT ON;


            DECLARE @SQL NVARCHAR(MAX)= '', @PaginationWhereClause VARCHAR(300)= dbo.Fn_GetRowsForPagination(@PageNo, @Rows, ' WHERE RowId');
             
			IF @PortalId  <> '0' 
			BEGIN 
			    SET @WhereClause = CASE WHEN  @WhereClause = '' THEN ' (PortalId IN ('+@PortalId+') OR PortalId IS NULL) ' ELSE @WhereClause+' AND (PortalId IN ('+@PortalId+') OR PortalId IS NULL) ' END 
			END 
			IF EXISTS
            (
            SELECT TOP 1 1
            FROM View_RoleUsers
            WHERE Username = @UserName
            )
			-- this check for admin user
            AND @RoleName <> ''  

			BEGIN
				SET @SQL = ' 
				--;with Cte_AdminUserDetail AS 
				--(
					 
				SELECT  DISTINCT A.UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,A.CreatedBy,A.CreatedDate,A.ModifiedBy,A.ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId ,CustomerPaymentGUID
				INTO #Cte_AdminUserDetail
				FROM View_AdminUserDetail A
				'+CASE WHEN @PortalId  <> '0' THEN ' INNER JOIN ZnodeUserPortal ZUP ON (ZUP.UserId = A.UserId) 'ELSE '' END  +'	 
				'+dbo.Fn_GetWhereClause(@WhereClause, ' WHERE ')+'
				--),
				;with Cte_AdminUserDetailRowId AS 
				(
				SELECT UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId,CustomerPaymentGUID ,RANK()Over('+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC')+',UserId DESC) RowId
				FROM  #Cte_AdminUserDetail
				)
					 
				SELECT UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId,CustomerPaymentGUID ,RowId 
				INTO #AccountDetails
				FROM Cte_AdminUserDetailRowId 
					 
				SET @Count= ISNULL((SELECT  Count(1) FROM #AccountDetails ),0)
					 
				SELECT DISTINCT UserId,AspNetUserId,UserName,FirstName,MiddleName,LastName,Email,EmailOptIn,BudgetAmount,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
				,RoleId,RoleName,IsActive,IsLock,FullName,AccountName,PermissionsName,PermissionCode,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId,PhoneNumber
				,ExternalId,ApprovalName,ApprovalUserId,AccountUserOrderApprovalId ,CustomerPaymentGUID
				FROM #AccountDetails '+@PaginationWhereClause+' '+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC' );
			    PRINT @SQL
				EXEC SP_executesql
				@SQL,
				N'@Count INT OUT',
				@Count = @RowCount OUT;
			END;
			-- For Customer user
            ELSE   
      BEGIN
				IF @roleName = ''
				BEGIN
				
				SET @SQL = '
				--;With Cte_CustomerUserDetail  AS 
				--(
				SELECT DISTINCT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode,CustomerPaymentGUID ,StoreName,PortalId,
				CountryName, CityName, StateName, PostalCode, CompanyName
				INTO #Cte_CustomerUserDetail
				FROM View_CustomerUserAddDetail a 
				
				WHERE 
				(EXISTS   -- this will check for customer 
				(
				SELECT TOP 1 1
				FROM AspNetUserRoles AS b
				WHERE a.AspNetUserId = b.userid
				AND EXISTS
				(SELECT TOP 1 1	FROM AspNetRoles AS d	WHERE(d.Name IN(''Customer'')OR d.TypeOfRole = ''B2B'')	AND d.Id = b.RoleId	)  
				) OR AspNetuserId IS NULL OR '+CAST(CAST(@IsCallOnSite AS INT ) AS VARCHAR(50))+'= ''1'' ) 
				'+dbo.Fn_GetWhereClause(@WhereClause, ' AND ')+'
				--),
				;With Cte_CustomerUserDetailRowId  AS 
				(
				SELECT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode,CustomerPaymentGUID ,RANK()Over('+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC')+',UserId DESC) RowId ,StoreName,PortalId,
				CountryName, CityName, StateName, PostalCode, CompanyName
				FROM #Cte_CustomerUserDetail -- genrate the unique rowid 
				)
					 			 
				SELECT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode,CustomerPaymentGUID ,RowId,StoreName,PortalId,
				CountryName, CityName, StateName, PostalCode, CompanyName
				INTO #AccountDetail FROM Cte_CustomerUserDetailRowId  

				SET @Count= ISNULL((SELECT  Count(1) FROM #AccountDetail    ),0)

				
												  
				SELECT DISTINCT UserId,AspNetuserId,UserName,FirstName,MiddleName,LastName,PhoneNumber,Email,
				EmailOptIn,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,RoleId,RoleName,IsActive,IsLock,FullName,
				AccountName,PermissionsName,DepartmentName,DepartmentId,AccountId,AccountPermissionAccessId , ExternalId,
				BudgetAmount,AccountUserOrderApprovalId,ApprovalName,ApprovalUserId,PermissionCode ,CustomerPaymentGUID,StoreName,PortalId,
				CountryName, CityName, StateName, PostalCode, CompanyName
				FROM #AccountDetail '+@PaginationWhereClause+' '+dbo.Fn_GetOrderByClause(@Order_By, 'UserId DESC');
                PRINT @SQL    					
				EXEC SP_executesql
				@SQL,
				N'@Count INT OUT',
				@Count = @RowCount OUT;
				END;
            ELSE
				BEGIN
					SELECT * FROM View_CustomerUserDetail AS VICUD WHERE 1 = 0;
					SET @RowCount = 0;
				END;
            END;			
         END TRY
         BEGIN CATCH
            DECLARE @ERROR_PROCEDURE VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_AdminUsers @RoleName = '+@RoleName+' ,@UserName='+@UserName+',@WhereClause='+@WhereClause+' ,@Rows= '+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_By='+@Order_By+',@RowCount='+CAST(@RowCount AS VARCHAR(50));
            EXEC Znode_InsertProcedureErrorLog
            @ProcedureName    = 'Znode_AdminUsers',
            @ErrorInProcedure = @ERROR_PROCEDURE,
            @ErrorMessage     = @ErrorMessage,
            @ErrorLine        = @ErrorLine,
            @ErrorCall        = @ErrorCall;
         END CATCH;


     END;

	 GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishCMSWidgetTitle')
BEGIN 
	DROP PROCEDURE Znode_GetPublishCMSWidgetTitle
END
GO


CREATE PROCEDURE [dbo].[Znode_GetPublishCMSWidgetTitle]
(
 @PortalId INT = 0 
  ,@LocaleId INT = 0 
  ,@CMSContentPagesId INT = 0
)
AS 
/*
 This Procedure is used to get the record of content pages for publish  portal 
  EXEC Znode_GetPublishCMSWidgetTitle @PortalId =1,  @CMSContentPagesId = 88
*/
BEGIN 
 BEGIN TRY 
  SET NOCOUNT ON 
   
   DECLARE @TBL_LocaleId TABLE ( RowId INT IDENTITY(1,1) PRIMARY KEY , LocaleId INT )
   DECLARE @TBL_GetDATATable TABLE (WidgetTitleConfigurationId INT ,MappingId INT ,  PortalId INT 
			, LocaleId INT , MediaPath   VARCHAR(300) , Title nvarchar (600) ,TitleCode nvarchar(600) ,TypeOFMapping NVARCHAR(100) 
			,Url nvarchar(600)  , WidgetsKey  NVARCHAR(256),IsNewTab bit)
   INSERT INTO @TBL_LocaleId (LocaleId )
   SELECT LocaleId 
   FROm ZnodeLocale 
   WHERE IsActive = 1
   AND (LocaleId = @LocaleId OR   ISNULL(@LocaleId,0) = 0)
    
    DECLARE @SetLocaleId INT  ,@DefaultLocaleId INT = dbo.FN_GEtDEFAULTLocaleID() 
   DECLARE @CounterId INT = 1 , @MaxRowId INT = (SELECT Max(RowId ) FROM @TBL_LocaleId)  

   WHILE @CounterId <= @MaxRowId
   BEGIN 
   SET @SetLocaleId = (SELECT TOP 1 LocaleID FROM @TBL_LocaleId WHERe RowId =@CounterId )  
  
   DECLARE @TBL_TitleWidgetsData TABLE (CMSWidgetTitleConfigurationId INT , CMSWidgetTitleConfigurationLocaleId INT )
  ;With Cte_GetContentPagesId AS 
   (
     SELECT ZCWTC.CMSWidgetTitleConfigurationId , ZCWTCL.CMSWidgetTitleConfigurationLocaleId ,LocaleId, IsNewTab
	 FROM ZnodeCMSWidgetTitleConfiguration ZCWTC 
	 INNER JOIN ZnodeCMSWidgetTitleConfigurationLocale  ZCWTCL ON (ZCWTCL.CMSWidgetTitleConfigurationId = ZCWTC.CMSWidgetTitleConfigurationId )
     WHERE ZCWTCL.LocaleId   IN (@DefaultLocaleId,@SetLocaleId) 
   ) 
   , Cte_LocaleIdFiletr AS 
   (
    SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
    FROM Cte_GetContentPagesId CET1 
	WHERE LocaleId = @SetLocaleId
    )
	,Cte_CompleteRecords AS 
	(
	 SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	 FROM Cte_LocaleIdFiletr
	 UNION ALL 
	 SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	 FROM Cte_GetContentPagesId  CTE2
	 WHERE Cte2.localeId = @DefaultLocaleId
	 AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_LocaleIdFiletr CTE1 WHERE Cte1.CMSWidgetTitleConfigurationId = CTE2.CMSWidgetTitleConfigurationId )
	)


	INSERT INTO @TBL_TitleWidgetsData (CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId)
	SELECT CMSWidgetTitleConfigurationId,CMSWidgetTitleConfigurationLocaleId
	FROM Cte_CompleteRecords 
	 
	 INSERT INTO @TBL_GetDATATable (WidgetTitleConfigurationId  ,MappingId  ,  PortalId  , LocaleId  , MediaPath   , Title  ,TitleCode  ,TypeOFMapping  ,Url   , WidgetsKey,IsNewTab )
	 SELECT ZCWTC.CMSWidgetTitleConfigurationId WidgetTitleConfigurationId,ZCWTC.CMSMappingId MappingId,CASE @CMSContentPagesId WHEN 0 THEN ZCWTC.CMSMappingId
													ELSE @PortalId END
							AS PortalId,@SetLocaleId LocaleId,ZM.[path]MediaPath,ZCWTCL.Title,ZCWTC.TitleCode,ZCWTC.TypeOFMapping,ZCWTCl.Url,ZCWTC.WidgetsKey,IsNewTab
	 FROM ZnodeCMSWidgetTitleConfiguration ZCWTC 
	 INNER JOIN ZnodeCMSWidgetTitleConfigurationLocale  ZCWTCL ON (ZCWTCL.CMSWidgetTitleConfigurationId = ZCWTC.CMSWidgetTitleConfigurationId )
	 INNER JOIN @TBL_TitleWidgetsData TBLW ON (TBLW.CMSWidgetTitleConfigurationLocaleId  =  ZCWTCL.CMSWidgetTitleConfigurationLocaleId)
	 LEFT JOIN ZnodeMedia ZM ON (Zm.MediaId = ZCWTCL.MediaId)
	 --WHERE ZCWTC.TypeOFMapping = 'PortalMapping'
	 --AND ZCWTC.CMSMappingId  = @PortalId
	 WHERE
	 ((ZCWTC.TypeOfMapping = 'PortalMapping'
                                  AND ZCWTC.CMSMappingId = @PortalId OR  @PortalId = 0)
                                  OR (ZCWTC.TypeOfMapping = 'ContentPageMapping'
                                     AND ZCWTC.CMSMappingId  = @CMSContentPagesId OR @CMSContentPagesId  = 0)
                                    )
	 AND (CMSMappingId = @CMSContentPagesId OR @CMSContentPagesId  = 0)
	 AND (CMSMappingId = @PortalId OR @PortalId  = 0)


	 SET @CounterId = @CounterId+1 
	 DELETE FROM @TBL_TitleWidgetsData
   END 

   SELECT WidgetTitleConfigurationId  ,MappingId  ,  PortalId  , LocaleId  , MediaPath   , Title  ,TitleCode  ,TypeOFMapping  ,Url   , WidgetsKey,IsNewTab
   FROM @TBL_GetDATATable

   END TRY 
   BEGIN CATCH 
   SELECT ERROR_MESSAGE()
   END CATCH 
   
END

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertSaveCartLineItemsForReOrder')
BEGIN 
	DROP PROCEDURE Znode_InsertSaveCartLineItemsForReOrder
END
GO
CREATE PROCEDURE [dbo].[Znode_InsertSaveCartLineItemsForReOrder] 
(
 @OmsOrderId INT, 
 @OmsSavedCartId INT ,
 @UserId INT ,
 @OmsOrderLineItemsId INT = 0,
 @Status BIT = 0 OUT
)
AS 
BEGIN 
 BEGIN TRY 
  SET NOCOUNT ON 
  DECLARE @TBL_ZnodeOmsSavedCartLineItem TABLE (OmsSavedCartLineItemId INT , RowId INT  )
  DECLARE @GetDate DATETIME = dbo.FN_getDate() 
  DECLARE @AddOnOrderLineItemRelationshipTypeId INT = (SELECT TOP 1 OrderLineItemRelationshipTypeId 
															FROM ZnodeOmsOrderLineItemRelationshipType
															WHERE Name = 'Addons')

   CREATE TABLE #ZnodeOmsOrderLineItems_temp (OmsOrderLineItemsId INT ,ParentOmsOrderLineItemsId INT,OmsOrderDetailsId INT , SKU  NVARCHAr(2000),
   OrderLineItemRelationshipTypeID INT ,AutoAddonSKU NVARCHAR(400),Custom1 NVARCHAR(MAX),Custom2 NVARCHAR(MAX),Custom3 NVARCHAR(MAX),Custom4 NVARCHAR(MAX)
   ,Custom5 NVARCHAR(MAX), GroupId nvarchar(MAX),ProductName NVARCHAr(2000), Description nvarchar(MAX),Quantity NUMERIC(28,6), ROWID INT, ParentRowID INT)

  IF EXISTS (SELECT TOP 1 OmsOrderDetailsId  FROM ZnodeOmsOrderDetails WHERE  OmsOrderId =  @OmsOrderId AND IsActive =1 )
  BEGIN 
  INSERT INTO #ZnodeOmsOrderLineItems_temp
  SELECT OmsOrderLineItemsId, ParentOmsOrderLineItemsId,OmsOrderDetailsId,SKU,OrderLineItemRelationshipTypeID,AutoAddonSKU,
  Custom1,Custom2,Custom3,Custom4,
  Custom5,GroupId,ProductName,Description,Quantity
  ,Row_number()Over(Order By OmsOrderLineItemsId )  RowId, NULL ParentRowId
  FROM ZnodeOmsOrderLineItems 
  WHERE  OmsOrderDetailsId = (SELECT TOP 1 OmsOrderDetailsId  FROM ZnodeOmsOrderDetails WHERE  OmsOrderId =  @OmsOrderId AND IsActive =1 ) 
  ORDER BY OmsOrderLineItemsId 
   
  END

  ELSE 
  BEGIN
  
   
  INSERT INTO #ZnodeOmsOrderLineItems_temp
  SELECT OmsOrderLineItemsId, ParentOmsOrderLineItemsId,ZOO.OmsOrderDetailsId,ZOO.SKU,ZOO.OrderLineItemRelationshipTypeID,ZOO.AutoAddonSKU,
  ZOO.Custom1,ZOO.Custom2,ZOO.Custom3,ZOO.Custom4,
  ZOO.Custom5,ZOO.GroupId,ZOO.ProductName,ZOO.Description,ZOO.Quantity
  ,Row_number()Over(Order By ZOO.OmsOrderLineItemsId )   RowId, NULL ParentRowId
  FROM ZnodeOmsOrderLineItems ZOO
  WHERE ( ZOO.OmsOrderLineItemsId = @OmsOrderLineItemsId OR ZOO.ParentOmsOrderLineItemsId = @OmsOrderLineItemsId ) 
  --AND EXISTS (select top 1 1 from ZnodeOmsOrderLineItems tt WHERE tt.OmsOrderLineItemsId = ZOO.ParentOmsOrderLineItemsId )

 
   
  INSERT INTO #ZnodeOmsOrderLineItems_temp 
  SELECT ZOO.OmsOrderLineItemsId,ZOO.ParentOmsOrderLineItemsId,ZOO.OmsOrderDetailsId,ZOO.SKU,ZOO.OrderLineItemRelationshipTypeID,ZOO.AutoAddonSKU,
  ZOO.Custom1,ZOO.Custom2,ZOO.Custom3,ZOO.Custom4,
  ZOO.Custom5,ZOO.GroupId,ZOO.ProductName,ZOO.Description,ZOO.Quantity
  ,0 RowId, NULL ParentRowId
  FROM ZnodeOmsOrderLineItems ZOO
  WHERE ZOO.OmsOrderLineItemsId = (SELECT TOP 1 ParentOmsOrderLineItemsId FROM #ZnodeOmsOrderLineItems_temp TY WHERE TY.ParentOmsOrderLineItemsId IS NOT NULL 
  AND TY.OrderLineItemRelationshipTypeID <> @AddOnOrderLineItemRelationshipTypeId )
  AND ZOO.ParentOmsOrderLineItemsId  IS NULL 
  


  END

     DECLARE @TBL_OmsSavedCartOld TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn NVARCHAR(2000) ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 DECLARE @TBL_OmsSavedCartNew TABLE(SKU NVARCHAR(2000), OmsSavedCartLineItemId INT ,ParentSKU NVARCHAR(2000) , ParentOmsSavedCartLineItemId INT ,AddOnSKU NVARCHAR(2000), OmsSavedCartLineItemIdAddOn NVARCHAR(2000) ,PersonalizeCode NVARCHAR(1200), PersonalizeValue  NVARCHAr(max)  )

	 
	 SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemOld
	 FROM #ZnodeOmsOrderLineItems_temp a 
	


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemOld
	 FROM ZnodeOmsPersonalizeItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsOrderLineItems_temp t WHERE t.OmsOrderLineItemsId = a.OmsOrderLineItemsId)

	  SELECT * 
	 INTO #ZnodeOmsSavedCartLineItemNew
	 FROM ZnodeOmsSavedCartLineItem a 
	 WHERE OmsSavedCartId = @OmsSavedCartId 


	 SELECT * 
	 INTO #ZnodeOmsPersonalizeCartItemNew
	 FROM ZnodeOmsPersonalizeCartItem a 
	 WHERE EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)

	 

	 INSERT INTO @TBL_OmsSavedCartOld (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsOrderLineItemsId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemOld TBL_B WHERE TBL_B.OmsOrderLineItemsId = ISNULL(TBL_A.ParentOmsOrderLineItemsId,0)  ) ParentSKU
					, ParentOmsOrderLineItemsId
		FROM #ZnodeOmsSavedCartLineItemOld TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	

	 ;With Cte_UpdateOld AS 
	 (
		SELECT ParentOmsOrderLineItemsId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsOrderLineItemsId = a.ParentOmsOrderLineItemsId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsOrderLineItemsId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemOld t WHERE t.ParentOmsOrderLineItemsId = a.ParentOmsOrderLineItemsId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemOld a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartOld TBL_O 
	 INNER JOIN Cte_UpdateOld TBL_ON ON (TBL_ON.ParentOmsOrderLineItemsId  = TBL_O.OmsSavedCartLineItemId )
	   
   
	  INSERT INTO @TBL_OmsSavedCartNew (SKU,OmsSavedCartLineItemId,ParentSKU,ParentOmsSavedCartLineItemId)
	    SELECT SKU , OmsSavedCartLineItemId,(SELECT TOP 1 SKU FROM #ZnodeOmsSavedCartLineItemNew TBL_B WHERE TBL_B.OmsSavedCartLineItemId = ISNULL( TBL_A.ParentOmsSavedCartLineItemId,0)   ) ParentSKU
					, ParentOmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew TBL_A
		WHERE OrderLineItemRelationshipTypeId IS NOT NULL AND OrderLineItemRelationshipTypeId <> @AddOnOrderLineItemRelationshipTypeId
	 
	 ;With Cte_UpdateNew AS 
	 (
		SELECT ParentOmsSavedCartLineItemId , SUBSTRING((SELECT ','+SKU FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  SKU
		     , SUBSTRING((SELECT ','+CAST(OmsSavedCartLineItemId AS NVARCHAR(max)) FROM #ZnodeOmsSavedCartLineItemNew t WHERE t.ParentOmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId FOR XML PATH('') ),2,4000)  OmsSavedCartLineItemId
		FROM #ZnodeOmsSavedCartLineItemNew a 
		WHERE a.OrderLineItemRelationshipTypeId = @AddOnOrderLineItemRelationshipTypeId
	 )
	 
	 UPDATE TBL_O
	 SET TBL_O.AddOnSKU =  TBL_ON.SKU
		,TBL_O.OmsSavedCartLineItemIdAddOn =  TBL_ON.OmsSavedCartLineItemId
	 FROM @TBL_OmsSavedCartNew TBL_O 
	 INNER JOIN Cte_UpdateNew TBL_ON ON (TBL_ON.ParentOmsSavedCartLineItemId  = TBL_O.OmsSavedCartLineItemId )
	   

    
	 UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = SUBSTRING((SELECT ','+TBL_ON.PersonalizeCode FROM #ZnodeOmsPersonalizeCartItemNew TBL_ON WHERE TBL_ON.OmsSavedCartLineItemId  = TBL_O.ParentOmsSavedCartLineItemId   FOR XML PATH ('')),2,4000) 
		,TBL_O.PersonalizeValue =  SUBSTRING((SELECT ','+TBL_ON.PersonalizeValue FROM #ZnodeOmsPersonalizeCartItemNew TBL_ON WHERE TBL_ON.OmsSavedCartLineItemId  = TBL_O.ParentOmsSavedCartLineItemId   FOR XML PATH ('')),2,4000)  
	 FROM @TBL_OmsSavedCartNew TBL_O 
	

	  UPDATE TBL_O
	 SET TBL_O.PersonalizeCode = SUBSTRING((SELECT ','+TBL_ON.PersonalizeCode FROM #ZnodeOmsPersonalizeCartItemOld TBL_ON WHERE  TBL_ON.OmsOrderLineItemsId  = TBL_O.ParentOmsSavedCartLineItemId  FOR XML PATH ('')),2,4000)
		,TBL_O.PersonalizeValue =  SUBSTRING((SELECT ','+TBL_ON.PersonalizeValue FROM #ZnodeOmsPersonalizeCartItemOld TBL_ON WHERE  TBL_ON.OmsOrderLineItemsId  = TBL_O.ParentOmsSavedCartLineItemId  FOR XML PATH ('')),2,4000) 
	 FROM @TBL_OmsSavedCartOld TBL_O 


	 UPDATE a 
	 SET   a.PersonalizeCode = ISNULL((SELECT TOP 1 PersonalizeCode FROM @TBL_OmsSavedCartOld RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  ),a.PersonalizeCode)
	  ,a.PersonalizeValue = ISNULL((SELECT TOP 1 PersonalizeValue FROM @TBL_OmsSavedCartOld RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  ),a.PersonalizeValue)
	  FROM @TBL_OmsSavedCartOld a 
	  WHERE a.ParentOmsSavedCartLineItemId IS NOT NULL 

	
	 UPDATE a 
	 SET   a.PersonalizeCode = ISNULL((SELECT TOP 1 PersonalizeCode FROM @TBL_OmsSavedCartNew RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  ),a.PersonalizeCode)
	  ,a.PersonalizeValue = ISNULL((SELECT TOP 1 PersonalizeValue FROM @TBL_OmsSavedCartNew RT WHERE RT.OmsSavedCartLineItemId = a.ParentOmsSavedCartLineItemId  ),a.PersonalizeValue)
	  FROM @TBL_OmsSavedCartNew a 
	  WHERE a.ParentOmsSavedCartLineItemId IS NOT NULL 


	 
	 UPDATE a 
	 SET  a.Quantity =  a.Quantity+d.Quantity 
	 FROM ZnodeOmsSavedCartLineItem a 
	 INNER JOIN @TBL_OmsSavedCartNew b ON (b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	 INNER JOIN @TBL_OmsSavedCartOld c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1')) 
	 INNER JOIN #ZnodeOmsSavedCartLineItemOld d ON (d.OmsOrderLineItemsId = c.OmsSavedCartLineItemId)
	 


	 
	 ;WITH CTE_UpdateOrder 
	 AS 
	 (
	   SELECT Sequence,  ROW_NUMBER()Over(order BY OmsSavedCartLineItemId ASC) RowId
	   FROM ZnodeOmsSavedCartLineItem
	   WHERE  OmsSavedCartId = @OmsSavedCartId
	 
	 ) 
	 UPDATE CTE_UpdateOrder 
	 SET Sequence =RowId


	 DECLARE @DeletedId TABLE (OmsSavedCartLineItemId INT )

	
	 DELETE  FROM #ZnodeOmsOrderLineItems_temp OUTPUT DELETED.OmsOrderLineItemsId INTO @DeletedId WHERE OmsOrderLineItemsId IN (SELECT c.OmsSavedCartLineItemId FROM ZnodeOmsSavedCartLineItem a 
	 INNER JOIN @TBL_OmsSavedCartNew b ON (b.OmsSavedCartLineItemId = a.OmsSavedCartLineItemId)
	 INNER JOIN @TBL_OmsSavedCartOld c ON (c.SKU = b.SKU AND c.ParentSKU = b.ParentSKU AND ISNULL(c.AddOnSKU,'-1') = ISNULL(b.AddOnSKU,'-1') AND ISNULL(c.PersonalizeCode,'-1') = ISNULL(b.PersonalizeCode,'-1') AND ISNULL(c.PersonalizeValue,'-1') = ISNULL(b.PersonalizeValue,'-1')) 
	 INNER JOIN #ZnodeOmsSavedCartLineItemOld d ON (d.OmsOrderLineItemsId = c.OmsSavedCartLineItemId))


	 DELETE FROM #ZnodeOmsOrderLineItems_temp WHERE ParentOmsOrderLineItemsId IN (SELECT OmsSavedCartLineItemId FROM @DeletedId)

	 DELETE TR FROM #ZnodeOmsOrderLineItems_temp TR WHERE NOT EXISTS (SELECT TOP 1 1 FROM #ZnodeOmsOrderLineItems_temp YU WHERE TR.OmsOrderLineItemsId = YU.ParentOmsOrderLineItemsId  ) 
	 AND TR.ParentOmsOrderLineItemsId IS NULL 



   UPDATE #ZnodeOmsOrderLineItems_temp 
  SET ParentRowId = (SELECT TOP 1 RowId FROM #ZnodeOmsOrderLineItems_temp a WHERE a.OmsOrderLineItemsId = #ZnodeOmsOrderLineItems_temp.ParentOmsOrderLineItemsId ) 

  


  INSERT INTO ZnodeOmsSavedCartLineItem (ParentOmsSavedCartLineItemId,OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId,CustomText,CartAddOnDetails
										,Sequence,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,AutoAddon,OmsOrderId,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId
										,ProductName,Description)
  OUTPUT INSERTED.OmsSavedCartLineItemId,INSERTED.Sequence  INTO @TBL_ZnodeOmsSavedCartLineItem
  SELECT NULL,@OmsSavedCartId,SKU,Quantity,OrderLineItemRelationshipTypeId,NULL CustomText, NULL CartAddOnDetails
										,RowId,@UserId,@GetDate,@UserId,@GetDate,AutoAddonSKU,NULL OmsOrderId,Custom1,Custom2,Custom3,Custom4,Custom5,GroupId
										,ProductName,Description
  FROM #ZnodeOmsOrderLineItems_temp 
  ORDER BY OmsOrderLineItemsId 

            
  UPDATE ab 
  SET ab.ParentOmsSavedCartLineItemId = (SELECT TOP 1 OmsSavedCartLineItemId FROM @TBL_ZnodeOmsSavedCartLineItem av WHERE av.RowId = b.ParentRowId   )
  FROM ZnodeOmsSavedCartLineItem ab 
  INNER JOIN @TBL_ZnodeOmsSavedCartLineItem a ON (a.OmsSavedCartLineItemId = ab.OmsSavedCartLineItemId ) 
  INNER JOIN #ZnodeOmsOrderLineItems_temp b ON  (b.RowId = a.RowId  ) 

  INSERT INTO ZnodeOmsPersonalizeCartItem (OmsSavedCartLineItemId,PersonalizeCode,PersonalizeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,DesignId,ThumbnailURL)
  SELECT c.OmsSavedCartLineItemId,PersonalizeCode,PersonalizeValue,@UserId,@GetDate,@UserId,@GetDate,DesignId,ThumbnailURL
  FROM ZnodeOmsPersonalizeItem  a 
  INNER JOIN #ZnodeOmsOrderLineItems_temp b ON (a.OmsOrderLineItemsId = b.OmsOrderLineItemsId)
  INNER JOIN @TBL_ZnodeOmsSavedCartLineItem c ON (c.RowId = b.RowId )

   SET @status = 1 

   
 END TRY 
 BEGIN CATCH 
 
 SELECT ERROR_MESSAGE()
 SET @status = 0 
 END CATCH 
END
GO


Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'DevExpressReport','Index',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName = 'Index')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport')	
      ,(select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'Index')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'Index'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport'),
(select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'Index')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'Index'))

GO

Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'DevExpressReport','GetReport',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName = 'GetReport')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport')	
      ,(select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'GetReport')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'GetReport'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport'),
(select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'GetReport')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'Advanced' AND ControllerName = 'DevExpressReport') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'DevExpressReport' and ActionName= 'GetReport'))

GO


Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'MyReports','Index',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'MyReports' and ActionName = 'Index')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports')	
      ,(select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'Index')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'Index'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports'),
(select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'Index')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'Index'))

GO

Insert  INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select NULL ,'MyReports','GetReport',0,2,Getdate(),2,Getdate() where not exists
(select * from ZnodeActions where ControllerName = 'MyReports' and ActionName = 'GetReport')
 

insert into ZnodeActionMenu ( MenuId,	ActionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
	   (select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports')	
      ,(select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'GetReport')	,2,Getdate(),2,Getdate()
where not exists (select * from ZnodeActionMenu where MenuId = 
       (select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports') and ActionId = 
       (select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'GetReport'))

insert into ZnodeMenuActionsPermission ( MenuId,	ActionId, AccessPermissionId,	CreatedBy	,CreatedDate,	ModifiedBy,	ModifiedDate )
select 
(select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports'),
(select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'GetReport')	
,1,2,Getdate(),2,Getdate() where not exists 
(select * from ZnodeMenuActionsPermission where MenuId = 
(select MenuId from ZnodeMenu where MenuName = 'General' AND ControllerName = 'MyReports') and ActionId = 
(select ActionId from ZnodeActions where ControllerName = 'MyReports' and ActionName= 'GetReport'))

GO


IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetOrderDetails')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetOrderDetails
END
GO
CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetOrderDetails]
(   
	@BeginDate      DATETIME         ,
    @EndDate        DATETIME         ,
    @StoreName      NVARCHAR(max) = '',
	@OrderStatus    NVARCHAR(MAX) = ''
	)
AS 
/*
     Summary:- this procedure is used to get the order details 
    
     EXEC ZnodeDevExpressReport_GetOrderDetails_bak @BeginDate = '2018-01-13 14:29:34.513', @EndDate = '2018-12-13 14:29:34.513',@OrderStatus = 'Failed|Success'
*/
     BEGIN
	 BEGIN TRY
         SET NOCOUNT ON;

		 IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		DECLARE @SQL NVARCHAR(MAX)
        DECLARE @DateFormateId int 
	    SET @DateFormateId  = DBO.Fn_GetReportDateTimeFormat();
		DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
		
		DECLARE @TBL_PortalId TABLE (PortalId INT );
		INSERT INTO @TBL_PortalId
		SELECT PortalId 
		FROM ZnodePortal ZP 
		INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)

		SELECT DISTINCT
		ZOO.OrderNumber,ZOO.[OmsOrderID],ZOOD.[PortalId],ZOOD.[UserId],ZOOD.[OmsOrderStateId],ZOOD.[ShippingID],ZOOD.[PaymentTypeId],ZOOD.[BillingFirstName],ZOOD.[BillingLastName],
        ZOOD.[BillingCompanyName], ZOOD.[BillingStreet1],ZOOD.[BillingStreet2], ZOOD.[BillingCity],ZOOD.[BillingStateCode],ZOOD.[BillingPostalCode],ZOOD.[BillingCountry], ZOOD.[BillingPhoneNumber],ZOOD.[BillingEmailId],
		SUBSTRING(CAST(ZOOD.[TaxCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[TaxCost] AS VARCHAR(100)))+@RoundOffValue) as TaxCost,
		SUBSTRING(CAST(ZOOD.[ShippingCost] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[ShippingCost] AS VARCHAR(100)))+@RoundOffValue) as [ShippingCost],
		SUBSTRING(CAST(ZOOD.[SubTotal] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[SubTotal] AS VARCHAR(100)))+@RoundOffValue) as [SubTotal],
		SUBSTRING(CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[DiscountAmount] AS VARCHAR(100)))+@RoundOffValue) as [DiscountAmount],
		SUBSTRING(CAST(ZOOD.[Total] AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOOD.[Total] AS VARCHAR(100)))+@RoundOffValue) as [TotalAmount],
        CONVERT(varchar(100),ZOOD.[OrderDate],@DateFormateId) OrderDate,
        ZOOD.[ShippingNumber],
		ZOOD.[TrackingNumber],
		ZOOD.[CouponCode],
		ZOOD.[PromoDescription],
		ZOOD.[ReferralUserId],
		ZOOD.[PurchaseOrderNumber],
		ZOOD.[OmsPaymentStateId],
        ZOOD.[WebServiceDownloadDate],
		ZOOD.[PaymentSettingID],
		ZOOD.[ShipDate],
		ZOOD.[ReturnDate],
		ZOTOD.[SalesTax],ZOTOD.[VAT],ZOTOD.[GST],ZOTOD.[PST],ZOTOD.[HST],
        P.[StoreName] AS 'StoreName',
		OS.[OrderStateName] AS 'OrderStatus',
		ZOOD.PaymentDisplayName AS 'PaymentTypeName',
		ST.[Name] AS 'ShippingTypeName' ,
		CASE WHEN REPLACE(ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,''),' ','') = '' THEN APZ.UserName ELSE ISNULL(ZU.FirstName,'')+' '+ISNULL(ZU.LastName,'') END  CustomerName ,
		ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
		,ZA.CityName AS 'ShippingCity',
		ZA.StateName AS 'ShippingStateCode',
		ZA.CountryName AS 'ShippingCountryCode'
		INTO #TBL_OMSOrder
		FROM ZNodeOmsOrder ZOO 
        INNER JOIN ZnodeOmsOrderDetails ZOOD ON(ZOOD.OmsOrderId = ZOO.OmsOrderId AND IsActive = 1) 
		INNER JOIN ZNodePortal P ON P.PortalID = ZOOD.PortalId
        LEFT JOIN ZNodeOmsOrderState OS ON OS.OmsOrderStateID = ZOOD.OmsOrderStateID
        LEFT JOIN ZNodeOmsOrderShipment OSP ON(EXISTS
                                            (  SELECT TOP 1 1 FROM ZnodeOmsOrderLineItems ZOOLI WHERE ZOOLI.OmsOrderShipmentId = OSP.OmsOrderShipmentId AND ZOOLI.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId ))
        LEFT JOIN ZnodeOmsTaxOrderDetails ZOTOD ON(ZOTOD.OmsOrderDetailsId = ZOOD.OmsOrderDetailsId)
        LEFT JOIN ZNodeShipping S ON S.ShippingID = OSP.ShippingID
        LEFT JOIN ZNodeShippingTypes ST ON ST.ShippingTypeID = S.ShippingTypeID
        LEFT JOIN ZNodePaymentType PT ON PT.PaymentTypeID = ZOOD.PaymentTypeId
		LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode  = ZOOD.CultureCode )
		LEFT JOIN ZnodeUserAddress ZSP ON (ZSP.UserId = ZOOD.UserId)
		LEFT JOIN ZnodeAddress ZA ON (ZA.AddressId = ZSP.AddressId AND ZA.IsDefaultShipping = 1)
		LEFT JOIN ZnodeUser  ZU ON (ZU.UserId = ZOOD.UserId )
		LEFT JOIN AspNetUsers AP ON (AP.Id = ZU.AspNetUserId)
		LEFT JOIN AspNetZnodeUser APZ ON (APZ.AspNetZnodeUserId = AP.UserName)
        WHERE CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
		AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))
		AND EXISTS (SELECT TOP 1 1 FROM dbo.split(@OrderStatus,'|') SP WHERE SP.Item = OS.OrderStateName)
		
		
		SELECT OrderNumber,OmsOrderID,PortalId ,UserId,OmsOrderStateId,ShippingID,PaymentTypeId,BillingFirstName,BillingLastName,
		BillingCompanyName,BillingStreet1,BillingStreet2, BillingCity,BillingStateCode,BillingPostalCode,BillingCountry,BillingPhoneNumber,BillingEmailId,
		CAST(tbl.TaxCost AS NUMERIC(28,6)) TaxCost,CAST(ShippingCost AS NUMERIC(28,6)) ShippingCost,
		CAST(SubTotal AS NUMERIC(28,6)) SubTotal,CAST(DiscountAmount AS NUMERIC(28,6)) DiscountAmount,CAST(TotalAmount AS NUMERIC(28,6)) TotalAmount,OrderDate,ShippingNumber,TrackingNumber,CouponCode,PromoDescription,ReferralUserId,PurchaseOrderNumber,OmsPaymentStateId,
        WebServiceDownloadDate,PaymentSettingID,ShipDate,ReturnDate, SalesTax,VAT,GST,PST,HST,StoreName,OrderStatus,PaymentTypeName,ShippingTypeName,CustomerName,Symbol 
		,ShippingCity,ShippingCountryCode,ShippingStateCode
		FROM #TBL_OMSOrder tbl
			
		IF OBJECT_ID('TEMPDB..#TBL_OMSOrder') IS NOT NULL
		DROP TABLE #TBL_OMSOrder

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetOrderDetails @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_GetOrderDetails',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH
     END;
	 GO
 IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetPopularProductFiltered')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetPopularProductFiltered
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetPopularProductFiltered](  
      @BeginDate   DATETIME          ,  
      @EndDate     DATETIME          ,  
      @StoreName   NVARCHAR(max) = '',  
   @ShowAllProducts BIT = 1,    
   @TopProducts INT = 10   
   )  
AS   
/*  
     Sumarry : - This Procedure is used to find the Popular products filtered   
     Unit Testing   
     EXEC ZnodeDevExpressReport_GetPopularProductFiltered @BeginDate = '2018/01/01',@EndDate= '2018/12/12'     
 */  
     BEGIN  
         BEGIN TRY  
             SET NOCOUNT ON;  
          DECLARE @SQL NVARCHAR(MAX)  
    DECLARE @PageNo int = 1;   
    DECLARE @TBL_PortalId TABLE (PortalId INT );  
    DECLARE @TBL_ReportPopularProduct TABLE (PortalId INT,StoreName NVARCHAR(MAX),SKU NVARCHAR(MAX),ProductName  NVARCHAR(MAX),QuantityOrdered NUMERIC(28,6)  
    ,UnitOfMeasurement nvarchar(20)  
    )--,  TotalAmtSold NUMERIC(28,6))  
  
    IF OBJECT_ID('TEMPDB..#PopularProduct') IS NOT NULL  
       DROP TABLE #PopularProduct    
  
   INSERT INTO @TBL_PortalId  
   SELECT PortalId   
   FROM ZnodePortal ZP   
   INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)  
  
   SELECT distinct SKU,ProductName,UOM 
     INTO #PopularProduct  
     FROM  
     (  
     SELECT  c.pimproductId,PA.attributecode,e.AttributeValue 
     FROM znodePimProduct c   
      INNER JOIN ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)  
      INNER JOIN ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)  
      INNER JOIN ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)  
     WHERE  AttributeCode IN ('SKU','ProductName')  
     UNION ALL  
  
     SELECT a.PimProductId, c.AttributeCode,ZPADV.AttributeDefaultValueCode
     FROM ZnodePimProductAttributeDefaultValue ZPPADV  
     INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)  
     INNER JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )  
     INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId  )  
     WHERE AttributeCode IN ('UOM')  
     ) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,UOM))AS PVT  
  
  
   INSERT INTO @TBL_ReportPopularProduct  
       SELECT  ZOOD.PortalId,ZP.StoreName AS 'StoreName' , ZOOLI.SKU , ZOOLI.ProductName , SUM(ZOOLI.Quantity) AS 'QuantityOrdered'  
    ,PP.UOM UnitOfMeasurement  
                      FROM ZnodeOmsOrder AS ZOO INNER JOIN ZnodeOmsOrderDetails AS ZOOD ON ( ZOOD.OmsOrderId = ZOO.OmsOrderId )  
                                                INNER JOIN ZnodeOmsOrderLineItems AS ZOOLI ON (Zood.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId)  
            INNER JOIN #PopularProduct PP ON (PP.SKU = ZOOLI.Sku)  
                                                INNER JOIN ZnodePortal AS ZP ON (Zp.PortalID = ZOOD.PortalId)  
            INNER JOIN ZnodeOmsOrderState ZOOS ON (ZOOD.OmsOrderStateId = ZOOS.OmsOrderStateId)  
                                        
                      WHERE  CAST(ZOOD.OrderDate AS DATETIME) BETWEEN @BeginDate AND @EndDate  
       AND (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZOOD.PortalId)  
          OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))    
       AND ZOOS.OrderStateName NOT IN ('CANCELLED','RETURNED','REJECTED','FAILED')  
       AND ZOOLI.OrderLineItemStateId NOT IN (SELECT OmsOrderStateId FROM ZnodeOmsOrderState WHERE OrderStateName  IN ('CANCELLED','RETURNED','REJECTED','FAILED'))                       
       AND ParentOmsOrderLineItemsId IS NOT NULL  
                      GROUP BY ZP.StoreName , ZOOLI.SKU , ZOOLI.ProductName , ZOOD.PortalId ,PP.UOM  
                      HAVING SUM(ZOOLI.Quantity) > 0   
        
    SET @TopProducts = CASE WHEN @ShowAllProducts = 1 THEN (SELECT COUNT(1) FROM @TBL_ReportPopularProduct ) ELSE @TopProducts END   
  
  
     Select TOP (@TopProducts)  SKU , ProductName ,StoreName ,QuantityOrdered,UnitOfMeasurement     
     from @TBL_ReportPopularProduct    
     ORder by StoreName ASC, CAST (QuantityOrdered AS Numeric) DESC, ProductName ASC  
  
      
        
        IF OBJECT_ID('TEMPDB..#PopularProduct') IS NOT NULL  
       DROP TABLE #PopularProduct   
  
         END TRY  
  
         BEGIN CATCH  
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_GetPopularProductFiltered @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeReport_GetPopularProductFiltered',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;  
  GO
   IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_LowInventoryProduct')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_LowInventoryProduct
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_LowInventoryProduct]
(   
	@WarehouseName NVARCHAR(max) = '',
	@ShowOnlyActiveProducts BIT = 0
)
AS 
/*
     Summary :- THis Procedure is used to find the ReOrder level of order 
     Unit Testing
     EXEC ZnodeDevExpressReport_LowInventoryProduct  @WarehouseName = '' , @ShowOnlyActiveProducts =  1
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultValue('Locale');
             DECLARE @TBL_PortalWarehouse TABLE (PortalId INT , WarehouseId INT,WarehouseName VARCHAR(100) )
			 DECLARE @TBL_PortalId TABLE (PortalId INT )
		     DECLARE @TBL_WarehouseId TABLE (WarehouseId INT )
					

			IF OBJECT_ID('TEMPDB..#ProductDetailInventory') IS NOT NULL
			    DROP TABLE #ProductDetailInventory	 

			
			  INSERT INTO @TBL_WarehouseId
			  SELECT WarehouseId
			  FROM ZnodeWarehouse ZW
			  INNER JOIN dbo.split(@WarehouseName,'|') SP ON (SP.Item = ZW.WarehouseName)
			

				;With Cte_WareHouse AS 
				(  
				SELECT WarehouseId ,PortalId,ZPW.PortalWarehouseId
				FROM ZnodePortalWarehouse ZPW 
				WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = ZPW.PortalId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId ))  
				)	
				, Cte_AlternetPortal AS 
				( 
				SELECT ZPAW.WarehouseId,CTW.PortalId
				FROM ZnodePortalAlternateWarehouse ZPAW 
				INNER JOIN Cte_WareHouse CTW ON (CTW.PortalWarehouseId = ZPAW.PortalWarehouseId)  
				)
				
				INSERT INTO @TBL_PortalWarehouse(portalId , WarehouseId )
				SELECT portalId , WarehouseId 
				FROM Cte_WareHouse ZPW
				WHERE  (EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId rt WHERE rt.WarehouseId = ZPW.WarehouseId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId ))  
				UNION 
				SELECT portalId , WarehouseId 
				FROM Cte_AlternetPortal ZPWP
				WHERE  (EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId rt WHERE rt.WarehouseId = ZPWP.WarehouseId)
				OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_WarehouseId ))  

		        UPDATE  TBPW
				SET WarehouseName = a.WarehouseName
				FROM @TBL_PortalWarehouse TBPW
				INNER JOIN  ZnodeWarehouse a  ON (a.WarehouseId = TBPW.WarehouseId )
				  
				
					SELECT SKU,ProductName,IsActive,UOM, LOcaleId
					INTO #ProductDetailInventory
					FROM 
					(
					SELECT  c.pimproductId,PA.attributecode,e.AttributeValue,e.LocaleId
					FROM znodePimProduct c 
					 INNER JOIN ZnodePimAttributeValue d on (c.PimProductid = d.PimProductid)
					 INNER JOIN ZnodePimAttributeValueLocale e on (d.PimAttributeValueId = e.PimAttributeValueId)
					 INNER JOIN ZnodePimAttribute PA ON (PA.PimAttributeId = d.PimAttributeId)
					WHERE  AttributeCode IN ('SKU','ProductName','IsActive')
					UNION ALL

					SELECT a.PimProductId, c.AttributeCode,ZPADV.AttributeDefaultValueCode,ZPPADV.LocaleId
					FROM ZnodePimProductAttributeDefaultValue ZPPADV
					INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
					INNER JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
					INNER JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId  )
					WHERE AttributeCode IN ('UOM')
					) piv PIVOT(MAX(AttributeValue) FOR AttributeCode in ( SKU,ProductName,IsActive,UOM))AS PVT
		

		       SELECT  ZPPD.SKU,dbo.Fn_GetDefaultInventoryRoundOff(ZI.Quantity)  Quantity,dbo.Fn_GetDefaultInventoryRoundOff(ZI.Reorderlevel ) ReOrderLevel,
						ZPPD.ProductName    ,TBPW.WarehouseName ,
						CASE WHEN ZPPD.IsActive = 'true' Then 'Active' ELSE 'Inactive' END AS [ProductStatus],
						ZPPD.UOM UnitOfMeasurement
				FROM ZnodeInventory ZI
				INNER JOIN #ProductDetailInventory ZPPD ON(ZPPD.SKu = ZI.SkU AND ZPPD.LOcaleId = @DefaultLocaleId)
				INNER JOIN @TBL_PortalWarehouse TBPW ON (TBPW.WarehouseId = ZI.WarehouseId)
				INNER JOIN ZnodePortal ZP ON (ZP.PortalId = TBPW.PortalId)
				WHERE ZI.Reorderlevel IS NOT NULL 
				AND ZI.Quantity <= ZI.Reorderlevel 
				AND ZPPD.IsActive = CASE WHEN @ShowOnlyActiveProducts = 1 THEN  'true' ELSE ZPPD.IsActive END
				GROUP BY  ZPPD.SKU  ,ZI.Quantity,ZI.Reorderlevel,ZPPD.ProductName ,TBPW.WarehouseName ,ZPPD.IsActive,ZPPD.UOM
                ORDER BY TBPW.WarehouseName,  ZI.Quantity, ZPPD.ProductName ASC


				IF OBJECT_ID('TEMPDB..#ProductDetailInventory') IS NOT NULL
			    DROP TABLE #ProductDetailInventory

				
		 END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeDevExpressReport_LowInventoryProduct @Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeDevExpressReport_LowInventoryProduct',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;

	 GO
UPDATE ZnodeApplicationSetting
SET OrderByFields = 'UserName|ASC'
WHERE ItemName = 'ZnodeCustomerAccount'

GO
update ZnodePortalAccount set AccountId = (SELECT TOP 1 AccountId FROM ZnodeAccount  WHERE NAME = 'SampleAccount')
where PortalAccountId = 1;

GO
UPDATE ZnodeGlobalSetting
SET FeatureValues = 'True'
 WHERE FeatureName IN ('IsLoggingLevelsEnabledError',
'IsLoggingLevelsEnabledWarning',
'IsLoggingLevelsEnabledInfo',
'IsLoggingLevelsEnabledDebug',
'IsLoggingLevelsEnabledAll',
'IsLoggingLevelsEnabledFatal')

GO
UPDATE ZnodeMenu
SET CSSClassName = 'z-advanced-report'
WHERE MenuName = 'Advanced' AND ControllerName = 'DevExpressReport'


	 GO
UPDATE ZnodeCMSMessage
SET Message = '<p>Copyright &copy; 2019 Maxwell''s Inc. All Rights Reserved.</p>'
WHERE Message = '<p>Copyright &copy; 2018 Maxwell''s Inc. All Rights Reserved.</p>'

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeDevExpressReport_GetAbandonedCart')
BEGIN 
	DROP PROCEDURE ZnodeDevExpressReport_GetAbandonedCart
END
GO

CREATE PROCEDURE [dbo].[ZnodeDevExpressReport_GetAbandonedCart]  
(
 @BeginDate    DATETIME        ,  
 @EndDate      DATETIME       ,  
 @StoreName   NVARCHAR(max) = '',  
 @ShowOnlyRegisteredUsers BIT = 1   
 
 )  
AS   
/*  
     Summary :- This Procedure is used to get frequently Appear users    
     Unit Testing   
     EXEC ZnodeDevExpressReport_GetAbandonedCart @BeginDate = '2018/11/30',@EndDate= '2018/12/20'  
	a.ModifiedDate,a.CreatedDate,
*/  
     BEGIN  
         BEGIN TRY  
         DECLARE @SQL NVARCHAR(MAX)  
         DECLARE @GetDate DATETIME = dbo.Fn_GetDate()
   DECLARE @TBL_ReportOrderDetails TABLE (OmsSavedCartId INT ,Quantity NUMERIC(28,6) 
   , CartCreatedAt datetime,CartUpdatedAt datetime,CustomerName VARCHAR(300),StoreName nvarchar(max),Email  VARCHAR(50),
   CustomerType  VARCHAR(50), SKU nvarchar(4000),PortalId INT
   );  
  
   DECLARE @TBL_PortalId TABLE (PortalId INT );  
   INSERT INTO @TBL_PortalId  
   SELECT PortalId   
   FROM ZnodePortal ZP   
   INNER JOIN dbo.split(@StoreName,'|') SP ON (SP.Item = ZP.StoreName)  
  
   INSERT INTO @TBL_ReportOrderDetails  
   select DISTINCT a.OmsSavedCartId,sum(Quantity) as Quantity,MAX(b.CreatedDate) AS CartCreatedAt,  
   MAX(b.ModifiedDate) as CartUpdatedAt, CASE WHEN REPLACE(ISNULL(FirstName,'')+' '+ISNULL(LastName,''),' ','') = ''   
   THEN f.UserName ELSE ISNULL(FirstName,'')+' '+ISNULL(LastName,'') END  CustomerName , p.StoreName ,d.Email AS Email
   ,CASE WHEN  d.AspNetUserId IS NULL THEN 'Guest User' ELSE 'Registered User' END  CustomerType, b.SKU, p.PortalId
   from ZnodeOmsSavedCart a  
   INNER JOIN ZnodeOmsSavedCartLineItem b on a.OmsSavedCartId = b.OmsSavedCartId  
   INNER JOIN ZnodeOmsCookieMapping c on a.OmsCookieMappingId = c.OmsCookieMappingId  
   INNER JOIN ZnodePortal p on c.PortalId = p.PortalId  
   LEFT JOIN ZnodeUser d on c.UserId = d.UserId  
   LEFT JOIN AspNetUsers e on d.AspNetUserId = e.Id  
   LEFT JOIN AspNetZnodeUser f on f.AspNetZnodeUserId = e.UserName  
   WHERE 
    (EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId rt WHERE rt.PortalId = p.PortalId)
				      OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_PortalId )) 
	AND ((@ShowOnlyRegisteredUsers = 1 and d.AspNetUserId  IS NOT NULL) or (@ShowOnlyRegisteredUsers <> 1 ))
	AND CAST(b.ModifiedDate AS DATETIME) BETWEEN @BeginDate AND @EndDate
   group by a.OmsSavedCartId,f.UserName, p.StoreName,FirstName, LastName  ,d.Email,d.AspNetUserId,b.SKU,p.PortalId
       
	DECLARE @skuuu SelectColumnList, @PortalId TransferId
  
    INSERT INTO @skuuu
	SELECT SKU FROM @TBL_ReportOrderDetails

	INSERT INTO @PortalId
	SELECT DISTINCT PortalId FROM @TBL_ReportOrderDetails
	
	DECLARE @TBL_ProductPricing TABLE (SKU VARCHAR(1000),RetailPrice VARCHAR(1000) );
		 
	INSERT INTO @TBL_ProductPricing (SKU,RetailPrice)
	EXEC Znode_GetAbandonedProductPricingBySku  @skuuu, @PortalId, @GetDate
	 
  
   SELECT  A.OmsSavedCartId,COUNT(*) Products,MAx(CartCreatedAt) CartCreatedAt,MAX(CartUpdatedAt) CartUpdatedAt,CustomerName,StoreName,Email ,
   CustomerType , SUM(B.RetailPrice * Quantity) AS SubTotal , SUM(Quantity) Quantity
   FROM @TBL_ReportOrderDetails  A
   INNER JOIN @TBL_ProductPricing B ON (A.SKU = B.SKU)
   GROUP BY A.OmsSavedCartId,CustomerName,StoreName,Email ,
   CustomerType
   ORDER BY StoreName DESC,CartUpdatedAt DESC,CustomerName DESC  
                    
         END TRY  
         BEGIN CATCH  
		
             DECLARE @Status BIT ;  
       SET @Status = 0;  
       DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),  
    @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeDevExpressReport_GetAbandonedCart @BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));  
                    
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                      
      
             EXEC Znode_InsertProcedureErrorLog  
    @ProcedureName = 'ZnodeDevExpressReport_GetAbandonedCart',  
    @ErrorInProcedure = @Error_procedure,  
    @ErrorMessage = @ErrorMessage,  
    @ErrorLine = @ErrorLine,  
    @ErrorCall = @ErrorCall;  
         END CATCH;  
     END;

	 GO

update ZnodeEmailTemplate
set TemplateName = 'NotificationTemplate'
WHERE TemplateName = 'Notification Template'