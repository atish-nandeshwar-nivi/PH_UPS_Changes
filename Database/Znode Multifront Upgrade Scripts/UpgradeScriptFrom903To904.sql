/*
 This Script will delete the old portal index because of new catalog index implementation 
  after execution of script once regenerate indexes  


*/


IF EXISTS (SELECT TOP 1 1 FROM Sys.Tables WHERE Name = 'ZnodeMultifront')
BEGIN 
 IF EXISTS (SELECT TOP 1 1 FROM ZnodeMultifront WHERE BuildVersion =   90340 )
 BEGIN 
 PRINT 'Script is already executed....'
  SET NOEXEC ON 
 END 
END
ELSE 
BEGIN 
   SET NOEXEC ON
END 
INSERT INTO [dbo].[ZnodeMultifront] ( [VersionName], [Descriptions], [MajorVersion], [MinorVersion], [LowerVersion], [BuildVersion], [PatchIndex], [CreatedBy], 
[CreatedDate], [ModifiedBy], [ModifiedDate]) 
VALUES ( N'Znode_Multifront_9_0_4', N'Upgrade GA Release by 904', 9, 0, 2, 90340, 0, 2, GETDATE(), 2, GETDATE())
GO 
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

IF NOT EXISTS (SELECT TOP 1  1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeAddress' AND COLUMN_NAME = 'CompanyName')
BEGIN 
ALTER TABLE [dbo].[ZnodeAddress] ADD [CompanyName]  NVARCHAR (600)  NULL
END 
GO

IF EXISTS (SELECT TOP 1 1 FROM sys.triggers WHERE name  = 'Trg_ZnodePimAttributeCustomeFieldXmlUpdate')
BEGIN 
DROP TRIGGER dbo.Trg_ZnodePimAttributeCustomeFieldXmlUpdate
END
GO

IF EXISTS (SELECT TOP 1 1 FROM sys.triggers WHERE name  = 'Trg_ZnodePimAttributeDefaultvalueXmlUpdate')
BEGIN 
DROP TRIGGER dbo.Trg_ZnodePimAttributeDefaultvalueXmlUpdate
END
GO

IF EXISTS (SELECT TOP 1 1 FROM sys.triggers WHERE name  = 'Trg_ZnodePimAttributeXmlUpdate')
BEGIN 
DROP TRIGGER dbo.Trg_ZnodePimAttributeXmlUpdate
END
GO

IF EXISTS (SELECT TOP 1 1 FROM sys.triggers WHERE name  = 'Trg_ZnodePimAttributeFrontEndXmlUpdate')
BEGIN 
DROP TRIGGER dbo.Trg_ZnodePimAttributeFrontEndXmlUpdate
END
GO


IF NOT EXISTS (select top 1 1 FROM sys.indexes where name = 'IDX_ZnodePImAttributeValue_PimAttributeIdProductId')
BEGIN
CREATE NONCLUSTERED INDEX [IDX_ZnodePImAttributeValue_PimAttributeIdProductId]
    ON [dbo].[ZnodePimAttributeValue]([PimAttributeId] ASC)
    INCLUDE([PimProductId]);
END
GO
IF  EXISTS (select top 1 1 FROM sys.indexes where name = 'ZnodePimAttributeValue_ForPaging_Include')
BEGIN
DROP INDEX [ZnodePimAttributeValue_ForPaging_Include]
	ON [dbo].[ZnodePimAttributeValue]
END
GO
IF  EXISTS (select top 1 1 FROM sys.indexes where name = 'IDX_ZnodePimAttributeValueLocale_PimAttributeValueId')
BEGIN
CREATE NONCLUSTERED INDEX [IDX_ZnodePimAttributeValueLocale_PimAttributeValueId]
    ON [dbo].[ZnodePimAttributeValueLocale]([PimAttributeValueId] ASC)
    INCLUDE([ZnodePimAttributeValueLocaleId], [LocaleId])
	WITH(DROP_EXISTING = ON);
END
GO
IF EXISTS (select top 1 1 FROM sys.indexes where name = 'NonClusteredIndex-20170609-175425')
BEGIN
DROP INDEX [NonClusteredIndex-20170609-175425]
ON dbo.ZnodePimCatalogCategory

END
GO

IF EXISTS (select top 1 1 FROM sys.indexes where name = 'Ind_ZnodePublishCatalogLog_forDelete')
BEGIN
DROP INDEX [Ind_ZnodePublishCatalogLog_forDelete]
ON dbo.ZnodePublishCatalogLog
END
GO

IF EXISTS (select top 1 1 FROM sys.indexes where name = 'ID_ZnodePublishCategory_PublishCatalogId_PimCategoryId')
BEGIN
DROP INDEX [ID_ZnodePublishCategory_PublishCatalogId_PimCategoryId]
ON dbo.ZnodePublishCategory
END
GO

IF EXISTS (select top 1 1 FROM sys.indexes where name = 'Ind_ZnodePublishCategoryDetail_LocaleId')
BEGIN
DROP INDEX [Ind_ZnodePublishCategoryDetail_LocaleId]
ON dbo.ZnodePublishCategoryDetail
END
GO

IF EXISTS (select top 1 1 FROM sys.indexes where name = 'NonClusteredIndex-20170519-231037')
BEGIN
DROP INDEX [NonClusteredIndex-20170519-231037]
ON dbo.ZnodePublishCategoryDetail
END
GO
IF EXISTS (select top 1 1 FROM sys.indexes where name = 'IND_ZnodePublishCategoryProduct_Publish')
BEGIN
DROP INDEX [IND_ZnodePublishCategoryProduct_Publish]
ON dbo.ZnodePublishCategoryProduct
END
GO

IF EXISTS (select top 1 1 FROM sys.indexes where name = 'NonClusteredIndex-20170519-230942')
BEGIN
DROP INDEX [NonClusteredIndex-20170519-230942]
ON dbo.ZnodePublishCategoryProduct
END

GO
IF EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeSearchKeywordsRedirect' AND COLUMN_NAME = 'Keywords')
BEGIN
ALTER TABLE [dbo].[ZnodeSearchKeywordsRedirect] ALTER COLUMN [Keywords]  NVARCHAR (1000) NULL
END
GO
IF EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeSearchKeywordsRedirect' AND COLUMN_NAME = 'Keywords')
BEGIN
ALTER TABLE [dbo].[ZnodeSearchKeywordsRedirect] ALTER COLUMN [URL] NVARCHAR (2000) NULL
END
GO

IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeShippingPortal' AND COLUMN_NAME = 'UPSDropoffType')
BEGIN
ALTER TABLE [dbo].[ZnodeShippingPortal] ADD [UPSDropoffType]  NVARCHAR (2000) NULL
END
GO

IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeShippingPortal' AND COLUMN_NAME = 'UPSPackagingType')
BEGIN
ALTER TABLE [dbo].[ZnodeShippingPortal] ADD [UPSPackagingType] NVARCHAR (2000) NULL
END
GO

IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxPortal' AND COLUMN_NAME = 'TaxRuleTypeId')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal] ADD [TaxRuleTypeId] INT  NULL
END
GO
IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxPortal' AND COLUMN_NAME = 'Custom1')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal] ADD [Custom1]  NVARCHAR (MAX) NULL
END
GO
IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxPortal' AND COLUMN_NAME = 'Custom2')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal] ADD [Custom2]  NVARCHAR (MAX) NULL
END
GO
IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxPortal' AND COLUMN_NAME = 'Custom3')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal] ADD [Custom3]  NVARCHAR (MAX) NULL
END
GO
IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxPortal' AND COLUMN_NAME = 'Custom4')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal] ADD [Custom4]  NVARCHAR (MAX) NULL
END
GO
IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxPortal' AND COLUMN_NAME = 'Custom5')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal] ADD [Custom5]  NVARCHAR (MAX) NULL
END
GO

IF NOT EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE where constraint_name = 'FK_ZnodeTaxPortal_ZnodeTaxRuleTypes' )
BEGIN
ALTER TABLE [dbo].[ZnodeTaxPortal]  WITH CHECK ADD  CONSTRAINT [FK_ZnodeTaxPortal_ZnodeTaxRuleTypes] FOREIGN KEY([TaxRuleTypeId])
REFERENCES [dbo].[ZnodeTaxRuleTypes] ([TaxRuleTypeId])
END
GO
IF  EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE where constraint_name = 'FK_ZnodeTaxRule_ZnodePortal' )
BEGIN
ALTER TABLE [dbo].[ZnodeTaxRule] DROP CONSTRAINT [FK_ZnodeTaxRule_ZnodePortal];
END
GO

IF  EXISTS (select top 1 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ZnodeTaxRule' AND COLUMN_NAME = 'PortalId')
BEGIN
ALTER TABLE [dbo].[ZnodeTaxRule] DROP COLUMN [PortalId]
END
GO

IF EXISTS (select top 1 1 from sys.views where name = 'View_GetAllMediaInRoot')
BEGIN
DROP VIEW View_GetAllMediaInRoot
END


GO
CREATE VIEW [dbo].[View_GetAllMediaInRoot]
	AS
		 SELECT MediaCategoryId,
				MediaPathId,
				[Folder],
				[FileName],
				Size,
				Height,
				Width,
				Type,
				[MediaType],
				CreatedDate,
				ModifiedDate,
				MediaId,
				Path,
				MediaServerPath MediaServerPath,
				MediaThumbnailPath MediaServerThumbnailPath,
				FamilyCode,
				CreatedBy,
				[DisplayName] [DisplayName],
				[Description] [ShortDescription]
		 FROM
		 (
			 SELECT 0 AS MediaCategoryId,
					ZMPL.MediaPathId,
					'-1' ParentMediaPathId,
					CASE
						WHEN ZMPL.[PathName] IS NULL
						THEN 'Root'
						ELSE ZMPL.[PathName]
					END AS Folder,
					zM.FileName,
					zM.Size,
					zM.Height,
					zM.Width,
					zM.Type,
					zM.Type AS MediaType,
					CONVERT( DATE, zm.CreatedDate) CreatedDate,
					CONVERT( DATE, zm.ModifiedDate) ModifiedDate,
					zM.MediaId,
					NULL AS MediaAttributeName,
					NULL AS MediaAttributeValue,
					zmf.FamilyCode,
					[dbo].[Fn_GetMediaThumbnailMediaPath]( zM.Path) MediaThumbnailPath,
					[dbo].[Fn_GetMediaPathServer]( zM.Path)  MediaServerPath,
					zM.Path,
					zM.CreatedBy,
					zmae.AttributeCode,
					zmav.AttributeValue
			 FROM dbo.ZnodeMedia AS zM
				  LEFT JOIN ZnodeMediaCategory zma ON(zm.mediaid = zma.MediaId)
		 --         LEFT JOIN ZnodeMediaConfiguration ZMC ON (ZMC.MediaConfigurationId = ZM.MediaConfigurationId )
				  --LEFT JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
				  LEFT JOIN ZnodeMediaAttributeFamily zmf ON(zma.MediaAttributeFamilyId = zmf.MediaAttributeFamilyId)
				  LEFT OUTER JOIN dbo.ZnodeMediaPath AS zmp ON(zma.MediaPathId = zmp.MediaPathId)
				  LEFT OUTER JOIN dbo.ZnodeMediaPathLocale AS ZMPL ON zmp.MediaPathId = ZMPL.MediaPathId
				  LEFT JOIN dbo.ZnodeMediaAttributeValue Zmav ON(zmav.MediaCategoryId = zma.MediaCategoryId)
				  LEFT JOIN dbo.ZnodeMediaAttribute zmae ON(zmae.MediaAttributeId = Zmav.MediaAttributeId
															AND zmae.AttributeCode IN('DisplayName', 'Description'))) v 
		 PIVOT(MAX(AttributeValue) FOR AttributeCode IN([DisplayName],
															[Description])) PV;
GO
IF EXISTS (select top 1 1 from sys.views where name = 'View_GetMediaPathDetail')
BEGIN
DROP VIEW View_GetMediaPathDetail
END

GO
CREATE VIEW [dbo].[View_GetMediaPathDetail]
AS
     SELECT MediaCategoryId,
            MediaPathId,
            [Folder],
            [FileName],
            Size,
			Height,
			Width,
		    Type,
            [MediaType],
            CreatedDate,
            ModifiedDate,
            MediaId,
            Path,
            MediaServerPath MediaServerPath,
            MediaThumbnailPath MediaServerThumbnailPath,
            FamilyCode,
            CreatedBy,
            [DisplayName] [DisplayName],
            [Description] [ShortDescription]

     /* INTO #temp2*/

     FROM
     (
         SELECT Zmc.MediaCategoryId,
                ZMPL.MediaPathId,
                ZMPL.[PathName] [Folder],
                zM.[FileName],
                Zm.Size,
				Zm.Height,
				Zm.Width,
				Zm.Type,
                Zm.Type [MediaType],
                CONVERT( DATE, zm.CreatedDate) CreatedDate,
                CONVERT( DATE, zm.ModifiedDate) ModifiedDate,
                Zm.MediaId,
                zma.AttributeCode,
                Zmav.AttributeValue,
                 [dbo].[Fn_GetMediaThumbnailMediaPath](zM.Path) MediaThumbnailPath,
				[dbo].[Fn_GetMediaPathServer]( zM.Path ) MediaServerPath,
				zM.Path,
               zmafl.FamilyCode FamilyCode,
                Zm.CreatedBy
         FROM ZnodeMediaCategory ZMC
              LEFT JOIN ZnodeMediaAttributeFamily zmafl ON(zmc.MediaAttributeFamilyId = zmafl.MediaAttributeFamilyId)
			  INNER JOIN ZnodeMediaPathLocale ZMPL ON(ZMC.MediaPathId = ZMPL.MediaPathId)
              INNER JOIN ZnodeMedia zM ON(Zm.MediaId = Zmc.MediaId)
		      LEFT JOIN ZnodeMediaConfiguration ZMCF ON (ZMCF.MediaConfigurationId = ZM.MediaConfigurationId )
			  LEFT JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMCF.MediaServerMasterId)
              LEFT JOIN dbo.ZnodeMediaAttributeValue Zmav ON(zmav.MediaCategoryId = zmc.MediaCategoryId)
              LEFT JOIN dbo.ZnodeMediaAttribute zma ON(zma.MediaAttributeId = Zmav.MediaAttributeId
                                                       AND AttributeCode IN('DisplayName', 'Description'))  
    
     ) v PIVOT(MAX(AttributeValue) FOR AttributeCode IN([DisplayName],
                                                        [Description])) PV;

GO




GO
PRINT N'Creating [dbo].[GlobalEntityValueDetail]...';


GO
CREATE TYPE [dbo].[GlobalEntityValueDetail] AS TABLE (
    [GlobalAttributeId]             INT            NULL,
    [AttributeCode]                 VARCHAR (300)  NULL,
    [GlobalAttributeDefaultValueId] INT            NULL,
    [GlobalAttributeValueId]        INT            NULL,
    [LocaleId]                      INT            NULL,
    [GlobalEntityValueId]           INT            NULL,
    [AttributeValue]                NVARCHAR (MAX) NULL);


GO
PRINT N'Creating [dbo].[OMSDownloadableProduct]...';


GO
CREATE TYPE [dbo].[OMSDownloadableProduct] AS TABLE (
    [OmsOrderLineItemsId] INT             NULL,
    [SKU]                 VARCHAR (300)   NULL,
    [Quantity]            NUMERIC (26, 8) NULL);


GO
PRINT N'Creating [dbo].[ProductForSortPrice]...';


GO
CREATE TYPE [dbo].[ProductForSortPrice] AS TABLE (
    [Id]                INT           NOT NULL,
    [ProductType]       VARCHAR (200) NULL,
    [OutOfStockOptions] VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC));


GO
PRINT N'Creating [dbo].[SearchProfileAttributeList]...';


GO
CREATE TYPE [dbo].[SearchProfileAttributeList] AS TABLE (
    [AttributeCode] VARCHAR (300) NULL,
    [IsFacets]      BIT           NULL,
    [IsUseInSearch] BIT           NULL,
    [BoostValue]    INT           NULL);


GO
PRINT N'Creating [dbo].[SearchProfileFetureList]...';


GO
CREATE TYPE [dbo].[SearchProfileFetureList] AS TABLE (
    [SearchProfileFetureId] INT            NULL,
    [SearchFeatureValue]    NVARCHAR (MAX) NULL);


GO
PRINT N'Creating [dbo].[SelectColumnList]...';


GO
CREATE TYPE [dbo].[SelectColumnList] AS TABLE (
    [StringColumn] NVARCHAR (2000) NOT NULL);




GO
PRINT N'Creating [dbo].[AIZnodeCartLineItemDesign]...';


GO
IF NOT EXISTS (select top 1 1 from sys.tables where name = 'AIZnodeCartLineItemDesign')
BEGIN
CREATE TABLE [dbo].[AIZnodeCartLineItemDesign] (
    [OmsOrderLineItemsDesignId] INT            IDENTITY (1, 1) NOT NULL,
    [OmsOrderLineItemsId]       INT            NULL,
    [OrderLineItemsDesignId]    INT            NULL,
    [OrderLineItemsImagePath]   NVARCHAR (MAX) NULL,
    [CreatedBy]                 INT            NULL,
    [CreatedDate]               DATETIME       NULL,
    [ModifiedBy]                INT            NULL,
    [ModifiedDate]              DATETIME       NULL,
    CONSTRAINT [PK_AIZnodeLineItemDesign] PRIMARY KEY CLUSTERED ([OmsOrderLineItemsDesignId] ASC)
);

END
GO
PRINT N'Creating [dbo].[AIZnodePortalSettings]...';


GO
IF NOT EXISTS (select top 1 1 from sys.tables where name = 'AIZnodePortalSettings')
BEGIN
CREATE TABLE [dbo].[AIZnodePortalSettings] (
    [AIPortalSettingId] INT            IDENTITY (1, 1) NOT NULL,
    [PortalId]          INT            NULL,
    [WebsiteCode]       INT            NULL,
    [DomainName]        NVARCHAR (MAX) NULL,
    [WebApiclientKey]   NVARCHAR (MAX) NULL,
    [CreatedBy]         INT            NULL,
    [CreatedDate]       DATETIME       NULL,
    [ModifiedBy]        INT            NULL,
    [ModifiedDate]      DATETIME       NULL,
    CONSTRAINT [PK_AIZnodePortalSettings] PRIMARY KEY CLUSTERED ([AIPortalSettingId] ASC)
);
END

GO
PRINT N'Creating [dbo].[AIZnodeSavedCartLineItemDesign]...';


GO
IF NOT EXISTS (select top 1 1 from sys.tables where name = 'AIZnodeSavedCartLineItemDesign')
BEGIN
CREATE TABLE [dbo].[AIZnodeSavedCartLineItemDesign] (
    [OmsSavedCartLineItemDesignId] INT            IDENTITY (1, 1) NOT NULL,
    [OmsSavedCartLineItemId]       INT            NULL,
    [AIDesignId]                   INT            NULL,
    [OmsCookieMappingId]           NVARCHAR (100) NULL,
    [SKU]                          NVARCHAR (100) NULL,
    [AISavedDesigns]               NVARCHAR (MAX) NULL,
    [IsConfigurableProduct]        BIT            NULL,
    [IsGroupProduct]               BIT            NULL,
    [SequenceNumber]               INT            NULL,
    [CreatedBy]                    INT            NULL,
    [CreatedDate]                  DATETIME       NULL,
    [ModifiedBy]                   INT            NULL,
    [ModifiedDate]                 DATETIME       NULL,
    CONSTRAINT [PK_AIZnodeSavedCartLineItemDesign] PRIMARY KEY CLUSTERED ([OmsSavedCartLineItemDesignId] ASC)
);
END

GO
PRINT N'Creating [dbo].[ZnodeAccountGlobalAttributeValue]...';


GO
CREATE TABLE [dbo].[ZnodeAccountGlobalAttributeValue] (
    [AccountGlobalAttributeValueId] INT            IDENTITY (1, 1) NOT NULL,
    [AccountId]                     INT            NULL,
    [GlobalAttributeId]             INT            NULL,
    [GlobalAttributeDefaultValueId] INT            NULL,
    [AttributeValue]                NVARCHAR (300) NULL,
    [CreatedBy]                     INT            NOT NULL,
    [CreatedDate]                   DATETIME       NOT NULL,
    [ModifiedBy]                    INT            NOT NULL,
    [ModifiedDate]                  DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeAccountGlobalAttributeValue] PRIMARY KEY CLUSTERED ([AccountGlobalAttributeValueId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeAccountGlobalAttributeValueLocale]...';


GO
CREATE TABLE [dbo].[ZnodeAccountGlobalAttributeValueLocale] (
    [AccountGlobalAttributeValueLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [AccountGlobalAttributeValueId]       INT            NOT NULL,
    [LocaleId]                            INT            NOT NULL,
    [AttributeValue]                      NVARCHAR (MAX) NULL,
    [CreatedBy]                           INT            NOT NULL,
    [CreatedDate]                         DATETIME       NOT NULL,
    [ModifiedBy]                          INT            NOT NULL,
    [ModifiedDate]                        DATETIME       NOT NULL,
    [GlobalAttributeDefaultValueId]       INT            NULL,
    [MediaId]                             INT            NULL,
    [MediaPath]                           NVARCHAR (300) NULL,
    CONSTRAINT [PK_ZnodeAccountGlobalAttributeValueLocale] PRIMARY KEY CLUSTERED ([AccountGlobalAttributeValueLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeApplicationCache]...';


GO
CREATE TABLE [dbo].[ZnodeApplicationCache] (
    [ApplicationCacheId] INT           IDENTITY (1, 1) NOT NULL,
    [ApplicationType]    NVARCHAR (50) NOT NULL,
    [IsActive]           BIT           NOT NULL,
    [StartDate]          DATETIME      NULL,
    [CreatedBy]          INT           NOT NULL,
    [CreatedDate]        DATETIME      NOT NULL,
    [ModifiedBy]         INT           NOT NULL,
    [ModifiedDate]       DATETIME      NOT NULL,
    [Duration]           INT           NULL,
    CONSTRAINT [PK_ZnodeApplicationCache] PRIMARY KEY CLUSTERED ([ApplicationCacheId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeCMSFormWidgetConfiguration]...';


GO
CREATE TABLE [dbo].[ZnodeCMSFormWidgetConfiguration] (
    [CMSFormWidgetConfigurationId] INT            IDENTITY (1, 1) NOT NULL,
    [LocaleId]                     INT            NOT NULL,
    [CMSWidgetsId]                 INT            NOT NULL,
    [WidgetsKey]                   NVARCHAR (128) NOT NULL,
    [CMSMappingId]                 INT            NOT NULL,
    [TypeOFMapping]                NVARCHAR (50)  NOT NULL,
    [FormBuilderId]                INT            NULL,
    [FormTitle]                    NVARCHAR (200) NULL,
    [ButtonText]                   VARCHAR (100)  NULL,
    [IsTextMessage]                BIT            NULL,
    [TextMessage]                  VARCHAR (500)  NULL,
    [RedirectURL]                  VARCHAR (500)  NULL,
    [CreatedBy]                    INT            NOT NULL,
    [CreatedDate]                  DATETIME       NOT NULL,
    [ModifiedBy]                   INT            NOT NULL,
    [ModifiedDate]                 DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeCMSFormWidgetConfiguration] PRIMARY KEY CLUSTERED ([CMSFormWidgetConfigurationId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeFormBuilder]...';


GO
CREATE TABLE [dbo].[ZnodeFormBuilder] (
    [FormBuilderId]   INT           IDENTITY (1, 1) NOT NULL,
    [FormCode]        VARCHAR (200) NULL,
    [FormDescription] VARCHAR (200) NULL,
    [IsShowCaptcha]   BIT           NULL,
    [CreatedBy]       INT           NOT NULL,
    [CreatedDate]     DATETIME      NOT NULL,
    [ModifiedBy]      INT           NOT NULL,
    [ModifiedDate]    DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeFormBuilder] PRIMARY KEY CLUSTERED ([FormBuilderId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeFormBuilderAttributeMapper]...';


GO
CREATE TABLE [dbo].[ZnodeFormBuilderAttributeMapper] (
    [FormBuilderAttributeMapperId] INT      IDENTITY (1, 1) NOT NULL,
    [FormBuilderId]                INT      NOT NULL,
    [GlobalAttributeGroupId]       INT      NULL,
    [GlobalAttributeId]            INT      NULL,
    [DisplayOrder]                 INT      NULL,
    [CreatedBy]                    INT      NOT NULL,
    [CreatedDate]                  DATETIME NOT NULL,
    [ModifiedBy]                   INT      NOT NULL,
    [ModifiedDate]                 DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeFormBuilderAttributeMapper] PRIMARY KEY CLUSTERED ([FormBuilderAttributeMapperId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeFormBuilderGlobalAttributeValue]...';


GO
CREATE TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] (
    [FormBuilderGlobalAttributeValueId] INT            IDENTITY (1, 1) NOT NULL,
    [FormBuilderSubmitId]               INT            NULL,
    [GlobalAttributeId]                 INT            NULL,
    [GlobalAttributeDefaultValueId]     INT            NULL,
    [AttributeValue]                    NVARCHAR (300) NULL,
    [CreatedBy]                         INT            NOT NULL,
    [CreatedDate]                       DATETIME       NOT NULL,
    [ModifiedBy]                        INT            NOT NULL,
    [ModifiedDate]                      DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeFormBuilderGlobalAttributeValue] PRIMARY KEY CLUSTERED ([FormBuilderGlobalAttributeValueId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]...';


GO
CREATE TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale] (
    [FormBuilderGlobalAttributeValueLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [FormBuilderGlobalAttributeValueId]       INT            NOT NULL,
    [LocaleId]                                INT            NOT NULL,
    [AttributeValue]                          NVARCHAR (MAX) NULL,
    [CreatedBy]                               INT            NOT NULL,
    [CreatedDate]                             DATETIME       NOT NULL,
    [ModifiedBy]                              INT            NOT NULL,
    [ModifiedDate]                            DATETIME       NOT NULL,
    [GlobalAttributeDefaultValueId]           INT            NULL,
    [MediaId]                                 INT            NULL,
    [MediaPath]                               NVARCHAR (300) NULL,
    CONSTRAINT [PK_ZnodeFormBuilderGlobalAttributeValueLocale] PRIMARY KEY CLUSTERED ([FormBuilderGlobalAttributeValueLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeFormBuilderSubmit]...';


GO
CREATE TABLE [dbo].[ZnodeFormBuilderSubmit] (
    [FormBuilderSubmitId] INT      IDENTITY (1, 1) NOT NULL,
    [FormBuilderId]       INT      NULL,
    [LocaleId]            INT      NOT NULL,
    [PortalId]            INT      NULL,
    [UserId]              INT      NULL,
    [CreatedBy]           INT      NOT NULL,
    [CreatedDate]         DATETIME NOT NULL,
    [ModifiedBy]          INT      NOT NULL,
    [ModifiedDate]        DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeFormBuilderSubmit] PRIMARY KEY CLUSTERED ([FormBuilderSubmitId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttribute]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttribute] (
    [GlobalAttributeId] INT            IDENTITY (1, 1) NOT NULL,
    [AttributeTypeId]   INT            NULL,
    [AttributeCode]     NVARCHAR (300) NULL,
    [IsRequired]        BIT            NOT NULL,
    [IsLocalizable]     BIT            NOT NULL,
    [IsActive]          BIT            NOT NULL,
    [DisplayOrder]      INT            NULL,
    [HelpDescription]   NVARCHAR (MAX) NULL,
    [CreatedBy]         INT            NOT NULL,
    [CreatedDate]       DATETIME       NOT NULL,
    [ModifiedBy]        INT            NOT NULL,
    [ModifiedDate]      DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttribute] PRIMARY KEY CLUSTERED ([GlobalAttributeId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeDefaultValue]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeDefaultValue] (
    [GlobalAttributeDefaultValueId] INT           IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeId]             INT           NULL,
    [AttributeDefaultValueCode]     VARCHAR (100) NULL,
    [IsEditable]                    BIT           NULL,
    [DisplayOrder]                  INT           NULL,
    [MediaId]                       INT           NULL,
    [SwatchText]                    VARCHAR (100) NULL,
    [IsDefault]                     BIT           NULL,
    [CreatedBy]                     INT           NOT NULL,
    [CreatedDate]                   DATETIME      NOT NULL,
    [ModifiedBy]                    INT           NOT NULL,
    [ModifiedDate]                  DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeDefaultValue] PRIMARY KEY CLUSTERED ([GlobalAttributeDefaultValueId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeDefaultValueLocale]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeDefaultValueLocale] (
    [GlobalAttributeDefaultValueLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [LocaleId]                            INT            NULL,
    [GlobalAttributeDefaultValueId]       INT            NULL,
    [AttributeDefaultValue]               NVARCHAR (MAX) NULL,
    [Description]                         VARCHAR (300)  NULL,
    [CreatedBy]                           INT            NOT NULL,
    [CreatedDate]                         DATETIME       NOT NULL,
    [ModifiedBy]                          INT            NOT NULL,
    [ModifiedDate]                        DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeDefaultValueLocale] PRIMARY KEY CLUSTERED ([GlobalAttributeDefaultValueLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeGroup]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeGroup] (
    [GlobalAttributeGroupId] INT           IDENTITY (1, 1) NOT NULL,
    [GroupCode]              VARCHAR (200) NULL,
    [DisplayOrder]           INT           NULL,
    [CreatedBy]              INT           NOT NULL,
    [CreatedDate]            DATETIME      NOT NULL,
    [ModifiedBy]             INT           NOT NULL,
    [ModifiedDate]           DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeGroup] PRIMARY KEY CLUSTERED ([GlobalAttributeGroupId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeGroupLocale]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeGroupLocale] (
    [GlobalAttributeGroupLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [LocaleId]                     INT            NULL,
    [GlobalAttributeGroupId]       INT            NOT NULL,
    [AttributeGroupName]           NVARCHAR (300) NULL,
    [Description]                  VARCHAR (300)  NULL,
    [CreatedBy]                    INT            NOT NULL,
    [CreatedDate]                  DATETIME       NOT NULL,
    [ModifiedBy]                   INT            NOT NULL,
    [ModifiedDate]                 DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeGroupLocale] PRIMARY KEY CLUSTERED ([GlobalAttributeGroupLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeGroupMapper]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeGroupMapper] (
    [GlobalAttributeGroupMapperId] INT      IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeGroupId]       INT      NULL,
    [GlobalAttributeId]            INT      NULL,
    [AttributeDisplayOrder]        INT      NULL,
    [CreatedBy]                    INT      NOT NULL,
    [CreatedDate]                  DATETIME NOT NULL,
    [ModifiedBy]                   INT      NOT NULL,
    [ModifiedDate]                 DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeGroupMapper] PRIMARY KEY CLUSTERED ([GlobalAttributeGroupMapperId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeLocale]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeLocale] (
    [GlobalAttributeLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [LocaleId]                INT            NULL,
    [GlobalAttributeId]       INT            NULL,
    [AttributeName]           NVARCHAR (300) NULL,
    [Description]             VARCHAR (300)  NULL,
    [CreatedBy]               INT            NOT NULL,
    [CreatedDate]             DATETIME       NOT NULL,
    [ModifiedBy]              INT            NOT NULL,
    [ModifiedDate]            DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeLocale] PRIMARY KEY CLUSTERED ([GlobalAttributeLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeMedia]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeMedia] (
    [GlobalAttributeMediaId] INT           IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeValueId] INT           NOT NULL,
    [MediaPath]              VARCHAR (300) NULL,
    [MediaId]                INT           NULL,
    [LocaleId]               INT           NOT NULL,
    [CreatedBy]              INT           NOT NULL,
    [CreatedDate]            DATETIME      NOT NULL,
    [ModifiedBy]             INT           NOT NULL,
    [ModifiedDate]           DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeMedia] PRIMARY KEY CLUSTERED ([GlobalAttributeMediaId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeValidation]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeValidation] (
    [GlobalAttributeValidationId] INT           IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeId]           INT           NULL,
    [InputValidationId]           INT           NULL,
    [InputValidationRuleId]       INT           NULL,
    [Name]                        VARCHAR (300) NULL,
    [CreatedBy]                   INT           NOT NULL,
    [CreatedDate]                 DATETIME      NOT NULL,
    [ModifiedBy]                  INT           NOT NULL,
    [ModifiedDate]                DATETIME      NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeValidation] PRIMARY KEY CLUSTERED ([GlobalAttributeValidationId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeValue]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeValue] (
    [GlobalAttributeValueId]        INT            IDENTITY (1, 1) NOT NULL,
    [GlobalEntityId]                INT            NULL,
    [GlobalEntityValueId]           INT            NULL,
    [GlobalAttributeId]             INT            NULL,
    [GlobalAttributeDefaultValueId] INT            NULL,
    [AttributeValue]                NVARCHAR (300) NULL,
    [CreatedBy]                     INT            NOT NULL,
    [CreatedDate]                   DATETIME       NOT NULL,
    [ModifiedBy]                    INT            NOT NULL,
    [ModifiedDate]                  DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeValue] PRIMARY KEY CLUSTERED ([GlobalAttributeValueId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalAttributeValueLocale]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalAttributeValueLocale] (
    [ZnodeGlobalAttributeValueLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeValueId]            INT            NOT NULL,
    [LocaleId]                          INT            NOT NULL,
    [AttributeValue]                    NVARCHAR (MAX) NULL,
    [CreatedBy]                         INT            NOT NULL,
    [CreatedDate]                       DATETIME       NOT NULL,
    [ModifiedBy]                        INT            NOT NULL,
    [ModifiedDate]                      DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalAttributeValueLocale] PRIMARY KEY CLUSTERED ([ZnodeGlobalAttributeValueLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalEntity]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalEntity] (
    [GlobalEntityId] INT            IDENTITY (1, 1) NOT NULL,
    [EntityName]     NVARCHAR (300) NULL,
    [IsActive]       BIT            NOT NULL,
    [TableName]      NVARCHAR (50)  NULL,
    [CreatedBy]      INT            NOT NULL,
    [CreatedDate]    DATETIME       NOT NULL,
    [ModifiedBy]     INT            NOT NULL,
    [ModifiedDate]   DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalEntity] PRIMARY KEY CLUSTERED ([GlobalEntityId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalEntityTextAreaValue]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalEntityTextAreaValue] (
    [GlobalEntityTextAreaValueId] INT            IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeValueId]      INT            NOT NULL,
    [AttributeValue]              NVARCHAR (MAX) NULL,
    [LocaleId]                    INT            NOT NULL,
    [CreatedBy]                   INT            NOT NULL,
    [CreatedDate]                 DATETIME       NOT NULL,
    [ModifiedBy]                  INT            NOT NULL,
    [ModifiedDate]                DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalEntityTextAreaValue] PRIMARY KEY CLUSTERED ([GlobalEntityTextAreaValueId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeGlobalGroupEntityMapper]...';


GO
CREATE TABLE [dbo].[ZnodeGlobalGroupEntityMapper] (
    [GlobalGroupEntityId]        INT      IDENTITY (1, 1) NOT NULL,
    [GlobalAttributeGroupId]     INT      NULL,
    [GlobalEntityId]             INT      NULL,
    [AttributeGroupDisplayOrder] INT      NULL,
    [CreatedBy]                  INT      NOT NULL,
    [CreatedDate]                DATETIME NOT NULL,
    [ModifiedBy]                 INT      NOT NULL,
    [ModifiedDate]               DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeGlobalGroupEntityMapper] PRIMARY KEY CLUSTERED ([GlobalGroupEntityId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeImportXMLData]...';


GO
CREATE TABLE [dbo].[ZnodeImportXMLData] (
    [ID]       INT             IDENTITY (1, 1) NOT NULL,
    [XMLVALUE] XML             NULL,
    [CsvHeder] NVARCHAR (2000) NULL,
    [NewGUID]  NVARCHAR (MAX)  NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeOmsDownloadableProductKey]...';


GO
CREATE TABLE [dbo].[ZnodeOmsDownloadableProductKey] (
    [OmsDownloadableProductKeyId] INT      IDENTITY (1, 1) NOT NULL,
    [OmsOrderLineItemsId]         INT      NOT NULL,
    [PimDownloadableProductKeyId] INT      NOT NULL,
    [CreatedBy]                   INT      NOT NULL,
    [CreatedDate]                 DATETIME NOT NULL,
    [ModifiedBy]                  INT      NOT NULL,
    [ModifiedDate]                DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeOmsDownloadableProductKey] PRIMARY KEY CLUSTERED ([OmsDownloadableProductKeyId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeOmsSavedCartLineItemDetails]...';


GO
CREATE TABLE [dbo].[ZnodeOmsSavedCartLineItemDetails] (
    [ZnodeOmsSavedCartLineItemDetailId] INT            IDENTITY (1, 1) NOT NULL,
    [OmsSavedCartLineItemId]            INT            NULL,
    [OmsSavedCartId]                    INT            NULL,
    [Key]                               NVARCHAR (200) NULL,
    [Value]                             NVARCHAR (MAX) NULL,
    [CreatedBy]                         INT            NULL,
    [CreatedDate]                       DATETIME       NULL,
    [ModifiedBy]                        INT            NULL,
    [ModifiedDate]                      DATETIME       NULL,
    CONSTRAINT [PK_ZnodeOmsSavedCartLineItemDetails] PRIMARY KEY CLUSTERED ([ZnodeOmsSavedCartLineItemDetailId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodePimDownloadableProduct]...';


GO
CREATE TABLE [dbo].[ZnodePimDownloadableProduct] (
    [PimDownloadableProductId] INT            IDENTITY (1, 1) NOT NULL,
    [SKU]                      NVARCHAR (300) NOT NULL,
    [ProductName]              NVARCHAR (300) NOT NULL,
    [CreatedBy]                INT            NOT NULL,
    [CreatedDate]              DATETIME       NOT NULL,
    [ModifiedBy]               INT            NOT NULL,
    [ModifiedDate]             DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodePimDownloadableProduct] PRIMARY KEY CLUSTERED ([PimDownloadableProductId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodePimDownloadableProductKey]...';


GO
CREATE TABLE [dbo].[ZnodePimDownloadableProductKey] (
    [PimDownloadableProductKeyId] INT             IDENTITY (1, 1) NOT NULL,
    [PimDownloadableProductId]    INT             NOT NULL,
    [DownloadableProductKey]      NVARCHAR (250)  NULL,
    [DownloadableProductURL]      NVARCHAR (2000) NULL,
    [IsUsed]                      BIT             NOT NULL,
    [WarehouseId]                 INT             NULL,
    [CreatedBy]                   INT             NOT NULL,
    [CreatedDate]                 DATETIME        NOT NULL,
    [ModifiedBy]                  INT             NOT NULL,
    [ModifiedDate]                DATETIME        NOT NULL,
    CONSTRAINT [PK_ZnodePimDownloadableProductKey] PRIMARY KEY CLUSTERED ([PimDownloadableProductKeyId] ASC),
    CONSTRAINT [IX_ZnodePimDownloadableProductKey] UNIQUE NONCLUSTERED ([DownloadableProductKey] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodePortalGlobalAttributeValue]...';


GO
CREATE TABLE [dbo].[ZnodePortalGlobalAttributeValue] (
    [PortalGlobalAttributeValueId]  INT            IDENTITY (1, 1) NOT NULL,
    [PortalId]                      INT            NULL,
    [GlobalAttributeId]             INT            NULL,
    [GlobalAttributeDefaultValueId] INT            NULL,
    [AttributeValue]                NVARCHAR (300) NULL,
    [CreatedBy]                     INT            NOT NULL,
    [CreatedDate]                   DATETIME       NOT NULL,
    [ModifiedBy]                    INT            NOT NULL,
    [ModifiedDate]                  DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodePortalGlobalAttributeValue] PRIMARY KEY CLUSTERED ([PortalGlobalAttributeValueId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodePortalGlobalAttributeValueLocale]...';


GO
CREATE TABLE [dbo].[ZnodePortalGlobalAttributeValueLocale] (
    [PortalGlobalAttributeValueLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [PortalGlobalAttributeValueId]       INT            NOT NULL,
    [LocaleId]                           INT            NOT NULL,
    [AttributeValue]                     NVARCHAR (MAX) NULL,
    [CreatedBy]                          INT            NOT NULL,
    [CreatedDate]                        DATETIME       NOT NULL,
    [ModifiedBy]                         INT            NOT NULL,
    [ModifiedDate]                       DATETIME       NOT NULL,
    [GlobalAttributeDefaultValueId]      INT            NULL,
    [MediaId]                            INT            NULL,
    [MediaPath]                          NVARCHAR (300) NULL,
    CONSTRAINT [PK_ZnodePortalGlobalAttributeValueLocale] PRIMARY KEY CLUSTERED ([PortalGlobalAttributeValueLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodePortalSearchProfile]...';


GO
CREATE TABLE [dbo].[ZnodePortalSearchProfile] (
    [PortalSearchProfileId] INT      IDENTITY (1, 1) NOT NULL,
    [PortalId]              INT      NOT NULL,
    [PublishCatalogId]      INT      NOT NULL,
    [SearchProfileId]       INT      NOT NULL,
    [IsDefault]             BIT      NOT NULL,
    [CreatedBy]             INT      NOT NULL,
    [CreatedDate]           DATETIME NOT NULL,
    [ModifiedBy]            INT      NOT NULL,
    [ModifiedDate]          DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodePortalSearchProfile] PRIMARY KEY CLUSTERED ([PortalSearchProfileId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodePublishCatalogSearchProfile]...';


GO
CREATE TABLE [dbo].[ZnodePublishCatalogSearchProfile] (
    [PublishCatalogSearchProfileId] INT      IDENTITY (1, 1) NOT NULL,
    [PublishCatalogId]              INT      NOT NULL,
    [SearchProfileId]               INT      NOT NULL,
    [IsDefault]                     BIT      NOT NULL,
    [CreatedBy]                     INT      NOT NULL,
    [CreatedDate]                   DATETIME NOT NULL,
    [ModifiedBy]                    INT      NOT NULL,
    [ModifiedDate]                  DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodePublishCatalogSearchProfile] PRIMARY KEY CLUSTERED ([PublishCatalogSearchProfileId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodePublishedPortalXml]...';


GO
CREATE TABLE [dbo].[ZnodePublishedPortalXml] (
    [PublishedPortalXmlId] INT      IDENTITY (1, 1) NOT NULL,
    [PublishPortalLogId]   INT      NOT NULL,
    [PortalId]             INT      NULL,
    [PublishedXML]         XML      NULL,
    [LocaleId]             INT      NULL,
    [CreatedBy]            INT      NOT NULL,
    [CreatedDate]          DATETIME NOT NULL,
    [ModifiedBy]           INT      NOT NULL,
    [ModifiedDate]         DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodePublishedPortalXml] PRIMARY KEY CLUSTERED ([PublishedPortalXmlId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[znodepublishedxml_OLDPUBLISHSP]...';


GO
CREATE TABLE [dbo].[znodepublishedxml_OLDPUBLISHSP] (
    [PublishedXmlId]      INT      IDENTITY (1, 1) NOT NULL,
    [PublishCatalogLogId] INT      NOT NULL,
    [PublishedId]         INT      NULL,
    [PublishedXML]        XML      NULL,
    [IsCategoryXML]       BIT      NULL,
    [IsProductXML]        BIT      NULL,
    [IsAddOnXML]          BIT      NULL,
    [IsGroupProductXML]   BIT      NULL,
    [IsBundleProductXML]  BIT      NULL,
    [IsConfigProductXML]  BIT      NULL,
    [LocaleId]            INT      NULL,
    [CreatedBy]           INT      NOT NULL,
    [CreatedDate]         DATETIME NOT NULL,
    [ModifiedBy]          INT      NOT NULL,
    [ModifiedDate]        DATETIME NOT NULL
);


GO
PRINT N'Creating [dbo].[ZnodeSearchFeature]...';


GO
CREATE TABLE [dbo].[ZnodeSearchFeature] (
    [SearchFeatureId]       INT             IDENTITY (1, 1) NOT NULL,
    [ParentSearchFeatureId] INT             NULL,
    [FeatureCode]           NVARCHAR (100)  NULL,
    [FeatureName]           NVARCHAR (200)  NULL,
    [IsAdvanceFeature]      BIT             NOT NULL,
    [ControlType]           NVARCHAR (100)  NULL,
    [HelpDescription]       NVARCHAR (1000) NULL,
    [CreatedBy]             INT             NOT NULL,
    [CreatedDate]           DATETIME        NOT NULL,
    [ModifiedBy]            INT             NOT NULL,
    [ModifiedDate]          DATETIME        NOT NULL,
    CONSTRAINT [PK_ZnodeSearchFeture] PRIMARY KEY CLUSTERED ([SearchFeatureId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchProfile]...';


GO
CREATE TABLE [dbo].[ZnodeSearchProfile] (
    [SearchProfileId]      INT            IDENTITY (1, 1) NOT NULL,
    [ProfileName]          NVARCHAR (200) NULL,
    [SearchQueryTypeId]    INT            NOT NULL,
    [SearchSubQueryTypeId] INT            NULL,
    [Operator]             VARCHAR (20)   NOT NULL,
    [IsDefault]            BIT            NOT NULL,
    [CreatedBy]            INT            NOT NULL,
    [CreatedDate]          DATETIME       NOT NULL,
    [ModifiedBy]           INT            NOT NULL,
    [ModifiedDate]         DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeSearchProfile] PRIMARY KEY CLUSTERED ([SearchProfileId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchProfileAttributeMapping]...';


GO
CREATE TABLE [dbo].[ZnodeSearchProfileAttributeMapping] (
    [SearchProfileAttributeMappingId] INT            IDENTITY (1, 1) NOT NULL,
    [SearchProfileId]                 INT            NOT NULL,
    [AttributeCode]                   NVARCHAR (300) NOT NULL,
    [IsFacets]                        BIT            NOT NULL,
    [IsUseInSearch]                   BIT            NOT NULL,
    [BoostValue]                      INT            NULL,
    [CreatedBy]                       INT            NOT NULL,
    [CreatedDate]                     DATETIME       NOT NULL,
    [ModifiedBy]                      INT            NOT NULL,
    [ModifiedDate]                    DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeSearchProfileAttributeMapping] PRIMARY KEY CLUSTERED ([SearchProfileAttributeMappingId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchProfileFeatureMapping]...';


GO
CREATE TABLE [dbo].[ZnodeSearchProfileFeatureMapping] (
    [SearchProfileFeatureMappingId] INT             IDENTITY (1, 1) NOT NULL,
    [SearchProfileId]               INT             NOT NULL,
    [SearchFeatureId]               INT             NOT NULL,
    [SearchFeatureValue]            NVARCHAR (2000) NULL,
    [CreatedBy]                     INT             NOT NULL,
    [CreatedDate]                   DATETIME        NOT NULL,
    [ModifiedBy]                    INT             NOT NULL,
    [ModifiedDate]                  DATETIME        NOT NULL,
    CONSTRAINT [PK_ZnodeSearchProfileFeatureMapping] PRIMARY KEY CLUSTERED ([SearchProfileFeatureMappingId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchProfileProductMapping]...';


GO
CREATE TABLE [dbo].[ZnodeSearchProfileProductMapping] (
    [SearchProfileProductMappingid] INT            IDENTITY (1, 1) NOT NULL,
    [SearchProfileId]               INT            NOT NULL,
    [SKU]                           NVARCHAR (300) NOT NULL,
    [CreatedBy]                     INT            NOT NULL,
    [CreatedDate]                   DATETIME       NOT NULL,
    [ModifiedBy]                    INT            NOT NULL,
    [ModifiedDate]                  DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeSearchProfileProductMapping] PRIMARY KEY CLUSTERED ([SearchProfileProductMappingid] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchProfileTrigger]...';


GO
CREATE TABLE [dbo].[ZnodeSearchProfileTrigger] (
    [SearchProfileTriggerId] INT             IDENTITY (1, 1) NOT NULL,
    [Keyword]                NVARCHAR (1000) NULL,
    [UserProfileId]          INT             NULL,
    [SearchProfileId]        INT             NOT NULL,
    [CreatedBy]              INT             NOT NULL,
    [CreatedDate]            DATETIME        NOT NULL,
    [ModifiedBy]             INT             NOT NULL,
    [ModifiedDate]           DATETIME        NOT NULL,
    CONSTRAINT [PK_ZnodeTriggerSearchProfile] PRIMARY KEY CLUSTERED ([SearchProfileTriggerId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchQueryType]...';


GO
CREATE TABLE [dbo].[ZnodeSearchQueryType] (
    [SearchQueryTypeId]       INT             IDENTITY (1, 1) NOT NULL,
    [ParentSearchQueryTypeId] INT             NULL,
    [QueryTypeName]           NVARCHAR (200)  NOT NULL,
    [QueryBuilderClassName]   NVARCHAR (200)  NULL,
    [HelpDescription]         NVARCHAR (1000) NULL,
    [CreatedBy]               INT             NOT NULL,
    [CreatedDate]             DATETIME        NOT NULL,
    [ModifiedBy]              INT             NOT NULL,
    [ModifiedDate]            DATETIME        NOT NULL,
    CONSTRAINT [PK_ZnodeSearchQueryType] PRIMARY KEY CLUSTERED ([SearchQueryTypeId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeSearchQueryTypeFeature]...';


GO
CREATE TABLE [dbo].[ZnodeSearchQueryTypeFeature] (
    [SearchQueryTypeFeatureId] INT      IDENTITY (1, 1) NOT NULL,
    [SearchFeatureId]          INT      NOT NULL,
    [SearchQueryTypeId]        INT      NOT NULL,
    [CreatedBy]                INT      NOT NULL,
    [CreatedDate]              DATETIME NOT NULL,
    [ModifiedBy]               INT      NOT NULL,
    [ModifiedDate]             DATETIME NOT NULL,
    CONSTRAINT [PK_ZnodeSearchQueryTypeFeature] PRIMARY KEY CLUSTERED ([SearchQueryTypeFeatureId] ASC)
);


GO
PRINT N'Creating [dbo].[ZnodeUserGlobalAttributeValue]...';


GO
CREATE TABLE [dbo].[ZnodeUserGlobalAttributeValue] (
    [UserGlobalAttributeValueId]    INT            IDENTITY (1, 1) NOT NULL,
    [UserId]                        INT            NULL,
    [GlobalAttributeId]             INT            NULL,
    [GlobalAttributeDefaultValueId] INT            NULL,
    [AttributeValue]                NVARCHAR (300) NULL,
    [CreatedBy]                     INT            NOT NULL,
    [CreatedDate]                   DATETIME       NOT NULL,
    [ModifiedBy]                    INT            NOT NULL,
    [ModifiedDate]                  DATETIME       NOT NULL,
    CONSTRAINT [PK_ZnodeUserGlobalAttributeValue] PRIMARY KEY CLUSTERED ([UserGlobalAttributeValueId] ASC) WITH (FILLFACTOR = 90)
);


GO
PRINT N'Creating [dbo].[ZnodeUserGlobalAttributeValueLocale]...';


GO
CREATE TABLE [dbo].[ZnodeUserGlobalAttributeValueLocale] (
    [UserGlobalAttributeValueLocaleId] INT            IDENTITY (1, 1) NOT NULL,
    [UserGlobalAttributeValueId]       INT            NOT NULL,
    [LocaleId]                         INT            NOT NULL,
    [AttributeValue]                   NVARCHAR (MAX) NULL,
    [CreatedBy]                        INT            NOT NULL,
    [CreatedDate]                      DATETIME       NOT NULL,
    [ModifiedBy]                       INT            NOT NULL,
    [ModifiedDate]                     DATETIME       NOT NULL,
    [GlobalAttributeDefaultValueId]    INT            NULL,
    [MediaId]                          INT            NULL,
    [MediaPath]                        NVARCHAR (300) NULL,
    CONSTRAINT [PK_ZnodeUserGlobalAttributeValueLocale] PRIMARY KEY CLUSTERED ([UserGlobalAttributeValueLocaleId] ASC)
);


GO
PRINT N'Creating [dbo].[DF_AIZnodeSavedCartLineItemDesign_IsGroupProduct]...';


GO
ALTER TABLE [dbo].[AIZnodeSavedCartLineItemDesign]
    ADD CONSTRAINT [DF_AIZnodeSavedCartLineItemDesign_IsGroupProduct] DEFAULT ((0)) FOR [IsGroupProduct];


GO
PRINT N'Creating [dbo].[DF_AIZnodeSavedCartLineItemDesign_IsConfigurableProduct]...';


GO
ALTER TABLE [dbo].[AIZnodeSavedCartLineItemDesign]
    ADD CONSTRAINT [DF_AIZnodeSavedCartLineItemDesign_IsConfigurableProduct] DEFAULT ((0)) FOR [IsConfigurableProduct];


GO
PRINT N'Creating unnamed constraint on [dbo].[ZnodeFormBuilder]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilder]
    ADD DEFAULT ((0)) FOR [IsShowCaptcha];


GO
PRINT N'Creating [dbo].[DF_ZnodeGlobalAttribute_IsActive]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttribute]
    ADD CONSTRAINT [DF_ZnodeGlobalAttribute_IsActive] DEFAULT ((1)) FOR [IsActive];


GO
PRINT N'Creating [dbo].[DF_ZNodeGlobalDefaultAttributeValue_Iseditable]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeDefaultValue]
    ADD CONSTRAINT [DF_ZNodeGlobalDefaultAttributeValue_Iseditable] DEFAULT ((0)) FOR [IsEditable];


GO
PRINT N'Creating [dbo].[DF_ZnodePimDownloadableProductKey_IsUsed]...';


GO
ALTER TABLE [dbo].[ZnodePimDownloadableProductKey]
    ADD CONSTRAINT [DF_ZnodePimDownloadableProductKey_IsUsed] DEFAULT ((0)) FOR [IsUsed];


GO
PRINT N'Creating [dbo].[DF_ZnodePortalSearchProfile_IsDefault]...';


GO
ALTER TABLE [dbo].[ZnodePortalSearchProfile]
    ADD CONSTRAINT [DF_ZnodePortalSearchProfile_IsDefault] DEFAULT ((0)) FOR [IsDefault];


GO
PRINT N'Creating [dbo].[DF_ZnodePublishCatalogSearchProfile_IsDefault]...';


GO
ALTER TABLE [dbo].[ZnodePublishCatalogSearchProfile]
    ADD CONSTRAINT [DF_ZnodePublishCatalogSearchProfile_IsDefault] DEFAULT ((0)) FOR [IsDefault];


GO
PRINT N'Creating [dbo].[DF_ZnodeSearchProfileFeature_IsAdvanceFeature]...';


GO
ALTER TABLE [dbo].[ZnodeSearchFeature]
    ADD CONSTRAINT [DF_ZnodeSearchProfileFeature_IsAdvanceFeature] DEFAULT ((0)) FOR [IsAdvanceFeature];


GO
PRINT N'Creating [dbo].[DF_ZnodeSearchProfile_IsDefault]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfile]
    ADD CONSTRAINT [DF_ZnodeSearchProfile_IsDefault] DEFAULT ((0)) FOR [IsDefault];




GO
PRINT N'Creating [dbo].[FK_ZnodeAccountGlobalAttributeValue_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeAccountGlobalAttributeValue_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeAccountGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue]...';


GO
ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeAccountGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue] FOREIGN KEY ([GlobalAttributeDefaultValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeDefaultValue] ([GlobalAttributeDefaultValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeAccountGlobalAttributeValueLocale_ZnodeAccountGlobalAttributeValue]...';


GO
ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeAccountGlobalAttributeValueLocale_ZnodeAccountGlobalAttributeValue] FOREIGN KEY ([AccountGlobalAttributeValueId]) REFERENCES [dbo].[ZnodeAccountGlobalAttributeValue] ([AccountGlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeAccountGlobalAttributeValueLocale_ZnodeMedia]...';


GO
ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeAccountGlobalAttributeValueLocale_ZnodeMedia] FOREIGN KEY ([MediaId]) REFERENCES [dbo].[ZnodeMedia] ([MediaId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeCMSFormWidgetConfiguration_ZnodeCMSWidgets]...';


GO
ALTER TABLE [dbo].[ZnodeCMSFormWidgetConfiguration] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeCMSFormWidgetConfiguration_ZnodeCMSWidgets] FOREIGN KEY ([CMSWidgetsId]) REFERENCES [dbo].[ZnodeCMSWidgets] ([CMSWidgetsId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeCMSFormWidgetConfiguration_ZnodeFormBuilder]...';


GO
ALTER TABLE [dbo].[ZnodeCMSFormWidgetConfiguration] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeCMSFormWidgetConfiguration_ZnodeFormBuilder] FOREIGN KEY ([FormBuilderId]) REFERENCES [dbo].[ZnodeFormBuilder] ([FormBuilderId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderAttributeMapper_ZnodeFormBuilder]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderAttributeMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderAttributeMapper_ZnodeFormBuilder] FOREIGN KEY ([FormBuilderId]) REFERENCES [dbo].[ZnodeFormBuilder] ([FormBuilderId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderAttributeMapper_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderAttributeMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderAttributeMapper_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderAttributeMapper_ZnodeGlobalAttributeGroup]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderAttributeMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderAttributeMapper_ZnodeGlobalAttributeGroup] FOREIGN KEY ([GlobalAttributeGroupId]) REFERENCES [dbo].[ZnodeGlobalAttributeGroup] ([GlobalAttributeGroupId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeFormBuilderSubmit]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeFormBuilderSubmit] FOREIGN KEY ([FormBuilderSubmitId]) REFERENCES [dbo].[ZnodeFormBuilderSubmit] ([FormBuilderSubmitId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue] FOREIGN KEY ([GlobalAttributeDefaultValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeDefaultValue] ([GlobalAttributeDefaultValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderGlobalAttributeValueLocale_ZnodeFormBuilderGlobalAttributeValue]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValueLocale_ZnodeFormBuilderGlobalAttributeValue] FOREIGN KEY ([FormBuilderGlobalAttributeValueId]) REFERENCES [dbo].[ZnodeFormBuilderGlobalAttributeValue] ([FormBuilderGlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderGlobalAttributeValueLocale_ZnodeMedia]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValueLocale_ZnodeMedia] FOREIGN KEY ([MediaId]) REFERENCES [dbo].[ZnodeMedia] ([MediaId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderSubmit_ZnodeFormBuilder]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderSubmit] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderSubmit_ZnodeFormBuilder] FOREIGN KEY ([FormBuilderId]) REFERENCES [dbo].[ZnodeFormBuilder] ([FormBuilderId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderSubmit_ZnodePortal]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderSubmit] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderSubmit_ZnodePortal] FOREIGN KEY ([PortalId]) REFERENCES [dbo].[ZnodePortal] ([PortalId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeFormBuilderSubmit_ZnodeUser]...';


GO
ALTER TABLE [dbo].[ZnodeFormBuilderSubmit] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeFormBuilderSubmit_ZnodeUser] FOREIGN KEY ([UserId]) REFERENCES [dbo].[ZnodeUser] ([UserId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttribute_ZnodeAttributeType]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttribute] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttribute_ZnodeAttributeType] FOREIGN KEY ([AttributeTypeId]) REFERENCES [dbo].[ZnodeAttributeType] ([AttributeTypeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeDefaultValue_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeDefaultValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeDefaultValue_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeDefaultValueLocale_ZNodeGlobalDefaultAttributeValue]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeDefaultValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeDefaultValueLocale_ZNodeGlobalDefaultAttributeValue] FOREIGN KEY ([GlobalAttributeDefaultValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeDefaultValue] ([GlobalAttributeDefaultValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeGroupLocale_ZnodeGlobalAttributeGroup]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeGroupLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeGroupLocale_ZnodeGlobalAttributeGroup] FOREIGN KEY ([GlobalAttributeGroupId]) REFERENCES [dbo].[ZnodeGlobalAttributeGroup] ([GlobalAttributeGroupId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeGroupMapper_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeGroupMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeGroupMapper_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeGroupMapper_ZnodeGlobalAttributeGroup]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeGroupMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeGroupMapper_ZnodeGlobalAttributeGroup] FOREIGN KEY ([GlobalAttributeGroupId]) REFERENCES [dbo].[ZnodeGlobalAttributeGroup] ([GlobalAttributeGroupId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeLocale_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeLocale_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeMedia_ZnodeGlobalAttributeValueId]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeMedia] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeMedia_ZnodeGlobalAttributeValueId] FOREIGN KEY ([GlobalAttributeValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeValue] ([GlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValidation_ZnodeAttributeInputValidation]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValidation] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValidation_ZnodeAttributeInputValidation] FOREIGN KEY ([InputValidationId]) REFERENCES [dbo].[ZnodeAttributeInputValidation] ([InputValidationId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValidation_ZnodeAttributeInputValidationRule]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValidation] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValidation_ZnodeAttributeInputValidationRule] FOREIGN KEY ([InputValidationRuleId]) REFERENCES [dbo].[ZnodeAttributeInputValidationRule] ([InputValidationRuleId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValidation_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValidation] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValidation_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValue_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValue_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue] FOREIGN KEY ([GlobalAttributeDefaultValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeDefaultValue] ([GlobalAttributeDefaultValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValue_ZnodeGlobalEntity]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValue_ZnodeGlobalEntity] FOREIGN KEY ([GlobalEntityId]) REFERENCES [dbo].[ZnodeGlobalEntity] ([GlobalEntityId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalAttributeValueLocale_ZnodeGlobalAttributeValue]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalAttributeValueLocale_ZnodeGlobalAttributeValue] FOREIGN KEY ([GlobalAttributeValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeValue] ([GlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalEntityTextAreaValue_ZnodeGlobalAttributeValueId]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalEntityTextAreaValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalEntityTextAreaValue_ZnodeGlobalAttributeValueId] FOREIGN KEY ([GlobalAttributeValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeValue] ([GlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalGroupEntityMapper_ZnodeGlobalAttributeGroup]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalGroupEntityMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalGroupEntityMapper_ZnodeGlobalAttributeGroup] FOREIGN KEY ([GlobalAttributeGroupId]) REFERENCES [dbo].[ZnodeGlobalAttributeGroup] ([GlobalAttributeGroupId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeGlobalGroupEntityMapper_ZnodeGlobalEntity]...';


GO
ALTER TABLE [dbo].[ZnodeGlobalGroupEntityMapper] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeGlobalGroupEntityMapper_ZnodeGlobalEntity] FOREIGN KEY ([GlobalEntityId]) REFERENCES [dbo].[ZnodeGlobalEntity] ([GlobalEntityId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeOmsDownloadableProductKey_ZnodeOmsOrderLineItems]...';


GO
ALTER TABLE [dbo].[ZnodeOmsDownloadableProductKey] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeOmsDownloadableProductKey_ZnodeOmsOrderLineItems] FOREIGN KEY ([OmsOrderLineItemsId]) REFERENCES [dbo].[ZnodeOmsOrderLineItems] ([OmsOrderLineItemsId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeOmsDownloadableProductKey_ZnodePimDownloadableProductKey]...';


GO
ALTER TABLE [dbo].[ZnodeOmsDownloadableProductKey] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeOmsDownloadableProductKey_ZnodePimDownloadableProductKey] FOREIGN KEY ([PimDownloadableProductKeyId]) REFERENCES [dbo].[ZnodePimDownloadableProductKey] ([PimDownloadableProductKeyId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePimDownloadableProductKey_ZnodePimDownloadableProduct]...';


GO
ALTER TABLE [dbo].[ZnodePimDownloadableProductKey] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePimDownloadableProductKey_ZnodePimDownloadableProduct] FOREIGN KEY ([PimDownloadableProductId]) REFERENCES [dbo].[ZnodePimDownloadableProduct] ([PimDownloadableProductId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalGlobalAttributeValue_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalGlobalAttributeValue_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue]...';


GO
ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue] FOREIGN KEY ([GlobalAttributeDefaultValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeDefaultValue] ([GlobalAttributeDefaultValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalGlobalAttributeValueLocale_ZnodeMedia]...';


GO
ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalGlobalAttributeValueLocale_ZnodeMedia] FOREIGN KEY ([MediaId]) REFERENCES [dbo].[ZnodeMedia] ([MediaId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalGlobalAttributeValueLocale_ZnodePortalGlobalAttributeValue]...';


GO
ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalGlobalAttributeValueLocale_ZnodePortalGlobalAttributeValue] FOREIGN KEY ([PortalGlobalAttributeValueId]) REFERENCES [dbo].[ZnodePortalGlobalAttributeValue] ([PortalGlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalSearchProfile_ZnodePortal]...';


GO
ALTER TABLE [dbo].[ZnodePortalSearchProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalSearchProfile_ZnodePortal] FOREIGN KEY ([PortalId]) REFERENCES [dbo].[ZnodePortal] ([PortalId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalSearchProfile_ZnodePublishCatalog]...';


GO
ALTER TABLE [dbo].[ZnodePortalSearchProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalSearchProfile_ZnodePublishCatalog] FOREIGN KEY ([PublishCatalogId]) REFERENCES [dbo].[ZnodePublishCatalog] ([PublishCatalogId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePortalSearchProfile_ZnodeSearchProfile]...';


GO
ALTER TABLE [dbo].[ZnodePortalSearchProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePortalSearchProfile_ZnodeSearchProfile] FOREIGN KEY ([SearchProfileId]) REFERENCES [dbo].[ZnodeSearchProfile] ([SearchProfileId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePublishCatalogSearchProfile_ZnodePublishCatalog]...';


GO
ALTER TABLE [dbo].[ZnodePublishCatalogSearchProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePublishCatalogSearchProfile_ZnodePublishCatalog] FOREIGN KEY ([PublishCatalogId]) REFERENCES [dbo].[ZnodePublishCatalog] ([PublishCatalogId]);


GO
PRINT N'Creating [dbo].[FK_ZnodePublishCatalogSearchProfile_ZnodeSearchProfile]...';


GO
ALTER TABLE [dbo].[ZnodePublishCatalogSearchProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodePublishCatalogSearchProfile_ZnodeSearchProfile] FOREIGN KEY ([SearchProfileId]) REFERENCES [dbo].[ZnodeSearchProfile] ([SearchProfileId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchFeature_ZnodeSearchFeature]...';


GO
ALTER TABLE [dbo].[ZnodeSearchFeature] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchFeature_ZnodeSearchFeature] FOREIGN KEY ([ParentSearchFeatureId]) REFERENCES [dbo].[ZnodeSearchFeature] ([SearchFeatureId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearc hProfile_ZnodeSearchQueryType]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfile] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearc hProfile_ZnodeSearchQueryType] FOREIGN KEY ([SearchQueryTypeId]) REFERENCES [dbo].[ZnodeSearchQueryType] ([SearchQueryTypeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchProfileAttributeMapping_ZnodeSearchProfile]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfileAttributeMapping] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchProfileAttributeMapping_ZnodeSearchProfile] FOREIGN KEY ([SearchProfileId]) REFERENCES [dbo].[ZnodeSearchProfile] ([SearchProfileId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchProfileFeatureMapping_ZnodeSearchFeature]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfileFeatureMapping] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchProfileFeatureMapping_ZnodeSearchFeature] FOREIGN KEY ([SearchFeatureId]) REFERENCES [dbo].[ZnodeSearchFeature] ([SearchFeatureId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchProfileFeatureMapping_ZnodeSearchProfile]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfileFeatureMapping] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchProfileFeatureMapping_ZnodeSearchProfile] FOREIGN KEY ([SearchProfileId]) REFERENCES [dbo].[ZnodeSearchProfile] ([SearchProfileId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchProfileProductMapping_ZnodeSearchProfile]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfileProductMapping] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchProfileProductMapping_ZnodeSearchProfile] FOREIGN KEY ([SearchProfileId]) REFERENCES [dbo].[ZnodeSearchProfile] ([SearchProfileId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchProfileTrigger_ZnodeSearchProfile]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfileTrigger] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchProfileTrigger_ZnodeSearchProfile] FOREIGN KEY ([SearchProfileId]) REFERENCES [dbo].[ZnodeSearchProfile] ([SearchProfileId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchProfileTrigger_ZnodeUserProfile]...';


GO
ALTER TABLE [dbo].[ZnodeSearchProfileTrigger] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchProfileTrigger_ZnodeUserProfile] FOREIGN KEY ([UserProfileId]) REFERENCES [dbo].[ZnodeUserProfile] ([UserProfileID]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchQueryTypeFeature_ZnodeSearchFeature]...';


GO
ALTER TABLE [dbo].[ZnodeSearchQueryTypeFeature] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchQueryTypeFeature_ZnodeSearchFeature] FOREIGN KEY ([SearchFeatureId]) REFERENCES [dbo].[ZnodeSearchFeature] ([SearchFeatureId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeSearchQueryTypeFeature_ZnodeSearchQueryType]...';


GO
ALTER TABLE [dbo].[ZnodeSearchQueryTypeFeature] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeSearchQueryTypeFeature_ZnodeSearchQueryType] FOREIGN KEY ([SearchQueryTypeId]) REFERENCES [dbo].[ZnodeSearchQueryType] ([SearchQueryTypeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeUserGlobalAttributeValue_ZnodeGlobalAttribute]...';


GO
ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeUserGlobalAttributeValue_ZnodeGlobalAttribute] FOREIGN KEY ([GlobalAttributeId]) REFERENCES [dbo].[ZnodeGlobalAttribute] ([GlobalAttributeId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeUserGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue]...';


GO
ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValue] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeUserGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue] FOREIGN KEY ([GlobalAttributeDefaultValueId]) REFERENCES [dbo].[ZnodeGlobalAttributeDefaultValue] ([GlobalAttributeDefaultValueId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeUserGlobalAttributeValueLocale_ZnodeMedia]...';


GO
ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeUserGlobalAttributeValueLocale_ZnodeMedia] FOREIGN KEY ([MediaId]) REFERENCES [dbo].[ZnodeMedia] ([MediaId]);


GO
PRINT N'Creating [dbo].[FK_ZnodeUserGlobalAttributeValueLocale_ZnodeUserGlobalAttributeValue]...';


GO
ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValueLocale] WITH NOCHECK
    ADD CONSTRAINT [FK_ZnodeUserGlobalAttributeValueLocale_ZnodeUserGlobalAttributeValue] FOREIGN KEY ([UserGlobalAttributeValueId]) REFERENCES [dbo].[ZnodeUserGlobalAttributeValue] ([UserGlobalAttributeValueId]);


GO
PRINT N'Creating [dbo].[Trg_ZnodePimDownloadableProductKey]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE TRIGGER [dbo].[Trg_ZnodePimDownloadableProductKey] 
   ON  [dbo].[ZnodePimDownloadableProductKey]
   AFTER INSERT,DELETE
AS 
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	Declare @Quantity int 
	Declare @InsertedQuantity TABLE (SKU Nvarchar(300), Quantity numeric(28,6))
	insert into @InsertedQuantity (SKU , Quantity) 
	Select ZPDP.SKU , count(ID.DownloadableProductKey) from inserted ID 
	Inner join ZnodePimDownloadableProduct ZPDP On 
	ID.PimDownloadableProductId  =  ZPDP.PimDownloadableProductId   GROUP BY ZPDP.SKU 

	Update ZI SET ZI.Quantity = ZI.Quantity  + IQ.Quantity
	from ZnodeInventory ZI Inner join @InsertedQuantity  IQ on ZI.SKU = IQ.SKU
	 
	delete from @InsertedQuantity 
	insert into @InsertedQuantity (SKU , Quantity) 
	Select ZPDP.SKU , count(ID.DownloadableProductKey) from DELETED ID Inner join ZnodePimDownloadableProduct ZPDP On 
	ID.PimDownloadableProductId  =  ZPDP.PimDownloadableProductId   GROUP BY ZPDP.SKU 
	
	Update ZI SET ZI.Quantity = ZI.Quantity  - IQ.Quantity
	from ZnodeInventory ZI Inner join @InsertedQuantity  IQ on ZI.SKU = IQ.SKU 

    -- Insert statements for trigger here

END
GO
PRINT N'Altering [dbo].[Fn_GetDefaultFilter]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date, ,>
-- Description:	<Description, ,>
-- =============================================
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetDefaultFilter')
BEGIN
DROP FUNCTION dbo.Fn_GetDefaultFilter
END
GO
CREATE FUNCTION [dbo].[Fn_GetDefaultFilter]
(
                @LocaleId INT 
			   
)
RETURNS NVARCHAR(MAX)
AS

	-- Summary :- This function isused to find the default value filtre 
	-- Unit Testing 
	-- EXEC [dbo].[Fn_GetDefaultFilter]

     BEGIN
         -- Declare the return variable here
         DECLARE @DefaultValue NVARCHAR(MAX)= '';
		 DECLARE @DefaultLocaleId INT = Dbo.Fn_GetDefaultlocaleId();

       
		  ;With Cte_DefaultProductType AS 
		  (
		  SELECT ZPA.PimAttributeId,  ' <attributecode> = '''+ ZPA.AttributeCode+'''</attributecode> <attributevalue> = '''+ZPADVL.AttributeDefaultValue+''''+'</attributevalue>' AttributeValue ,ZPADVL.LocaleId
			 FROM ZnodePImAttributeDefaultValueLocale ZPADVL 
			 INNER JOIN ZnodePimAttributeDefaultvalue ZPADV ON (ZPADV.PimAttributeDefaultvalueId = ZPADVL.PimAttributeDefaultvalueId) 
			 INNER JOIN ZnodePimAttribute ZPA ON (ZPADV.PimAttributeId = ZPA.PimAttributeId)
			 WHERE ZPA.AttributeCode = 'ProductType'
			 AND AttributeDefaultValueCode = 'SimpleProduct'
			 AND LocaleId IN (@DefaultLocaleId,@LocaleId)
		  )
		  , Cte_GetAttributeValue AS
		  (
		    SELECT PimAttributeId,AttributeValue
			FROM Cte_DefaultProductType CTDPT 
			WHERE CTDPT.LocaleId = @LocaleId
		  )
		  ,Cte_AttributeIds AS 
		  (
		     
			 SELECT * 
			 FROM Cte_GetAttributeValue
			 UNION ALL 
			 SELECT PimAttributeId,AttributeValue
			 FROM Cte_DefaultProductType CTDPT 
			 WHERE CTDPT.LocaleId = @DefaultLocaleId
		     AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_GetAttributeValue CTGAV WHERE CTGAV.PimAttributeId = CTDPT.PimAttributeId )
		  )

		 SELECT TOP 1 @DefaultValue = AttributeValue FROM Cte_AttributeIds

                   
         RETURN @DefaultValue;
     END;
GO
PRINT N'Altering [dbo].[Fn_GetMediaPathServer]...';
GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetMediaPathServer')
BEGIN
DROP FUNCTION dbo.Fn_GetMediaPathServer
END
GO

CREATE FUNCTION [dbo].[Fn_GetMediaPathServer]
(@path VARCHAR(1000)

)
RETURNS VARCHAR(4000)
AS
     BEGIN
         DECLARE @V_MediaServerThumbnailPath VARCHAR(4000);
         DECLARE @V_MediaServerThumbnailPathWithMedia VARCHAR(4000);
         SET @V_MediaServerThumbnailPath =
         (
            select  URL from ZnodeMediaConfiguration ZMC Inner join ZnodeMedia ZM ON ZMC.MediaConfigurationId = ZM.MediaConfigurationId
										  Inner join ZnodeMediaCategory ZMCT ON ZM.MediaId = ZMCT.MediaId
										  Inner join ZnodeMediaPath ZMP ON ZMCT.MediaPathId = ZMP.MediaPathId where ZMC.IsActive=1
										  and ZM.[Path] =  @path 
         );
         --SET @V_MediaServerThumbnailPathWithMedia = SUBSTRING(
         --                                                    (
         --                                                        SELECT ',',
         --                                                               @V_MediaServerThumbnailPath+item
         --                                                        FROM dbo.Split(@path, ',') a
         --                                                        FOR XML PATH('')
         --                                                    ), 2, 4000);
         RETURN CASE
                    WHEN (@V_MediaServerThumbnailPath IS NULL
                         OR RTRIM(LTRIM(@V_MediaServerThumbnailPath)) = '')
                         --OR @V_MediaServerThumbnailPath = @V_MediaServerThumbnailPath
                    THEN '/MediaFolder/no-image.png'
                    ELSE @V_MediaServerThumbnailPath+@path
                END;
		 --RETURN @V_MediaServerThumbnailPath
     END;
GO
PRINT N'Creating [dbo].[Fn_CheckGlobalAttributeTransactionUsed]...';
GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetWhereClauseXML')
BEGIN
DROP FUNCTION dbo.Fn_GetWhereClauseXML
END
GO


GO
CREATE FUNCTION [dbo].[Fn_GetWhereClauseXML]
(
       @WhereClauseXml     XML 
)
RETURNS  @ConvertTableData TABLE (Id INT  IDENTITY(1,1),WhereClause NVARCHAR(1000)  )
AS
  -- This function convert the XML where clause into table rows 
 
     BEGIN
    
	 INSERT INTO @ConvertTableData(WhereClause)
	SELECT   ' AttributeCode '+Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') +' AND AttributeValue '+Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') 
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)


	
	RETURN 
END;

GO
CREATE FUNCTION [dbo].[Fn_CheckGlobalAttributeTransactionUsed]
(
   @CheckType Varchar(1000) 
  ,@Id        int
)
RETURNS bit
AS
BEGIN
	-- Declare the return variable here
   if @CheckType ='GlobalAttribute'
   begin 
		   If exists (select 1 From ZnodePortalGlobalAttributeValue gg where @Id=gg.GlobalAttributeId )
						or    exists (select 1 From ZnodeUserGlobalAttributeValue gg where @Id=gg.GlobalAttributeId )
						or    exists (select 1 From ZnodeAccountGlobalAttributeValue gg where @Id =gg.GlobalAttributeId )
		   Begin
			     RETURN 1
		   End
		   Else
		   Begin
			     RETURN 0
		   End
   End
   Else  if @CheckType ='GlobalAttributeDefaultValue'
   begin 
		   If exists (select 1 From ZnodePortalGlobalAttributeValueLocale gg where @Id=gg.GlobalAttributeDefaultValueId )
						or    exists (select 1 From ZnodeUserGlobalAttributeValueLocale gg where @Id=gg.GlobalAttributeDefaultValueId )
						or    exists (select 1 From ZnodeAccountGlobalAttributeValueLocale gg where @Id =gg.GlobalAttributeDefaultValueId )
		   Begin
			     RETURN 1
		   End
		   Else
		   Begin
			     RETURN 0
		   End
   End


	RETURN 0

END
GO
PRINT N'Creating [dbo].[Fn_GetAttributeIsPublish]...';


GO
CREATE  FUNCTION [dbo].[Fn_GetAttributeIsPublish]()
RETURNS INT
AS
     BEGIN
         -- Declare the return variable here
         DECLARE @ProductTypeAttributeId INT;
         
		 SET @ProductTypeAttributeId = (SELECT TOP 1 PimAttributeId FROM ZnodePimAttribute ZPA WHERE ZPA.AttributeCode = 'PublishStatus' AND ZPA.IsCategory = 0 )

                   
         RETURN @ProductTypeAttributeId;
     END;
GO
PRINT N'Creating [dbo].[Fn_GetIsDownloadableAttributeId]...';


GO


CREATE FUNCTION [dbo].[Fn_GetIsDownloadableAttributeId]()
RETURNS INT
AS
     BEGIN
         -- Declare the return variable here
         DECLARE @ProductTypeAttributeId INT;
         
		 SET @ProductTypeAttributeId = (SELECT TOP 1 PimAttributeId FROM ZnodePimAttribute ZPA WHERE ZPA.AttributeCode = 'IsDownloadable' AND ZPA.IsCategory = 0 )

                   
         RETURN @ProductTypeAttributeId;
     END;
GO
PRINT N'Altering [dbo].[Fn_GetRecurciveCategoryIds]...';
GO
IF EXISTS (SELECT TOP 1  1 FROM sys.Objects WHERE OBJECT_NAME(object_id) = 'Fn_GetRecurciveCategoryIds')
BEGIN
DROP FUNCTION dbo.Fn_GetRecurciveCategoryIds
END
GO

CREATE FUNCTION [dbo].[Fn_GetRecurciveCategoryIds]
(
       @PimCategoryId      VARCHAR(2000) 
	   ,@PimCatalogId	   INT 
)
RETURNS  @ConvertTableData TABLE (PimCategoryId INT ,ParentPimCategoryId INT  )
AS
	-- Summary :- This function is used to get the category id recursive 
	-- Unit Testing 
	-- EXEC [dbo].[Znode_SplitWhereClause] '',2
     BEGIN
        
		DECLARE @TBL_PimCategoryId TABLE (PimCategoryId INT )

		INSERT INTO @TBL_PimCategoryId (PimcategoryId )
		SELECT Item FROM dbo.Split(@PimCategoryId,',') SP 

		IF @PimCategoryId = '' 
		BEGIN 
		   INSERT INTO @ConvertTableData
	       SELECT PimCategoryId ,PimParentCategoryId 
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   WHERE PimCatalogId = @PimCatalogId
		END 
		ELSE 
		BEGIN 
	   ;With Cte_RecursiveAccountId AS
	    (
	       SELECT PimCategoryId ,PimParentCategoryId 
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PimCategoryId TBPC WHERE  ZPCH.PimParentCategoryId = TBPC.PimcategoryId OR ZPCH.PimCategoryId = TBPC.PimCategoryId OR @PimCategoryId = '')
		   AND (ZPCH.PimCatalogId = @PimCatalogId)
		   UNION ALL 
		   SELECT ZPCH.PimCategoryId ,ZPCH.PimParentCategoryId 
		   FROM ZnodePimCategoryHierarchy   ZPCH 
		   INNER JOIN Cte_RecursiveAccountId CTRA ON (CTRA.PimCategoryId = ZPCH.PimParentCategoryId )
	      WHERE  (ZPCH.PimCatalogId = @PimCatalogId)
		  )
  	   INSERT INTO @ConvertTableData
	   SELECT DISTINCT * 
	   FROM Cte_RecursiveAccountId
	   
	   END 
	     
     
		 RETURN 
     END;
GO
PRINT N'Refreshing [dbo].[View_GetAssociatedPortalToShipping]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[View_GetAssociatedPortalToShipping]';


GO
PRINT N'Creating [dbo].[View_insertCommandTableWithIdentity]...';


GO

CREATE view [dbo].[View_insertCommandTableWithIdentity] as 
select table_name=name,'Select  '+prefix+' ( '+substring(body1,1,len(body1)-1)+' ) values( '+substring(body2,1,len(body2)-1)+' ) SET IDENTITY_INSERT [dbo].['+ CAST( name AS nvarchar) +'] OFF '+postfix  Query
from (select db_name() as database_name
			,sysobjects.name
			,table_id = sysobjects.id,
			'''  SET IDENTITY_INSERT [dbo].['+ CAST( sysobjects.name AS nvarchar) +'] ON
            insert into '+ CAST( sysobjects.name AS nvarchar)   prefix,
			(SELECT DISTINCT STUFF((SELECT '['+ (CAST(syscolumns.name AS nvarchar)  +'],') 
									FROM syscolumns inner join systypes on syscolumns.xtype = systypes.xtype
									where systypes.name<>'sysname'
									and  sysobjects.id = syscolumns.id
									ORDER BY syscolumns.colid  FOR XML PATH('')),1,0,'')
			)body1,
		   (SELECT DISTINCT STUFF((SELECT ( case when systypes.name='int' then   ' ''+isnull(convert(nvarchar(max),['+CAST( syscolumns.name  AS nvarchar) +']),''null'')+'''
									else  '''+ case when convert(nvarchar(max),['+CAST( syscolumns.name  AS nvarchar) +']) is null then ''null'' else '''''''' + REPLACE(convert(nvarchar(max),['+CAST( syscolumns.name  AS nvarchar) +'] ),char(39),char(39)+char(39))+'''''' '' end +'''
									end +',' ) 
									FROM syscolumns inner join systypes on syscolumns.xtype = systypes.xtype
									where systypes.name<>'sysname'
									and  sysobjects.id = syscolumns.id
									ORDER BY syscolumns.colid  FOR XML PATH('')),1,0,'')
			) body2,
			'''  from '+ CAST( sysobjects.name AS nvarchar) postfix 
from sysobjects 
where sysobjects.xtype = 'U' )  da
GO
PRINT N'Creating [dbo].[View_PimProductTextAreaValue]...';


GO
CREATE View View_PimProductTextAreaValue 
With SchemaBinding 
AS
SELECT PimProductId ,AttributeCode , ZPAVL.AttributeValue ,ZPAVL.LocaleId
FROM dbo.ZnodePimAttribute ZPA
INNER JOIN dbo.ZnodePimAttributeValue ZPAV ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
INNER JOIN dbo.ZnodePimProductAttributeTextAreaValue ZPAVL ON (ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
INNER JOIN dbo.ZnodeAttributeType ZTA ON (ZTA.AttributeTypeId = ZPA.AttributeTypeId)
WHERE ZPA.IsCategory =0 
AND IsShowOnGrid =1 
AND AttributeTypeName IN ('Text Area')
GO
PRINT N'Creating [dbo].[View_PimProducttextValue]...';


GO
CREATE View View_PimProducttextValue 
With SchemaBinding 
AS
SELECT PimProductId ,AttributeCode , ZPAVL.AttributeValue ,ZPAVL.LocaleId
FROM dbo.ZnodePimAttribute ZPA
INNER JOIN dbo.ZnodePimAttributeValue ZPAV ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
INNER JOIN dbo.ZnodePimAttributeValueLocale ZPAVL ON (ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
INNER JOIN dbo.ZnodeAttributeType ZTA ON (ZTA.AttributeTypeId = ZPA.AttributeTypeId)
WHERE ZPA.IsCategory =0 
AND IsShowOnGrid =1 
AND AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
GO
PRINT N'Creating [dbo].[View_ProductAttributeValue]...';


GO
CREATE View View_ProductAttributeValue
WITH SCHEMABINDING
AS 
SELECT PimProductId ,CASE WHEN IsProductPublish = 1 THEN   'Published' 
				WHEN IsProductPublish = 0 THEN 'Draft'  
				ELSE 'Not Published' END PublishStatus,ZPFL.AttributeFamilyName AttributeFamily, ZPFL.LocaleId 
FROM dbo.ZnodePimProduct ZPP 
INNER JOIN dbo.ZnodePimAttributeFamily ZPAF ON (ZPAF.PimAttributeFamilyId = ZPP.PimAttributeFamilyId)
INNER JOIN dbo.ZnodePimFamilyLocale ZPFL ON (ZPAF.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId)
GO
PRINT N'Creating [dbo].[View_TextAreaAttributeValue]...';


GO
CREATE View View_TextAreaAttributeValue 
WITH SCHEMABINDING
AS 
with Cte_DataWork 
AS
(
  SELECT ZPAV.PimProductId , ZPA.AttributeCode , ZPAVL.AttributeValue,ZPAVL.LocaleId
  FROM dbo.ZnodePimAttribute ZPA 
  INNER JOIN dbo.ZnodePimAttributeValue ZPAV ON (ZPA.PimAttributeId =ZPAV.PimAttributeId   )
  INNER JOIN dbo.ZnodePimProductAttributeTextAreaValue ZPAVL ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId)
  WHERE ZPA.AttributeCode IN ('') 
)
SELECT PimProductId
FROM Cte_DataWork A 
PIVOT (
max(AttributeValue) FOR AttributeCode IN ( [a] )
) PIV
GO
PRINT N'Creating [dbo].[View_TextAttributeValue]...';


GO

CREATE  VIEW View_TextAttributeValue
WITH SCHEMABINDING
AS 
with Cte_DataWork 
AS
(
  SELECT ZPAV.PimProductId , ZPA.AttributeCode , ZPAVL.AttributeValue,ZPAVL.LocaleId
  FROM dbo.ZnodePimAttribute ZPA 
  INNER JOIN dbo.ZnodePimAttributeValue ZPAV ON (ZPA.PimAttributeId =ZPAV.PimAttributeId   )
  INNER JOIN dbo.ZnodePimAttributeValueLocale ZPAVL ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId)
  WHERE ZPA.AttributeCode IN ('ProductName' ,'SKU' ,'ProductCode','Weight') 
)
SELECT PimProductId,[ProductName],[SKU] ,[ProductCode],[Weight],[LocaleId]
FROM Cte_DataWork A 
PIVOT (
max(AttributeValue) FOR AttributeCode IN ([ProductName] ,[SKU],[ProductCode],[Weight] )
) PIV
GO
PRINT N'Creating [dbo].[View_ZnodeGlobalAttribute]...';


GO


CREATE View [dbo].[View_ZnodeGlobalAttribute] As
SELECT zga.AttributeTypeId,
Case When AttributeTypeName IN ('File','Image','Audio','Video') then 
'Media'
when AttributeTypeName IN ('Simple Select','Multi Select') then
'Select'
when ZAY.AttributeTypeName IN ('Text Area')  then
'TextArea' 
else 'Input'
end GroupAttributeType,GlobalAttributeId ,AttributeCode ,AttributeTypeName,
zga.IsRequired,zga.IsLocalizable,zga.IsActive,zga.DisplayOrder
FROM ZnodeGlobalAttribute zga 
INNER JOIN ZnodeAttributeType ZAY ON (ZAY.AttributeTypeId = zga.AttributeTypeId )
GO
PRINT N'Altering [dbo].[Znode_ImportCustomerAddress]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportCustomerAddress')
BEGIN 
	DROP PROCEDURE Znode_ImportCustomerAddress
END 
GO 
CREATE PROCEDURE [dbo].[Znode_ImportCustomerAddress](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @LocaleId int= 0,@PortalId int ,@CsvColumnString nvarchar(max))
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import SEO Details
	
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max),@IsAllowGlobalLevelUserCreation nvarchar(10)

		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive Value from global setting 
		Select @IsAllowGlobalLevelUserCreation = FeatureValues from ZnodeGlobalsetting where FeatureName = 'AllowGlobalLevelUserCreation'
		-- Three type of import required three table varible for product , category and brand

		DECLARE @InsertCustomerAddress TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int,UserName	nvarchar(512)
			,FirstName	varchar	(300),LastName	varchar	(300),DisplayName	nvarchar(1200),Address1	varchar	(300),Address2	varchar	(300)
			,CountryName	varchar	(3000),StateName	varchar	(3000),CityName	varchar	(3000),PostalCode	varchar	(50)
			,PhoneNumber	varchar	(50),
			--Mobilenumber	varchar(50),AlternateMobileNumber	varchar(50),FaxNumber	varchar(30),
			IsDefaultBilling	bit 
			,IsDefaultShipping	bit	,IsActive	bit	,ExternalId	nvarchar(2000),CompanyName nvarchar(2000), GUID NVARCHAR(400)
		);
		
		--SET @SSQL = 'SELECT RowNumber,UserName,FirstName,LastName,MiddleName,BudgetAmount,Email,PhoneNumber,EmailOptIn,IsActive,ExternalId,GUID FROM '+ @TableName;
		SET @SSQL = 'SELECT RowNumber,' + @CsvColumnString + ',GUID FROM '+ @TableName;
		INSERT INTO @InsertCustomerAddress( RowNumber,UserName,FirstName,LastName,DisplayName,Address1,Address2,CountryName,
											StateName,CityName,PostalCode,PhoneNumber,
											IsDefaultBilling,IsActive,IsDefaultShipping,ExternalId,CompanyName,GUID )
		EXEC sys.sp_sqlexec @SSQL;

	
		-- start Functional Validation 

		-----------------------------------------------
		If @IsAllowGlobalLevelUserCreation = 'true'
				INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '19', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomerAddress AS ii
					   WHERE ii.UserName NOT IN 
					   (
						   SELECT UserName FROM AspNetZnodeUser   where PortalId = @PortalId
					   );
		Else 
				INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '19', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomerAddress AS ii
					   WHERE ii.UserName NOT IN 
					   (
						   SELECT UserName FROM AspNetZnodeUser   
					   );
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '35', 'IsDefaultBilling', IsDefaultBilling, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomerAddress IC where  exists (
		SElect TOP 1 1  from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
		INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
		INNER JOIN ZnodeUserAddress ZUA ON ZUA.UserId = ZU.UserId
		INNER JOIN ZnodeAddress ZA ON ZUA.AddressId = ZA.AddressId
		where ANZU.UserName = IC.UserName AND ZA.IsDefaultBilling =IC.IsDefaultBilling 
		AND ZA.IsDefaultShipping =IC.IsDefaultShipping )
			
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '35', 'IsDefaultBilling', IsDefaultBilling, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomerAddress IC WHERE IsDefaultBilling = 0 AND IsDefaultShipping = 0 
				--INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
				--	   SELECT '35', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
				--	   FROM @InsertCustomer AS ii
				--	   WHERE ii.UserName not like '%_@_%_.__%' 
		 
		--Note : Content page import is not required 
		
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  

		DELETE FROM @InsertCustomerAddress
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM @InsertCustomerAddress
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End


		-- Insert Product Data 
				
				DECLARE @InsertedUserAddress TABLE (AddressId  nvarchar(256), UserId nvarchar(max)) 
		-- Pending for discussion include one identity column for modify address
				
				--UPDATE ANU SET 
				--ANU.PhoneNumber	= IC.PhoneNumber
				--from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				--INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				--INNER JOIN @InsertCustomerAddress IC ON ANZU.UserName = IC.UserName 
				--INNER JOIN ZnodeUserAddress ZUA ON ZUA.UserId = ZU.UserId
				--INNER JOIN ZnodeAddress ZA ON ZUA.AddressId = ZA.AddressId
				 
				--where Isnull(ANZU.PortalId,0) = Isnull(@PortalId ,0)

				Insert into ZnodeAddress (FirstName,LastName,DisplayName,Address1,Address2,Address3,CountryName,
											StateName,CityName,PostalCode,PhoneNumber,
											IsDefaultBilling,IsDefaultShipping,IsActive,ExternalId,CompanyName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)		
				OUTPUT INSERTED.AddressId, INSERTED.Address3 INTO  @InsertedUserAddress (AddressId, UserId ) 			 
				SELECT IC.FirstName,IC.LastName,IC.DisplayName,IC.Address1,IC.Address2,convert(nvarchar(100),ZU.UserId),IC.CountryName,
				IC.StateName,IC.CityName,IC.PostalCode,IC.PhoneNumber,
				isnull(IC.IsDefaultBilling,0),isnull(IC.IsDefaultShipping,0),isnull(IC.IsActive,0),IC.ExternalId,IC.CompanyName, @UserId , @GetDate, @UserId , @GetDate
				FROM AspNetZnodeUser ANZU 
				INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN @InsertCustomerAddress IC ON ANZU.UserName = IC.UserName 

			    insert into ZnodeUserAddress(UserId,AddressId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
				select cast( UserId as int ) , Addressid , @UserId , @GetDate, @UserId , @GetDate from  @InsertedUserAddress
	
				UPDATE ZA SET ZA.Address3 = null 
				From ZnodeAddress ZA INNER JOIN @InsertedUserAddress IUA ON ZA.AddressId = IUA.AddressId 

		-- 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_DeletePortalByPortalId]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_DeletePortalByPortalId')
BEGIN 
	DROP PROCEDURE Znode_DeletePortalByPortalId
END 
GO 

CREATE  PROCEDURE [dbo].[Znode_DeletePortalByPortalId]
(
	 @PortalId	varchar(2000)
	,@Status	bit OUT)
AS
	/*
	 Summary : This Procedure Is Used to delete the all records of portal if order is not place against portal  
	 --Unit Testing   
	 BEGIN TRANSACTION 
	 DECLARE @Status    BIT = 0
	 EXEC Znode_DeletePortalByPortalId @PortalId = 36, @Status   = @Status   OUT
	 SELECT @Status   
	 ROLLBACK TRANSACTION
	*/
BEGIN
	BEGIN TRAN DeletePortalByPortalId;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @TBL_PortalIds TABLE
		( 
								 PortalId int
		);
		DECLARE @TBL_Promotion TABLE
		( 
								 PromotionId int
		);
		DECLARE @TBL_DeletedUsers TABLE (AspNetUserId NVARCHAR(1000))

		DECLARE @DeletedIds varchar(max)= '';
		-- inserting PortalIds which are not present in Order and Quote

		INSERT INTO @TBL_PortalIds 
		SELECT Item FROM dbo.Split( @PortalId, ',' ) AS SP 
		WHERE NOT EXISTS ( SELECT TOP 1 1 FROM ZnodeOmsOrderDetails AS ZOD WHERE ZOD.PortalId = Sp.Item) 
		AND  NOT EXISTS (SELECT TOP 1 1 FROM ZnodeOmsQuote AS ZOQ WHERE ZOQ.PortalId = Sp.Item );


	     DELETE FROM  ZnodeCustomPortalDetail  WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCustomPortalDetail.PortalId);
	     DELETE FROM  ZnodeSupplier WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeSupplier.PortalId)

	     DELETE FROM  ZnodeOmsTemplateLineItem  WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodeOmsTemplate ZOT ON 
	     TBP.PortalId = ZOT.PortalId AND ZOT.OmsTemplateId = ZnodeOmsTemplateLineItem.OmsTemplateId);

	     DELETE FROM ZnodeOmsTemplate WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeOmsTemplate.PortalId);
	     DELETE FROM  ZnodeOmsUsersReferralUrl WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeOmsUsersReferralUrl.PortalId)

		DELETE FROM ZnodePortalShipping WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalShipping.PortalId);
		DELETE FROM ZnodePortalTaxClass WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalTaxClass.PortalId);
		DELETE FROM ZnodePortalPaymentSetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalPaymentSetting.PortalId);
		DELETE FROM ZnodeCMSPortalMessageKeyTag WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalMessageKeyTag.PortalId);
		DELETE FROM ZnodePortalProfile WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalProfile.PortalId);
		DELETE FROM ZnodePortalFeatureMapper WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalFeatureMapper.PortalId);
		DELETE FROM ZnodePortalShippingDetails WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalShippingDetails.PortalId);
		DELETE FROM ZnodePortalUnit WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalUnit.PortalId);
		DELETE FROM ZnodeDomain WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeDomain.PortalId);
		DELETE FROM ZnodePortalSmtpSetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalSmtpSetting.PortalId);
		DELETE FROM ZnodeActivityLog WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeActivityLog.PortalId);
		DELETE FROM ZnodePortalCatalog WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalCatalog.PortalId );
		DELETE FROM ZnodeCMSPortalMessage  WHERE EXISTS  ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalMessage.PortalId );
		--DELETE FROM ZnodeTaxRule WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeTaxRule.PortalId);
		DELETE FROM ZnodeGoogleTagManager WHERE  EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeGoogleTagManager.PortalId);
		DELETE FROM ZnodeTaxRuleTypes WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeTaxRuleTypes.PortalId);
		DELETE FROM ZnodeCMSContentPagesProfile WHERE EXISTS (SELECT TOP 1 1 FROM  ZnodeCMSContentPages ZCCP  
																	WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZCCP.PortalId) AND ZCCP.CMSContentPagesId = ZnodeCMSContentPagesProfile.CMSContentPagesId )
		DELETE FROM ZnodeCMSContentPageGroupMapping WHERE EXISTS (SELECT TOP 1 1 FROM  ZnodeCMSContentPages ZCCP  
																	WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZCCP.PortalId) AND ZCCP.CMSContentPagesId = ZnodeCMSContentPageGroupMapping.CMSContentPagesId )
	     DELETE FROM ZnodeCMSContentPagesLocale WHERE EXISTS (SELECT TOP 1 1 FROM  ZnodeCMSContentPages ZCCP  
																	WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZCCP.PortalId) AND ZCCP.CMSContentPagesId = ZnodeCMSContentPagesLocale.CMSContentPagesId )
		DELETE FROM ZnodeCMSContentPages WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSContentPages.PortalId);
		DELETE FROM ZnodeCaseRequest WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCaseRequest.PortalId);
		DELETE FROM ZnodePortalLocale WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalLocale.PortalId);
		DELETE FROM ZnodeShippingPortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeShippingPortal.PortalId);
		DELETE FROM ZnodePortalDisplaySetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalDisplaySetting.PortalId);
		DELETE FROM ZnodeUserPortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeUserPortal.PortalId);
		DELETE FROM AspNetZnodeUser OUTPUT DELETED.AspNetZnodeUserId   INTO @TBL_DeletedUsers WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = AspNetZnodeUser.PortalId )
		
		DELETE FROM ZnodePortalAlternateWarehouse WHERE EXISTS ( SELECT TOP 1 1 FROM ZnodePortalWareHouse AS ZPWH WHERE EXISTS (
				SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZPWH.PortalId ) AND  ZPWH.PortalWarehouseId = ZnodePortalAlternateWarehouse.PortalWarehouseId);
		DELETE FROM ZnodePortalWareHouse WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalWareHouse.PortalId);
		DELETE ZnodePriceListPortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePriceListPortal.PortalId );
		
		DELETE FROM ZnodeEmailTemplateMapper WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeEmailTemplateMapper.PortalId);
		DELETE FROM ZnodeGiftCard WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeGiftCard.PortalId );
		DELETE FROM ZnodeCMSPortalProductPage WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalProductPage.PortalId);

		DELETE FROM ZnodeCMSPortalSEOSetting WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalSEOSetting.PortalId);

		DELETE FROM ZnodeCMSPortalTheme WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSPortalTheme.PortalId);

		DELETE FROM ZnodeCMSSEODetailLocale WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodeCMSSEODetail AS zcsd ON TBP.PortalId = zcsd.PortalId WHERE zcsd.CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId);

		DELETE FROM ZnodeCMSSEODetail WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSSEODetail.PortalId);
		DELETE FROM ZnodePortalAccount WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalAccount.PortalId);

		DELETE FROM ZnodePortalAddress WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalAddress.PortalId);

		DELETE FROM ZnodeOmsCookieMapping WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeOmsCookieMapping.PortalId);

		DELETE FROM ZnodePortalCountry WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalCountry.PortalId);

		DELETE FROM ZnodeCMSUrlRedirect WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeCMSUrlRedirect.PortalId);
		   
		/* Remove Search index */
		--DELETE FROM ZnodeSearchIndexServerStatus WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodePortalIndex AS zpi ON TBP.PortalId = zpi.PortalId
		--		 INNER JOIN ZnodeSearchIndexMonitor AS zsim ON zpi.PortalIndexId = zsim.PortalIndexId WHERE zsim.SearchIndexMonitorId = ZnodeSearchIndexServerStatus.SearchIndexMonitorId);
		--DELETE FROM ZnodeSearchIndexMonitor WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP INNER JOIN ZnodePortalIndex AS zpi ON TBP.PortalId = zpi.PortalId WHERE zpi.PortalIndexId = ZnodeSearchIndexMonitor.PortalIndexId );
		--DELETE FROM ZnodePortalIndex WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortalIndex.PortalId);
		/* Remove Search index */
		DELETE FROM ZnodePromotion WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePromotion.PortalId);
		DELETE FROM ZnodeTaxPortaL  WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeTaxPortaL.PortalId);

		INSERT INTO @TBL_Promotion( PromotionId ) SELECT PromotionId FROM ZnodePromotion WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePromotion.PortalId);
		DELETE FROM ZnodePromotionProduct WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotionProduct.PromotionId);

		DELETE FROM ZnodePromotionCategory WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotionCategory.PromotionId);
		DELETE FROM ZnodePromotionCatalogs WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotionCatalogs.PromotionId);
		DELETE FROM ZnodePromotion WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_Promotion AS TBP WHERE TBP.PromotionId = ZnodePromotion.PromotionId);

		
		DELETE FROM ZnodeBlogNewsLocale where exists (select top 1 1 from ZnodeBlogNews ZBN
													where EXISTS (SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZBN.PortalId) AND ZBN.BlogNewsId = ZnodeBlogNewsLocale.BlogNewsId )



		DELETE FROM ZnodeBlogNewsCommentLocale where exists (select top 1 1 from ZnodeBlogNewsComment ZBC
													where exists (select top 1 1 from ZnodeBlogNews ZBN
														where exists (select top 1 1 from @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZBN.PortalId) AND ZBN.BlogNewsId = ZBC.BlogNewsId ) and ZBC.BlogNewsCommentId = ZnodeBlogNewsCommentLocale.BlogNewsCommentId)
													



		DELETE FROM ZnodeBlogNewsComment WHERE EXISTS (SELECT TOP 1 1 FROM ZnodeBlogNews ZBN
													WHERE EXISTS (select top 1 1 from @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZBN.PortalId) AND ZBN.BlogNewsId = ZnodeBlogNewsComment.BlogNewsId )



		DELETE FROM ZnodeBlogNews WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodeBlogNews.PortalId)

		DELETE FROM ZnodePortal WHERE EXISTS ( SELECT TOP 1 1 FROM @TBL_PortalIds AS TBP WHERE TBP.PortalId = ZnodePortal.PortalId);

		IF (SELECT Count(1) FROM @TBL_PortalIds) = (SELECT Count(1) FROM dbo.Split( @PortalId, ',' ) )
		BEGIN 
		SELECT 1 AS ID, CAST(1 AS bit) AS Status;
		SET @Status = 1;
		END 
		ELSE 
		BEGIN 
		SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		SET @Status = 0;

		END 
		COMMIT TRAN DeletePortalByPortalId;
	END TRY
	BEGIN CATCH
		 
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_DeletePortalByPortalId @PortalId = '+@PortalId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		     ROLLBACK TRAN DeletePortalByPortalId;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_DeletePortalByPortalId',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
	END CATCH;
END;


--GO

----Select * from ZnodeCMSPortalMessageKeyTag
 --Declare @Status Bit
	--Exec Znode_DeletePortalByPortalId @PortalId = 1 ,@Status =@Status 

--		select * from dbo.ZnodeCMSPortalMessageKeyTag

--		Msg 547, Level 16, State 0, Procedure Znode_DeletePortalByPortalId, Line 254
--The DELETE statement conflicted with the REFERENCE constraint "FK_ZnodeCMSPortalMessageKeyTag_ZnodePortal". The conflict occurred in database "Installer_01_08_2017_QA_03_05_2017", table "dbo.ZnodeCMSPortalMessageKeyTag", column 'PortalId'.

--Select * from Sysobjects where id in (select id from syscolumns where name  = 'OmsUsersReferralUrlId')
--Select * from ZnodePortal
--Select * from ZnodePortalTaxClass
GO
PRINT N'Altering [dbo].[Znode_GetPimCatalogAssociatedCategory]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPimCatalogAssociatedCategory')
BEGIN 
	DROP PROCEDURE Znode_GetPimCatalogAssociatedCategory
END 
GO 
CREATE PROCEDURE [dbo].[Znode_GetPimCatalogAssociatedCategory]
(	@WhereClause      XML,
	@Rows             INT           = 100,
	@PageNo           INT           = 1,
	@Order_BY         VARCHAR(1000) = '',
	@RowsCount        INT OUT,
	@LocaleId         INT           = 1,
	@PimCatalogId     INT           = 0,
	@IsAssociated     BIT           = 0,
	@ProfileCatalogId INT           = 0,
	@PimCategoryId    INT           = -1)
AS
/*
     Summary :- This procedure is used to get the attribute values as per changes 
     Unit Testing 
	 begin tran
     EXEC [dbo].[Znode_GetPimCatalogAssociatedCategory_new] @WhereClause = '',@RowsCount = 0 ,@PimCatalogId = 4 ,@ProfileCatalogId= 0,@IsAssociated = 1,@PimCategoryId = 0
     rollback tran
	 SELECT * FROM ZnodePimCategoryHierarchy
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @TBL_PimcategoryDetails TABLE
             (PimCategoryId INT,
              CountId       INT,
              RowId         INT
             );
             DECLARE @TBL_CategoryIds TABLE
             (PimCategoryId       INT,
              ParentPimcategoryId INT
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             DECLARE @TBL_FamilyDetails TABLE
             (PimCategoryId        INT,
              PimAttributeFamilyId INT,
              AttributeFamilyName  NVARCHAR(MAX)
             );
             DECLARE @TBL_DefaultAttributeValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(600),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder             INT 
             );
             DECLARE @TBL_ProfileCatalogCategory TABLE
             (ProfileCatalogId       INT,
              PimCategoryHierarchyId INT,
              PimCategoryId          INT,
              PimParentCategoryId    INT
             );
             DECLARE @PimCategoryIds VARCHAR(MAX), @PimAttributeIds VARCHAR(MAX);
             IF @ProfileCatalogId > 0
                 BEGIN
						INSERT INTO @TBL_ProfileCatalogCategory(ProfileCatalogId,PimCategoryHierarchyId,PimCategoryId,PimParentCategoryId)
						SELECT ZPCC.ProfileCatalogId,ZPCC.PimCategoryHierarchyId,PimCategoryId,PimParentCategoryId
						FROM ZnodePimCategoryHierarchy AS ZCC
						INNER JOIN ZnodeProfileCategoryHierarchy AS ZPCC ON(ZPCC.PimCategoryHierarchyId = ZCC.PimCategoryHierarchyId)
						WHERE ZPCC.ProfileCatalogId = @ProfileCatalogId AND (ZCC.PimParentCategoryId = @PimCategoryId OR @PimCategoryId = -1);								
									
                     IF @IsAssociated = 1
                     BEGIN
						INSERT INTO @TBL_CategoryIds(PimCategoryId,ParentPimcategoryId)
						SELECT PimCategoryId, ParentPimcategoryId  FROM [dbo].[Fn_GetRecurciveCategoryIds]('', @PimCatalogId) AS FNGTRCT                                      							
						WHERE EXISTS
						(SELECT TOP 1 1 FROM @TBL_ProfileCatalogCategory AS TBPCC WHERE TBPCC.PimCategoryId = FNGTRCT.PimCategoryId OR TBPCC.PimParentCategoryId = FNGTRCT.ParentPimcategoryId);
																																								
                     END;
                     ELSE
					 BEGIN
						INSERT INTO @TBL_CategoryIds(PimCategoryId, ParentPimcategoryId)                                                                                    
						SELECT PimCategoryId,ParentPimcategoryId  FROM [dbo].[Fn_GetRecurciveCategoryIds]('', @PimCatalogId) AS FNGTRCT
						WHERE NOT EXISTS(SELECT TOP 1 1 FROM @TBL_ProfileCatalogCategory AS TBPCC WHERE TBPCC.PimCategoryId = FNGTRCT.PimCategoryId                
						AND ISNULL(TBPCC.PimParentCategoryId, 0) = ISNULL(FNGTRCT.ParentPimcategoryId, 0) ) AND (ISNULL(FNGTRCT.ParentPimcategoryId, 0) = @PimCategoryId
						OR @PimCategoryId = -1);           
                                                                                                                                                                                                                                                                                                                                 
					 IF @PimCategoryId = -1
						BEGIN
						DELETE FROM @TBL_CategoryIds  WHERE PimCategoryId IN (SELECT PimCategoryId FROM @TBL_CategoryIds WHERE ParentPimcategoryId IS NOT NULL );                                                                                                                                                                                                                                     
						END;
					 SET @IsAssociated = 1;
					 END;
                   
                     IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CategoryIds)                                                                                           
                        BEGIN
                        INSERT INTO @TBL_CategoryIds(PimCategoryId,ParentPimcategoryId)
                        SELECT -1,0;                                                                                                                                        
                        END;
                 END;
					 ELSE
						BEGIN
						INSERT INTO @TBL_CategoryIds(PimCategoryId,ParentPimcategoryId )
						SELECT PimCategoryId,ParentPimcategoryId 
						FROM [dbo].[Fn_GetRecurciveCategoryIds](@PimCategoryIds, @PimCatalogId) AS FNGTRCT; 
						
						 SET @IsAssociated = 0                                                                                                                               
						
						END;
						
						SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(100)) 
						FROM @TBL_CategoryIds  FOR XML PATH('') ), 2, 4000);
                   
                        INSERT INTO @TBL_PimcategoryDetails(PimCategoryId, CountId,RowId  )                      
                        EXEC Znode_GetCategoryIdForPaging @WhereClause,@Rows,@PageNo,@Order_BY,@RowsCount,@LocaleId,'',@PimCategoryIds,@IsAssociated;
						
						SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM @TBL_PimcategoryDetails), 0);
																																														
						SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(100)) FROM @TBL_PimcategoryDetails FOR XML PATH('') ), 2, 4000);
																																																																				
						SET @PimAttributeIds = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(100)) FROM [dbo].[Fn_GetCategoryGridAttributeDetails]()
											   FOR XML PATH('')	), 2, 4000);	
						DECLARE @TBL_MediaAttribute TABLE (Id INT ,PimAttributeId INT ,AttributeCode VARCHAR(600) )

						 INSERT INTO @TBL_MediaAttribute (Id,PimAttributeId,AttributeCode )
						 SELECT Id,PimAttributeId,AttributeCode 
						 FROM [dbo].[Fn_GetProductMediaAttributeId]()
																																																															
						INSERT INTO @TBL_AttributeValue(PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
						EXEC [dbo].[Znode_GetCategoryAttributeValue]@PimCategoryIds,@PimAttributeIds,@LocaleId;

						INSERT INTO @TBL_FamilyDetails(PimAttributeFamilyId,AttributeFamilyName,PimCategoryId)
						EXEC Znode_GetCategoryFamilyDetails @PimCategoryIds,@LocaleId;
							
							
						INSERT INTO @TBL_DefaultAttributeValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder )
						EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @PimAttributeIds,@LocaleId;
						
						INSERT INTO @TBL_AttributeValue ( PimCategoryId , CategoryValue , AttributeCode )

						SELECT PimCategoryId,AttributeFamilyName , 'AttributeFamily'
						FROM @TBL_FamilyDetails 		

						UPDATE  TBAV
						SET CategoryValue  = SUBSTRING ((SELECT ','+[dbo].FN_GetMediaThumbnailMediaPath(zm.Path) FROM ZnodeMedia ZM  WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split(TBAV.CategoryValue ,',') SP  WHERE SP.Item = CAST(ZM.MediaId AS VARCHAR(50)) ) FOR XML PATH('')),2,4000)
						FROM @TBL_AttributeValue TBAV 
						INNER JOIN @TBL_MediaAttribute TBMA ON (TBMA.PimAttributeId = TBAV.PimAttributeId)	

						DECLARE @CategoryXML XML 

						SET @CategoryXML =  '<MainCategory>'+ STUFF( ( SELECT '<Category>'+'<PimCategoryId>'+CAST(TBAD.PimCategoryId AS VARCHAR(50))+'</PimCategoryId>'+ STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST((SELECT ''+TBADI.CategoryValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
						 									 FROM @TBL_AttributeValue TBADI      
															 WHERE TBADI.PimCategoryId = TBAD.PimCategoryId 
															 ORDER BY TBADI.PimCategoryId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Category>'	   

			FROM @TBL_AttributeValue TBAD
			INNER JOIN @TBL_PimcategoryDetails TBPI ON (TBAD.PimCategoryId = TBPI.PimCategoryId )
			GROUP BY TBAD.PimCategoryId,TBPI.RowId 
			ORDER BY TBPI.RowId 
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainCategory>'


			SELECT  @CategoryXML  CategoryXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1 
			 AND IsCategory = 1  
			 AND ZPA.IsShowOnGrid = 1  

		    SELECT ISNULL(@RowsCount,0) AS RowsCount;
						
						
						
						
						
						--WITH Cte_DefaultCategoryValue	
						--AS (SELECT PimCategoryId,PimAttributeId,
						--	SUBSTRING((SELECT ','+AttributeDefaultValue FROM @TBL_DefaultAttributeValue AS TBDAV WHERE TBDAV.PimAttributeId = TBAV.PimAttributeId
						--	AND EXISTS(SELECT TOP 1 1 FROM dbo.Split(TBAV.CategoryValue, ',') AS SP WHERE sp.Item = TBDAV.AttributeDefaultValueCode)
						--	FOR XML PATH('')), 2, 4000) AS AttributeValue FROM @TBL_AttributeValue AS TBAV
						--	WHERE EXISTS(SELECT TOP 1 1	FROM [dbo].[Fn_GetCategoryDefaultValueAttribute]() AS SP WHERE SP.PimAttributeId = TBAV.PimAttributeId))
																																																			
						--UPDATE TBAV SET TBAV.CategoryValue = CTDCV.AttributeValue FROM @TBL_AttributeValue TBAV
						--INNER JOIN Cte_DefaultCategoryValue CTDCV ON(CTDCV.PimCategoryId = TBAV.PimCategoryId AND CTDCV.PimAttributeId = TBAV.PimAttributeId);
																																										
						--SELECT TBCD.PimCategoryId,Piv.CategoryName,ZPC.IsActive AS [Status],dbo.FN_GetMediaThumbnailMediaPath(Zm.Path) AS CategoryImage,
						--ISNULL(TBFD.AttributeFamilyName, '') AS AttributeFamilyName FROM @TBL_PimcategoryDetails AS TBCD
						--INNER JOIN(SELECT PimCategoryId,CategoryValue,AttributeCode FROM @TBL_AttributeValue)
					 --   AS TBAV PIVOT(MAX(CategoryValue) FOR AttributeCode IN([CategoryName],[CategoryImage])) PIV ON(Piv.PimCategoryId = TBCD.PimCategoryId)																				
						--LEFT JOIN @TBL_FamilyDetails AS TBFD ON(TBFD.PimCategoryId = PIV.PimCategoryId)
						--LEFT JOIN ZnodeMedia AS ZM ON(CAST(ZM.MediaId AS VARCHAR(50)) = PIV.[CategoryImage])
						--LEFT JOIN ZnodePimCategory AS ZPC ON(ZPC.PimCategoryId = Piv.PimCategoryId)
						--ORDER BY RowId;
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimCatalogAssociatedCategory @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimCatalogId='+CAST(@PimCatalogId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@ProfileCatalogId='+CAST(@ProfileCatalogId AS VARCHAR(50))+',@PimCategoryId='+CAST(@PimCategoryId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPimCatalogAssociatedCategory',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_DeleteBrand]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_DeleteBrand')
BEGIN 
	DROP PROCEDURE Znode_DeleteBrand
END 
GO
CREATE  PROCEDURE [dbo].[Znode_DeleteBrand]
( @BrandId VARCHAR(2000),
  @Status  BIT OUT,
  @IsDebug bit = 0 )
AS
 /*   
     Summary: Delete brand detail  
			  This procdure will delete brands if is associated with product or not 
			  here is no any check for association as per requirement 
			  Delete table sequence 
			  1.ZnodeBrandDetails
			  SELECT * FROM ZnodeBRandDetails
     Unit Testing  
			  begin tran 
			  EXEC Znode_DeleteBrand 17,1
			  rollback tran
   */
     BEGIN
         BEGIN TRAN DeleteBrand;
         BEGIN TRY
             SET NOCOUNT ON;
			 -- table use to hold the brand id 
             DECLARE @TBL_DeletdBrandId TABLE(BrandId INT); 
             DECLARE @TBL_CMSSEODetailId TABLE(CMSSEODetailId INT);
             DECLARE @TBL_DeletedBrands TABLE(BrandId INT);
             INSERT INTO @TBL_DeletdBrandId
                    SELECT Item
                    FROM dbo.split(@BrandId, ',') AS SP;
             INSERT INTO @TBL_CMSSEODetailId(CMSSEODetailId)
                    SELECT CMSSEODetailId
                    FROM ZnodeCMSSEODetail ZCSD
                         INNER JOIN ZnodeCMSSEOType ZST ON(ZCSD.CMSSEOTypeId = ZST.CMSSEOTypeId)
                    WHERE ZST.Name = 'Brand'
                          AND EXISTS
                    (
                        SELECT TOP 1 1
                        FROM @TBL_DeletdBrandId TBDB
                        WHERE TBDB.BrandId = ZCSD.SEOId
                    );

			Delete from ZnodePromotionBrand where  EXISTS
                    (
                        SELECT TOP 1 1
                        FROM @TBL_DeletdBrandId TBDB
                        WHERE TBDB.BrandId = ZnodePromotionBrand.BrandId
                    );
			 Delete from ZnodeCMSWidgetBrand  where  EXISTS
                    (
                        SELECT TOP 1 1
                        FROM @TBL_DeletdBrandId TBDB
                        WHERE TBDB.BrandId = ZnodeCMSWidgetBrand.BrandId
                    );
             DELETE FROM ZnodeCMSSEODetailLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_CMSSEODetailId TBCSO
                 WHERE TBCSO.CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId
             );
             DELETE FROM ZnodeCMSSEODetail
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_CMSSEODetailId TBCSO
                 WHERE TBCSO.CMSSEODetailId = ZnodeCMSSEODetail.CMSSEODetailId
             );
             DELETE FROM ZnodeBrandDetailLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletdBrandId AS TBDA
                 WHERE TBDA.BrandId = ZnodeBrandDetailLocale.BrandId
             );
             DELETE FROM ZnodeBrandDetails
             OUTPUT DELETED.BrandId
                    INTO @TBL_DeletedBrands
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletdBrandId AS TBDA
                 WHERE TBDA.BrandId = ZnodeBrandDetails.BrandId
             );
             IF
             (
                 SELECT COUNT(1)
                 FROM @TBL_DeletedBrands
             ) =
             (
                 SELECT COUNT(1)
                 FROM dbo.split(@BrandId, ',') AS a
             ) -- check statement if count is equal the data set return true aother wise false 
                 BEGIN
                     SELECT 1 AS ID,
                            CAST(1 AS BIT) AS Status;
                     SET @Status = 1;
                 END;
             ELSE
                 BEGIN
                     SELECT 0 AS ID,
                            CAST(0 AS BIT) AS Status;
                     SET @Status = 0;
                 END;
             COMMIT TRAN DeleteBrand;
         END TRY
         BEGIN CATCH
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_DeleteBrand @BrandId = '+@BrandId+',@Status='+CAST(@Status AS VARCHAR(50));
             SELECT 0 AS ID,
        CAST(0 AS BIT) AS Status,ERROR_MESSAGE();
             SET @Status = 0;
             ROLLBACK TRAN DeleteBrand;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_DeleteBrand',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_DeletePublishCatalogProduct]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_DeletePublishCatalogProduct')
BEGIN 
	DROP PROCEDURE Znode_DeletePublishCatalogProduct
END 
GO
CREATE PROCEDURE [dbo].[Znode_DeletePublishCatalogProduct]
(   
   	@PublishProductIds	Transferid READONLY 
	,@PublishCatalogId   INT = 0 
	
)
AS
   /*
    Summary:Delete the publish product from all related references 
    Unit Testing   
	begin tran
	SELECT * FROM ZnodePublishCatalog 
    EXEC Znode_DeletePublishCatalog @PublishCatalogIds =5 ,@IsDeleteCatalogId = 1 , @PublishCategoryIds = ''
	rollback tran
   */ 
     BEGIN
         BEGIN TRANSACTION A;
         BEGIN TRY
             SET NOCOUNT ON;
	
	         DECLARE @TBL_DeleteIds TABLE (PublishCatalogId INT ,PublishCategoryId INT ,PublishProductId INT )  
			 DECLARE @TBL_DeleteCategoryProduct TABLE (PublishCategoryProductId INT )			 
			 
			 INSERT INTO @TBL_DeleteIds (PublishCatalogId,PublishProductId,PublishCategoryId  )
			 SELECT ZPP.PublishCatalogId,ZPP.PublishProductId ,ZPCP.PublishCategoryId
			 FROM ZnodePublishProduct  ZPP 
			 INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = ZPP.PublishCatalogId) 
			 LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishCatalogId = ZPC.PublishCatalogId AND ZPCP.PublishProductId = ZPP.PublishProductId )
			 LEFT JOIN ZnodePublishCategory  ZPPC ON (ZPPC.PublishCatalogId = ZPC.PublishCatalogId AND ZPPC.PublishCategoryId = ZPCP.PublishCategoryId)
			 WHERE EXISTS (SELECT TOP 1 1 FROM @PublishProductIds ZPCC WHERE ZPCC.Id = ZPP.PublishProductId )
			 --AND NOT EXISTS ( SELECT * FROM ZnodePublishedXML PX where zpp.PublishProductId = PX.PublishedId )
			 
			 INSERT INTO @TBL_DeleteCategoryProduct 
			 SELECT PublishCategoryProductId 
			 FROM ZnodePublishCategoryProduct a 
			 INNER JOIN ZnodePublishProduct ZPP ON (ZPP.PublishProductId = a.PublishProductId AND ZPP.PublishCatalogId = a.PublishCatalogId)
			 INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = a.PublishCatalogId )
			 INNER JOIN ZnodePublishCategory ZPCC ON (ZPCC.PublishCategoryId = a.PublishCategoryId)
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ZPDF WHERE ZPDF.PimCatalogId = ZPC.PimCatalogId AND ZPDF.PimCategoryId = ZPCC.PimCategoryId AND ZPDF.PimProductId = ZPP.PimProductId  )
			 --AND NOT EXISTS ( SELECT * FROM ZnodePublishedXML PX where a.PublishProductId = PX.PublishedId )
			 AND a.PublishCatalogId = @PublishCatalogId

					
						
		     UPDATE 	TBL 
			 SET PublishCategoryId = NULL 
			 FROM @TBL_DeleteIds TBL 
			 WHERE  EXISTS  (SELECT TOP 1 1 FROM ZnodePublishCategoryProduct ZPCC 
			 WHERE  TBL.PublishCatalogId = ZPCC.PublishCatalogId AND ZPCC.PublishCategoryId = TBL.PublishCategoryId   AND TBL.PublishProductId <> ZPCC.PublishProductId ) 			 

			 DELETE FROM [ZnodeCMSWidgetCategory]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodeCMSWidgetCategory].[PublishCategoryId]
             )
			
			 ;
         
             DELETE FROM [ZnodeCMSWidgetProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSWidgetProduct].[PublishProductId]
             );
             DELETE FROM [ZnodeCMSCustomerReview]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSCustomerReview].[PublishProductId]
             );
             DELETE FROM ZnodeUserWishList
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM ZnodePublishProductDetail ZPPD
                     WHERE ZPPD.SKU = ZnodeUserWishList.SKU
                           AND qw.[PublishProductId] = ZPPD.[PublishProductId]
                 )
             );
            

             DELETE FROM [ZnodePromotionProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePromotionProduct].[PublishProductId]
             );
             DELETE FROM [ZnodePromotionCategory]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePromotionCategory].[PublishCategoryId]
             );
             DELETE FROM [ZnodePublishCategoryDetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePublishCategoryDetail].[PublishCategoryId]
             );	
            
             DELETE FROM ZnodeCMSSEODetailLocale
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM [ZnodeCMSSEODetail]
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_DeleteIds AS qw
                     WHERE qw.[PublishProductId] = [ZnodeCMSSEODetail].[SEOId]
                 )
                       AND EXISTS
                 (
                     SELECT TOP 1 1
                     FROM [ZnodeCMSSEOType] AS we
                     WHERE we.[CMSSEOTypeId] = [ZnodeCMSSEODetail].[CMSSEODetailId]
                           AND [Name] = 'Product'
                 )
                       AND [ZnodeCMSSEODetail].CMSSEODetailId = ZnodeCMSSEODetailLocale.CMSSEODetailId
             );
             DELETE FROM [ZnodeCMSSEODetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodeCMSSEODetail].[SEOId]
             )
                   AND EXISTS
             (
                 SELECT TOP 1 1
                 FROM [ZnodeCMSSEOType] AS we
                 WHERE we.[CMSSEOTypeId] = [ZnodeCMSSEODetail].[CMSSEODetailId]
                       AND [Name] = 'Product'
             );
            
             DELETE FROM [ZnodePublishCategoryProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePublishCategoryProduct].[PublishProductId]
             )
			 OR 
			 EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteCategoryProduct AS qw
                 WHERE qw.PublishCategoryProductId = [ZnodePublishCategoryProduct].PublishCategoryProductId
             )
			 ;
             DELETE FROM [ZnodePublishCategoryProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS w
                 WHERE w.[PublishCategoryId] = [ZnodePublishCategoryProduct].[PublishCategoryId]
             );
			  DELETE FROM dbo.ZnodeSearchGlobalProductBoost WHERE 
			 EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = ZnodeSearchGlobalProductBoost.[PublishProductId]
              );
             DELETE FROM [ZnodePublishProductDetail]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZnodePublishProductDetail].[PublishProductId]
             );
             DELETE FROM [ZNodePublishProduct]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishProductId] = [ZNodePublishProduct].[PublishProductId]
             
			 );
		
			 DELETE FROM ZnodePublishCategoryDetail 
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodePublishCategoryDetail.[PublishCategoryId]
              );
			
			DELETE FROM ZnodeSearchGlobalProductCategoryBoost 
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodeSearchGlobalProductCategoryBoost.[PublishCategoryId]
             
			 );
			 DELETE FROM ZnodePublishCategory
			 WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeleteIds AS qw
                 WHERE qw.[PublishCategoryId] = ZnodePublishCategory.[PublishCategoryId]
             
			 );

			 			 				
             COMMIT TRANSACTION A;
			 
         END TRY
         BEGIN CATCH
		      SELECT ERROR_MESSAGE() 
			 
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_InsertPublishProductIds]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertPublishProductIds')
BEGIN 
	DROP PROCEDURE Znode_InsertPublishProductIds
END 
GO
CREATE PROCEDURE [dbo].[Znode_InsertPublishProductIds]
(
	@PublishCatalogId        INT            = NULL,
     @UserId                 INT				  ,
	 @PimProductId           VARCHAR(2000) = 0,
	 @IsCallAssociated       BIT           = 0     
	)
AS
    
/*
  Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

     Unit Testing
    
     SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
     SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
     SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
	 SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
     select * from znodepublishcatalog
	 SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
     SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
	 SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
     EXEC Znode_GetPublishProducts  @PublishCatalogId = 9 ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 117,@IsDebug= 1 
     EXEC Znode_InsertPublishProductIds  @PublishCatalogId = 0,@UserId= 2  ,@PimProductId = 29 ,@NotReturnXML= NULL,@IsDebug= 1 
     EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
	 SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
	 SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
    */ 

     BEGIN
      --  BEGIN TRAN InsertPublishProductIds;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate(); 
			 DECLARE @PimCatalogId int= ISNULL((SELECT PimCatalogId FROM ZnodePublishcatalog WHERE PublishCatalogId = @PublishCatalogId), 0);  --- this variable is used to carry y pim catalog id by using published catalog id
             DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
			,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
			,@ProductTypeAttributeId INT = dbo.Fn_GetProductTypeAttributeId()
			DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1

			 -- This variable used to carry the locale in loop 
			 -- This variable is used to carry the default locale which is globaly set
             DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 
			 DECLARE @DeletePublishProductId VARCHAR(MAX)= '', @PimProductIds VARCHAR(MAX)= '', @PimAttributeId VARCHAR(MAX)= '';
             
			 -- This table will used to hold the all currently active locale ids  
			 
			 IF Object_ID ('tempdb..#ActiveProduct') is not null
				drop table #ActiveProduct

			IF Object_ID ('tempdb..#TBL_PimProductIds') is not null
				drop table #TBL_PimProductIds

			 ----- this table holds all active product data
			 CREATE TABLE #ActiveProduct ( PimProductId INT ) 

			 INSERT INTO #ActiveProduct ( PimProductId )
			 SELECT PAV.PimProductId FROM ZnodePimAttributeValue PAV
			 INNER JOIN ZnodePimAttributeValueLocale PAVL ON PAV.PimAttributeValueId = PAVL.PimAttributeValueId
			 INNER JOIN ZnodePimAttribute PA  ON PAV.PimAttributeId = PA.PimAttributeId
			 WHERE PA.AttributeCode = 'IsActive' AND PAVL.AttributeValue = 'true'

		     -- This table hold the complete xml of product with other information like category and catalog
             CREATE TABLE #TBL_PimProductIds(PimProductId INT  ,PimCategoryId INT,PimCatalogId INT,PublishCatalogId INT,IsParentProducts BIT ,DisplayOrder INT,ProductName NVARCHAR(MAX),SKU  NVARCHAR(MAX),
											 IsActive NVARCHAR(MAX),PimAttributeFamilyId INT ,ProfileId   VARCHAR(MAX),CategoryDisplayOrder INT ,ProductIndex INT,PRIMARY KEY (PimCatalogId,PimCategoryId,PimProductId) )

			  -- This table is used to hold the product which publish in current process 
             DECLARE @TBL_PublishProductIds TABLE(PublishProductId  INT  ,PimProductId INT,PublishCatalogId  INT
													,PublishCategoryId VARCHAR(MAX),CategoryProfileIds VARCHAR(max),VersionId INT , PRIMARY KEY (PimProductId,PublishProductId,PublishCatalogId)); 
	 
			-- this check is used when this procedure is call by internal procedure to publish only product and no need to return publish xml;    
			   
			--Collected list of products for  publish 
   
			 INSERT INTO #TBL_PimProductIds ( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId,CategoryDisplayOrder,PublishCatalogId )
				SELECT ZPCC.PimProductId, ZPCC.PimCategoryId, 1 AS IsParentProducts, NULL AS DisplayOrder, ZPCC.PimCatalogId,ZPCC.DisplayOrder ,ZPC.PublishCatalogId
				FROM ZnodePimCatalogCategory AS ZPCC
				INNER JOIN ZnodePublishCatalog ZPC ON ZPC.PimCatalogId = ZPCC.PimCatalogId
		    	WHERE  (ZPCC.PimCatalogId = @PimCatalogId OR 
				EXISTS( SELECT TOP 1 1 FROM dbo.split(@PimProductId,',') SP WHERE SP.Item = ZPCC.PimProductId) ) AND ZPCC.PimProductId IS NOT NULL
				AND EXISTS ( SELECT * FROM #ActiveProduct PAV WHERE ZPCC.PimProductId = PAV.PimProductId )

				
             --Collected list of link products for  publish
			 INSERT INTO #TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId , PublishCatalogId)
				 SELECT ZPLPD.PimProductId, ZPCC.PimCategoryId, 0 AS IsParentProducts, NULL AS DisplayOrder, CTPP.PimCatalogId,CTPP.PublishCatalogId 
				 FROM ZnodePimLinkProductDetail AS ZPLPD
				 INNER JOIN #TBL_PimProductIds AS CTPP ON ZPLPD.PimParentProductId = CTPP.PimProductId AND  IsParentProducts = 1 
				 INNER JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPLPD.PimProductId AND ZPCC.PimCatalogId = CTPP.PimCatalogId
				 WHERE NOT EXISTS ( SELECT TOP 1 1 FROM #TBL_PimProductIds AS CTPPI WHERE CTPPI.PimProductId = ZPLPD.PimProductId) 
				-- AND EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPLPD.PimProductId ) 
				 AND ZPCC.PimProductId IS NOT NULL
				 AND EXISTS (SELECT * FROM #ActiveProduct PAV WHERE ZPLPD.PimProductId = PAV.PimProductId )
				 GROUP BY ZPLPD.PimProductId, ZPCC.PimCategoryId,CTPP.PimCatalogId,CTPP.PublishCatalogId 

             --Collected list of Addon products for  publish
        
		     INSERT INTO #TBL_PimProductIds( PimProductId, PimCategoryId, IsParentProducts, DisplayOrder, PimCatalogId,PublishCatalogId)
					 SELECT ZPAPD.PimChildProductId, ISNULL(ZPCC.PimCategoryId,0) AS PublishCategoryId, 0 AS IsParentProducts, null AS DisplayOrder,CTALP.PimCatalogId,CTALP.PublishCatalogId
					 FROM ZnodePimAddOnProductDetail AS ZPAPD 
					 INNER JOIN ZnodePimAddOnProduct AS ZPAP ON ZPAP.PimAddOnProductId = ZPAPD.PimAddOnProductId
					 INNER JOIN #TBL_PimProductIds AS CTALP ON CTALP.PimProductId = ZPAP.PimProductId AND  IsParentProducts = 1
					 LEFT JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPAPD.PimChildProductId AND ZPCC.PimCatalogId = CTALP.PimCatalogId
					 WHERE NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductIds AS CTALPI WHERE CTALPI.PimProductId = ZPAPD.PimChildProductId) 
				---	 AND EXISTS(SELECT TOP 1 1FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPAPD.PimChildProductId) 
					 AND EXISTS ( SELECT * FROM #ActiveProduct PAV WHERE ZPAPD.PimChildProductId = PAV.PimProductId ) 
					 GROUP BY ZPAPD.PimChildProductId, ZPCC.PimCategoryId , CTALP.PimCatalogId,CTALP.PublishCatalogId

					 		 	

             --Collected list of Bundle / Group / Config products for  publish
             INSERT INTO #TBL_PimProductIds(PimProductId,PimCategoryId,IsParentProducts,DisplayOrder,PimCatalogId,PublishCatalogId)
                    SELECT ZPTA.PimProductId,ISNULL(ZPCC.PimCategoryId,0),0 AS IsParentProducts,NULL DisplayOrder,CTAAP.PimCatalogId,CTAAP.PublishCatalogId
                    FROM ZnodePimProductTypeAssociation AS ZPTA INNER JOIN #TBL_PimProductIds AS CTAAP ON CTAAP.PimProductId = ZPTA.PimParentProductId AND IsParentProducts = 1
                    LEFT JOIN ZnodePimCatalogCategory AS ZPCC ON ZPCC.PimProductId = ZPTA.PimProductId AND ZPCC.PimCatalogId = CTAAP.PimCatalogId
                    WHERE NOT EXISTS( SELECT TOP 1 1 FROM #TBL_PimProductIds AS CTAAPI WHERE CTAAPI.PimProductId = ZPTA.PimProductId)
					--AND EXISTS(SELECT TOP 1 1 FROM ZnodePimAttributeValue AS VILMP WHERE VILMP.PimProductId = ZPTA.PimProductId)
					AND EXISTS ( SELECT * FROM #ActiveProduct PAV WHERE ZPTA.PimProductId = PAV.PimProductId ) 
					GROUP BY ZPTA.PimProductId,ZPCC.PimCategoryId,CTAAP.PimCatalogId,CTAAP.PublishCatalogId
        				  

			   UPDATE TBPP
               SET PublishCatalogId = ZPC.PublishCatalogId 
			   FROM #TBL_PimProductIds TBPP 
			   INNER JOIN ZnodePublishCatalog ZPC ON ZpC.PimCatalogId = TBPP.PimCatalogId;
        
		DECLARE @PublishProductId TRANSFERId 


		IF @PublishCatalogId IS NOT NULL AND @PublishCatalogId <> 0 
			  BEGIN 
			  -- SELECT * FROM @TBL_PimProductIds AS TBP
			
			  INSERT INTO @PublishProductId
			    SELECT DISTINCT ZPP.PublishProductId 
				FROM ZnodePublishProduct AS ZPP 
				INNER JOIN ZnodePublishCategoryProduct ZPPC ON (ZPPC.PublishProductId = ZPP.PublishProductId AND ZPPC.PublishCatalogId = ZPP.PublishCatalogId)
				--INNER JOIN ZnodePublishCategory ZPC ON (ZPC.PublishCategoryId = ZPPC.PublishCategoryId)
				WHERE NOT EXISTS(SELECT TOP 1 1 FROM #TBL_PimProductIds AS TBP WHERE ZPP.PimProductId = TBP.PimProductId AND TBP.PublishCatalogId = ZPP.PublishCatalogId)
				AND ZPP.PublishCatalogId = @PublishCatalogId
					--Remove extra products from catalog
				
		END
		ELSE IF @IsCallAssociated = 0 
		BEGIN 
		DECLARE @TBL_ProductIdscollect TABLE(PublishProductId INT , PimproductId INT , PublishcatalogId  INT  , ProductType NVARCHAr(max))

	
		INSERT INTO @TBL_ProductIdscollect (PublishProductId,PimproductId,PublishcatalogId,ProductType)
		SELECT PublishProductId,ZPAV.PimproductId,TBPOCI.PublishcatalogId,ZPATF.AttributeDefaultValueCode
		FROM ZnodePimAttributeValue ZPAV 
		INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId )
		INNER JOIN #TBL_PimProductIds TBLIDF ON (TBLIDF.PimProductId = ZPAV.PimProductId )
		INNER JOIN ZnodePublishProduct TBPOCI ON (TBPOCI.PimProductId = TBLIDF.PimProductId AND TBPOCI.PublishCatalogId = TBLIDF.PublishCatalogId 	)
		INNER JOIN ZnodePimAttributeDefaultValue ZPATF ON (ZPATF.PimAttributeId =  @ProductTypeAttributeId 
						AND ZPADV.PimAttributeDefaultValueId = ZPATF.PimAttributeDefaultValueId )
         WHERE  IsParentProducts = 1	
		 AND LocaleId =@DefaultLocaleId
    

        IF EXISTS (SELECT TOP 1 1 FROM @TBL_ProductIdscollect WHERE ProductType IN ('GroupedProduct','BundleProduct','ConfigurableProduct','SimpleProduct') )
		     
		BEGIN 
	
		   DECLARE @TBL_DeleteTrackProduct TABLE (PublishProductId INT,AssociatedZnodeProductId INT  ,PublishCatalogId INT,PublishCatalogLogId INT ,IsDelete BIT  )

		   ;With Cte_PublishProduct AS
		   (
		     SELECT TBL.PublishProductId,PimproductId,TBL.PublishcatalogId,ProductType ,MAx(PublishCatalogLogId) PublishCatalogLogId
			 FROM  @TBL_ProductIdscollect TBL 
			 INNER JOIN ZnodePublishCatalogLog TBLG ON (TBLG.PublishCatalogId = TBL.PublishcatalogId)
			 WHERE IsCatalogPublished = 1 
		     GROUP BY TBL.PublishProductId,PimproductId,TBL.PublishcatalogId,ProductType
		   
		   )
		   , Cte_ConfigData AS 
			 (
			 SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ConfigurableProductEntity') t(p)
			 WHERE  IsConfigProductXML = 1
			 AND ProductType = 'ConfigurableProduct'
			 UNION ALL 
			  SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/GroupProductEntity') t(p)
			 WHERE  IsGroupProductXML = 1
			 AND ProductType = 'GroupedProduct'
			 UNION ALL 
			  SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/BundleProductEntity') t(p)
			 WHERE  IsBundleProductXML = 1
			 AND ProductType = 'BundleProduct'
			 UNION ALL 
			 SELECT p.value('(./AssociatedZnodeProductId)[1]', 'INT')  AssociatedZnodeProductId,PublishProductId,PimproductId,PublishcatalogId,ProductType,CTR.PublishCatalogLogId
			 FROM ZnodePublishedXml ZPXML 
			 INNER JOIN Cte_PublishProduct CTR ON (CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId AND CTR.PublishProductId = ZPXML.PublishedId)
			 CROSS APPLY ZPXML.PublishedXML.nodes('/AddonEntity') t(p)
			 WHERE  IsAddOnXML = 1
			 AND LocaleId = @DefaultLocaleId 
			
			 )

		--	 SELECT * FROM ZnodePublishCatalogLog WHERE PublishCatalogId = 8 

		INSERT INTO @TBL_DeleteTrackProduct (PublishProductId,AssociatedZnodeProductId,PublishcatalogId,PublishCatalogLogId)
		SELECT ZPP.PublishProductId,AssociatedZnodeProductId,PublishcatalogId,PublishCatalogLogId
		FROM Cte_ConfigData ZPP	
		WHERE NOT EXISTS (SELECT TOP 1 1 FROM  @TBL_PublishProductIds TBLP WHERE TBLP.PublishProductId = ZPP.AssociatedZnodeProductId)
		
	

		;With Cte_updateStatus AS
		(
		 
		     SELECT  PublishProductId,PublishcatalogId
			  FROM @TBL_DeleteTrackProduct CTR 
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePublishedXml ZPXML  
			 CROSS APPLY ZPXML.PublishedXML.nodes('/ConfigurableProductEntity') t(p)
			 WHERE  IsConfigProductXML = 1 
			 AND  CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId 
			 AND LocaleId = @DefaultLocaleId 
		     AND CTR.PublishProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
		     AND CTR.PublishProductId = ZPXML.PublishedId ) 

			 UNION ALL 
			  SELECT PublishProductId,PublishcatalogId
			 FROM @TBL_DeleteTrackProduct CTR 
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePublishedXml ZPXML  
			 CROSS APPLY ZPXML.PublishedXML.nodes('/GroupProductEntity') t(p)
			 WHERE  IsGroupProductXML = 1 
			 AND  CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId 
			 AND LocaleId = @DefaultLocaleId 
		     AND CTR.PublishProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
		     AND CTR.PublishProductId = ZPXML.PublishedId ) 

			 UNION ALL 
			  SELECT  PublishProductId,PublishcatalogId
			   FROM @TBL_DeleteTrackProduct CTR 
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePublishedXml ZPXML  
			 CROSS APPLY ZPXML.PublishedXML.nodes('/BundleProductEntity') t(p)
			 WHERE  IsBundleProductXML = 1 
			 AND  CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId 
			 AND LocaleId = @DefaultLocaleId 
		     AND CTR.PublishProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
		     AND CTR.PublishProductId = ZPXML.PublishedId ) 


			 UNION ALL 
			 SELECT PublishProductId,PublishcatalogId
			 FROM @TBL_DeleteTrackProduct CTR 
			 WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePublishedXml ZPXML  
			 CROSS APPLY ZPXML.PublishedXML.nodes('/AddonEntity') t(p)
			 WHERE  IsAddOnXML = 1 
			 AND  CTR.PublishCatalogLogId = ZPXML.PublishCatalogLogId 
			 AND LocaleId = @DefaultLocaleId 
		     AND CTR.PublishProductId = p.value('(./AssociatedZnodeProductId)[1]', 'INT') 
		     AND CTR.PublishProductId = ZPXML.PublishedId ) 
		
		)

		UPDATE a 
		SET IsDelete = CASE WHEN TYR.PublishProductId IS NULL THEN 1 ELSE 0 END 
		FROM @TBL_DeleteTrackProduct a 
		LEFT JOIN Cte_updateStatus TYR ON (TYR.PublishProductId = a.PublishProductId AND TYR.PublishCatalogId = a.PublishCatalogId)

		
		INSERT INTO @PublishProductId 
		SELECT DISTINCT AssociatedZnodeProductId 
		FROM @TBL_DeleteTrackProduct
		WHERE IsDelete =1  
		

		END 

	
		INSERT INTO @PublishProductId
		SELECT PublishProductid
		FROM ZnodePublishProduct ZPP
		INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId =  ZPP.PublishCatalogId )
        WHERE Not EXISTS (SELECT TOP 1 1 FROM ZnodePimCatalogCategory ZPPP WHERE (ZPPP.PimCatalogid = ZPc.PimCatalogId AND ZPPP.PimProductId = ZPP.PimProductId))  
		AND EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductIds TYR WHERE TYR.PimProductId = ZPP.PimProductId )
		AND NOT EXISTS (SELECT TOP 1 1 FROM @PublishProductId YTR WHERE YTR.Id = ZPP.PublishProductId  )	
		END  

		EXEC dbo.Znode_DeletePublishCatalogProduct  @PublishProductIds = @PublishProductId,@PublishCatalogId = @PublishCatalogId ;

		

			 -- This merge statement is used for crude oprtaion with publisgh product table
			MERGE INTO ZnodePublishProduct TARGET USING  (
				SELECT PimProductId, PublishCatalogId
				FROM #TBL_PimProductIds AS TBP
				GROUP BY PimProductId, PublishCatalogId
			 )  SOURCE
				ON --check for if already exists then just update otherwise insert the product  
				TARGET.PimProductId = SOURCE.PimProductId AND  TARGET.PublishCatalogId = SOURCE.PublishCataLogId 
				WHEN MATCHED      THEN UPDATE SET TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate	
				WHEN NOT MATCHED  THEN INSERT(PimProductId, PublishCatalogId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
									   VALUES( SOURCE.PimProductId, SOURCE.PublishCatalogId, @UserId, @GetDate, @UserId, @GetDate )
				OUTPUT INSERTED.PublishProductId, INSERTED.PimProductId, INSERTED.PublishCatalogId
				INTO @TBL_PublishProductIds(PublishProductId, PimProductId, PublishCatalogId); 
			
			-- Here used the ouput clause to catch what data inserted or updated into variable table
	    	
		 --   SELECT a.PublishCatalogId,a.PublishCategoryId,b.PimProductId
			--FROM @TBL_PublishProductIds a 
			--INNER JOIN @TBL_PimProductIds b ON (a.PimProductId = b.PimCategoryId)
			----INNER JOIN ZnodePublishProduct ZPP  ON (ZPP.PimProductId = b.PimProductId AND ZPP.PublishCatalogId =  a.PublishCatalogId)
			--WHERE PimCategoryId = 2 
				
			
			-- This merge staetment is used for crude opration with  ZnodePublishCategoryProduct table
			 MERGE INTO ZnodePublishCategoryProduct TARGET USING  (
				 SELECT PublishProductId,
				 ISNULL(ZPC.PublishCategoryId,0)PublishCategoryId,
				 TBP.PublishCatalogId
				 FROM #TBL_PimProductIds AS TBP 
				 LEFT JOIN ZnodePublishCategory AS ZPC ON (ISNULL(TBP.PimCategoryId, 0) = ISNULL(ZPC.PimCategoryId, -1) AND ZPC.PublishCatalogId = TBP.PublishCatalogId)
				 INNER JOIN @TBL_PublishProductIds AS TBPP ON TBP.PimProductId = TBPP.PimProductId
				 AND TBP.PublishCatalogId = TBPP.PublishCatalogId
				 GROUP BY PublishProductId, ZPC.PublishCategoryId, TBP.PublishCatalogId
			  ) SOURCE
					ON  TARGET.PublishCatalogId = SOURCE.PublishCatalogId AND ISNULL(TARGET.PublishCategoryId, 0) = ISNULL(SOURCE.PublishCategoryId, 0) AND TARGET.PublishProductId = SOURCE.PublishProductId
					
					WHEN MATCHED THEN UPDATE SET TARGET.PublishCategoryId = CASE WHEN SOURCE.PublishCategoryId = 0 THEN NULL ELSE SOURCE.PublishCategoryId END 
												 ,TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate					
					WHEN NOT MATCHED THEN INSERT(PublishProductId,PublishCategoryId,PublishCatalogId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
										  VALUES(SOURCE.PublishProductId,CASE WHEN SOURCE.PublishCategoryId =0 THEN NULL ELSE SOURCE.PublishCategoryId  END , SOURCE.PublishCatalogId,@UserId,@GetDate,@userId,@GetDate);
   
    
   WHILE @Counter <= @maxCountId
   BEGIN 
    SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
   
     
	 SELECT VIR.PimProductId,PimAttributeId,AttributeValue,ZnodePimAttributeValueLocaleId,VIR.LocaleId ,COUNT(*)Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE (LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM @TBL_PublishProductIds ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	 AND (PimAttributeId = @ProductNamePimAttributeId  OR PimAttributeId = @SKUPimAttributeId OR PimAttributeId = @IsActivePimAttributeId  )
  
   

		
	          MERGE INTO ZnodePublishProductDetail   TARGET
			  USING  (SELECT   ZPP.PublishProductId ,TBLA.AttributeValue PRoductName,TBLAI.AttributeValue SKU ,ISNULL(TBLAII.AttributeValue,'0') IsActive --,TBLAIII.AttributeValue ProductType
						FROM  @TBL_PublishProductIds zpp
						INNER JOIN #TBL_AttributeVAlue TBLA ON (TBLA.PimAttributeId = @ProductNamePimAttributeId AND TBLA.PimProductId = ZPP.PimProductId AND TBLA.LocaleId  = CASE WHEN TBLA.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLA ON (TBLA.PimProductId = ZPP.PimProductId AND TBLA.PimAttributeId = @ProductNamePimAttributeId)
					    INNER JOIN #TBL_AttributeVAlue TBLAI ON (TBLAI.PimAttributeId = @SKUPimAttributeId AND TBLAI.PimProductId = ZPP.PimProductId AND TBLAI.LocaleId  = CASE WHEN TBLAI.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLAI ON (TBLAI.PimProductId = ZPP.PimProductId AND TBLAI.PimAttributeId = @SKUPimAttributeId)
					    INNER JOIN #TBL_AttributeVAlue TBLAII ON (TBLAII.PimAttributeId = @IsActivePimAttributeId AND TBLAII.PimProductId = ZPP.PimProductId AND TBLAII.LocaleId  = CASE WHEN TBLAII.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
						--INNER JOIN #TBL_AttributeVAlue TBLAIII ON (TBLAIII.PimAttributeId = @ProductTypePimAttributeId AND TBLAIII.PimProductId = ZPP.PimProductId AND TBLAIII.LocaleId  = CASE WHEN TBLAIII.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
					--	INNER JOIN @TBL_AttributeVAlue  TBLAIII ON (TBLAII.PimProductId = ZPP.PimProductId AND TBLAII.PimAttributeId = @ProductTypeAttributeId)
						GROUP BY ZPP.PublishProductId,TBLA.AttributeValue,TBLAI.AttributeValue,TBLAII.AttributeValue --,TBLAIII.AttributeValue
						)   SOURCE
			ON (TARGET.PublishProductId = SOURCE.PublishProductId
				 AND TARGET.LocaleId = @LocaleId 
			) 
			WHEN MATCHED THEN 
			UPDATE 
			SET TARGET.ProductName   = SOURCE.ProductName
				,TARGET.SKU			 = SOURCE.SKU
				,TARGET.IsActive	= SOURCE.IsActive
				,TARGET.ModifiedBy	 = @userid
				,TARGET.ModifiedDate  = @GetDate
			WHEN NOT MATCHED THEN 
			INSERT (PublishProductId
					,ProductName
					,SKU
					,IsActive
					,LocaleId
					,CreatedBy
					,CreatedDate
					,ModifiedBy
					,ModifiedDate)
			VALUES ( SOURCE.PublishProductId
					,SOURCE.ProductName
					,SOURCE.SKU
					,SOURCE.IsActive
					,@LocaleId
					,@userId
					,@GetDate
					,@userId
					,@GetDate);

		 
         DROP TABLE #TBL_AttributeVAlue 
		
		 SET @Counter = @counter + 1 
			  END 

			  IF @PublishCatalogId IS NULL OR @PublishCatalogId =0 
			  BEGIN 
			  SELECT PublishProductId, PimProductId, PublishCatalogId 
			  FROM @TBL_PublishProductIds
			  END 

		--COMMIT TRAN InsertPublishProductIds;
		END TRY 
		BEGIN CATCH 
		 SELECT ERROR_MESSAGE()
	--	 ROLLBACK TRAN InsertPublishProductIds;
		END CATCH 
	END
GO
PRINT N'Altering [dbo].[Znode_GetAssociatedPortalToTaxClass]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetAssociatedPortalToTaxClass')
BEGIN 
	DROP PROCEDURE Znode_GetAssociatedPortalToTaxClass
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetAssociatedPortalToTaxClass]
( @WhereClause NVarchar(Max)  = '',
  @Rows        INT            = 100,
  @PageNo      INT            = 1,
  @Order_BY VARCHAR(1000)	  = '',
  @RowsCount   INT OUT,
  @LocaleId    INT            = 0)
AS

/*
  Summary: Associating TaxClass to Portal
		   Result is fetched from view View_GetAssociatedPortalToTaxClass order by PortalId in descending order
  Unit Testing:
  EXEC Znode_GetAssociatedPortalToTaxClass ' ', @RowsCount = 0 ,@PageNo = 2, @Rows = 10

*/

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_AssociatedPortalToTaxClass TABLE (PortalId INT,StoreName NVARCHAR(MAX),CreatedDate DATE,ModifiedDate DATE,IsAssociated INT,TaxClassId INT,TaxClassPortalId INT,RowId INT,CountNo INT)
            
		 SET @SQL = '
					; WITH CTE_AssociatedPortalToTaxClass AS
					(
					 SELECT  PortalId, StoreName, CreatedDate, ModifiedDate, IsAssociated, TaxClassId, PortalId TaxClassPortalId
								,'+dbo.Fn_GetPagingRowId(@Order_BY,'PortalId DESC')+',Count(*)Over() CountNo
					 FROM View_GetAssociatedPortalToTaxClass
					 WHERE 1=1 
							     '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
					)

					SELECT PortalId, StoreName, CreatedDate, ModifiedDate, IsAssociated, TaxClassId, TaxClassPortalId,RowId,CountNo
					FROM CTE_AssociatedPortalToTaxClass
								 '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)

					INSERT INTO @TBL_AssociatedPortalToTaxClass (PortalId, StoreName, CreatedDate, ModifiedDate, IsAssociated, TaxClassId, TaxClassPortalId,RowId,CountNo)
					EXEC(@SQL)

					SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_AssociatedPortalToTaxClass),0)

					SELECT  PortalId, StoreName, CreatedDate, ModifiedDate, IsAssociated, TaxClassId, TaxClassPortalId
					FROM @TBL_AssociatedPortalToTaxClass
            
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetAssociatedPortalToTaxClass @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status,@ErrorMessage;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetAssociatedPortalToTaxClass',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;                                     
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetCMSSliderBannerPath]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCMSSliderBannerPath')
BEGIN 
	DROP PROCEDURE Znode_GetCMSSliderBannerPath
END 
GO
CREATE  PROCEDURE [dbo].[Znode_GetCMSSliderBannerPath]
( @WhereClause NVARCHAR(max),
  @Rows        INT           = 100,
  @PageNo      INT           = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT)
AS
/*
 Summary: Get CMS Slider Banner Information with Banner Path
 Unit Testing:
 EXEC Znode_GetCMSSliderBannerPath 'CMSSliderId=1' ,@RowsCount = 0
*/
 BEGIN
   BEGIN TRY
    SET NOCOUNT ON;
      DECLARE @SQL NVARCHAR(MAX);
	  DECLARE @TBL_SlidderBanner TABLE (CMSSliderId INT,SliderName NVARCHAR(200),CMSSliderBannerId INT,MediaPath VARCHAR(300),Title NVARCHAr(1000),ImageAlternateText NVARCHAR(1000)
									,ButtonLabelName NVARCHAR(1200),ButtonLink NVARCHAR(600),TextAlignment NVARCHAR(200) ,BannerSequence INT,MediaId INT , [FileName] NVARCHAR(1000)
									,[Description] NVARCHAr(max),ActivationDate DATETIME,ExpirationDate DATETIME,RowId INT,CountNo INT )
									
      SET @SQL = '   
      ;with Cte_SliderBanner AS 
	  (
	  SELECT  ZCS.CMSSliderId,ZCS.Name SliderName,ZCSB.CMSSliderBannerId,dbo.FN_GetMediaThumbnailMediaPath(ZM.Path) MediaPath,Title,ZCSBL.ImageAlternateText,ZCSBL.ButtonLabelName,ZCSBL.ButtonLink,ZCSB.TextAlignment,ZCSB.BannerSequence,ZCSBL.Description,ZCSB.ActivationDate
	  ,ZCSB.ExpirationDate , ZCSBL.LocaleId ,ZCSBL.MediaId ,ZM.FileName

	  FROM ZnodeCMSSlider ZCS
	  INNER join [dbo].[ZnodeCMSSliderBanner] ZCSB   ON (ZCSB.CMSSliderId = ZCS.CMSSliderId)
	  INNER JOIN ZnodeCMSSliderBannerLocale ZCSBL ON (ZCSBL.CMSSliderBannerId = ZCSB.CMSSliderBannerId )
	  left join ZnodeMedia ZM ON (ZM.mediaId = ZCSBL.MediaId)
	
	  )
     ,Cte_SlideBannerDetails AS
     (
      SELECT CMSSliderId,SliderName,CMSSliderBannerId,MediaPath,Title,ImageAlternateText,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence ,FileName ,MediaId 
				,Description,ActivationDate,ExpirationDate,'+dbo.Fn_GetPagingRowId(@Order_BY,'CMSSliderId')+' ,Count(*)Over() CountNo
	  FROM Cte_SliderBanner  '+'WHERE 1=1  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
     )
	 SELECT CMSSliderId,SliderName,CMSSliderBannerId,MediaPath,Title,ImageAlternateText,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence,FileName ,MediaId 
				,Description,ActivationDate,ExpirationDate,RowId,CountNo 
	 FROM Cte_SlideBannerDetails 
	'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
      
	 INSERT INTO @TBL_SlidderBanner (CMSSliderId,SliderName,CMSSliderBannerId,MediaPath,Title,ImageAlternateText,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence,[FileName] ,MediaId 
				,[Description],ActivationDate,ExpirationDate,RowId,CountNo)
	 EXEC (@SQL)      

	 SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_SlidderBanner),0)

	 SELECT CMSSliderId,SliderName,CMSSliderBannerId,MediaPath,Title,ImageAlternateText,ButtonLabelName,ButtonLink,TextAlignment,BannerSequence,[FileName] ,MediaId 
				,[Description],ActivationDate,ExpirationDate
	 FROM @TBL_SlidderBanner

     END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCMSSliderBannerPath @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCMSSliderBannerPath',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetListOfPimAttributeValues]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetListOfPimAttributeValues')
BEGIN 
	DROP PROCEDURE Znode_GetListOfPimAttributeValues
END 
GO
CREATE  PROCEDURE [dbo].[Znode_GetListOfPimAttributeValues]
( @AttributeCode  VARCHAR(100),
  @AttributeValue VARCHAR(1000) = '')
AS
  /*
    
    Summary: Get list of attribute values for PIm only 
    		   Input pass Attribute code and for find out specific string pass  AttributeValue will be use in query with like operator 
    		    		
    Unit Testing      
	begin tran
    Exec Znode_GetListOfPimAttributeValues @AttributeCode = 'SKU' , @AttributeValue = '234234234234'
	rollback tran
    Exec Znode_GetListOfPimAttributeValues @AttributeCode = 'ProductName' , @AttributeValue = 's'
   
*/

     BEGIN
		BEGIN TRY
		 Declare @PimAttributeId int 
		 
		 Select @PimAttributeId  = PimAttributeId  from ZnodePimAttribute where AttributeCode = @AttributeCode
         If @AttributeCode = 'SKU'
		 Begin
				SELECT TOP 100 ISNULL(NULL, 0) AS RowId, ZPAVL.AttributeValue , Case when ZPDP.SKU is not null then 1 else 0 END IsDownloadable              
				Into #AttributeValueList			
				FROM ZnodePimAttributeValue AS ZPAV INNER JOIN ZnodePimAttributeValueLocale AS ZPAVL 
				ON ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId AND  ZPAV.PimAttributeId = @PimAttributeId
				LEFT OUTER JOIN ZnodePimDownloadableProduct ZPDP ON ZPDP.SKU = ZPAVL.AttributeValue
				WHERE ZPAVL.AttributeValue LIKE '%'+@AttributeValue+'%'

				Select  Distinct RowId ,AttributeValue ,IsDownloadable from #AttributeValueList
		 END
		 Else 
		 Begin
				SELECT TOP 100 ISNULL(NULL, 0) AS RowId, ZPAVL.AttributeValue              
				FROM ZnodePimAttributeValue AS ZPAV INNER JOIN ZnodePimAttributeValueLocale AS ZPAVL 
				ON ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId
				WHERE ZPAV.PimAttributeId = @PimAttributeId
				AND ZPAVL.AttributeValue LIKE '%'+@AttributeValue+'%'
				GROUP BY ZPAVL.AttributeValue;
		 End
		 END TRY
		 BEGIN CATCH
			 DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetListOfPimAttributeValues @AttributeCode = '+@AttributeCode+',@AttributeValue='+@AttributeValue+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetListOfPimAttributeValues',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;  
		 END CATCH
     END;
GO
PRINT N'Altering [dbo].[Znode_GetOmsOrderDetail]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetOmsOrderDetail')
BEGIN 
	DROP PROCEDURE Znode_GetOmsOrderDetail
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetOmsOrderDetail]
( @WhereClause NVARCHAR(MAx),
  @Rows        INT            = 100,
  @PageNo      INT            = 1,
  @Order_BY    VARCHAR(1000)  = '',
  @RowsCount   INT OUT			,
  @UserId	   INT = 0 ,
  @IsFromAdmin int=0
  )
AS 
    /*  
     Summary : This procedure is used to get the oms order detils                 
			   Records are fetched for those users who placed the order i.e UserId is Present in ZnodeUser and  ZnodeOmsOrderDetails tables			  	 
	 Unit Testing:
	
     EXEC Znode_GetOmsOrderDetail '',@Order_BY = '',@RowsCount= 0, @UserId = 0 ,@Rows = 80, @PageNo = 1
	 	        
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX), @ProcessType  varchar(50)='Order'

             DECLARE @TBL_OrderList TABLE (OmsOrderId INT,OrderNumber VARCHAR(200),PortalId INT,StoreName NVARCHAR(MAX),CurrencyCode VARCHAR(100),OrderState NVARCHAR(MAX),ShippingId INT ,
				PaymentTypeId INT,PaymentSettingId INT,PaymentStatus NVARCHAR(MAX),PaymentType VARCHAR(100),ShippingStatus BIT ,OrderDate DATETIME,UserId INT,UserName VARCHAR(300),PaymentTransactionToken NVARCHAR(600),Total NUMERIC(28,6),
				OrderItem NVARCHAR(1000),OmsOrderDetailsId INT, ItemCount INT,PODocumentPath NVARCHAR(600),IsInRMA BIT,CreatedByName NVARCHAr(max),ModifiedByName NVARCHAR(max),RowId INT,CountNo INT,Email NVARCHAR(MAX),PhoneNumber NVARCHAR(MAX),
				SubTotal NUMERIC(28,6),TaxCost NUMERIC(28,6),ShippingCost NUMERIC(28,6),BillingPostalCode NVARCHAR(200),ShippingPostalCode NVARCHAR(200),OrderModifiedDate datetime, PaymentDisplayName nvarchar(1200), ExternalId nvarchar(1000))
				
             SET @SQL = '
			   	 
			;WIth  OrderList AS ( 

			  SELECT Zoo.OmsOrderId,Zoo.OrderNumber, Zp.PortalId,Zp.StoreName ,ZODD.CurrencyCode,case when ZOS.IsShowToCustomer=0 and '+cast( @IsFromAdmin as varchar(50))+' = 0 then ZOSC.Description else  ZOS.Description end  OrderState,ZODD.ShippingId,ZODD.
PaymentTypeId,ZODD.PaymentSettingId
				,ZOPS.Name PaymentStatus,ZPS.Name PaymentType,CAST(1 AS BIT) ShippingStatus ,ZODD.OrderDate,ZODD.UserId,ISNULL(ZU.FirstName,'''')
						+'' ''+ISNULL(ZU.LastName,'''') UserName ,ZODD.PaymentTransactionToken ,ZODD.Total ,ZODD.OmsOrderDetailsId,ZODD.PoDocument,ZVGD.UserName CreatedBy , ZVGDI.UserName ModifiedBy
						,ZU.Email ,ZU.PhoneNumber ,ZODD.SubTotal ,ZODD.TaxCost ,ZODD.ShippingCost,ZODD.BillingPostalCode,
						(select top 1 ShipToPostalCode from ZnodeOmsOrderShipment where OmsOrderShipmentId in  (select OmsOrderShipmentId from ZnodeOmsOrderLineItems where OmsOrderDetailsId = ZODD.OmsOrderDetailsId)) AS ShippingPostalCode,
						ZODD.ModifiedDate AS OrderModifiedDate, ZPSS.PaymentDisplayName,isnull(Zoo.ExternalId,0) ExternalId
			  FROM ZnodeOmsOrder ZOO 
			  INNER JOIN ZnodeOmsOrderDetails ZODD ON (ZODD.OmsOrderId = ZOO.OmsOrderId)
			  INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZODD.portalId ) 
			  LEFT JOIN ZnodePaymentType ZPS ON (ZPS.PaymentTypeId = ZODD.PaymentTypeId )
			  LEFT JOIN  ZnodeOmsOrderStateShowToCustomer ZOSC ON (ZOSC.OmsOrderStateId = ZODD.OmsOrderStateId)
			  LEFT JOIN ZnodeOmsOrderState ZOS ON (ZOS.OmsOrderStateId = ZODD.OmsOrderStateId) 
			  LEFT JOIN ZnodeOmsPaymentState ZOPS ON (ZOPS.OmsPaymentStateId = ZODD.OmsPaymentStateId)
			  LEFT JOIN ZnodeUser ZU ON (ZU.UserId = ZODD.UserId) 
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGD ON (ZVGD.UserId = ZODD.CreatedBy )
			  LEFT JOIN [dbo].[View_GetUserDetails]  ZVGDI ON (ZVGDI.UserId = ZODD.ModifiedBy)
			  LEFT JOIN ZnodeShipping ZS ON (ZS.ShippingId = ZODD.ShippingId)
			  LEFT OUTER JOIN ZnodePaymentSetting ZPSS ON (ZPSS.PaymentSettingId = ZODD.PaymentSettingId)
			  WHERE  ZODD.IsActive = 1 
		       AND (EXISTS (SELECT TOP 1 1 FROM dbo.Fn_GetRecurciveUserId ('+CAST(@UserId AS VARCHAR(50))+','''+@ProcessType+''' ) FNRU WHERE FNRU.UserId = ZU.UserId ) OR '+CAST(@UserId AS VARCHAR(50))+' =0 ) 
		
			) 

		    , Cte_OrderLineItem AS 
		    (
     
			  SELECT ZOOLI.ProductName,ZOOLI.Price,Count(ZOOLI.OmsOrderLineItemsId)Over(PARTITION BY Ol.OmsOrderId Order by ZOOLI.OmsOrderDetailsId) CountId 
			  ,Row_Number()Over( PARTITION BY Ol.OmsOrderId Order BY ZOOLI.Price DESC, ZOOLI.ProductName) RowId,Ol.OmsOrderId
			  ,CAST(Case when ZRRLI.RmaRequestItemId IS NULL THEN 0 ELSE 1 END AS BIT )  IsInRMA  ,OL.CreatedBy ,OL.ModifiedBy
			  FROM ZnodeOmsOrderLineItems  ZOOLI 
			  LEFT JOIN OrderList OL ON ( OL.OmsOrderDetailsId = ZOOLI.OmsOrderDetailsId ) 
			  LEFT JOIN ZnodeRmaRequestItem ZRRLI ON (ZRRLI.OmsOrderLineItemsId = ZOOLI.OmsOrderLineItemsId ) 
			  WHERE ZOOLI.Quantity > 0
			  -- AND OrderLineItemRelationshipTypeId IS  NULL  AND  ParentOmsTemplateLineItemId IS nULL
			  
		    )
		    ,Cte_GetOrderData AS 
			(
			 
			SELECT distinct OL.*, CTOLI.ProductName,CountId ,IsInRMA 
			FROM OrderList OL 
			LEFT JOIN Cte_OrderLineItem CTOLI ON (CTOLI.OmsOrderId = OL.OmsOrderId AND CTOLI.RowId = 1 )
		
			
			)
			, Cte_OrderLineDescribe AS (
	
			SELECT distinct *,'+dbo.Fn_GetPagingRowId(@Order_BY,'OmsOrderId DESC,OmsOrderDetailsId DESC')+',Count(*)Over() CountNo
			FROM Cte_GetOrderData 
			WHERE 1= 1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
		    )
  		 
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			ProductName OrderItem,OmsOrderDetailsId,CountId ItemCount, PoDocument AS PODocumentPath,IsInRMA ,CreatedBy as CreatedByName ,ModifiedBy as ModifiedByName,RowId,CountNo,
			Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode, ShippingPostalCode,OrderModifiedDate,PaymentDisplayName, ExternalId
			FROM Cte_OrderLineDescribe 
			'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			
			PRINT @SQL 

			INSERT INTO @TBL_OrderList(OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,RowId,CountNo,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate,PaymentDisplayName ,ExternalId )           
		    EXEC(@SQL)

			SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_OrderList),0)
			
			SELECT OmsOrderId,OrderNumber,PortalId,StoreName,CurrencyCode,OrderState,ShippingId,
			PaymentTypeId,PaymentSettingId,PaymentStatus,PaymentType,ShippingStatus,OrderDate,UserId,UserName,PaymentTransactionToken,Total,
			OrderItem,OmsOrderDetailsId, ItemCount, PODocumentPath,IsInRMA ,CreatedByName ,ModifiedByName,Email,PhoneNumber,SubTotal,TaxCost,ShippingCost,BillingPostalCode,ShippingPostalCode,OrderModifiedDate,PaymentDisplayName,ExternalId
			FROM @TBL_OrderList	
           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetOmsOrderDetail @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetOmsOrderDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPaymentSetting]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPaymentSetting')
BEGIN 
	DROP PROCEDURE Znode_GetPaymentSetting
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetPaymentSetting]
(
  @WhereClause  NVARCHAR(Max)  = '',
  @Rows         INT            = 100,
  @PageNo       INT            = 1,
  @Order_BY     VARCHAR(1000)  = '',
  @RowsCount    INT OUT            ,
  @PortalId     INT            = 0 ,
  @ProfileId    INT            = 0 ,
  @UserId       INT			   = 0 , 
  @IsAssociated INT            = 0
)
AS 
 /*
   Summary :- This procedure is used to get the associated and Unassociated list of paymentsetting for portal and profile 

   Unit Testing 
  
   DECLARE @profilei int = 0 
   EXEC Znode_GetPaymentSetting @WhereClause = '', @RowsCount =  @profilei OUT ,@PortalId = 1 ,@ProfileId= 0 ,@IsAssociated = 0 ,@UserId= -1  SELECT  @profilei 

 */
 BEGIN 
  BEGIN TRY 
   SET NOCOUNT ON 
     DECLARE @SQL NVARCHAR(MAX)= '',@FilterWhereClause VARCHAR(2000) = '' ,@InternalOrderBy VARCHAR(2000)= ''

	 DECLARE @TBL_PaymentSetting TABLE (PaymentSettingId INT, PaymentApplicationSettingId INT,PaymentTypeId INT,PaymentGatewayId INT
										,PaymentName VARCHAR(600),IsActive BIT,DisplayOrder INT,IsTestMode BIT,IsPoDocUploadEnable BIT
										,IsPoDocRequire BIT,CreatedBy INT,CreatedDate DATETIME,ModifiedBy INT,ModifiedDate DATETIME 
										,PortalId INT,StoreName NVARCHAR(max),IsAssociated BIT,ProfileId int,ProfileName NVARCHAR(200),PaymentTypeName VARCHAr(500),GatewayName VARCHAR(300),RowId INT,CountNo INT 
										,PaymentDisplayName nvarchar(1200))
	 
	
     IF ISNULL(@UserId,0) <> 0  OR (ISNULL(@PortalId,0) > 0 AND ISNULL(@ProfileId,0) > 0)
	 BEGIN 
	  DECLARE  @PortalIds VARCHAR(2000) = '' ,@ProfileIds VARCHAR(2000) = '' ,@PaymentSettingIds VARCHAR(2000) 
	  IF ISNULL(@UserId,0) <> 0 
	  BEGIN 
	  SET @PortalIds = @PortalId
	  EXEC Znode_GetUserPortalAndProfile @UserId ,@PortalIds OUT,@ProfileIds OUT
	  END 
	  ELSE 
	  BEGIN 
	   SET @PortalIds = @PortalId 
	   SET @ProfileIds = @ProfileId
	  END 
	  EXEC Znode_GetCommonPaymentSetting @PortalIds,@ProfileIds,@PaymentSettingIds OUT

	  SET @FilterWhereClause = ' WHERE  PaymentSettingId IN ('+@PaymentSettingIds+') '

	 END 
		 
	IF ISNULL(@PortalId,0) > 0 AND ( ISNULL(@UserId,0) = 0 AND  ISNULL(@ProfileId,0) = 0)
	BEGIN  
	 SET @SQL = ' 
	             ;With Cte_PaymentSetting AS 
				 (
				 SELECT  ZPS.PaymentSettingId,ZPS.PaymentApplicationSettingId,ZPS.PaymentTypeId,ZPS.PaymentGatewayId,ZPS.PaymentName,ZPS.IsActive
						,ZPS.DisplayOrder,ZPS.IsTestMode,ZPS.IsPoDocUploadEnable,ZPS.IsPoDocRequire,ZPS.CreatedBy,ZPS.CreatedDate,ZPS.ModifiedBy,ZPS.ModifiedDate
						,ZP.PortalId,ZP.StoreName, CASE WHEN ZPPS.PortalPaymentId IS NULL THEN 0 ELSE 1 END IsAssociated, NULL ProfileId, NULL ProfileName,ZPT.Name PaymentTypeName,ZPG.GatewayName,ZPS.PaymentDisplayName				 
				 FROM ZnodePaymentSetting ZPS
				 INNER JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZPS.PaymentTypeId)
				 LEFT JOIN ZnodePaymentGateway ZPG ON (ZPG.PaymentGatewayId= ZPS.PaymentGatewayId)
				 CROSS APPLY ZnodePortal ZP 
				 LEFT JOIN ZnodePortalPaymentSetting ZPPS on ( ZPPS.PortalId = ZP.PortalId AND ZPPS.PaymentSettingId = ZPS.PaymentSettingId) 
				 )
				
				 '
	 SET @FilterWhereClause = ' WHERE PortalId = '+CAST(@PortalId AS VARCHAR(50))+' 
								AND  IsAssociated = '+CAST(@IsAssociated AS VARCHAR(50))+' '
	 SET @InternalOrderBy = ' PaymentSettingId,PortalId '
    END
	ELSE IF ISNULL(@ProfileId,0) > 0 AND ( ISNULL(@UserId,0) = 0 AND  ISNULL(@PortalId,0) = 0)
	BEGIN 
	  SET @SQL = ' 
	            ;With Cte_PaymenTSetting AS 
				 (
				 SELECT  ZPS.PaymentSettingId,ZPS.PaymentApplicationSettingId,ZPS.PaymentTypeId,ZPS.PaymentGatewayId,ZPS.PaymentName,ZPS.IsActive
						,ZPS.DisplayOrder,ZPS.IsTestMode,ZPS.IsPoDocUploadEnable,ZPS.IsPoDocRequire,ZPS.CreatedBy,ZPS.CreatedDate,ZPS.ModifiedBy,ZPS.ModifiedDate
						,NULL PortalId,NULL StoreName, CASE WHEN ZPPS.ProfilePaymentSettingId IS NULL THEN 0 ELSE 1 END IsAssociated ,ZP.ProfileId,ZP.ProfileName,ZPT.Name PaymentTypeName,ZPG.GatewayName,ZPS.PaymentDisplayName				 
				 FROM ZnodePaymentSetting ZPS
				 INNER JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZPS.PaymentTypeId)
				 LEFT JOIN ZnodePaymentGateway ZPG ON (ZPG.PaymentGatewayId= ZPS.PaymentGatewayId)
				 CROSS APPLY ZnodeProfile ZP 
				 LEFT JOIN ZnodeProfilePaymentSetting ZPPS on ( ZPPS.ProfileId = ZP.ProfileId AND ZPPS.PaymentSettingId = ZPS.PaymentSettingId) 
				 )
               '
	   SET @FilterWhereClause = ' WHERE ProfileId = '+CAST(@ProfileId AS VARCHAR(50))+' 
									AND  IsAssociated = '+CAST(@IsAssociated AS VARCHAR(50))+' '
	  SET @InternalOrderBy = ' PaymentSettingId,ProfileId '
	END 
	ELSE 
	BEGIN 
	  SET @SQL = ' 
	            ;With Cte_PaymenTSetting AS 
				 (
				 SELECT   ZPS.PaymentSettingId,ZPS.PaymentApplicationSettingId,ZPS.PaymentTypeId,ZPS.PaymentGatewayId,ZPS.PaymentName,ZPS.IsActive
						,ZPS.DisplayOrder,ZPS.IsTestMode,ZPS.IsPoDocUploadEnable,ZPS.IsPoDocRequire,ZPS.CreatedBy,ZPS.CreatedDate,ZPS.ModifiedBy,ZPS.ModifiedDate
						,NULL PortalId,NULL StoreName, NULL IsAssociated ,NULL ProfileId,NULL ProfileName,ZPT.Name PaymentTypeName,ZPG.GatewayName	,ZPS.PaymentDisplayName			 
				 FROM ZnodePaymentSetting ZPS
				 INNER JOIN ZnodePaymentType  ZPT ON (ZPT.PaymentTypeId = ZPS.PaymentTypeId)
				 LEFT JOIN ZnodePaymentGateway ZPG ON (ZPG.PaymentGatewayId= ZPS.PaymentGatewayId)
				  ) '
	 SET @FilterWhereClause = CASE WHEN @FilterWhereClause ='' THEN ' WHERE 1=1 ' ELSE @FilterWhereClause END 
	 SET @InternalOrderBy = ' PaymentSettingId '
	END 

	SET @SQL = @SQL+ ', Cte_PaymentSettingFilter AS 
				 (
				    
					SELECT PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName , PaymentTypeName,GatewayName,PaymentDisplayName
						,'+dbo.Fn_GetPagingRowId(@Order_BY,@InternalOrderBy)+',Count(*)Over() CountNo

					FROM Cte_PaymenTSetting 
				    '+@FilterWhereClause+'
					'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
				 ) 
				 
				 SELECT PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName,PaymentTypeName,GatewayName,PaymentDisplayName,RowId ,CountNo
				 FROM Cte_PaymentSettingFilter '
				 +[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)
    
	 INSERT INTO @TBL_PaymentSetting (PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName,PaymentTypeName,GatewayName,PaymentDisplayName,RowID ,CountNo)
	 EXEC (@SQL)

	 SET @RowsCount = ISNULL((SELECT Top 1 CountNo FROM @TBL_PaymentSetting),0)
    
	 SELECT PaymentSettingId,PaymentApplicationSettingId,PaymentTypeId,PaymentGatewayId,PaymentName,IsActive
						,DisplayOrder,IsTestMode,IsPoDocUploadEnable,IsPoDocRequire,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate
						,PortalId,StoreName, ProfileId, ProfileName,PaymentTypeName,GatewayName,PaymentDisplayName
	 FROM @TBL_PaymentSetting
	 order by DisplayOrder


  END TRY 
  BEGIN CATCH 
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPaymentSetting @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@ProfileId='+CAST(@ProfileId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
         			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPaymentSetting',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
  END CATCH
 END
GO
PRINT N'Altering [dbo].[Znode_GetPimProductAttributeFamilyId]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPimProductAttributeFamilyId')
BEGIN 
	DROP PROCEDURE Znode_GetPimProductAttributeFamilyId
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetPimProductAttributeFamilyId]
(   @PimProductId    TransferId READONLY,--  VARCHAR(MAX) = '',
    @IsMultipleProduct BIT          = 0)
AS
/*
     Summary : - This procedure is used to find the attribute family of product except default attribute family 
     Unit Testing 
	 begin tran
     Exec Znode_GetPimProductAttributeFamilyId 7
	 rollback tran
*/
     BEGIN
	 BEGIN TRAN PimProductAttributeFamilyId
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @DefaultFamilyId INT= dbo.Fn_GetDefaultPimProductFamilyId();
             DECLARE @TBL_PimProductId TABLE(PimProductId INT);

             --INSERT INTO @TBL_PimProductId SELECT Item FROM dbo.Split(@PimProductId, ',') SP;
			 INSERT INTO @TBL_PimProductId 
			 SELECT Id FROM @PimProductId

             IF @IsMultipleProduct = 0
                 BEGIN
                     SELECT PimAttributeFamilyId AS ProductFamily FROM ZnodePimProduct AS ZPP 
					 WHERE EXISTS(SELECT TOP 1 1 FROM @TBL_PimProductId TBP WHERE ZPP.PimProductId = TBP.PimProductId);
                 END;
             ELSE
                 BEGIN
                     SELECT PimAttributeFamilyId AS ProductFamily,ZPP.PimProductId FROM ZnodePimProduct AS ZPP
					 WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PimProductId TBP WHERE ZPP.PimProductId = TBP.PimProductId );
                 END;
				 
		 COMMIT TRAN PimProductAttributeFamilyId;
         END TRY
         BEGIN CATCH
          DECLARE @Status BIT ;
		  SET @Status = 0;
		  --DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimProductAttributeFamilyId @PimProductId = '+cast (@PimProductId AS VARCHAR(50))+',@IsMultipleProduct='+CAST(@IsMultipleProduct AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  ROLLBACK TRAN PimProductAttributeFamilyId;

          --EXEC Znode_InsertProcedureErrorLog
          --  @ProcedureName = 'Znode_GetPimProductAttributeFamilyId',
          --  @ErrorInProcedure = @Error_procedure,
          --  @ErrorMessage = @ErrorMessage,
          --  @ErrorLine = @ErrorLine,
          --  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPimProductAttributeValues]...';


GO
ALTER   PROCEDURE [dbo].[Znode_GetPimProductAttributeValues]
(
    @ChangeFamilyId INT = 0,
    @PimProductId   INT = 0,
    @LocaleId       INT = 0,
    @IsCopy         BIT = 0
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and Product attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC Znode_GetPimProductAttributeValues 0, 198,1,0
	 ROLLBACK TRAN

*/	 
     BEGIN
	     BEGIN TRAN PimProductAttributeValues
         BEGIN TRY
             DECLARE  @V_LocaleId INT= @LocaleId, @LocaleIdDefault INT= dbo.Fn_GetDefaultLocaleId(), @PimAttributeFamilyId  INT; 
			 DECLARE @PimAttributeId VARCHAR(max),@PimProductIds  VARCHAR(max) 
             
			 DECLARE @TBL_PimAttribute TABLE (PimAttributeId INT ,ParentPimAttributeId INT ,AttributeTypeId INT ,AttributeCode VARCHAR(600),IsRequired BIT,IsLocalizable BIT,IsFilterable BIT
						,IsSystemDefined BIT,IsConfigurable BIT ,IsPersonalizable BIT,DisplayOrder INT ,HelpDescription NVARCHAR(max),IsCategory BIT,IsHidden BIT,CreatedDate DATETIME ,ModifiedDate DATETIME 
						,AttributeName NVARCHAR(max) ,AttributeTypeName VARCHAR(600) )
			 
			 DECLARE @TBL_PimAttributeDefault TABLE (PimAttributeId INT,AttributeDefaultValueCode VARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder int,PimAttributeDefaultValueId INT )
			 DECLARE @TBL_AttributeValue TABLE (PimProductId INT , AttributeValue NVARCHAR(max),AttributeCode VARCHAR(300),PimAttributeId INT)
			 DECLARE @TBL_AttributeFamily TABLE (PimAttributeFamilyId INT ,FamilyCode VARCHAR(600),IsSystemDefined BIT ,IsDefaultFamily BIT ,IsCategory BIT ,AttributeFamilyName NVARCHAR(max))
			 DECLARE @TBL_MultiSelectAttribute TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			 DECLARE @TBL_AttributeValueFinale TABLE (PimProductId INT , AttributeValue NVARCHAR(max),AttributeCode VARCHAR(300),PimAttributeId INT)
			 INSERT INTO @TBL_MultiSelectAttribute (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM [dbo].[Fn_GetProductMultiSelectAttributes] ()
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()
			   --- Get the default family id 
			 IF @ChangeFamilyId = 0 
			   BEGIN 			    
				SET @PimAttributeFamilyId = ISNULL((SELECT TOP 1 PimAttributeFamilyId FROM ZnodePimProduct ZPP WHERE PimProductId = @PimProductId ), dbo.Fn_GetDefaultPimProductFamilyId() )
			   END   
		     ELSE 
			   BEGIN 
				SET @PimAttributeFamilyId = @ChangeFamilyId
			   END 
			 
			 ;With Cte_AttributeIdss AS 
			(SELECT PimAttributeId FROM ZnodePimFamilyGroupMapper  ZPFGM 
			WHERE PimAttributeFamilyId = @PimAttributeFamilyId 
			AND NOT EXISTS
			(SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute ZPCPA WHERE ZPCPA.PimAttributeId = ZPFGM.PimAttributeId AND ZPCPA.PimProductId = @PimProductId)
               UNION  
                SELECT PimAttributeId FROM ZnodePimAttributeValue ZPAV WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimAttribute ZPA WHERE ZPA.PimAttributeId = ZPAV.PimAttributeId AND ZPA.IsPersonalizable = 1 ) 
			  AND ZPAV.PimProductId = @PimProductId AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute ZPCPA WHERE ZPCPA.PimAttributeId = ZPAV.PimAttributeId AND ZPCPA.PimProductId = @PimProductId))
			   
			  SELECT  @PimAttributeId = SUBSTRING ((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM Cte_AttributeIdss FOR XML PATH ('')),2,4000)
			 
			  INSERT INTO @TBL_PImAttribute (PimAttributeId,ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable
			  ,IsSystemDefined,IsConfigurable,IsPersonalizable,DisplayOrder,HelpDescription,IsCategory,IsHidden,CreatedDate,ModifiedDate,AttributeName ,AttributeTypeName )
			  EXEC [dbo].[Znode_GetPimAttributesDetails] @PimAttributeId,@LocaleId
		
			  INSERT INTO @TBL_AttributeValue (PimProductId,AttributeValue,AttributeCode,PimAttributeId)
			  EXEC [dbo].[Znode_GetProductsAttributeValueWithCode]  @PimProductId , @PimAttributeId ,@LocaleId
		
			  INSERT INTO @TBL_PimAttributeDefault (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
			  EXEC [dbo].[Znode_GetAttributeDefaultValueLocaleNew] @PimAttributeId,@LocaleId


			  INSERT INTO @TBL_AttributeFamily (PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName)
			  EXEC Znode_GetFamilyValueLocale  @PimAttributeFamilyId, @LocaleId 


				--  update the media path 
			  ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+dbo.Fn_GetMediaThumbnailMediaPath( zm.PATH )
			   FROM ZnodeMedia AS ZM
			   INNER JOIN @TBL_AttributeValue AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue , SUBSTRING( ( SELECT ','+AttributeValue
			   FROM  @TBL_AttributeValue AS TBAI
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) MediaIds  
			   FROM @TBL_AttributeValue AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue+'~'+CTPM.MediaIds 
			  FROM @TBL_AttributeValue TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;
				
		

				-- IF IsCopy Is True then Unique value are blank 
			   ;With Cte_UniqueAttributeId AS  
			   (SELECT c.PimAttributeId FROM ZnodePimAttributeValidation AS c INNER JOIN ZnodeAttributeInputValidation AS d ON(c.InputValidationId = d.InputValidationId)
			   WHERE d.Name = 'UniqueValue' AND c.Name = 'true' AND @Iscopy = 1 GROUP BY c.PimAttributeId)

			   UPDATE TBAV SET AttributeValue = '' FROM @TBL_AttributeValue  TBAV INNER JOIN Cte_UniqueAttributeId CTUA ON (CTUA.PimAttributeId = TBAV.PimAttributeId)

			   INSERT INTO @TBL_AttributeValueFinale (PimProductId  , AttributeValue ,AttributeCode ,PimAttributeId)

			   SELECT DISTINCT  PimProductId  ,AttributeValue

													 ,AttributeCode ,PimAttributeId
			   FROM @TBL_AttributeValue TBLA 
			  
			  --;With Cte_getAttributevalues AS 
			  --(
			  --SELECT ZPAV.PimProductId ,PimAttributeId ,SUBSTRING ((SELECT ','+ AttributeDefaultValueCode FROM @TBL_PimAttributeDefault ZPADF 
					--			WHERE (ZPADF.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId)
					--			FOR XML PATH ('') ),2,4000) AttributeValue 
			  --FROM  ZnodePimAttributeValue ZPAV
			  --INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId )
			  --WHERE PimProductId = @PimProductId
			  --)

			  --UPDATE TRTR
			  --SET  AttributeValue = CTEON.AttributeValue
			  --FROM @TBL_AttributeValueFinale  TRTR 
			  --INNER JOIN Cte_getAttributevalues CTEON ON (TRTR.PimProductId = CTEON.PimProductId AND TRTR.PimAttributeId = CTEON.PimAttributeId )
			 
			
			   
			   SELECT TBAF.PimAttributeFamilyId,FamilyCode,TBPA.PimAttributeId,PimAttributeGroupId,TBPA.AttributeTypeId,AttributeTypeName,TBPA.AttributeCode,
						IsRequired,IsLocalizable,IsFilterable,AttributeName, TBAV.AttributeValue  ,PimAttributeValueId,ZPV.PimAttributeDefaultValueId,
						TBADV.AttributeDefaultValueCode ,AttributeDefaultValue AS AttributeDefaultValue,ISNULL(NULL, 0) AS RowId,ISNULL(IsEditable, 1) AS IsEditable,
						ZAIV.ControlName,ZAIV.Name AS ValidationName,ZAIVR.ValidationName AS SubValidationName,ZAIVR.RegExp,ZPAV.Name AS ValidationValue,
						CAST(CASE WHEN ZAIVR.RegExp IS NULL THEN 0 ELSE 1 END AS BIT) AS IsRegExp,HelpDescription
				FROM @TBL_PimAttribute  TBPA 
				LEFT JOIN @TBL_AttributeValueFinale  TBAV ON (TBAV.PimAttributeId = TBPA.PimAttributeId)
				LEFT JOIN @TBL_PimAttributeDefault TBADV ON (TBADV.PimAttributeId = TBPA.PimAttributeId)
				LEFT JOIN ZnodePimAttributeValidation AS ZPAV ON(ZPAV.PimAttributeId = TBPA.PimAttributeId)
				LEFT JOIN ZnodeAttributeInputValidation AS ZAIV ON(ZPAV.InputValidationId = ZAIV.InputValidationId)
				LEFT JOIN ZnodeAttributeInputValidationRule AS ZAIVR ON(ZPAV.InputValidationRuleId = ZAIVR.InputValidationRuleId)
				LEFT JOIN ZnodePimAttributeValue ZPV ON (ZPV.PimProductId = TBAV.PimProductId AND ZPV.PimAttributeId = TBAV.PimAttributeId)
				LEFT JOIN @TBL_AttributeFamily TBAF ON (TBAF.PimAttributeFamilyId = @PimAttributeFamilyId)
				LEFT JOIN ZnodePimFamilyGroupMapper ZPFG ON (ZPFG.PimAttributeFamilyId = TBAF.PimAttributeFamilyId AND ZPFG.PimAttributeId = TBPA.PimAttributeId)
				WHERE TBPA.AttributeCode <> 'PublishStatus'
				ORDER BY TBPA.DisplayOrder,	TBADV.DisplayOrder
		
		 COMMIT TRAN PimProductAttributeValues;
         END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimProductAttributeValues @ChangeFamilyId='+cast (@ChangeFamilyId AS VARCHAR(50))
		    +',@PimProductId = '+cast (@PimProductId AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@IsCopy='+CAST(@IsCopy AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  ROLLBACK TRAN PimProductAttributeValues;

          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetPimProductAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetProductIdForPaging]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetProductIdForPaging')
BEGIN 
	DROP PROCEDURE Znode_GetProductIdForPaging
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetProductIdForPaging]
(
	@WhereClauseXML  XML           = NULL,
	@Rows            INT           = 10,
	@PageNo          INT           = 1,
	@Order_BY        VARCHAR(1000) = '',
	@RowsCount       INT OUT,
	@LocaleId        INT           = 1,
	@AttributeCode   VARCHAR(MAX)  = '',
	@PimProductId    TransferId READONLY , 
	@IsProductNotIn  BIT           = 0,
	@OutProductId    VARCHAR(MAX)	= 0 OUT )
AS	
 /* Summary :- This procedure is used to find the product ids with paging 
     Unit Testing
	 begin tran
	 DECLARE @ttr NVARCHAR(max)
	 DECLARE @PimProductId TransferId 
	 INSERT INTO @PimProductId
	 SELECT -1
     EXEC Znode_GetProductIdForPaging   N'' ,  10 ,  2 ,'productname desc',0, 1, '',@PimProductId ,0 ,@ttr OUT SELECT @ttr
	 rollback tran

	 begin tran

	 DECLARE @ttr NVARCHAR(max)
	 DECLARE @PimProductId TransferId 
	 INSERT INTO @PimProductId
	 SELECT 1
	EXEC Znode_GetProductIdForPaging N'', 50,1,'productname desc',0,1,'',@PimProductId,0,@ttr OUT SELECT @ttr
  rollback tran





	Create Index ZnodePimAttributeValue_ForPaging_Include ON  ZnodePimAttributeValue(PimAttributeId) include (PimAttributeValueId  ,PimProductId,CreatedDate,ModifiedDate )
	Create Index ZnodePimProductAttributeDefaultValue_ForPaging_Include ON  ZnodePimProductAttributeDefaultValue(PimAttributeValueId) include (PimAttributeDefaultValueId)
	Create Index ZnodePimFamilyGroupMapper_PimAttributeFamilyId ON ZnodePimFamilyGroupMapper(PimAttributeFamilyId,PimAttributeId)

	create  index IDX_ZnodePimAttributeValue_PimAttributeId on ZnodePimAttributeValue(PimAttributeId)
*/
BEGIN
 BEGIN TRY 

  SET NOCOUNT ON 

       DECLARE @SQL NVARCHAR(MAX) = '',
			   @InternalSQL NVARCHAR(MAX) = ''
	   DECLARE @UseCtePart VARCHAR(1000) = ''
	   DECLARE @InternalOrderby VARCHAR(1000) = ''
	   DECLARE @InternalWhereClause NVARCHAR(MAX) = '',
			   @InternalProductWhereClause NVARCHAR(MAX) = '',
			   @InternalUpperWhereClause NVARCHAR(MAX)='',
			   @InternaleProductJoin NVARCHAR(MAX) = ''

	   DECLARE @TBL_PimProductId  TABLE (PimProductId INT  , CountNo INT)
	   DECLARE @TBL_DefaultAttributeId TABLE (PimAttributeId INT PRIMARY KEY , AttributeCode VARCHAR(600))
	  
	   DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId()
	   DECLARE @PimProductIds TransferId 
	   INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
	   SELECT PimAttributeId,AttributeCode FROM  [dbo].[Fn_GetDefaultAttributeId] ()

	   DECLARE @TBL_Attributeids TABLE(PimAttributeId INT , AttributeCode VARCHAr(600))

	  
	   INSERT INTO @PimProductIds (id)
	   SELECT Id
	   FROM @PimProductId 


	   IF  EXISTS (SELECT TOP 1 1 FROM @PimProductId )  AND @IsProductNotIn = 1 
	   BEGIN 
	    	     SET @InternalWhereClause = ' WHERE NOT EXISTS ( SELECT TOP 1 1 FROM @TBL_ProductFilter TBLFP WHERE  TBLFP.PimProductId = ZPP.PimProductId )'
	   END 
	   ELSE IF @IsProductNotIn = 0 AND EXISTS (SELECT TOP 1 1 FROM @PimProductId )  
	   BEGIN 
		  SET @InternalWhereClause = ''
		  SET @InternalUpperWhereClause = ' A '
	   END 	  

	  -- if Not Exists (select top 1 1 from Sysobjects where name  = '@TBL_DefaultValue') 
	  -- Begin 
			--Create TABLE @TBL_DefaultValue  (PimAttributeId INT,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT 
		 --   Index Ind_PimAttributeDefaultValueId (PimAttributeDefaultValueId))
	  -- END
	 

	   SET @SQl = ' 
				DECLARE @TBL_ProductFilter TABLE (PimProductId INT PRIMARY KEY,RowId INT IDENTITY(1,1)  ) '

				IF (@AttributeCode like  '%highlights%' or @AttributeCode like '%brand%' or @AttributeCode like '%vendor%' )
				BEGIN
			
					SET @SQl = @SQl + 'INSERT INTO @TBL_ProductFilter  (PimProductId )
										SELECT a.Id 
										FROM @TransferId a
										INNER JOIN ZnodePimAttributeValue ZPAV ON a.Id = ZPAV.PimProductId
										LEFT JOIN ZnodePimAttribute PA ON ( PA.PimAttributeId = ZPAV.PimAttributeId ) 
										WHERE PA.AttributeCode in (select top 1 item from dbo.Split ('''+@AttributeCode+''','',''))
										ORDER BY ZPAV.ModifiedDate desc;'

				END
				ELSE
				BEGIN 

					SET @SQl = @SQl + 'INSERT INTO @TBL_ProductFilter  (PimProductId )
										SELECT Id 
										FROM @TransferId '
				END

				
				SET @SQl = @SQl+'							
								DECLARE @TBL_PimProductId TABLE (PimProductId  INT PRIMARY KEY,RowId INT, CountNo INT)
								;With Cte_PimProductId AS
								(  
										SELECT ZPP.PimProductId , ZPP.PimAttributeFamilyId , '+CASE WHEN @InternalUpperWhereClause <> '' THEN ' TBPF.RowId ' ELSE ' 1 ' END+'  DisplayOrder 
										FROM ZnodePimProduct ZPP 
									'+CASE WHEN @InternalUpperWhereClause <> '' AND @InternalWhereClause = '' THEN ' INNER JOIN @TBL_ProductFilter TBPF ON (TBPF.PimProductId = ZPP.PimProductId ) ' ELSE '' END +'
										'+@InternalWhereClause+' 
								) '
	
	 SET @AttributeCode = @AttributeCode +CASE WHEN @Order_By <> '' THEN ','+ REPLACE(REPLACE(RTRIM(LTRIM(@Order_By)),'DESC',''),'ASC','') ELSE '' END 
	 
	 IF @AttributeCode = ''
	 BEGIN 
	 SET @AttributeCode = SUBSTRING( (SELECT ','+AttributeCode  FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000)	
	 END 

	   INSERT INTO @TBL_Attributeids (PimAttributeId, AttributeCode )
	   SELECT PimAttributeId,AttributeCode
	   FROM [dbo].[Fn_GetProductGridAttributes]() FNGA  
	   WHERE EXISTS (SELECT Top 1 1 FROM dbo.split(@AttributeCode , ',') SP WHERE sp.Item = FNGA.AttributeCode   )

	  -- 	 SELECT @AttributeCode

	   

	    DECLARE @PimAttributeIds VARCHAR(MAX) = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) 
																		FROM @TBL_Attributeids FNGA  
																		FOR XML PATH ('') ) ,2,4000)


	SET @InternalOrderby = dbo.FN_trim(REPLACE(REPLACE(@Order_By,'DESC',''),'ASC',''))
	
	IF EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetProductGridAttributes]() FN WHERE FN.AttributeCode = @InternalOrderby) OR @InternalOrderby = 'AttributeFamily'
	BEGIN
		--If @InternalOrderby = 'assortment'
		--Begin
		--	SET @InternalWhereClause = ' AttributeCode = ''SKU'' ' 
		--End
	 --   Else
		--Begin 
		
		SET @InternalWhereClause = 'AttributeCode = '''+@InternalOrderby+''''
		--END 
				SET @InternalOrderby = 'AttributeValue '+CASE WHEN @Order_By LIKE '% DESC' THEN 'DESC' ELSE 'ASC' END
				
	END
	ELSE IF  @InternalOrderby IN ('CreatedDate','ModifiedDate')
	
	BEGIN
	
	 SET @InternalOrderby = @Order_By
	 SET @InternalWhereClause = ' AttributeCode = ''SKU'' ' 
	END 
	ELSE 
	BEGIN 
	 SET @InternalOrderby = CASE WHEN @InternalOrderby = 'DisplayOrder' THEN @Order_By ELSE ' CTLA.PimProductId DESC ' END  
	 SET @InternalWhereClause = '' 
	END    

  
    IF CAST(@WhereClauseXML AS NVARCHAR(max)) NOT LIKE '%AttributeCode%' AND @InternalWhereClause = '' 
	BEGIN 
	
	 SET @SQL = @SQL + ' , Cte_FilterData AS 
								( SELECT PimProductId ,'+[dbo].[Fn_GetPagingRowId](@InternalOrderby,'PimProductId DESC')+',Count(*)Over() CountNo
								   FROM Cte_PimProductId CTLA
								 )
								 INSERT INTO  @TBL_PimProductId  (PimProductId,RowId,CountNo )
								 SELECT DISTINCT PimProductId,RowId ,CountNo
								 FROM Cte_FilterData 
								 '+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)


	END 
	ELSE IF CAST(@WhereClauseXML AS NVARCHAR(max)) NOT LIKE '%AttributeCode%' AND @InternalWhereClause <> '' 
	BEGIN

						 
	   SET @InternalSQL = '
						   DECLARE @TBL_FamilyLocale  TABLE(PimAttributeFamilyId INT PRIMARY KEY ,FamilyCode NVARCHAR(600),IsSystemDefined BIT,IsDefaultFamily BIT,IsCategory BIT ,AttributeFamilyName NVARCHAR(max) ) 
						   DECLARE @TBL_DefaultValue  TABLE(PimAttributeId INT,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT )
						   
						   INSERT INTO @TBL_FamilyLocale(PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName)
						   EXEC [dbo].[Znode_GetFamilyValueLocale] '''','+CAST(@LocaleId AS VARCHAR(50))+'	
						   
						   INSERT INTO @TBL_DefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
						   EXEC [dbo].[Znode_GetAttributeDefaultValueLocaleNew] '''+@PimAttributeIds+''','+CAST(@LocaleId AS VARCHAR(50))+''

							SET @SQL = @SQL + ' ,Cte_getAttributeValue AS 
									(	
										SELECT CTP.PimProductId , ZPA.AttributeCode  ,ZPAV.PimAttributeValueId  ,ZPA.PimAttributeId
										,ZPAV.CreatedDate,ZPAV.ModifiedDate,CTP.DisplayOrder     
										FROM Cte_PimProductId CTP             
										INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimProductId = CTP.PimProductId)             
										INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)    
										INNER JOIN ZnodePimFamilyGroupMapper ZPFGM ON (ZPFGM.PimAttributeFamilyId = CTP.PimAttributeFamilyId                      
										AND ZPFGM.PimAttributeId = ZPA.PimAttributeId)   
									)
		                            , Cte_CollectData AS 
									( 
										SELECT ZPA.PimProductId , ZPA.AttributeCode  ,  ZPAVL.AttributeValue ,ZPA.CreatedDate,ZPA.ModifiedDate,ZPA.DisplayOrder             
										FROM Cte_getAttributeValue   ZPA INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPA.PimAttributeValueId = ZPAVL.PimAttributeValueId ) 
										WHERE  ZPA.PimAttributeId IN ('+@PimAttributeIds+') AND ZPAVL.LocaleId in  (' + CAST(@DefaultLocaleId AS VARCHAR(50)) +')
										
										UNION ALL 
										
										SELECT CTP.PimProductId , ''AttributeFamily'', TBFM.AttributeFamilyName AttributeValue,NULL,NULL,CTP.DisplayOrder
										FROM Cte_PimProductId CTP INNER JOIN @TBL_FamilyLocale  TBFM ON (TBFM.PimAttributeFamilyId = CTP.PimAttributeFamilyId)
										

										UNION ALL 
										
										SELECT DISTINCT PimProductId, AttributeCode , SUBSTRING((SELECT '',''+AttributeDefaultValue 
										FROM @TBL_DefaultValue TBDV WHERE (TBDV.PimAttributeDefaultValueId = ZPPADV.PimAttributeDefaultValueId )                            
										FOR XML PATH ('''')),2,4000) AttributeValue  , CTETY.CreatedDate,CTETY.ModifiedDate,DisplayOrder         
										FROM ZnodePimProductAttributeDefaultValue ZPPADV INNER JOIN Cte_getAttributeValue CTETY 
										ON (CTETY.PimAttributeValueId = ZPPADV.PimAttributeValueId)
										WHERE  CTETY.PimAttributeId IN ('+@PimAttributeIds+')
								 )
								 ,Cte_GetAttributeValueI AS 
								 (
									SELECT PimProductId,'+CASE WHEN @InternalOrderby LIKE '%DisplayOrder%' THEN 'DisplayOrder' ELSE   'AttributeValue'  END+'  , 1 DefaultOrderBy      
									FROM  Cte_CollectData CTCD
									WHERE '+@InternalWhereClause+'
									UNION ALL 
									SELECT CTP.PimProductId , NULL , 2 
									FROM Cte_PimProductId CTP 	
									where NOT EXISTS (SELECT TOP 1 1 FROM  Cte_CollectData CTCD
									WHERE '+@InternalWhereClause+' AND CTCD.PimProductId = CTP.PimProductId  )				  
								 )
								, Cte_FilterData As 
								(
									SELECT DISTINCT PimProductId,'+[dbo].[Fn_GetPagingRowId](' DefaultOrderBy , '+@InternalOrderby+' ','PimProductId DESC')+'
									FROM Cte_GetAttributeValueI CTCD
								 )
								,Cte_GetAllData AS 
								(
									SELECT PimProductId ,RowId ,Count(*)Over() CountNo
									FROM Cte_FilterData
									GROUP BY PimProductId ,RowId 
								)
								INSERT INTO  @TBL_PimProductId  (PimProductId,RowId,CountNo )
								SELECT  PimProductId,RowId ,CountNo
								FROM  Cte_GetAllData
								'+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)

		SET @SQL =  @InternalSQL + @SQL
			
	    END
		ELSE 
		BEGIN 
		  SET @InternalSQL = ''
		  DECLARE @AttachINDefault  VARCHAr(max) = ''
		  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeValueLocale AS CTAL'+CAST(ID AS VARCHAR(50))
							+' ON ( CTAL'+CAST(ID AS VARCHAR(50))+'.PimProductId = CTAL'+CASE WHEN ID-1= 0 THEN '' ELSE CAST(ID-1 AS VARCHAR(50)) END +'.PimProductId AND '+
							REPLACE(REPLACE(WhereClause,'AttributeCode ',' CTAL'+CAST(ID AS VARCHAR(50))+'.AttributeCode '),' AttributeValue ',' CTAL'+CAST(ID AS VARCHAR(50))+'.AttributeValue ')+' )'
							FROM dbo.Fn_GetWhereClauseXML(@WhereClauseXML)      
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')

          SET @SQL = @SQL + '   ,Cte_getAttributeValue AS 
								(	
										SELECT CTP.PimProductId , ZPA.AttributeCode  ,ZPAV.PimAttributeValueId  ,ZPA.PimAttributeId
														,ZPAV.CreatedDate,ZPAV.ModifiedDate,CTP.DisplayOrder     
										FROM Cte_PimProductId CTP             
										INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimProductId = CTP.PimProductId)       
										INNER JOIN ZnodePimAttribute ZPA ON (ZPAV.PimAttributeId = ZPA.PimAttributeId)    
										INNER JOIN ZnodePimFamilyGroupMapper ZPFGM ON 
										(CTP.PimAttributeFamilyId = ZPFGM.PimAttributeFamilyId AND ZPFGM.PimAttributeId = ZPA.PimAttributeId) 
										WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.split('''+@AttributeCode+''','','') SP WHERE Sp.Item = ZPA.AttributeCode )  OR NOT EXISTS (SELECT TOP 1 1 FROM dbo.split('''+@AttributeCode+''','','') ))
								)'
		  IF EXISTS (SELECT Top 1 1 FROM @TBL_Attributeids TBH WHERE NOT EXISTS (SELECT Top 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBH.PimAttributeId)
		  AND TBH.AttributeCode <> 'AttributeFamily' )
         BEGIN 
		    SET @SQL = @SQL+' , Cte_CollectData AS 
								( 
									SELECT ZPA.PimProductId , ZPA.AttributeCode  ,  ZPAVL.AttributeValue,ZPAVL.LocaleId ,
											ZPA.PimAttributeId,ZPA.CreatedDate,ZPA.ModifiedDate,ZPA.DisplayOrder             
									FROM Cte_getAttributeValue ZPA          
									INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPA.PimAttributeValueId  = ZPAVL.PimAttributeValueId )
									where ZPA.PimAttributeId IN ('+@PimAttributeIds+')
									AND  ZPAVL.LocaleId IN ( '+CAST(@LocaleId AS VARCHAR(50))+','+CAST(@DefaultLocaleId AS VARCHAR(50))+')
								)
								, Cte_FilterDataLocale AS 
								(
										SELECT PimProductId,AttributeCode,AttributeValue,PimAttributeId,CreatedDate,ModifiedDate,DisplayOrder
										FROM Cte_CollectData
										WHERE LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+'
										UNION All 
										SELECT M.PimProductId,M.AttributeCode,M.AttributeValue ,M.PimAttributeId,M.CreatedDate,M.ModifiedDate,M.DisplayOrder
										FROM Cte_CollectData M 
										WHERE LocaleId = '+CAST(@DefaultLocaleId AS VARCHAR(50))+'
										AND NOT Exists (Select TOP 1 1  from Cte_CollectData X where  M.PimProductId = X.PimProductId AND M.AttributeCode = X.AttributeCode And X.localeId =  '+CAST(@LocaleId AS VARCHAR(50))+' )
								)'

						SET @AttachINDefault =			'SELECT PimProductId,AttributeCode,CTFD.AttributeValue ,CreatedDate,ModifiedDate,CTFD.DisplayOrder	 
										FROM Cte_FilterDataLocale CTFD'

		 END 
		 
		 IF EXISTS (SELECT Top 1 1 FROM @TBL_Attributeids TBH WHERE EXISTS (SELECT Top 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBH.PimAttributeId))
         BEGIN 
		 SET  @InternalSQL = 'DECLARE @TBL_DefaultValue  TABLE(PimAttributeId INT,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  ) 
		                     INSERT INTO @TBL_DefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
						     EXEC [dbo].[Znode_GetAttributeDefaultValueLocaleNew] '''+@PimAttributeIds+''','+CAST(@LocaleId AS VARCHAR(50))
	   
			  SET @AttachINDefault = CASE WHEN @AttachINDefault = '' THEN '' ELSE @AttachINDefault+' UNION ALL ' END + ' SELECT PimProductId, AttributeCode , 
										SUBSTRING(
											(SELECT '',''+AttributeDefaultValue FROM @TBL_DefaultValue TBDV 
											WHERE (TBDV.PimAttributeDefaultValueId = ZPPADV.PimAttributeDefaultValueId )                            
											FOR XML PATH (''''))
										,2,4000) 
										AttributeValue  , CTETY.CreatedDate,CTETY.ModifiedDate,DisplayOrder         
										FROM Cte_getAttributeValue CTETY
										INNER JOIN  ZnodePimProductAttributeDefaultValue ZPPADV ON (CTETY.PimAttributeValueId =ZPPADV.PimAttributeValueId  )
										WHERE  CTETY.PimAttributeId IN ('+@PimAttributeIds+') '

		 END
		 IF EXISTS (SELECT Top 1 1 FROM @TBL_Attributeids TBH WHERE AttributeCode = 'attributefamily')
         BEGIN 
		 SET  @InternalSQL = @InternalSQL +' DECLARE @TBL_FamilyLocale  TABLE(PimAttributeFamilyId INT PRIMARY KEY ,FamilyCode NVARCHAR(600),IsSystemDefined BIT,IsDefaultFamily BIT,IsCategory BIT ,AttributeFamilyName NVARCHAR(max) ) 
		                    INSERT INTO @TBL_FamilyLocale(PimAttributeFamilyId,FamilyCode,IsSystemDefined,IsDefaultFamily,IsCategory,AttributeFamilyName)
						   EXEC [dbo].[Znode_GetFamilyValueLocale] '''','+CAST(@LocaleId AS VARCHAR(50))
						   
			SET @AttachINDefault = CASE WHEN @AttachINDefault = '' THEN '' ELSE @AttachINDefault+' UNION ALL '	END + 'SELECT CTP.PimProductId , ''AttributeFamily'' AttributeCode, TBFM.AttributeFamilyName AttributeValue,NULL CreatedDate, NULL ModifiedDate,DisplayOrder	
										FROM Cte_PimProductId CTP 
										INNER JOIN @TBL_FamilyLocale  TBFM ON (TBFM.PimAttributeFamilyId = CTP.PimAttributeFamilyId)'
		 END
		

								--SET  @InternalProductWhereClause =' INNER JOIN Cte_AttributeValueLocale AS CTAL1 ON ( CTAL1.PimProductId = CTAL.PimProductId AND  CTAL1.AttributeCode = ''ProductType'' and CTAL1.AttributeValue  = ''Simple Product'' )'
								--Print '---------1--------'
								--Print @SQL
								--Print '---------2--------'
		  --SELECT @InternalOrderby
									--Print @SQL
									--Print '---------3--------'
									SET @SQL = @SQL + ' 
									,Cte_AttributeValueLocale AS
									(
									 '+@AttachINDefault+'										
									)'
									--Print @SQL
									--Print '---------4--------'
									SET @SQL = @SQL + ' 

									, Cte_AttributeLocale AS
									(
										 SELECT CTAL.PimProductId 
										 FROM Cte_AttributeValueLocale  CTAL
										 '+@InternalProductWhereClause+'
										 GROUP BY CTAL.PimProductId 
									)
									, Cte_FinalProductData AS
									(
										SELECT DISTINCT CTLA.PimProductId, 1 DefaultOrderBy  ,'+[dbo].[Fn_GetPagingRowId](@InternalOrderby,' CTLA.PimProductId DESC')+' 
										FROM Cte_AttributeValueLocale  CTAVL
										INNER JOIN Cte_AttributeLocale CTLA ON (CTLA.PimProductId = CTAVL.PimProductId)
							        	'+CASE WHEN @InternalWhereClause <> '' THEN  ' WHERE CTAVL.'+dbo.FN_Trim(@InternalWhereClause) ELSE '' END +'
									)
									,Cte_GEtSortingProduct AS 
									(
										  SELECT PimProductId, DefaultOrderBy,RowId
										  FROM Cte_FinalProductData 
										  UNION ALL 
										  SELECT PimProductId ,2 DefaultOrderBy,'+[dbo].[Fn_GetPagingRowId]( 'DERE.PimProductId',' DERE.PimProductId ')+'
										  FROM Cte_AttributeLocale DERE 
										  WHERE NOT EXISTS (SELECT TOP 1 1 FROM Cte_FinalProductData TTRR WHERE TTRR.PimProductId = DERE.PimProductId  ) 
									  
									 )
									 ,Cte_getPagingData 
									 AS 
									 (
										  SELECT PimProductId ,'+[dbo].[Fn_GetPagingRowId](' DefaultOrderBy ',' RowId ')+' ,Count(*)Over() CountNo
										  FROM Cte_GEtSortingProduct
									 )

									,Cte_GetAllData AS 
									(
										  SELECT PimProductId ,RowId ,CountNo
										  FROM Cte_getPagingData
										  GROUP BY PimProductId ,RowId ,CountNo
									)
									'
									--Print @SQL
									--Print '---------5--------'
									SET @SQL = @SQL + ' 

								 INSERT INTO  @TBL_PimProductId  (PimProductId,RowId,CountNo )
								 SELECT  PimProductId,RowId , CountNo
								 FROM Cte_GetAllData '
								 +[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)

			SET @SQl = @InternalSQL+@SQL
     		END
			SET @SQl = @SQl + ' 
								SET @OutProductId = ISNULL(SUBSTRING((SELECT '',''+CAST(PimProductid AS VARCHAR(50)) 
										FROM @TBL_PimProductId TBPP
										ORDER BY RowId
										FOR XML PATH ('''')   ),2,4000),'''')
								SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM  @TBL_PimProductId TBPP),0)
							 '
			
			--PRINT  @SQl
           -- SELECT  @SQl
		
			EXEC SP_EXECUTESQl  @SQL ,N' @OutProductId VARCHAR(max) OUT ,@RowsCount INT OUT ,@TransferId TransferId READONLY  ',  @OutProductId = @OutProductId OUT, @RowsCount = @RowsCount OUT ,@TransferId  = @PimProductIds
		

	 -- SELECT  @OutProductId,@RowsCount

     END TRY 
    BEGIN CATCH
	 DECLARE @Status BIT ;
		     SET @Status = 0;
			 SELECT ERROR_MESSAGE()
		  --   DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductIdForPaging @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@AccountList='+CAST(@AccountList AS VARCHAR(50))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
    --         SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
    --         EXEC Znode_InsertProcedureErrorLog
				--@ProcedureName = 'Znode_GetProductIdForPaging',
				--@ErrorInProcedure = @Error_procedure,
				--@ErrorMessage = @ErrorMessage,
				--@ErrorLine = @ErrorLine,
				--@ErrorCall = @ErrorCall;
	 END CATCH 
     END
GO
PRINT N'Altering [dbo].[Znode_GetProductsAttributeValue]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetProductsAttributeValue')
BEGIN 
	DROP PROCEDURE Znode_GetProductsAttributeValue
END 
GO

CREATE  PROCEDURE [dbo].[Znode_GetProductsAttributeValue]
(   @PimProductId   TransferId READONLY,--VARCHAR(MAX),
    @AttributeCode VARCHAR(MAX),
    @LocaleId      INT = 0,
	@IsPublish bit = 0  )
AS
/* 
    
     Summary:- This Procedure is used to get the product attribute values 
			   The result is fetched from all locale for ProductId provided
     Unit Testing 
     EXEC Znode_GetProductsAttributeValue_1 '2146','ProductName,SKU,Price,Quantity,IsActive,ProductType,Image,Assortment,DisplayOrder,Style,Material',0
	 SELECT * FROM ZnodePIMProduct
	 EXEC Znode_GetProductsAttributeValue '121','ProductName,SKU,Price,Quantity,IsActive,ProductType,Image,Assortment,DisplayOrder,Style,Material',1
	 
	 EXEC Znode_GetProductsAttributeValue '121','ProductName,SKU,Price,Quantity,IsActive,ProductType,Image,Assortment,DisplayOrder,Style,Material',2,@IsPublish =1 
    
*/	
	 BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 		
				DECLARE @TBL_AttributeValue TABLE (PimAttributeValueId INT,PimProductId INT,AttributeValue NVARCHAR(MAX),PimAttributeId INT)
				DECLARE @TBL_AttributeDefault TABLE (PimAttributeId INT,AttributeDefaultValueCode VARCHAR(100),IsEditable BIT,AttributeDefaultValue NVARCHAR(MAX),DisplayOrder INT)
				DECLARE @DefaultLocaleId INT = DBO.FN_GetDefaultLocaleId()
				DECLARE @TBL_MediaValue TABLE (PimAttributeValueId INT,PimProductId INT,MediaPath NVARCHAR(MAX),PimAttributeId INT ,LocaleId INT )
				DECLARE @TBL_PimProductId TABLE (PimProductId INT)
			
				
				--INSERT INTO @TBL_PimProductId 
				--SELECT Item FROM dbo.Split( @PimProductId, ',' ) AS SP 
				INSERT INTO @TBL_PimProductId 
				SELECT Id FROM @PimProductId
				
				INSERT INTO @TBL_MediaValue
					SELECT ZPAV.PimAttributeValueId	
							,PimProductId
							,ZPPAM.MediaId MediaPath
							,ZPAV.PimAttributeId , ZPPAM.LocaleId
					FROM ZnodePimAttributeValue ZPAV
					INNER JOIN ZnodePimProductAttributeMedia ZPPAM ON ( ZPPAM.PimAttributeValueId = ZPAV.PimAttributeValueId)
					LEFT JOIN ZnodeMedia ZM ON (Zm.Path = ZPPAM.MediaPath)  
				
			
				;WITH Cte_GetDefaultData 
				AS 
				(
					SELECT ZPPADV.PimAttributeValueId ,ZPADVL.AttributeDefaultValue ,ZPADVL.LocaleId 
					FROM ZnodePimProductAttributeDefaultValue ZPPADV 
					INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPPADV.PimAttributeValueId)
					INNER JOIN ZnodePimAttributeDefaultValueLocale ZPADVL ON (ZPADVL.PimAttributeDefaultValueId = ZPPADV.PimAttributeDefaultValueId )
					WHERE ZPADVL.LocaleID IN (@LocaleId,@DefaultLocaleId)
					AND EXISTS (SELECT TOP 1 1 FROM @TBL_PimProductId TBPP  WHERE TBPP.PimProductId = ZPAV.PimProductId)
					)
				
				,Cte_AttributeValueDefault AS 
				(
				 SELECT PimAttributeValueId ,AttributeDefaultValue ,@DefaultLocaleId LocaleId 
				 FROM Cte_GetDefaultData 
				 WHERE LocaleId = @LocaleId 
				 UNION  
				 SELECT PimAttributeValueId ,AttributeDefaultValue ,@DefaultLocaleId LocaleId 
				 FROM Cte_GetDefaultData a 
				 WHERE LocaleId = @DefaultLocaleId 
				 AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_GetDefaultData b WHERE b.PimAttributeValueId = a.PimAttributeValueId AND b.LocaleId= @LocaleId)
     			)
				,Cte_AttributeLocaleComma 
				AS 
				(
				SELECT DISTINCT PimAttributeValueId ,SUBSTRING ((SELECT ',' + AttributeDefaultValue 
													FROM Cte_AttributeValueDefault CTEAI 
													WHERE CTEAI.PimAttributeValueId = CTEA.PimAttributeValueId 
													FOR XML PATH ('')   ),2,4000) AttributeDefaultValue , LocaleId
				
				FROM Cte_AttributeValueDefault  CTEA 
				)
				,Cte_AllAttributeData AS 
				(
					SELECT ZPAV.PimAttributeValueId,ZPAV.PimProductId,ZPPATV.AttributeValue,ZPAV.PimAttributeId,ZPPATV.LocaleId
					FROM ZnodePimAttributeValue ZPAV
					INNER join ZnodePimProductAttributeTextAreaValue ZPPATV ON (ZPPATV.PimAttributeValueId= ZPAV.PimAttributeValueId)
					INNER JOIN @TBL_PimProductId TBPP ON (ZPAV.PimProductId = TBPP.PimProductId)
					UNION ALL
					
					SELECT PimAttributeValueId,TBM.PimProductId
							,MediaPath
							,PimAttributeId,LocaleId
					from @TBL_PimProductId TBPP   
					INNER JOIN @TBL_MediaValue TBM ON (TBM.PimProductId = TBPP.PimProductId)

					UNION ALL 
					SELECT ZPAV.PimAttributeValueId,ZPAV.PimProductId,ZPAVL.AttributeValue,ZPAV.PimAttributeId,ZPAVL.LocaleId
					FROM ZnodePimAttributeValue ZPAV
					INNER JOIN ZnodePimAttributeValueLocale  ZPAVL ON ( ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
					INNER JOIN @TBL_PimProductId TBPP ON (ZPAV.PimProductId = TBPP.PimProductId)
					INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
					WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split(@AttributeCode,',') SP WHERE (SP.Item = ZPA.AttributeCode  OR SP.Item = CAST(ZPA.PimATtributeId  AS VARCHAR(50)) )) 
					AND ZPAVL.LocaleId IN (@LocaleId,@DefaultLocaleId)
					 
					UNION ALL
					SELECT ZPAV.PimAttributeValueId,ZPAV.PimProductId,CS.AttributeDefaultValue,ZPAV.PimAttributeId,LocaleId
					FROM ZnodePimAttributeValue ZPAV
					INNER JOIN Cte_AttributeLocaleComma CS ON (ZPAV.PimAttributeValueId = CS.PimAttributeValueId)
					INNER JOIN @TBL_PimProductId TBPP ON (ZPAV.PimProductId = TBPP.PimProductId)
				)
				, Cte_AttributeFirstLocal AS 
				(
					SELECT PimAttributeValueId,PimProductId,AttributeValue,PimAttributeId
					FROM Cte_AllAttributeData
					WHERE LocaleId = @LocaleId
				)
				,Cte_DefaultAttributeValue AS 
				(
					SELECT PimAttributeValueId,PimProductId,AttributeValue,PimAttributeId
					FROM Cte_AttributeFirstLocal
					UNION ALL 
					SELECT PimAttributeValueId,PimProductId,AttributeValue,PimAttributeId
					FROM Cte_AllAttributeData CTAAD
					WHERE LocaleId = @DefaultLocaleId
					AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_AttributeFirstLocal CTRT WHERE CTRT.PimAttributeValueId = CTAAD.PimAttributeValueId   )
			 	)

				INSERT INTO @TBL_AttributeValue
				SELECT PimAttributeValueId,PimProductId,AttributeValue,PimAttributeId
				FROM  Cte_DefaultAttributeValue 
				
				If @IsPublish = 1 
				Begin
				
					DECLARE @Tlb_ReadMultiSelectValue TABLE ( AttributeDefaultValueCode NVARCHAR(300),PimAttributeId INT)
					INSERT INTO @Tlb_ReadMultiSelectValue ( AttributeDefaultValueCode ,PimAttributeId ) 
					SELECT zpav.AttributeDefaultValueCode,zpa.PimAttributeId 
					   FROM ZnodePimAttributeDefaultValue AS zpav 
					   RIGHT  OUTER JOIN dbo.ZnodePimAttribute AS zpa ON zpav.PimAttributeId = zpa.PimAttributeId
					   INNER JOIN dbo.ZnodeAttributeType AS zat ON zpa.AttributeTypeId = zat.AttributeTypeId
					   WHERE 
					   zat.AttributeTypeName IN ('Multi Select')
                    union All 
					 Select ZPA.AttributeCode,ZPA.PimAttributeId   from ZnodePimAttributeValidation ZPAV INNER JOIN ZnodeAttributeInputValidation ZAIV 
					ON ZPAV.InputValidationId = ZAIV.InputValidationId 
					INNER JOIN ZnodePimAttribute ZPA ON ZPAV.PimAttributeId = ZPA.PimAttributeId
					where ZAIV.Name  in ('IsAllowMultiUpload') and ltrim(rtrim(ZPAV.Name)) = 'true'
	
					SELECT PimProductId,AttributeValue,ZPA.AttributeCode,TBAV.PimAttributeId FROM @TBL_AttributeValue TBAV
					INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = TBAV.PimAttributeId)
					WHERE NOT Exists (Select TOP 1 1 FROM @Tlb_ReadMultiSelectValue where PimAttributeId = TBAV.PimAttributeId) 
					UNION ALL 
					Select PimProductId, SUBSTRING((Select ','+ CAST(ZPAXML.AttributeValue  AS VARCHAR(50)) from @TBL_AttributeValue ZPAXML where  
					ZPAXML.PimProductId = TBAV.PimProductId AND ZPAXML.PimAttributeId = TBAV.PimAttributeId FOR XML PATH('') ), 2, 4000) 
					AttributeValue, ZPA.AttributeCode,TBAV.PimAttributeId 
					FROM @TBL_AttributeValue TBAV
					INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = TBAV.PimAttributeId)
					WHERE Exists (Select TOP 1 1 FROM @Tlb_ReadMultiSelectValue where PimAttributeId = TBAV.PimAttributeId  ) 
					GROUP BY TBAV.PimProductId ,TBAV.PimAttributeId ,ZPA.AttributeCode
			
				End
				Else 
				Begin	
					SELECT PimProductId, AttributeValue,ZPA.AttributeCode,TBAV.PimAttributeId 
					FROM @TBL_AttributeValue TBAV
					INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = TBAV.PimAttributeId)
					WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split(@AttributeCode,',') SP WHERE (SP.Item = ZPA.AttributeCode  OR SP.Item = CAST(ZPA.PimATtributeId  AS VARCHAR(50)) )) 
				End
		 END TRY
         BEGIN CATCH
            DECLARE @Status BIT ;
			SET @Status = 0;
			--DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), 
			--@ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductsAttributeValue_1 @PimProductId = '+@PimProductId+
			--',@AttributeCode='+@AttributeCode+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			--SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			--EXEC Znode_InsertProcedureErrorLog
			--	@ProcedureName = 'Znode_GetProductsAttributeValue_1',
			--	@ErrorInProcedure = @Error_procedure,
			--	@ErrorMessage = @ErrorMessage,
			--	@ErrorLine = @ErrorLine,
			--	@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetProductsAttributeValue_newTesting]...';


GO


--DROP PROC Znode_GetProductsAttributeValue_newTesting

ALTER     PROCEDURE [dbo].[Znode_GetProductsAttributeValue_newTesting]
(   @PimProductId  transferid readonly ,
    @AttributeId transferid readonly,
    @LocaleId      INT = 0,
	@IsPublish bit = 0  )
AS
/* 
    
     Summary:- This Procedure is used to get the product attribute values 
			   The result is fetched from all locale for ProductId provided
     Unit Testing 
     EXEC Znode_GetProductsAttributeValue_1 '2146','ProductName,SKU,Price,Quantity,IsActive,ProductType,Image,Assortment,DisplayOrder,Style,Material',0
	 SELECT * FROM ZnodePIMProduct
	 EXEC Znode_GetProductsAttributeValue '121','ProductName,SKU,Price,Quantity,IsActive,ProductType,Image,Assortment,DisplayOrder,Style,Material',1
	 
	 EXEC Znode_GetProductsAttributeValue '121','ProductName,SKU,Price,Quantity,IsActive,ProductType,Image,Assortment,DisplayOrder,Style,Material',2,@IsPublish =1 
    
*/	
	 BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
	   	 
			--  DECLARE #TBL_AttributeValue1 TABLE (PimAttributeValueId INT , PimAttributeId INT , PimProductId INT,AttributeCode VARCHAR(200)  )
			  DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleID()

			--  INSERT INTO  (PimAttributeValueId , PimAttributeId , PimProductId,AttributeCode )
	          SELECT PimAttributeValueId , ZPAV.PimAttributeId , PimProductId,AttributeCode
			  INTO #TBL_AttributeValue1
			  FROM ZnodePimAttributeValue ZPAV 
			  INNER JOIN  ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)		
			  WHERE EXISTS (SELECT TOP 1 1 FROM @PimProductId TBLP WHERE TBLP.Id = ZPAV.PimProductId )
			  AND EXISTS (SELECT TOP 1 1 FROM @AttributeId TBLA WHERE TBLA.Id = ZPAV.PimAttributeId  )
			
			CREATE TABLE #TBL_AttributeValue  (PimAttributeValueId INT  , PimAttributeId  INT , PimProductId INT ,AttributeCode NVARCHAR(600),AttributeValue NVARCHAR(max),TypeOfData INT 
						,PimAttributeValueLocaleId INT ,LocaleId INT , RowId INT )
	         INSERT INTO #TBL_AttributeValue		 
			 SELECT TBLAV.PimAttributeValueId , TBLAV.PimAttributeId , PimProductId,AttributeCode,ZPAVL.AttributeValue,1 TypeOfData
						,ZPAVL.ZnodePimAttributeValueLocaleId PimAttributeValueLocaleId,LocaleId,COUNT(*)Over(Partition By TBLAV.PimProductId,PimAttributeId ORDER BY TBLAV.PimProductId,PimAttributeId  ) RowId
	     	 FROM ZnodePimAttributeValueLocale  ZPAVL 
			 INNER JOIN #TBL_AttributeValue1 TBLAV ON (TBLAV.PimAttributeValueId = ZPAVL.PimAttributeValueId)
			 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
			-- UNION ALL 

		
			 INSERT INTO #TBL_AttributeValue
			 SELECT TBLAV.PimAttributeValueId , TBLAV.PimAttributeId , PimProductId,AttributeCode,ZPAVL.AttributeValue,1 TypeOfData
						,ZPAVL.PimProductAttributeTextAreaValueId PimAttributeValueLocaleId,LocaleId,COUNT(*)Over(Partition By TBLAV.PimProductId,PimAttributeId ORDER BY TBLAV.PimProductId,PimAttributeId  ) RowId
			 FROM ZnodePimProductAttributeTextAreaValue  ZPAVL 
			 INNER JOIN #TBL_AttributeValue1 TBLAV ON (TBLAV.PimAttributeValueId = ZPAVL.PimAttributeValueId)
			 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
			
			 INSERT INTO #TBL_AttributeValue
			 SELECT TBLAV.PimAttributeValueId , TBLAV.PimAttributeId , PimProductId,AttributeCode,
			CAST( ZPAVL.PimAttributeDefaultValueId AS VARCHAR(2000)),2 TypeOfData
						,ZPAVL.PimProductAttributeDefaultValueId PimAttributeValueLocaleId,LocaleId,COUNT(*)Over(Partition By TBLAV.PimProductId,PimAttributeId ORDER BY TBLAV.PimProductId,PimAttributeId  ) RowId
			 FROM ZnodePimProductAttributeDefaultValue  ZPAVL 
			 INNER JOIN #TBL_AttributeValue1 TBLAV ON (TBLAV.PimAttributeValueId = ZPAVL.PimAttributeValueId)
			 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
			 
			 INSERT INTO #TBL_AttributeValue
			 SELECT TBLAV.PimAttributeValueId , TBLAV.PimAttributeId , PimProductId,AttributeCode,CAST( ZPAVL.MediaId AS VARCHAR(2000)) ,3 TypeOfData
						,ZPAVL.PimProductAttributeMediaId PimAttributeValueLocaleId,ZPAVL.LocaleId,COUNT(*)Over(Partition By TBLAV.PimProductId,PimAttributeId ORDER BY TBLAV.PimProductId,PimAttributeId  ) RowId
			 FROM ZnodePimProductAttributeMedia  ZPAVL 
			 INNER JOIN #TBL_AttributeValue1 TBLAV ON (TBLAV.PimAttributeValueId = ZPAVL.PimAttributeValueId)
			 WHERE LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId 
			 
			 
			  ;WITH Cte_GetDefaultData 
				AS 
				(
					SELECT ZPPADV.PimAttributeValueId ,ZPADVL.AttributeDefaultValue AttributeDefaultValue ,ZPADVL.localeID LocaleId ,ZPPADV.PimProductId ,ZPPADV.AttributeCode,ZPPADV.PimAttributeId
					FROM #TBL_AttributeValue ZPPADV 
					INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPPADV.PimAttributeValueId)
					INNER JOIN ZnodePimAttributeDefaultValuelocale ZPADVL ON (convert(nvarchar(500),ZPADVL.PimAttributeDefaultValueId ) = ZPPADV.AttributeValue )
					WHERE ZPADVL.localeID  IN (@LocaleId,@DefaultLocaleId)
					AND TypeOfData = 2 
					AND ZPPADV.LocaleId  = CASE WHEN RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END 
				
				)
				
				,Cte_AttributeValueDefault AS 
				(
				 SELECT AttributeDefaultValue  ,PimProductId ,AttributeCode,PimAttributeId
				 FROM Cte_GetDefaultData 
				 WHERE LocaleId = @LocaleId 
				 UNION  
				 SELECT  AttributeDefaultValue  ,PimProductId ,AttributeCode,PimAttributeId
				 FROM Cte_GetDefaultData a 
				 WHERE LocaleId = @DefaultLocaleId 
				 AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_GetDefaultData b WHERE b.PimAttributeValueId = a.PimAttributeValueId AND b.LocaleId= @LocaleId)
     			)
			
			 SELECT  PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId  
			 FROM  #TBL_AttributeValue 
             WHERE LocaleId  = CASE WHEN RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END 
			 AND TypeOfData = 1  

			 UNION ALL 

			 SELECT DISTINCT PimProductId,
			         SUBSTRING ((SELECT ','+[dbo].[Fn_GetMediaThumbnailMediaPath]( zm.PATH) FROM ZnodeMedia ZM WHERE ZM.MediaId = TBLAV.AttributeValue 
					 FOR XML PATH ('')  ),2,4000) ,AttributeCode,PimAttributeId
			 FROM #TBL_AttributeValue TBLAV 
			 WHERE  LocaleId  = CASE WHEN RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END 
			 AND TypeOfData = 3
			 -- GROUP BY PimAttributeId,PimProductId,AttributeCode
			UNION ALL
			SELECT DISTINCT PimProductId,
			 SUBSTRING ((SELECT ',' + AttributeDefaultValue 
													FROM Cte_AttributeValueDefault CTEAI 
													WHERE CTEAI.PimProductId = CTEA.PimProductId 
													AND CTEAI.PimAttributeId = CTEA.PimAttributeId
													FOR XML PATH ('')   ),2,4000) AttributeDefaultValue,AttributeCode ,PimAttributeId
				
			FROM Cte_AttributeValueDefault  CTEA 
			
		
		 END TRY
         BEGIN CATCH
		    SELECT ERROR_MESSAGE()
            DECLARE @Status BIT ;
			SET @Status = 0;
	
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductAttribute]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishProductAttribute')
BEGIN 
	DROP PROCEDURE Znode_GetPublishProductAttribute
END 
GO

CREATE PROCEDURE [dbo].[Znode_GetPublishProductAttribute]
(@PublishCatalogId INT)
AS 
/*
     Summary :- This Procedure is used to get the publish Product attribute details for a PublishCatalogId 
     Unit Testing 
     EXEC Znode_GetPublishProductAttribute 1
     
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             SELECT DISTINCT ZPP.PublishCatalogId ZnodeCatalogId,AttributeCode,AttributeTypeName,IsComparable,IsHtmlTags,IsFacets,IsUseInSearch,IsPersonalizable,                   
             IsConfigurable , ZPAL.AttributeName , ZPAL.LocaleId ,ZPA.DisplayOrder
			 FROM ZnodePimAttribute ZPA INNER JOIN ZnodeAttributeType ZAT ON(ZAT.AttributeTypeId = ZPA.AttributeTypeId)
			 INNER JOIN ZnodePimAttributeLocale ZPAL on ZPA.PimAttributeId = ZPAL.PimAttributeId
             INNER JOIN ZnodePimFrontendProperties ZPFP ON(ZPFP.PimAttributeId = ZPA.PimAttributeId)
             INNER JOIN ZnodePimAttributeValue ZPAV ON(ZPAV.PimAttributeId = ZPA.PimAttributeId)
             INNER JOIN ZnodePublishProduct ZPP ON(ZPP.PimProductId = ZPAV.PimProductId) WHERE PublishCatalogId = @PublishCatalogId;
		
         END TRY
         BEGIN CATCH
            DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(),
			 @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishProductAttribute @PublishCatalogId= '+CAST(@PublishCatalogId AS VARCHAR(10))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPublishProductAttribute',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductPricingBySku]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPublishProductPricingBySku')
BEGIN 
	DROP PROCEDURE Znode_GetPublishProductPricingBySku
END 
GO
CREATE PROCEDURE Znode_GetPublishProductPricingBySku
(   @SKU            VARCHAR(MAX),
    @PortalId       INT,
    @currentUtcDate VARCHAR(100), -- this date is required for the user date r
    @UserId         INT          = 0, -- userid is optional 
    @PublishProductId TransferId READONLY,
	@IsDebug        BIT          = 0
	)
AS 
   /* 
    --Summary: Retrive Price of product from pricelist
    --Input Parameters:
    --UserId, SKU(Comma separated multiple), PortalId
    --Conditions :
    --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --2. If There is no any PriceList having given sku associated to profile  then check for  
    --PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --Unit Testing : 
    --EXEC Znode_GetPublishProductPricingBySku_2 @SKU = 'apple,apr234' , @PortalId = 34 , @currentUtcDate = '2016-09-17 00:00:00.000';
    --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --4. If There is no any PriceList having given sku associated to user  then check for  
    --PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --5. If There is no any PriceList having given sku associated to account  then check for  
    --PriceList associated Profile having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --6. If There is no any PriceList having given sku associated to Profile  then check for  
    --PriceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
    --7. If in each case Precedence is same then get PriceList according to higher PriceListId ActivationDate and ExpirationDate for PriceList and SKU also.
    --8. Also get the Tier Price, Tier Quantity of given sku.
    --Unit Testing   
    --Exec Znode_GetPublishProductPricingBySku  @SKU = 'Levi''s T-Shirt & Jeans - Bundle Product',@PortalId = 1, @currentUtcDate = '2016-07-31 00:00:00.000'
	*/
    
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );

			  DECLARE @DefaultLocaleId INT = dbo.FN_GETDEFAULTLocaleId()

			 IF @SKU = '' 
			 BEGIN 
			  INSERT INTO @Tlb_SKU(SKU)
			  	SELECT (SELECT ''+SKU FOR XML PATH('')) 
					FROM ZnodePublishProductDetail a
					INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId )
					WHERE LocaleId = @DefaultLocaleId

			 END 
			 ELSE 
			 BEGIN
			   INSERT INTO @Tlb_SKU(SKU)
                    SELECT Item
                    FROM Dbo.split(@SKU, ',');
			  

			 END 

           
             DECLARE @TLB_SKUPRICELIST TABLE
             (SKU          VARCHAR(100),
              RetailPrice  NUMERIC(28, 6),
              SalesPrice   NUMERIC(28, 6),
              PriceListId  INT,
              TierPrice    NUMERIC(28, 6),
              TierQuantity NUMERIC(28, 6),
			  ExternalId NVARCHAR(2000)
             );
             DECLARE @PriceListId INT, @PriceRoundOff INT;
             SELECT @PriceRoundOff = CONVERT( INT, FeatureValues)
             FROM ZnodeGlobalSetting
             WHERE FeatureName = 'PriceRoundOff';
		
             --Retrive portal wise pricelist  
             DECLARE @Tbl_PortalWisePriceList TABLE
             (PriceListId    INT,
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              Precedence     INT,
			  SKU NVARCHAR(300)
             );
             --Retrive price for respective pricelist   
             DECLARE @Tbl_PriceListWisePrice TABLE
             (PriceListId    INT,
              SKU            VARCHAR(300),
              SalesPrice     NUMERIC(28, 6),
              RetailPrice    NUMERIC(28, 6),
              UomId          INT,
              UnitSize       NUMERIC(28, 6),
              ActivationDate DATETIME,
              ExpirationDate DATETIME NULL,
              TierPrice      NUMERIC(28, 6),
              TierQuantity   NUMERIC(28, 6),
              TierUomId      INT,
              TierUnitSize   NUMERIC(28, 6), 
			  ExternalId NVARCHAR(2000)
			 
             );
			 DECLARE @Tbl_SKUWisePriceList TABLE (PriceListId INT, SKU NVARCHAR(300))

			 insert into @Tbl_SKUWisePriceList(PriceListId,SKU) 
			 SELECT  PriceListId,SKU from ZnodePrice where (SELECT ''+SKU FOR XML PATH('')) in (Select SKU from @Tlb_SKU )
			 Union
			 SELECT PriceListId,SKU  from ZnodePriceTier where (SELECT ''+SKU FOR XML PATH('')) in (Select SKU from @Tlb_SKU )
			 
			 --1. If userId is null then check for PriceList having sku associated to profile which is associated to Portal having  PortalId and  having higher Precedence and valid ActivationDate and ExpirationDate for PriceList  and SKU also.
            IF @UserId = 0
                 BEGIN
					INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
					SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
					FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
						ON b.PortalProfileId = c.PortalProfileID AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
						inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
					WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId
					ORDER BY b.Precedence;
		
			 
                     --2. If There is no any PriceList having given sku associated to profile  then check for PriceList associated portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
			IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
							INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId 
							inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
							AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
							WHERE @CurrentUtcDate BETWEEN a.ActivationDate 
							AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							ORDER BY b.Precedence
							;
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						
                         END;
                 END;
                     --3. If userId is not null then check for PriceList having sku associated to User having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
             ELSE
                 BEGIN
				 
                     INSERT INTO @Tbl_PortalWisePriceList (PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
                            SELECT a.PriceListId, ActivationDate,ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                            FROM ZnodePriceList AS a INNER JOIN ZnodePriceListUser AS b ON a.PriceListId = b.PriceListId
                                 INNER JOIN ZnodePortalunit zupu ON a.CurrencyId = zupu.CurrencyId AND zupu.PortalId = @PortalId
								 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                            WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.UserID = @UserId
							ORDER BY b.Precedence ;

                --4. If There is no any PriceList having given sku associated to user  then check for PriceList associated Account having UserId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))
						BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
								   SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), c.Precedence,tsw.SKU
								   FROM ZnodePriceList AS a INNER JOIN ZnodePriceListAccount AS c ON a.PriceListId = c.PriceListId
										INNER JOIN ZnodeUser AS d ON c.Accountid = d.Accountid INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId 
										AND zupu.PortalId = @PortalId
										inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								   WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND d.UserID = @UserId
									ORDER BY c.Precedence
							--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
						 END;
                     -- 5. If There is no any PriceList having given sku associated to account  then check for PriceList associated Profile having PortalId and having higher   Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
				where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
                             INSERT INTO @Tbl_PortalWisePriceList(PriceListId,ActivationDate,ExpirationDate,Precedence,SKU)
                                    SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
                                    FROM ZnodePriceList AS a
                                         INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId 
										 INNER JOIN ZnodePortalProfile AS c ON b.PortalProfileId = c.PortalProfileId  AND c.PortalId = @PortalId 
                                         INNER JOIN dbo.ZnodeUserProfile zup ON c.ProfileId = zup.ProfileId AND IsDefault = 1
                                         INNER JOIN ZnodePortalunit zupu ON a.CurrencyId = zupu.CurrencyId AND zupu.PortalId = @PortalId
										 inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
										 AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
                                    WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND zup.UserId = @UserId;
									--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )

					     END;
                   

                     ---6. If There is no any PriceList having given sku associated to Profile  then check for priceList associated Portal having PortalId and having higher Precedence ActivationDate and ExpirationDate for PriceList and SKU also.
                  				IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl 
								where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				WHERE tspl.SKU = tpwl.SKU))

                         BEGIN
							INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
							SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
							FROM ZnodePriceList AS a INNER JOIN ZnodePriceListPortal AS b ON a.PriceListId = b.PriceListId
								INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId AND  zupu.PortalId = b.PortalId
								inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
								AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
								WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND b.PortalId = @PortalId
							    ORDER BY b.Precedence
								;
								--Delete from @Tbl_SKUWisePriceList where PriceListId in (Select PriceListId from  @Tbl_PortalWisePriceList )
                         END;
						 
				--IF Exists (Select top 1 1  FROM @Tbl_SKUWisePriceList tspl where NOT Exists (SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList tpwl
				--WHERE tspl.SKU = tpwl.SKU))
				--BEGIN
				
				--	INSERT INTO @Tbl_PortalWisePriceList( PriceListId, ActivationDate, ExpirationDate, Precedence,SKU )
				--	SELECT a.PriceListId, ActivationDate, ISNULL(ExpirationDate, @GetDate), b.Precedence,tsw.SKU
				--	FROM ZnodePriceList AS a INNER JOIN ZnodePriceListProfile AS b ON a.PriceListId = b.PriceListId INNER JOIN ZnodePortalProfile AS c
				--	ON b.ProfileId = c.ProfileId AND  c.IsDefaultAnonymousProfile = 1 INNER JOIN ZnodePortalunit AS zupu ON a.CurrencyId = zupu.CurrencyId
				--	inner join @Tbl_SKUWisePriceList tsw  ON a.PriceListId = tsw.PriceListId
				--	AND NOT EXISTS (Select TOP 1 1 FROM  @Tbl_PortalWisePriceList tpwl WHERE tpwl.SKU = tsw.SKU )
				--	WHERE @CurrentUtcDate BETWEEN a.ActivationDate AND ISNULL(a.ExpirationDate, @GetDate) AND c.PortalId = @PortalId;
				--END

                 END;
			
             SET @PriceListId = 0;
             -- Check Activation date and expiry date 
             IF EXISTS( SELECT TOP 1 1 FROM @Tbl_PortalWisePriceList)
                 BEGIN
				
                     -- Declare  @d datetime
                     -- SET @d = @GetDate
                     -- Select ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ),b.Precedence,* from ZnodePriceList  a inner join ZnodePriceListPortal b on a.PriceListId = b.PriceListId where @d between ISNULL(ActivationDate,@d) 
                     -- and ISNULL(ExpirationDate,@GetDate ) --and a.PriceListId <>  80
                     -- Order by ISNULL(ActivationDate,@d)  , ISNULL( ExpirationDate,@GetDate ) ,  b.Precedence DESC 
                     --	Retrive pricelist wise price
                   INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize , ExternalId )
				   SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize, ZP.ExternalId
				   FROM [ZnodePrice] AS ZP 
				   INNER JOIN @Tlb_SKU AS TSKU ON (SELECT ''+ZP.SKU FOR XML PATH ('')) = TSKU.SKU 
				   LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND ZP.PriceListId = ZPT.PriceListId
				   WHERE ZP.PriceListId IN
				   (
					   SELECT TOP 1 PriceListId
					   FROM @Tbl_PortalWisePriceList AS TBPWPL
					   WHERE  TBPWPL.SKU = ZP.SKU
					   ORDER BY Precedence 
				   );
				  


                     -- Check Activation date and expiry date 
                    INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId )
					   SELECT DISTINCT  PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId
					   FROM @Tbl_PriceListWisePrice
					   WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					   
					  
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId )
					   SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId
					   FROM @Tbl_PriceListWisePrice
					   WHERE SKU NOT IN(SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null 
				
                 END;
                     -- Retrive data as per precedance from ZnodePriceListPortal table  
					
             ELSE
                 BEGIN
                     SET @PriceListId =( SELECT TOP 1 PriceListId FROM @Tbl_PortalWisePriceList ORDER BY Precedence  );

                     --Retrive pricelist wise price  
                     INSERT INTO @Tbl_PriceListWisePrice( PriceListId, SKU, SalesPrice, RetailPrice, UomId, UnitSize, ActivationDate, ExpirationDate, TierPrice, TierQuantity, TierUomId, TierUnitSize, ExternalId )
					 SELECT ZP.PriceListId, ZP.SKU, ZP.SalesPrice, ZP.RetailPrice, ZP.UomId, ZP.UnitSize, ISNULL(ZP.ActivationDate, @CurrentUtcDate), 
							ISNULL(ZP.ExpirationDate, @GetDate), ZPT.Price, ZPT.Quantity, ZPT.UomId, ZPT.UnitSize, zp.ExternalId
					 FROM [ZnodePrice] AS ZP INNER JOIN @Tlb_SKU AS TSKU ON ZP.SKU = TSKU.SKU LEFT OUTER JOIN ZnodePriceTier AS ZPT ON ZP.SKU = ZPT.SKU AND 
							   ZP.PriceListId = ZPT.PriceListId WHERE ZP.PriceListId = @PriceListId; 

                     -- Check Activation date and expiry date 
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId )
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId
					FROM @Tbl_PriceListWisePrice WHERE @currentUtcDate BETWEEN ActivationDate AND ISNULL(ExpirationDate, @GetDate);
					
					INSERT INTO @TLB_SKUPRICELIST( PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId )
					SELECT PriceListId, SKU, RetailPrice, SalesPrice, TierPrice, TierQuantity, ExternalId
					FROM @Tbl_PriceListWisePrice
					WHERE SKU NOT IN ( SELECT SKU FROM @TLB_SKUPRICELIST) and ActivationDate is null;

                 END;
             SELECT SKU,
                    ROUND(RetailPrice, @PriceRoundOff) AS RetailPrice,
                    ROUND(SalesPrice, @PriceRoundOff) AS SalesPrice,
                    ROUND(TierPrice, @PriceRoundOff) AS TierPrice,
                    ROUND(TierQuantity, @PriceRoundOff) AS TierQuantity,
                    ZC.CurrencyCode,
                    Zc.CurrencySuffix,
					TSPL.ExternalId
             FROM @TLB_SKUPRICELIST AS TSPL
                  INNER JOIN ZnodePriceList AS ZPL ON TSPL.PriceListId = ZPL.PriceListId
                  INNER JOIN ZnodeCurrency AS ZC ON ZPL.CurrencyId = ZC.CurrencyId
				  ORDER BY TierQuantity ASC;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPublishProductPricingBySku @SKU = '+@SKU+',@PortalId = '+CAST(@PortalId AS VARCHAR(10))+',@currentUtcDate = '+@currentUtcDate+',@UserId='+CAST(@UserId AS VARCHAR(100))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPublishProductPricingBySku',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetSkuPricebyCatalog]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetSkuPricebyCatalog')
BEGIN 
	DROP PROCEDURE Znode_GetSkuPricebyCatalog
END 
GO
CREATE  PROCEDURE [dbo].[Znode_GetSkuPricebyCatalog]
(   @WhereClause		NVARCHAR(max),
    @Rows				INT            = 100,
    @PageNo				INT            = 1,
    @Order_BY			VARCHAR(1000)  = '',
    @RowsCount			INT  out,
	@LocaleId			INT			   = 0,
	@Sku                VARCHAR(MAX),
	@PortalId		    INT = 0,
	@currentUtcDate     VARCHAR(200) = '',
	@PublishProductId   ProductForSortPrice READONLY,
	@IsInStock			varchar(5) ,
	@IsSorting			Bit = 1 
		)		
AS 
/*
    Summary: This procedure is used to find the PriceList by catalog 
	Unit Testing: 
	
    @IsInStock --- for 1 - In stock data , for 0 - out off stock data , for -1 - all data

	declare @p7 int
	set @p7=NULL
	declare @p12 dbo.ProductForSortPrice
	insert into @p12 values(947,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(948,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(949,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(950,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(951,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(953,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(957,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1002,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1003,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1004,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1005,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1026,N'BundleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1030,N'BundleProduct',N'DisablePurchasing',1)
	insert into @p12 values(1039,N'GroupedProduct',N'DontTrackInventory',0)
	insert into @p12 values(1013,N'BundleProduct',N'AllowBackOrdering',0)
	insert into @p12 values(1031,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1032,N'SimpleProduct',N'DisablePurchasing',0)
	insert into @p12 values(1042,N'SimpleProduct',N'DisablePurchasing',0)

	exec sp_executesql N'Znode_GetSkuPricebyCatalog  @WhereClause,@Rows,@PageNo,@Order_By,@RowCount OUT
	,@LocaleId,@Sku,@PortalId,@currentUtcDate,@PublishProductId,@IsInStock',N'@WhereClause nvarchar(4000),
	@Rows int,@PageNo int,@Order_By nvarchar(15),@RowCount int output,@LocaleId int,
	@Sku nvarchar(4000),@PortalId int,@currentUtcDate datetime,@PublishProductId [dbo].[ProductForSortPrice] 
	READONLY,@IsInStock nvarchar(2)',@WhereClause=N'',@Rows=16,@PageNo=1,@Order_By=N'retailprice asc',@RowCount=@p7 output,
	@LocaleId=1,@Sku=N'',@PortalId=1,@currentUtcDate='2017-11-30 00:00:00',@PublishProductId=@p12,@IsInStock=N'1'
	select @p7

	GO

	declare @p7 int
	set @p7=NULL
	declare @p12 dbo.TransferId
	insert into @p12 values(947)
	insert into @p12 values(948)
	insert into @p12 values(949)
	insert into @p12 values(950)
	insert into @p12 values(951)
	insert into @p12 values(953)
	insert into @p12 values(957)
	insert into @p12 values(1002)
	insert into @p12 values(1003)
	insert into @p12 values(1004)
	insert into @p12 values(1005)
	insert into @p12 values(1026)
	insert into @p12 values(1030)
	insert into @p12 values(1039)
	insert into @p12 values(1013)
	insert into @p12 values(1031)
	insert into @p12 values(1032)
	insert into @p12 values(1042)

	exec sp_executesql N'Znode_GetSkuPricebyCatalog  @WhereClause,@Rows,@PageNo,@Order_By,@RowCount OUT
	,@LocaleId,@Sku,@PortalId,@currentUtcDate,@PublishProductId,@IsInStock',N'@WhereClause nvarchar(4000),
	@Rows int,@PageNo int,@Order_By nvarchar(15),@RowCount int output,@LocaleId int,
	@Sku nvarchar(4000),@PortalId int,@currentUtcDate datetime,@PublishProductId [dbo].[TransferId] 
	READONLY,@IsInStock nvarchar(2)',@WhereClause=N'',@Rows=16,@PageNo=1,@Order_By=N'retailprice asc',@RowCount=@p7 output,
	@LocaleId=1,@Sku=N'',@PortalId=1,@currentUtcDate='2017-11-30 00:00:00',@PublishProductId=@p12,@IsInStock=N'1'
	select @p7

*/

     BEGIN
     BEGIN TRY
	 SET NOCOUNT ON;
			 Declare @ProductIdForPricing   TransferId 
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_PricebyCatalog TABLE (SKU NVARCHAR(4000),RetailPrice numeric(28,6),RowId INT,CountNo INT,ProductType nvarchar(200),OutOfStockOptions nvarchar(200),SalesPrice numeric(28,6))
			 DECLARE @TBL_PricebyCatalogforAssociateProduct TABLE (PimProductId int ,AssociatedProductId int,ParentSKU NVARCHAR(300),
			 ChildSKU NVARCHAR(300),RetailPrice  numeric(28,6),AssociatedProductDisplayOrder int , TypeOfProduct nvarchar(100),SalesPrice  numeric(28,6))
			 DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId()
			 
			 DECLARE @tbl_PricingSku TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
						TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000), ExternalId NVARCHAR(2000))		
			 DECLARE @tbl_PricingSkuOfAssociatedProduct TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
						TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000), ExternalId NVARCHAR(2000))				
			
			Select [Id],[ProductType],[OutOfStockOptions],--[CallForPricing] ,
			 Convert(varchar(300),'') SKU into #PublishProductId from @PublishProductId
			
			UPDATE PDI SET PDI.SKU = ZPPD.SKU 
						from #PublishProductId PDI inner join
						ZnodePublishProductDetail ZPPD On PDI.ID = ZPPD.PublishProductId
		
					--Read price for all products
					--Start
					INSERT INTO @ProductIdForPricing SELECT id FROM @PublishProductId
	
					INSERT INTO @tbl_PricingSku (sku,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix, ExternalId )	
					EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portaliD  ,@currentUtcDate,2,@ProductIdForPricing
					--End
					
					--Read Associate Products price only
					--Start
						--If @IsSorting = 0 
						--Begin
							INSERT into @TBL_PricebyCatalogforAssociateProduct (PimProductId ,AssociatedProductId, ParentSKU,ChildSKU,AssociatedProductDisplayOrder,TypeOfProduct ) 
							SELECT ZPX.PublishedId,ZPX.PublishedXML.value('(ConfigurableProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)'),
							PDI.SKU,ChildZPPD.SKU,ZPX.PublishedXML.value('(ConfigurableProductEntity/AssociatedProductDisplayOrder)[1]', 'nvarchar(20)')
							,'ConfigurableProduct'
							from #PublishProductId PDI inner join
							ZnodePublishedXml ZPX ON PDI.id  = ZPX.PublishedId
							Left Outer JOIN ZnodePublishProductDetail ChildZPPD On 
							ZPX.PublishedXML.value('(ConfigurableProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') = ChildZPPD.PublishProductId
							WHERE PDI.ProductType = 'ConfigurableProduct'
						
							--INSERT into @TBL_PricebyCatalogforAssociateProduct (PimProductId ,AssociatedProductId, ParentSKU,ChildSKU, TypeOfProduct) 
							--SELECT ZPX.PublishedId,ZPX.PublishedXML.value('(BundleProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)'),
							--PDI.SKU,ChildZPPD.SKU,'BundleProduct'
							--from #PublishProductId PDI inner join
							--ZnodePublishedXml ZPX ON PDI.id  = ZPX.PublishedId
							--Left Outer JOIN ZnodePublishProductDetail ChildZPPD On 
							--ZPX.PublishedXML.value('(BundleProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)')	= ChildZPPD.PublishProductId
							--WHERE PDI.ProductType ='BundleProduct'
						--End	
						INSERT into @TBL_PricebyCatalogforAssociateProduct (PimProductId ,AssociatedProductId, ParentSKU,ChildSKU, TypeOfProduct ) 
						SELECT ZPX.PublishedId,ZPX.PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)'),
						PDI.SKU,ChildZPPD.SKU ,'GroupedProduct'
						from #PublishProductId PDI inner join
						ZnodePublishedXml ZPX ON PDI.id  = ZPX.PublishedId
						Left Outer JOIN ZnodePublishProductDetail ChildZPPD On 
						ZPX.PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') = ChildZPPD.PublishProductId
						WHERE PDI.ProductType = 'GroupedProduct'

				

					DELETE FROM @ProductIdForPricing 
					INSERT INTO @ProductIdForPricing SELECT Distinct AssociatedProductId FROM @TBL_PricebyCatalogforAssociateProduct where AssociatedProductId is not null 
			
					--select PublishCatalogLogId	,PublishedId	,PublishedXML,  PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') from ZnodePublishedXml where IsGroupProductXML =1 
					
					INSERT INTO @tbl_PricingSkuOfAssociatedProduct (sku,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix, ExternalId )	
					EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portaliD  ,@currentUtcDate,2,@ProductIdForPricing
								

					update PLC SET PLC.RetailPrice = PLCA.RetailPrice ,
					PLC.SalesPrice = PLCA.SalesPrice 
					from @TBL_PricebyCatalogforAssociateProduct PLC inner join @tbl_PricingSkuOfAssociatedProduct
					PLCA on PLC.ChildSKU = PLCA.sku
 
					--End
		
					SELECT DISTINCT sku,RetailPrice,SalesPrice  INTO #tbl_PricingSku FROM   @tbl_PricingSku 
					UNION  ALL 
					SELECT item sku,NULL RetailPrice  ,NULL SalesPrice FROM dbo.split(@Sku,',') SP  
					WHERE NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = Sp.Item) AND @Sku <> ''
					UNION ALL 
					SELECT a.SKU , NULL RetailPrice , NULL SalesPrice  FROM ZnodePublishProductDetail  a INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId) 
					WHERE LocaleId = @DefaultLocaleId AND NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = a.SKU) 
					AND @Sku = ''
							
					Update PBC SET PBC.RetailPrice = 
					(Select min(Isnull(RetailPrice, SalesPrice)) from @TBL_PricebyCatalogforAssociateProduct PCBA  
					where PCBA.ParentSKU =PBC.SKU and PCBA.ParentSKU is not null)
					from #tbl_PricingSku  PBC  where 
					Exists (Select TOP 1 1  from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU and PCBA.TypeOfProduct = 'GroupedProduct')
			      
				 	Update PBC SET PBC.RetailPrice = 
					(Select TOP 1 Isnull(RetailPrice ,SalesPrice) from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU
					 and PCBA.ParentSKU is not null and PCBA.ChildSKU is not null
					Order by AssociatedProductDisplayOrder)
					from #tbl_PricingSku  PBC  where 
					Exists (Select TOP 1 1  from @TBL_PricebyCatalogforAssociateProduct PCBA  where PCBA.ParentSKU =PBC.SKU and PCBA.TypeOfProduct = 'ConfigurableProduct')
					and PBC.RetailPrice IS null 
			

		
					--select PublishCatalogLogId	,PublishedId	,PublishedXML,  PublishedXML.value('(GroupProductEntity/AssociatedZnodeProductId)[1]', 'nvarchar(20)') from ZnodePublishedXml where IsGroupProductXML =1 
			   If @IsSorting = 1 
				BEGIN
					SET @Order_BY = Replace (@Order_BY,'RetailPrice', 'Case when SalesPrice is not null then SalesPrice else RetailPrice end ')

					SET @SQL = 
					';WITH CTE_GetFilteredList AS
					(
						SELECT DISTINCT A.sku,A.RetailPrice,SalesPrice , '+dbo.Fn_GetPagingRowId(@Order_BY,'A.SKU DESC ')+',Count(*)Over() CountNo
						FROM #tbl_PricingSku A 
						WHERE 1=1
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
					)
					SELECT SKU,RetailPrice,SalesPrice,RowId,CountNo
					FROM CTE_GetFilteredList
					'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)+
					CASE WHEN @Order_BY = '' THEN '' ELSE ' ORDER BY '+ @Order_BY END
 
				END
				Else 
				BEGIN
				
					SET @SQL = 
					';WITH CTE_GetFilteredList AS
					(
						SELECT DISTINCT A.sku,A.RetailPrice,A.SalesPrice ,'+dbo.Fn_GetPagingRowId(@Order_BY,'A.SKU DESC ')+',Count(*)Over() CountNo
						FROM #tbl_PricingSku A 
						WHERE 1=1
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
					)
					SELECT SKU,RetailPrice,SalesPrice , RowId,CountNo
					FROM CTE_GetFilteredList
					'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
					--CASE WHEN @Order_BY = '' THEN '' ELSE ' ORDER BY '+ @Order_BY END
				END
		   

			INSERT INTO @TBL_PricebyCatalog(SKU,RetailPrice,SalesPrice,RowId,CountNo)
			EXEC sys.sp_sqlexec @SQL
        	
			DECLARE @TBL_PricebyCatalogFinalResult TABLE ( SKU NVARCHAR(4000), RetailPrice numeric(28,6),SalesPrice numeric(28,6) , RowId INT,CountNo INT, PublishProductId int  )
	
			IF ( @IsInStock = '-1' )  
			BEGIN
				INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,SalesPrice, RowId ,CountNo,PublishProductId )
				SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
				FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
			END
			ELSE IF ( @IsInStock = '1' )
			BEGIN	
				  INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,SalesPrice, RowId ,CountNo,PublishProductId )			
					  SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU AND 1 =
					  (case when PPI.OutOfStockOptions = 'DisablePurchasing' and I.Quantity < 1 then 0 else 1 end))
					  Union All 
					  SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE NOT EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU AND 1 =
					  (case when PPI.OutOfStockOptions = 'DisablePurchasing' and I.Quantity < 1 then 0 else 1 end))
			END
			ELSE IF ( @IsInStock = '0' )
			BEGIN
		
				  INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,SalesPrice, RowId ,CountNo,PublishProductId )			
					  SELECT PBC.SKU,RetailPrice,SalesPrice, RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU 
					  AND  PPI.OutOfStockOptions = 'DisablePurchasing' 
					  GROUP BY I.SKU HAVING SUM(I.Quantity ) < 1   )
					  Union all 
					  SELECT PBC.SKU,RetailPrice,SalesPrice,RowId ,CountNo,PPI.ID
					  FROM @TBL_PricebyCatalog  PBC LEft Outer JOIN #PublishProductId PPI On PBC.SKU = PPI.SKU 
					  WHERE NOT EXISTS ( SELECT TOP 1 1 FROM [dbo].[ZnodeInventory] I WHERE I.SKU = PPI.SKU 
					  AND  PPI.OutOfStockOptions = 'DisablePurchasing' 
					  GROUP BY I.SKU HAVING SUM(I.Quantity ) < 1   )

			END

			SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_PricebyCatalogFinalResult),0)

			SELECT SKU,RetailPrice,SalesPrice,PublishProductId FROM @TBL_PricebyCatalogFinalResult
			--Order by Isnull(RetailPrice,SalesPrice)

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSkuPricebyCatalog @WhereClause = '
			 +CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))
			 +',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(20))
			 +',@PortalId= '+cast(@PortalId as varchar(200))+',@currentUtcDate= '
			 +@currentUtcDate+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status,ERROR_MESSAGE();                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSkuPricebyCatalog',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

		END CATCH

	END
GO
PRINT N'Altering [dbo].[Znode_GetShippingList]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetShippingList')
BEGIN 
	DROP PROCEDURE Znode_GetShippingList
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetShippingList]
(
	   @WhereClause nvarchar(max)= ''
	   , @Rows int= 100
	   , @PageNo int= 1
	   , @Order_BY varchar(1000)= ''
	   , @RowsCount int OUT
	   , @ProfileId int= 0
	   , @PortalId int= 0
	   , @UserId int= 0
	   , @IsAssociated int= 0
)
AS
/*
  Summary: This Procedure is used to get shipping details According to associated profile.
		   
  Unit Testing:

   DECLARE @profileid int = 0  
	EXEC [Znode_GetShippingList]  @WhereClause ='' ,  @ProfileId = 0,@PortalId=1   ,@IsAssociated=0, @RowsCount = @profileid OUT ,@UserId = 4   SELECT @profileid
     
*/
BEGIN
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @SQL nvarchar(max), @FilterWhereClause varchar(2000)= '', @InternalOrderBy varchar(2000)= '';
		DECLARE @TBL_ProfileShipping TABLE
		( 
			ProfileId int, ProfileName nvarchar(200), PortalId int, StoreName nvarchar(200), ShippingId int, ShippingTypeId int, ShippingCode nvarchar(max), HandlingCharge numeric(28,6), HandlingChargeBasedOn varchar(50), DestinationCountryCode nvarchar(50), StateCode nvarchar(40), CountyFIPS nvarchar(100), Description nvarchar(max), IsActive bit, DisplayOrder int, ZipCode nvarchar(max), CreatedDate datetime, ModifiedDate datetime, ShippingTypeName nvarchar(max), PortalShippingId int, ProfileShippingId int, ShippingName varchar(200), ClassName varchar(100), RowId int, CountNo int
		);
		IF ISNULL(@UserId, 0) <> 0 OR 
		   (ISNULL(@PortalId, 0) > 0 AND 
		   ISNULL(@ProfileId, 0) > 0)
		BEGIN
			DECLARE @PortalIds varchar(2000)= '', @ProfileIds varchar(2000)= '', @ShippingIds varchar(2000)= '';
			IF ISNULL(@UserId, 0) <> 0
			BEGIN
			    SET @PortalIds = @PortalId
				EXEC Znode_GetUserPortalAndProfile @UserId, @PortalIds OUT, @ProfileIds OUT;
			END;
			ELSE
			BEGIN
				SET @PortalIds = @PortalId;
				SET @ProfileIds = @ProfileId;
			END;

			EXEC Znode_GetCommonShipping @PortalIds, @ProfileIds, @ShippingIds OUT;
		
			SET @FilterWhereClause = '  WHERE ShippingId IN ( '+@ShippingIds +' ) ';
		END;
		IF ISNULL(@ProfileId, 0) > 0 AND 
		   ISNULL(@UserId, 0) = 0 AND 
		   ISNULL(@PortalId, 0) = 0
		BEGIN
			SET @SQL = '
			   ;WITH CTE_GetAssociatedShipping as
			  (
				SELECT  ZP.ProfileId, ZP.ProfileName,NULL PortalId, NULL StoreName ,ZS.ShippingId,ZS.ShippingTypeId,ZS.ShippingCode,ZS.HandlingCharge,ZS.HandlingChargeBasedOn
			    ,ZS.DestinationCountryCode,ZS.StateCode,ZS.CountyFIPS,ZS.Description,ZS.IsActive,ZS.DisplayOrder,ZS.ZipCode,ZS.CreatedDate,ZS.ModifiedDate
				,CASE WHEN ZPS.ShippingId IS NULL THEN 0 ELSE 1 END IsAssociated,ZST.Name ShippingTypeName , ZPS.ProfileShippingId , NULL PortalShippingId,ZS.ShippingName,ZST.ClassName
			
				FROM ZnodeShipping ZS  
				INNER JOIN ZnodeShippingTypes ZST ON (ZST.ShippingTypeId = ZS.ShippingTypeId) 
				CROSS APPLY ZnodeProfile ZP
				LEFT JOIN ZnodeProfileShipping ZPS ON(ZP.ProfileId = ZPS.ProfileId AND ZS.ShippingId = ZPS.ShippingId)
			  )';
			SET @FilterWhereClause = 'WHERE ProfileId = '+CAST(@ProfileId AS varchar(50))+' AND IsAssociated = '+CAST(@IsAssociated AS varchar(50));
			SET @InternalOrderBy = ' ProfileId,ShippingId ';
		END;
		ELSE
		BEGIN
			IF ISNULL(@PortalId, 0) > 0 AND 
			   ISNULL(@UserId, 0) = 0 AND 
			   ISNULL(@ProfileId, 0) = 0
			BEGIN
				SET @SQL = '
			   ;WITH CTE_GetAssociatedShipping as
			  (
				SELECT NULL ProfileId,NULL ProfileName ,ZPP.PortalId, ZPP.StoreName,ZS.ShippingId,ZS.ShippingTypeId,ZS.ShippingCode,ZS.HandlingCharge,ZS.HandlingChargeBasedOn
			    ,ZS.DestinationCountryCode,ZS.StateCode,ZS.CountyFIPS,ZS.Description,ZS.IsActive,ZS.DisplayOrder,ZS.ZipCode,ZS.CreatedDate,ZS.ModifiedDate
				,CASE WHEN ZPS.PortalShippingId IS NULL THEN 0 ELSE 1 END IsAssociated,ZST.Name ShippingTypeName ,ZPS.PortalShippingId, NULL ProfileShippingId,ZS.ShippingName,ZST.ClassName
				FROM ZnodeShipping ZS 
				INNER JOIN ZnodeShippingTypes ZST ON (ZST.ShippingTypeId = ZS.ShippingTypeId) 
				CROSS APPLY ZnodePortal ZPP
				LEFT JOIN ZnodePortalShipping ZPS ON(ZPP.PortalId = ZPS.PortalId AND ZS.ShippingId = ZPS.ShippingId)
			  )';
				SET @FilterWhereClause = 'WHERE PortalId = '+CAST(@PortalId AS varchar(50))+' AND IsAssociated = '+CAST(@IsAssociated AS varchar(50));
				SET @InternalOrderBy = ' PortalId ,ShippingId ';
			END;
			ELSE
			BEGIN
				SET @SQL = '
			   ;With  CTE_GetAssociatedShipping as
			   (
			   SELECT NULL ProfileId, NULL ProfileName,NULL PortalId, NULL StoreName,ZS.ShippingId,ZS.ShippingTypeId,ZS.ShippingCode,ZS.HandlingCharge,ZS.HandlingChargeBasedOn
			   ,ZS.DestinationCountryCode,ZS.StateCode,ZS.CountyFIPS,ZS.Description,ZS.IsActive,ZS.DisplayOrder,ZS.ZipCode,ZS.CreatedDate,ZS.ModifiedDate			
			   , NULL IsAssociated ,ZST.Name ShippingTypeName , NULL PortalShippingId, NULL ProfileShippingId,ZS.ShippingName,ZST.ClassName
			   FROM ZnodeShipping ZS
			   INNER JOIN ZnodeShippingTypes ZST ON (ZST.ShippingTypeId = ZS.ShippingTypeId) 
			     )
			   ';
				SET @FilterWhereClause = CASE
										 WHEN @FilterWhereClause = '' THEN ' WHERE 1=1 '
										 ELSE @FilterWhereClause
										 END;
				SET @InternalOrderBy = ' ShippingId ';
			END;;
		END;
		
		SET @SQL = @SQL+'
	           , CTE_GetShipping AS
			 (
				SELECT	ProfileId,ProfileName,PortalId,StoreName,ShippingId,ShippingTypeId,ShippingCode,HandlingCharge,HandlingChargeBasedOn
			   ,DestinationCountryCode,StateCode,CountyFIPS,Description,IsActive,DisplayOrder,ZipCode,CreatedDate,ModifiedDate,ShippingTypeName , PortalShippingId, ProfileShippingId,ShippingName,ClassName
					,'+dbo.Fn_GetPagingRowId( @Order_BY, @InternalOrderBy )+',Count(*)Over() CountNo
				FROM CTE_GetAssociatedShipping
				'+@FilterWhereClause+'
				'+dbo.Fn_GetFilterWhereClause( @WhereClause )+'
			 )	 
	 
	      SELECT ProfileId,ProfileName,PortalId,StoreName,ShippingId,ShippingTypeId,ShippingCode,HandlingCharge,HandlingChargeBasedOn
					 ,DestinationCountryCode,StateCode,CountyFIPS,Description,IsActive,DisplayOrder,ZipCode,CreatedDate,ModifiedDate
					 ,ShippingTypeName,PortalShippingId,ProfileShippingId,ShippingName,ClassName,RowId,CountNo
		  FROM CTE_GetShipping
		  '+dbo.Fn_GetPaginationWhereClause( @PageNo, @Rows );
		
		PRINT @SQL
		INSERT INTO @TBL_ProfileShipping( ProfileId, ProfileName, PortalId, StoreName, ShippingId, ShippingTypeId, ShippingCode, HandlingCharge, HandlingChargeBasedOn, DestinationCountryCode, StateCode, CountyFIPS, Description, IsActive, DisplayOrder, ZipCode, CreatedDate, ModifiedDate, ShippingTypeName, PortalShippingId, ProfileShippingId, ShippingName, ClassName, RowId, CountNo )
		EXEC (@SQL);

		SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_ProfileShipping), 0);
		SELECT ShippingId,ProfileId, ProfileName, PortalId, StoreName,  ShippingTypeId, ShippingCode, HandlingCharge, HandlingChargeBasedOn, DestinationCountryCode, StateCode, CountyFIPS, Description, IsActive, DisplayOrder, ZipCode, CreatedDate, ModifiedDate, ShippingTypeName, PortalShippingId, ProfileShippingId, ShippingName, ClassName
		FROM @TBL_ProfileShipping;
		
	END TRY
	BEGIN CATCH
		    DECLARE @Status BIT ;
		    SET @Status = 0;
		    DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetShippingList @WhereClause = '+cast (@WhereClause AS VARCHAR(50))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@ProfileId='+CAST(@ProfileId AS VARCHAR(50))+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@UserId='+CAST(@UserId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
            SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
            EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetShippingList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_GetSKUInventory]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetSKUInventory')
BEGIN 
	DROP PROCEDURE Znode_GetSKUInventory
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetSKUInventory]
(   @WhereClause VARCHAR(1000),
    @Rows        INT           = 1000,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = NULL,
    @RowsCount   INT OUT,
    @LocaleId    INT           = 1)
AS 
   /* 
    Summary : this procedure is used to Get the inventory list by sku 
    Unit Testing 
     EXEC [Znode_GetSKUInventory]  @WhereClause = '',@RowsCount =1
    
  */
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_SKUInventory TABLE (InventoryId INT,WarehouseId INT,WarehouseCode VARCHAR(100), WarehouseName VARCHAR(100),SKU VARCHAR(300),Quantity NUMERIC(28,6),ReOrderLevel NUMERIC(28,6),ProductName NVARCHAR(MAX),RowId INT,CountNo INT)

             DECLARE @DefaultLocaleId VARCHAR(100)= (SELECT TOP 1 FeatureValues FROM ZnodeGlobalSetting WHERE FeatureName = 'Locale')

             SET @SQL = '
				WITH ZnodeInvenroyList AS 
				(
					SELECT ZI.InventoryId,ZI.WarehouseId,ZW.WarehouseCode,ZW.WarehouseName,ZI.SKU,ZI.Quantity,ZI.ReOrderLevel
					FROM ZnodeInventory ZI 
					INNER JOIN ZnodeWarehouse ZW ON (ZW.WarehouseId = ZI.WarehouseId)  				
							
				)
				, InventoryListFindProduct AS 
				(
				   SELECT ZIL.*,zavl.AttributeValue ProductName,LocaleId , ZA.AttributeCode  
				   FROM ZnodePimAttributeValue  ZAV
				   INNER JOIN ZnodePimAttributeValueLocale ZAVL on (ZAVL.PimAttributeValueId = ZAV.PimAttributeValueId and
				   ZAVL.LocaleId IN ('+@DefaultLocaleId+','+CAST(@LocaleId AS VARCHAR(100))+')	)
				   INNER JOIN ZnodePimAttribute ZA ON (ZA.PimAttributeId = ZAV.PimAttributeId ) 
				   INNER JOIN ZnodeInvenroyList ZIL ON ( ZIL.SKU = ZAVL.AttributeValue )
				   AND ZA.AttributeCode IN (''SKU'',''ProductName'')
				   	
				)
				, InventoryListProductNameWithLocale AS 
				( SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
				  FROM InventoryListFindProduct 
				  WHERE LocaleId =  '+CAST(@LocaleId AS VARCHAR(100))+'
				  AND AttributeCode = ''ProductName'' ) 

				, InventoryListWithSKU AS 
				(
				SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName 
				FROM InventoryListProductNameWithLocale pl
				UNION ALL
				SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName
				FROM InventoryListFindProduct ZL
				WHERE LocaleId =  '+@DefaultLocaleId+'
				AND AttributeCode = ''ProductName'' 
				AND NOT EXISTS (SELECT TOP 1 1 FROM InventoryListProductNameWithLocale ZS WHERE ZS.SKU = ZL.SKU AND ZS.InventoryId = ZL.InventoryId)
				)
                
				, ListDetailForPaging AS 
				(  
				SELECT *,'+dbo.Fn_GetPagingRowId(@Order_BY,'SKU DESC,InventoryId DESC')+',Count(*)Over() CountNo
				FROM InventoryListWithSKU
				WHERE 1=1
			    '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
				)
				
				SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName,RowId,CountNo
				FROM ListDetailForPaging
				'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
			
			
			INSERT INTO @TBL_SKUInventory (InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName,RowId,CountNo)
		    EXEC(@SQL)

			SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_SKUInventory),0)

			SELECT InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,ProductName 
			FROM @TBL_SKUInventory
             
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSKUInventory @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetSKUInventory',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetSKUInventoryList]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetSKUInventoryList')
BEGIN 
	DROP PROCEDURE Znode_GetSKUInventoryList
END 
GO
CREATE  PROCEDURE [dbo].[Znode_GetSKUInventoryList]
(   @WhereClause VARCHAR(1000),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT,
    @LocaleId    INT           = 1)
AS 
    /*
    Summary : this procedure is used to Get the inventory list by sku 
    Unit Testing 
     EXEC Znode_GetSKUInventoryList  '' ,@RowsCount= 1,@PageNo= 1 ,@Rows = 100
     SELECT * FROM ZnodePublishProduct WHERE PimProductid  = 4
    */
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_InventoryList TABLE (PimProductId int,InventoryId INT ,WarehouseId INT ,WarehouseCode NVARCHAR(100),WarehouseName VARCHAR(100),SKU  VARCHAR(300)
			 ,Quantity NUMERIC (28,6),ReOrderLevel NUMERIC (28,6),IsDownloadable bit default 0,ProductName NVARCHAR(max),RowId INT,CountNo INT);

             DECLARE @DefaultLocaleId VARCHAR(100)= Dbo.Fn_GetDefaultValue('Locale');
             
             IF  OBJECT_ID('tempdb..#TBL_AttributeVAlue') is not null
			 BEGIN 
				DROP TABLE #TBL_AttributeVAlue
			 END 	
			 DECLARE @PimAttributeSKUId INT = dbo.FN_GetProductSKUAttributeid()
			 ,@PimAttributeProductNameId INT = dbo.FN_GetProductNameAttributeid()
			 SELECT VI.PimProductId,VI.PimAttributeId,VI2.AttributeValue,Case when VI.PimAttributeId =@PimAttributeSKUId then 'SKU'
                    Else 'ProductName' END  AttributeCode,VI2.LocaleId --,COUNT(*)Over(Partition By VI.PimProductId,VI.PimAttributeId ORDER BY VI.PimProductId,VI.PimAttributeId  ) RowId
			 INTO #TBL_AttributeVAlue
			 FROM  ZnodePimAttributeValue  VI 
			 INNER JOIN ZnodePimAttributeValueLocale VI2 ON (VI.PimAttributeValueId = VI2.PimAttributeValueId )
			 WHERE ( LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId )
			 AND  VI.PimAttributeId IN ( @PimAttributeSKUId,@PimAttributeProductNameId)	


			 alter table #TBL_AttributeVAlue add IsDownloadable bit not null  default 0

			 Update a
			 set a.IsDownloadable=1
			 From #TBL_AttributeVAlue a
			 inner join ZnodePimDownloadableProduct b on  a.AttributeValue=b.SKU
			 WHERE a.AttributeCode = 'SKU'  

					
			 SET @SQL = '	
				;With CTE_InventoryListWithSKU AS 
				(
					SELECT  CTE.PimProductId , CTEI.AttributeValue ProductName,ZW.WarehouseCode,ZW.WarehouseName , CTEI.LocaleId,SKU,SPN.InventoryId,SPN.WarehouseId
						,SPN.Quantity,SPN.ReOrderLevel,cte.IsDownloadable
					FROM #TBL_AttributeVAlue CTE
					INNER JOIN #TBL_AttributeVAlue CTEI ON (CTEI.PimProductId = CTE.Pimproductid 
											AND CTEI.AttributeCode = ''ProductName'' )
					INNER JOIN ZnodeInventory  SPN ON ((SELECT ''''+SPN.SKU FOR XML PATH(''''))  = CTE.AttributeValue)
					INNER JOIN ZnodeWarehouse ZW ON (ZW.WarehouseId = SPN.WarehouseId) 
					WHERE CTE.AttributeCode = ''SKU'' 
				)
				,CTE_ListDetailForPaging AS 
				(
					SELECT PimProductId, InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,IsDownloadable,ProductName
					,'+dbo.Fn_GetPagingRowId(@Order_BY,'InventoryId DESC')+',Count(*)Over() CountNo 
					FROM CTE_InventoryListWithSKU
					WHERE 1=1 
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
				)				
				SELECT PimProductId,InventoryId,WarehouseId,WarehouseCode,WarehouseName,dbo.Fn_Trim(SKU)SKU,Quantity,ReOrderLevel,IsDownloadable,dbo.Fn_Trim(ProductName)ProductName,RowId,CountNo
				FROM CTE_ListDetailForPaging 
				'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)



				INSERT INTO @TBL_InventoryList(PimProductId,InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,IsDownloadable,ProductName,RowId,CountNo)
				EXEC (@SQL);

            SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_InventoryList), 0);

            SELECT PimProductId,InventoryId,WarehouseId,WarehouseCode,WarehouseName,SKU,Quantity,ReOrderLevel,IsDownloadable,ProductName
			FROM @TBL_InventoryList;
           
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSKUInventoryList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSKUInventoryList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetStoreDetail]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetStoreDetail')
BEGIN 
	DROP PROCEDURE Znode_GetStoreDetail
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetStoreDetail]
(   @WhereClause NVARCHAR(MAX),
	@Rows        INT           = 100,
	@PageNo      INT           = 1,
	@Order_BY    VARCHAR(100)  = '',
	@StateCode   NVARCHAR(200),										 
	@RowsCount   INT OUT)
AS 
    /*
		 Summary :- this procedure is used to find the store details 
	 
		 Unit Testing 
		 EXEC Znode_GetStoreDetail '',@RowsCount = 0, @StateCode = ''
	*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
              DECLARE @TBL_PortalDetails TABLE (StoreName NVARCHAR(MAX),CityName VARCHAR(3000),StateName VARCHAR(3000),PhoneNumber NVARCHAR(100),PostalCode VARCHAR(50),
			 [Status] BIT,PortalAddressId INT,AddressId INT,PortalId INT,IsActive BIT,DisplayOrder INT,Address1 VARCHAR(3000),Address2 VARCHAR(3000),
             Address3 VARCHAR(3000) ,CountryName VARCHAR(3000),RowId INT,CountNo INT,PortalName NVARCHAR(MAX),MediaPath VARCHAR(MAX),FileName VARCHAR(MAX), Latitude Decimal(9,6), Longitude Decimal(9,6));
             SET @SQL = '
				;with Cte_GetStoreDetails AS 
				(
				 SELECT DISTINCT ZPA.StoreName,ZA.CityName,ZA.StateName,ZA.PostalCode,ZA.IsActive Status,ZA.PhoneNumber,ZPA.PortalAddressId,ZA.AddressId,
				 Zp.PortalId,ZA.IsActive,ZPA.DisplayOrder,ZA.Address1,ZA.Address2,ZA.Address3,ZA.CountryName,ZP.Storename AS PortalName,[dbo].[Fn_GetMediaThumbnailMediaPath](ZM.path) MediaPath,ZM.path FileName
				 ,zpa.Latitude, zpa.Longitude
				 FROM ZnodePortal ZP 
				 INNER JOIN ZnodePortalAddress ZPA ON (ZPA.portalId = ZP.PortalId) 
				 INNER JOIN ZnodeAddress ZA ON (Za.AddressId = ZPA.AddressId) 
				 LEFT JOIN ZnodeState ZS on(ZA.StateName = ZS.StateName OR ZA.StateName = ZS.StateCode)
				 --LEFT JOIN ZnodePortalAddress ZPDS ON (ZPDS.PortalId = ZP.PortalId)
				 LEFT JOIN ZnodeMedia ZM ON (ZPA.MediaId = ZM.MediaId)
				 WHERE  (ZS.StateCode =  '''+@statecode+''' OR ZS.StateName = '''+@statecode+''' OR  '''+@statecode+ ''' = ''''	)			 				
				 ) 
				 , Cte_GetStore AS 
				 (
				  SELECT  * ,'+dbo.Fn_GetPagingRowId(@Order_BY,'PortalId DESC')+',Count(*)Over() CountNo
				  FROM Cte_GetStoreDetails
				  WHERE 1=1 
				  '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
				 )

				 SELECT DISTINCT StoreName,CityName,StateName,PhoneNumber,PostalCode,Status,PortalAddressId,AddressId,PortalId,IsActive,DisplayOrder,Address1,Address2,Address3,CountryName,RowId,CountNo,PortalName,MediaPath,FileName,Latitude, Longitude
				 FROM Cte_GetStore
				'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
          
             INSERT INTO @TBL_PortalDetails(StoreName,CityName,StateName,PhoneNumber,PostalCode,[Status],PortalAddressId,AddressId,PortalId,IsActive,
			 DisplayOrder,Address1,Address2,Address3,CountryName,RowId,CountNo,PortalName,MediaPath,FileName,Latitude, Longitude)
             EXEC (@sql);

             SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_PortalDetails), 0);

             SELECT StoreName,CityName,StateName,PostalCode,Status,PhoneNumber,PortalAddressId,AddressId,PortalId,IsActive,DisplayOrder,Address1,Address2,PortalName,
			 Address3,CountryName,MediaPath,FileName, Latitude, Longitude FROM @TBL_PortalDetails;
			
         END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE();
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetStoreDetail @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@StateCode = '+CAST(@StateCode AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetStoreDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetVendorList]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetVendorList')
BEGIN 
	DROP PROCEDURE Znode_GetVendorList
END 
GO
CREATE PROCEDURE [dbo].[Znode_GetVendorList]
(   @WhereClause NVARCHAR(3000),
    @Rows        INT            = 10,
    @PageNo      INT            = 1,
    @Order_BY    VARCHAR(1000)  = '',
    @RowsCount   INT OUT			 ,
	@LocaleId    INT 	)
AS 
/*
    Summary: This procedure is used to find the vendor list
	Unit Testing: 
     EXEC Znode_GetVendorList '' ,@RowsCount = 0  ,@LocaleId= 1 
	*/

     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX), @RowsStart VARCHAR(50), @RowsEnd VARCHAR(50);
             SET @SQL = '
		DECLARE @TBL_VendorWithAddress TABLE (PimVendorId INT , VendorCode VARCHAR(600),VendorName NVARCHAR(max), CompanyName  NVARCHAR(2000), Email  VARCHAR(100),ExternalVendorNo Nvarchar(600),IsActive BIT ,PhoneNumber VARCHAR(50),FullName NVARCHAR(1000),RowId INT )
		DECLARE @PimAttributeId INT = [dbo].[Fn_GetProductVendorAttributeId]()
		DECLARE @TBL_DefaultValue TABLE (PimAttributeId INT ,AttributeDefaultValueCode NVARCHAR(600),IsEditable BIT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT)

		INSERT INTO @TBL_DefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
		EXEC Znode_GetAttributeDefaultValueLocale @PimAttributeId,'+CAST(@LocaleId As VARCHAR(50))+'


		;with Cte_VendorWithAddress AS 
		(
		SELECT DISTINCT PimVendorId, VendorCode ,AttributeDefaultValue VendorName, ZPV.CompanyName , Email ,ExternalVendorNo,ZPV.IsActive ,ZA.PhoneNumber, CASE WHEN ZA.FirstName IS NULL THEN '''' ELSE ZA.FirstName END + CASE WHEN ZA.LastName IS NULL THEN '''' ELSE '' ''+ZA.LastName END FullName
		FROM [dbo].[ZnodePimVendor]  ZPV 
		INNER JOIN @TBL_DefaultValue TBDV ON (TBDV.AttributeDefaultValueCode = ZPV.VendorCode )
		LEFT JOIN ZnodeAddress ZA ON (ZPV.AddressId = ZA.AddressId)
		)
		INSERT INTO @TBL_VendorWithAddress
		SELECT *,DENSE_RANK()OVER(ORDER BY '+CASE
                                                   WHEN @Order_BY = ''
                                                   THEN ''
                                                   ELSE @Order_BY+','
                                               END+' PimVendorId DESC)   ROWId
		FROM  Cte_VendorWithAddress CTVWA
		'+CASE
                WHEN @WhereClause = ''
                THEN ''
                ELSE ' WHERE '+@WhereClause
            END+'
		SELECT @Count= COUNT (1) FROM @TBL_VendorWithAddress

		SELECT PimVendorId , VendorCode,VendorName, CompanyName  , Email  ,ExternalVendorNo,IsActive  ,FullName ,PhoneNumber   FROM   @TBL_VendorWithAddress '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows);
             EXEC Sp_Executesql
                  @SQL,
                  N' @Count INT OUT ',
                  @Count = @RowsCount OUT;
         END TRY
         BEGIN CATCH
            DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetVendorList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetVendorList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ImportAttributes]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportAttributes')
BEGIN 
	DROP PROCEDURE Znode_ImportAttributes
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportAttributes](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Attribute Code Name and their default input validation rule other 
	--			  flag will be inserted as default we need to modify front end
	
	-- Unit Testing: 

	--------------------------------------------------------------------------------------
BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate(), @LocaleId int  ;
		SELECT @LocaleId = DBO.Fn_GetDefaultLocaleId();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertPimAtrribute TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, AttributeName varchar(300), AttributeCode varchar(300), AttributeType varchar(300), DisplayOrder int, GUID nvarchar(400)
		
		);
		DECLARE @InsertedPimAttributeIds TABLE (PimAttributeId int ,AttributeTypeId int,AttributeCode nvarchar(300))
		
		SET @SSQL = 'Select RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID FROM '+@TableName;
		INSERT INTO @InsertPimAtrribute( RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID)
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @AttributeCode TABLE
		( 
		   AttributeCode nvarchar(300)
		);
		INSERT INTO @AttributeCode
			   SELECT AttributeCode
			   FROM ZnodePimAttribute 

		-- Start Functional Validation 
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '10', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeCode in 
			   (
				   SELECT AttributeCode FROM @AttributeCode  where AttributeCode is not null 
			   );
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '10', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeCode in 
			   (
				   select AttributeCode  FROM @InsertPimAtrribute  Group BY AttributeCode  having count(*) > 1 
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'AttributeType', AttributeType, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeType NOT in 
			   (
				   SELECT AttributeTypeName  FROM ZnodeAttributeType  where IsPimAttributeType = 1 
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '50', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ltrim(rtrim(isnull(ii.AttributeCode,''))) like '%[^0-9A-Za-z]%'

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '50', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE Isnumeric(ltrim(rtrim(isnull(ii.AttributeCode,'')))) =1

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '51', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ltrim(rtrim(isnull(ii.AttributeCode,''))) like '% %' -----space not allowed


		-- End Function Validation 	
		-----------------------------------------------
		-- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertPimAtrribute
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
		);
		
		-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM @InsertPimAtrribute
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End


		--- Insert data into base table ZnodePimatrribute with their validation 

		INSERT INTO ZnodePimAttribute (AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined
			,IsConfigurable,IsPersonalizable,IsShowOnGrid,DisplayOrder,HelpDescription,IsCategory,IsHidden,IsSwatch,
			CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
		OUTPUT Inserted.PimAttributeId,Inserted.AttributeTypeId,Inserted.AttributeCode INTO @InsertedPimAttributeIds  
		
		SELECT ZAT.AttributeTypeId,AttributeCode, 0 IsRequired , 1 IsLocalizable,1 IsFilterable, 0 IsSystemDefined, 0 IsConfigurable,
		0 IsPersonalizable,  0 IsShowOnGrid , DisplayOrder, '' HelpDescription ,0  IsCategory , 0 IsHidden , 0 IsSwatch,
		@UserId , @GetDate ,@UserId , @GetDate from @InsertPimAtrribute IPA INNER JOIN ZnodeAttributeType ZAT 
		ON IPA.AttributeType = ZAT.AttributeTypeName  
		
		
		INSERT INTO ZnodePimAttributeLocale (LocaleId,PimAttributeId,AttributeName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select @LocaleId ,IPAS.PimAttributeId, IPA.AttributeName, '', @UserId , @GetDate ,@UserId , @GetDate   
		 FROM @InsertedPimAttributeIds IPAS INNER JOIN @InsertPimAtrribute IPA ON IPAS.AttributeCode= IPA.AttributeCode 
		
		INSERT INTO ZnodePimAttributeValidation
		(PimAttributeId,InputValidationId,InputValidationRuleId,Name,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		SELECT IPA.PimAttributeId,ZAIV.InputValidationId,NULL,null , @UserId , @GetDate ,@UserId , @GetDate  
		FROM @InsertedPimAttributeIds IPA INNER JOIN ZnodeAttributeInputValidation ZAIV ON IPA.AttributeTypeId = ZAIV.AttributeTypeId

		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET STATUS = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;
		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.PROCEDURES WHERE NAME = 'Znode_ImportCustomer')
BEGIN
DROP PROCEDURE Znode_ImportCustomer
END

GO
CREATE  PROCEDURE [dbo].[Znode_ImportCustomer](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @LocaleId int= 0,@PortalId int ,@CsvColumnString nvarchar(max))
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import SEO Details
	
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max),@AspNetZnodeUserId nvarchar(256),@ASPNetUsersId nvarchar(256),
		@PasswordHash nvarchar(max),@SecurityStamp nvarchar(max),@RoleId nvarchar(256),@IsAllowGlobalLevelUserCreation nvarchar(10)

		SET @SecurityStamp = '0wVYOZNK4g4kKz9wNs-UHw2'
		SET @PasswordHash = 'APy4Tm1KbRG6oy7h3r85UDh/lCW4JeOi2O2Mfsb3OjkpWTp1YfucMAvvcmUqNaSOlA==';
		SELECT  @RoleId  = Id from AspNetRoles where   NAME = 'Customer'  

		Select @IsAllowGlobalLevelUserCreation = FeatureValues from ZnodeGlobalsetting where FeatureName = 'AllowGlobalLevelUserCreation'

		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 

		-- Three type of import required three table varible for product , category and brand
		DECLARE @InsertCustomer TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, UserName nvarchar(512) ,FirstName	nvarchar(200),
			LastName nvarchar(200), BudgetAmount	numeric,Email	nvarchar(100),PhoneNumber	nvarchar(100),
		    EmailOptIn	bit	,ReferralStatus	nvarchar(40),IsActive	bit	,ExternalId	nvarchar(max), GUID NVARCHAR(400)
		);

			--SET @SSQL = 'SELECT RowNumber,UserName,FirstName,LastName,BudgetAmount,Email,PhoneNumber,EmailOptIn,IsActive,ExternalId,GUID FROM '+ @TableName;
		SET @SSQL = 'SELECT RowNumber,' + @CsvColumnString + ',GUID FROM '+ @TableName;
		INSERT INTO @InsertCustomer( RowNumber,UserName,FirstName,LastName,Email,PhoneNumber,       EmailOptIn,IsActive,ExternalId,GUID )
		EXEC sys.sp_sqlexec @SSQL;
		


		--UserName,FirstName,LastName,Email,PhoneNumber,EmailOptIn,IsActive,ExternalId
	
	    -- start Functional Validation 

		-----------------------------------------------
		--If @IsAllowGlobalLevelUserCreation = 'true'
		--		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
		--			   SELECT '10', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
		--			   FROM @InsertCustomer AS ii
		--			   WHERE ii.UserName in 
		--			   (
		--				   SELECT UserName FROM AspNetZnodeUser   where PortalId = @PortalId
		--			   );
		--Else 
		--		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
		--			   SELECT '10', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
		--			   FROM @InsertCustomer AS ii
		--			   WHERE ii.UserName in 
		--			   (
		--				   SELECT UserName FROM AspNetZnodeUser   
		--			   );
		
				INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '35', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomer AS ii
					   WHERE ii.UserName not like '%_@_%_.__%' 
				
				INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
					   SELECT '30', 'UserName', UserName, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
					   FROM @InsertCustomer AS ii
					   WHERE ii.UserName in 
					   (SELECT UserName  FROM @InsertCustomer group by UserName  having count(*) > 1 )

		--Note : Content page import is not required 
		
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  

		DELETE FROM @InsertCustomer
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);


		-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM @InsertCustomer
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End

		-- Insert Product Data 
				
				
				DECLARE @InsertedAspNetZnodeUser TABLE (AspNetZnodeUserId nvarchar(256) ,UserName nvarchar(512),PortalId int )
				DECLARE @InsertedASPNetUsers TABLE (Id nvarchar(256) ,UserName nvarchar(512))
				DECLARE @InsertZnodeUser TABLE (UserId int,AspNetUserId nvarchar(256) )

				UPDATE ANU SET 
				ANU.PhoneNumber	= IC.PhoneNumber
				from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN @InsertCustomer IC ON ANZU.UserName = IC.UserName 
				where Isnull(ANZU.PortalId,0) = Isnull(@PortalId ,0)

				UPDATE ZU SET 
				ZU.FirstName	= IC.FirstName,
				ZU.LastName		= IC.LastName,
				--ZU.MiddleName	= IC.MiddleName,
				ZU.BudgetAmount = IC.BudgetAmount,
				ZU.Email		= IC.Email,
				ZU.PhoneNumber	= IC.PhoneNumber,
				ZU.EmailOptIn	= Isnull(IC.EmailOptIn,0),
				ZU.IsActive		= IC.IsActive
				--ZU.ExternalId = ExternalId
				from AspNetZnodeUser ANZU INNER JOIN ASPNetUsers ANU ON ANZU.AspNetZnodeUserId = ANU.UserName 
				INNER JOIN ZnodeUser ZU ON ANU.ID = ZU.AspNetUserId	
				INNER JOIN @InsertCustomer IC ON ANZU.UserName = IC.UserName 
				where Isnull(ANZU.PortalId,0) = Isnull(@PortalId ,0)

	
				Insert into AspNetZnodeUser (AspNetZnodeUserId, UserName, PortalId)		
				OUTPUT INSERTED.AspNetZnodeUserId, INSERTED.UserName, INSERTED.PortalId	INTO  @InsertedAspNetZnodeUser 			 
				Select NEWID(),IC.UserName, @PortalId FROM @InsertCustomer IC 
				where Not Exists (Select TOP 1 1  from AspNetZnodeUser ANZ where Isnull(ANZ.PortalId,0) = Isnull(@PortalId,0) AND ANZ.UserName = IC.UserName)

				INSERT INTO ASPNetUsers (Id,Email,EmailConfirmed,PasswordHash,SecurityStamp,PhoneNumber,PhoneNumberConfirmed,TwoFactorEnabled,
				LockoutEndDateUtc,LockOutEnabled,AccessFailedCount,PasswordChangedDate,UserName)
				output inserted.Id, inserted.UserName into @InsertedASPNetUsers
				SELECT NewId(), Email,0 ,@PasswordHash,@SecurityStamp,PhoneNumber,0,0,NULL LockoutEndDateUtc,1 LockoutEnabled,
				0,@GetDate,AspNetZnodeUserId from @InsertCustomer A INNER JOIN @InsertedAspNetZnodeUser  B 
				ON A.UserName = B.UserName
				
				INSERT INTO  ZnodeUser(AspNetUserId,FirstName,LastName,CustomerPaymentGUID,Email,PhoneNumber,EmailOptIn,
				IsActive,ExternalId, CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
				OUTPUT Inserted.UserId, Inserted.AspNetUserId into @InsertZnodeUser
				SELECT IANU.Id AspNetUserId ,IC.FirstName,IC.LastName,null CustomerPaymentGUID,IC.Email
				,IC.PhoneNumber,Isnull(IC.EmailOptIn,0),IC.IsActive,IC.ExternalId, @UserId,@Getdate,@UserId,@Getdate
				from @InsertCustomer IC Inner join 
				@InsertedAspNetZnodeUser IANZU ON IC.UserName = IANZU.UserName  INNER JOIN 
				@InsertedASPNetUsers IANU ON IANZU.AspNetZnodeUserId = IANU.UserName 
				  	     
				INSERT INTO AspNetUserRoles (UserId,RoleId)  Select AspNetUserId, @RoleID from @InsertZnodeUser 
				INSERT INTO ZnodeUserPortal (UserId,PortalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
				SELECT UserId, @PortalId , @UserId,@Getdate,@UserId,@Getdate from @InsertZnodeUser
				Declare @ProfileId  int 
				select TOP 1 @ProfileId   =  ProfileId from ZnodePortalprofile where Portalid = 4 and IsDefaultRegistedProfile=1

				insert into ZnodeUserProfile (ProfileId,UserId,IsDefault,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
				SELECT @ProfileId  , UserId, 1 , @UserId,@Getdate,@UserId,@Getdate from @InsertZnodeUser
		-- 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;

GO
PRINT N'Altering [dbo].[Znode_ImportCatalogCategory]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportCatalogCategory')
BEGIN 
	DROP PROCEDURE Znode_ImportCatalogCategory
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportCatalogCategory](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Catalog Category Product association
	
	-- Unit Testing : 
	--BEGIN TRANSACTION;
	--update ZnodeGlobalSetting set FeatureValues = '5' WHERE FeatureName = 'InventoryRoundOff' 
	--    DECLARE @status INT;
	--    EXEC [Znode_ImportInventory] @InventoryXML = '<ArrayOfImportInventoryModel>
	-- <ImportInventoryModel>
	--   <SKU>S1002</SKU>
	--   <Quantity>999998.33</Quantity>
	--   <ReOrderLevel>10</ReOrderLevel>
	--   <RowNumber>1</RowNumber>
	--   <ListCode>TestInventory</ListCode>
	--   <ListName>TestInventory</ListName>
	-- </ImportInventoryModel>
	--</ArrayOfImportInventoryModel>' , @status = @status OUT , @UserId = 2;
	--    SELECT @status;
	--    ROLLBACK TRANSACTION;
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertCatalogCategory TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300), CategoryName varchar(200), DisplayOrder int, IsActive bit, GUID nvarchar(400)
			--,Index Ind_SKU1 (SKU),Index Ind_CategoryName (CategoryName)
		);

		DECLARE @CategoryAttributId int;

		SET @CategoryAttributId =
		(
			SELECT TOP 1 PimAttributeId
			FROM ZnodePimAttribute AS ZPA
			WHERE ZPA.AttributeCode = 'CategoryName' AND 
				  ZPA.IsCategory = 1
		);

		DECLARE @InventoryListId int;

		SET @SSQL = 'Select RowNumber,SKU,CategoryName,DisplayOrder ,IsActive,GUID FROM '+@TableName;
		INSERT INTO @InsertCatalogCategory( RowNumber, SKU, CategoryName, DisplayOrder, IsActive, GUID )
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @SKU TABLE
		( 
		   SKU nvarchar(300), PimProductId INT--, Index Ins_SKU (SKU)
		);
		INSERT INTO @SKU
			   SELECT b.AttributeValue, a.PimProductId
			   FROM ZnodePimAttributeValue AS a
					INNER JOIN
					ZnodePimAttributeValueLocale AS b
					ON a.PimAttributeId = dbo.Fn_GetProductSKUAttributeId() AND 
					   a.PimAttributeValueId = b.PimAttributeValueId;


		DECLARE @CategoryName TABLE
		( 
			CategoryName nvarchar(300), PimCategoryId int --index ind_101 (CategoryName)
		);
		INSERT INTO @CategoryName
			   SELECT ZPCAL.CategoryValue, ZPCA.PimCategoryId
			   FROM ZnodePimCategoryAttributeValue AS ZPCA
					INNER JOIN
					ZnodePimCategoryAttributeValueLocale AS ZPCAL
					ON ZPCA.PimAttributeId = 5 AND 
					ZPCA.PimCategoryAttributeValueId = ZPCAL.PimCategoryAttributeValueId;
					
		-- start Functional Validation 
		
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertCatalogCategory AS ii
			   WHERE ii.SKU NOT in 
			   (
				   SELECT SKU FROM @SKU  where SKU is not null 
			   );
		
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'CategoryName', CategoryName, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertCatalogCategory AS ii
			   WHERE ii.CategoryName NOT in 
			   (
				   SELECT CategoryName FROM @CategoryName  where CategoryName is not null 
			   );
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertCatalogCategory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);


		-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM @InsertCatalogCategory

		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End

			
		IF(ISNULL(@PimCatalogId, 0) <> 0)
		BEGIN
			WITH Cte_CategorySKUAssociation
				 AS(SELECT SKU.PimProductId, 
				   (Select top 1 PimCategoryId from @CategoryName where ICC.CategoryName = CategoryName )  
				   PimCategoryId
				   , DisplayOrder, IsActive FROM @InsertCatalogCategory AS ICC INNER JOIN @SKU AS SKU ON ICC.SKU = SKU.SKU)
				 MERGE INTO ZnodePimCatalogCategory TARGET
				 USING Cte_CategorySKUAssociation SOURCE
				 ON( TARGET.PimCategoryId = SOURCE.PimCategoryId AND 
					 Target.PimCatalogId = @PimCatalogId
				   )
				 WHEN MATCHED
					   THEN UPDATE SET TARGET.PimProductId = SOURCE.PimProductId, TARGET.IsActive = SOURCE.IsActive, TARGET.DisplayOrder = SOURCE.DisplayOrder, TARGET.CreatedBy = @UserId, TARGET.CreatedDate = @GetDate, TARGET.ModifiedBy = @UserId, TARGET.ModifiedDate = @GetDate
				 WHEN NOT MATCHED
					   THEN INSERT(PimCatalogId, PimCategoryId, PimProductId, IsActive, DisplayOrder, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) VALUES( @PimCatalogId, SOURCE.PimCategoryId, SOURCE.PimProductId, SOURCE.IsActive, SOURCE.DisplayOrder, @UserId, @GetDate, @UserId, @GetDate );
		END;
		ELSE
		BEGIN
			
			  Declare @ZnodePimCategoryProduct TABLE (PimProductId int , PimCategoryId int , Status bit , DisplayOrder int) 
			  	
			  insert into @ZnodePimCategoryProduct (PimProductId , PimCategoryId , Status , DisplayOrder )
			  SELECT SKU.PimProductId, (Select top 1 PimCategoryId from @CategoryName where ICC.CategoryName = CategoryName )  PimCategoryId
				 , IsActive , DisplayOrder FROM @InsertCatalogCategory AS ICC INNER JOIN	 @SKU AS SKU ON ICC.SKU = SKU.SKU 
			
			  Select @SuccessRecordCount = count(DISTINCT ICC.RowNumber) FROM @InsertCatalogCategory
			  AS ICC INNER JOIN	 @SKU AS SKU ON ICC.SKU = SKU.SKU 
			  UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
			  WHERE ImportProcessLogId = @ImportProcessLogId;


			  INSERT into ZnodePimCategoryProduct ( PimProductId, PimCategoryId, Status, DisplayOrder, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
			  Select TABL.PimProductId, TABL.PimCategoryId, TABL.Status, TABL.DisplayOrder,@UserId, @GetDate, @UserId, @GetDate   from @ZnodePimCategoryProduct TABL    
			  Where NOT EXISTS (Select top 1 1 from ZnodePimCategoryProduct ZPCP where ZPCP.PimProductId = TABL.PimProductId and  ZPCP.PimCategoryId = TABL.PimCategoryId)

		END;										 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportInsertUpdatePimProduct]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportInsertUpdatePimProduct')
BEGIN 
	DROP PROCEDURE Znode_ImportInsertUpdatePimProduct
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportInsertUpdatePimProduct]
(
    @PimProductDetail  PIMPRODUCTDETAIL READONLY,
    @UserId            INT       ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0,
	@CopyPimProductId  INT	  = 0 )
AS
   /*
     Summary : To Insert / Update single Product with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
			 DECLARE @PimProductId INT;
			 DECLARE @TBL_PimProductId TABLE(PimAttributeValueId INT,ZnodePimAttributeValueLocaleId INT );
			 DECLARE @TBL_CopyPimProductId TABLE(PimAttributeValueId INT,OldPimAttributeValueId INT);
			 DECLARE @PimDefaultFamily INT= dbo.Fn_GetDefaultPimProductFamilyId()
			 DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @TBL_DefaultAttributeId TABLE (PimAttributeId INT PRIMARY KEY , AttributeCode VARCHAR(600))
			 DECLARE @TBL_MediaAttributeId TABLE (PimAttributeId INT PRIMARY KEY, AttributeCode VARCHAR(600))
			 DECLARE @TBL_TextAreaAttributeId TABLE (PimAttributeId INT PRIMARY KEY , AttributeCode VARCHAR(600))
			 DECLARE @TBL_MediaAttributeValue TABLE (PimAttributeValueId INT ,LocaleId INT ,AttributeValue VARCHAr(300),MediaId INT)
			 DECLARE @TBL_DefaultAttributeValue TABLE (PimAttributeValueId INT , LocaleId INT , AttributeValue INT)
			 DECLARE @ZnodePimAttributeValue TABLE (PimAttributeValueId  INT, PimAttributeFamilyId INT,PimAttributeId INT);

			 DECLARE @AssociatedProduct VARCHAR(4000);
			 DECLARE @ConfigureAttributeId VARCHAR(4000);
			 DECLARE @ConfigureFamilyId VARCHAR(4000);
			 DECLARE @PimAttributeFamilyId INT;
			 DECLARE @LocaleId INT 

			 DECLARE @pimSkuAttributeId VARCHAR(50) = [dbo].[Fn_GetProductSKUAttributeId] ()
			 DECLARE @pimProductNameAttributeId VARCHAR(50) =[dbo].Fn_GetProductNameAttributeId ()
			 DECLARE @PimIsDownlodableAttributeId VARCHAR(50) = [dbo].[Fn_GetIsDownloadableAttributeId]()
			 Declare @SKU nvarchar(300),@ProductName nvarchar(300)
			 Select * into #PimProductDetail from @PimProductDetail
			
			--DECLARE @PimAttributeFamily VARCHAR(50) =  [dbo].[Fn_GetAttributeFamilyId]()
			--Update #PimProductDetail SET AttributeValue = 
			--(SELECT FamilyCode from ZnodePimAttributeFamily where PimAttributeFamilyId = @PimAttributeFamilyId)
			--where PimAttributeId = @PimAttributeFamily

			--DECLARE @PimAttributeIsPublish VARCHAR(50) =  [dbo].[Fn_GetAttributeIsPublish]()
			 
			--insert into #PimProductDetail ([PimAttributeId],[PimAttributeFamilyId],[ProductAttributeCode],[ProductAttributeDefaultValueId],
			--[PimAttributeValueId],	[LocaleId],[PimProductId],[AttributeValue],[AssociatedProducts],[ConfigureAttributeIds],[ConfigureFamilyIds]) 
			 
			--SELECT TOP 1 @PimAttributeIsPublish,[PimAttributeFamilyId],'PublishStatus' ProductAttributeCode,NULL ProductAttributeDefaultValueId,
			--NULL PimAttributeValueId,	[LocaleId],[PimProductId],
			--CASE when isnull([PimProductId] ,0) > 1 then 'Draft' else 'Not Publish' END AttributeValue,
			--[AssociatedProducts],[ConfigureAttributeIds],[ConfigureFamilyIds]
			--from @PimProductDetail  


			INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  [dbo].[Fn_GetDefaultAttributeId] ()
			 
			 INSERT INTO @TBL_MediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM [dbo].[Fn_GetProductMediaAttributeId]()

			 INSERT INTO @TBL_TextAreaAttributeId (PimAttributeId ,AttributeCode)
			 SELECT PimAttributeId, AttributeCode   FROM [dbo].[Fn_GetTextAreaAttributeId]()

			 
			 SELECT TOP 1 @PimAttributeFamilyId = PimAttributeFamilyId
                FROM #PimProductDetail;
             
			 

			 
			 
			 SELECT TOP 1 @LocaleId = LocaleId
                FROM #PimProductDetail;

             -- Retrive input productId from #PimProductDetail table ( having multiple attribute values with common productId) 

             SELECT TOP 1 @PimProductId = PimProductId
             FROM #PimProductDetail;
			
             IF ISNULL(@PimProductId, 0) = 0
                 BEGIN
                     INSERT INTO ZnodePimProduct
                     (PimAttributeFamilyId,
                      CreatedBy,
                      CreatedDate,
                      ModifiedBy,
                      ModifiedDate
                     )
                            SELECT @PimAttributeFamilyId,
                                   @UserId,
                                   @GetDate,
                                   @UserId,
                                   @GetDate;
                     SET @PimProductId = SCOPE_IDENTITY();
					 If EXISTS (select TOP 1 1 from #PimProductDetail where PimAttributeId = @PimIsDownlodableAttributeId and AttributeValue = 'true'  )
					 Begin
						
						Select TOP 1 @SKU  =  AttributeValue from  #PimProductDetail where PimAttributeId =  @pimSkuAttributeId
						Select TOP 1 @ProductName  = AttributeValue from  #PimProductDetail where PimAttributeId =  @pimProductNameAttributeId
						insert into ZnodePimDownloadableProduct(SKU,ProductName,  CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						Select @SKU, @ProductName, @UserId , @GetDate, @UserId , @GetDate 
					 End
		

                 END;
             ELSE 
                 BEGIN
                     UPDATE ZNodePimProduct
                       SET
                           PimAttributeFamilyId = @PimAttributeFamilyId,
						   IsProductPublish = 0 ,
                           ModifiedBy = @UserId,
                           ModifiedDate = @GetDate
                     WHERE PimProductId = @PimProductId;
            									
					 INSERT INTO @TBL_PimProductId(PimAttributeValueId)
					 SELECT ZPAV.PimAttributeValueId
                     FROM ZnodePimAttributeValue ZPAV
					 INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId AND ( @localeID = @DefaultLocaleId OR ZPA.IsLocalizable = 1 OR EXISTS (SELECT TOP 1 1 FROM [dbo].[Fn_GetProductMediaAttributeId]() FN WHERE FN.PimAttributeId = ZPAV.PimAttributeId)))
					 INNER JOIN ZnodePimFamilyGroupMapper ZPFGMI  ON (ZPFGMI.PimAttributeId = ZPAV.PimAttributeId AND ZPFGMI.PimAttributeFamilyId = @PimAttributeFamilyId)
					 WHERE ZPAV.PimProductId = @PimProductId
					 AND NOT EXISTS
                            (
                                SELECT TOP 1 1
                                FROM #PimProductDetail TBPDI
                                WHERE TBPDI.PimAttributeId = ZPAV.PimAttributeId
                                      AND TBPDI.PimProductId = ZPAV.PimProductId
							 )
                     
				    --  SELECT * FROM @TBL_PimProductId

			
                     DELETE FROM ZnodePimAttributeValueLocale
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimAttributeValueLocale.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					 DELETE  ZnodePimProductAttributeDefaultValue 
					  WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId;
					 DELETE FROM ZnodePimProductAttributeMedia 
					  WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeMedia.PimAttributeValueId 
								
                     ) 
					 AND LocaleId = @LocaleId;

					-- SELECT * FROM @TBL_PimProductId

					 DELETE FROM ZnodePimProductAttributeTextAreaValue
					   WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimProductAttributeTextAreaValue.PimAttributeValueId 
								
                     ) AND LocaleId = @LocaleId ;

                     DELETE FROM ZnodePimAttributeValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimProductId TBPD
                         WHERE TBPD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId
                     )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeTextAreaValue ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId )
					 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPVD WHERE ZPVD.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId );
					If EXISTS (select TOP 1 1 from #PimProductDetail where PimAttributeId = @PimIsDownlodableAttributeId and AttributeValue = 'true'  )
					 Begin
						insert into ZnodePimDownloadableProduct(SKU,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
						Select TOP 1 PD.AttributeValue, @UserId , @GetDate, @UserId , @GetDate from  #PimProductDetail PD where  PD.PimAttributeId = @pimSkuAttributeId 
						AND not exists (select top 1 1 from  ZnodePimDownloadableProduct where  ZnodePimDownloadableProduct.SKU  =  PD.AttributeValue)

				
						Select TOP 1 @SKU  =  AttributeValue from  #PimProductDetail where PimAttributeId =  @pimSkuAttributeId
						Select TOP 1 @ProductName  = AttributeValue from  #PimProductDetail where PimAttributeId =  @pimProductNameAttributeId
						IF NOT Exists (	select top 1 1 from  ZnodePimDownloadableProduct where  ZnodePimDownloadableProduct.SKU  = @SKU)
							insert into ZnodePimDownloadableProduct(SKU,ProductName,  CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
							Select @SKU, @ProductName, @UserId , @GetDate, @UserId , @GetDate 

					 End
                 END;
		
		    MERGE INTO ZnodePimAttributeValue TARGET
              USING #PimProductDetail SOURCE
              ON(
				TARGET.PimProductId = @PimProductId
                AND TARGET.PimAttributeId = SOURCE.PimAttributeId)
                --AND ISNULL(TARGET.PimAttributeFamilyId, 0) = ISNULL(SOURCE.PimAttributeFamilyId, 0))
                 WHEN MATCHED
                 THEN UPDATE SET
                                 TARGET.PimAttributeFamilyId = CASE
                                                                   WHEN Source.PimAttributeFamilyId = 0
                                                                   THEN NULL
                                                                   ELSE Source.PimAttributeFamilyId
                                                               END,
                                 --TARGET.PimAttributeDefaultValueId = CASE
                                 --                                        WHEN SOURCE.ProductAttributeDefaultValueId = 0
                                 --                                        THEN NULL
                                 --                                        ELSE SOURCE.ProductAttributeDefaultValueId
                                 --                                    END, 
                                 -- ,TARGET.AttributeValue					= SOURCE.AttributeValue
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN INSERT(PimAttributeFamilyId,
                             PimProductId,
                             PimAttributeId,
                             PimAttributeDefaultValueId,
                             --,AttributeValue
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) VALUES
             (CASE
                  WHEN Source.PimAttributeFamilyId = 0
                  THEN @PimDefaultFamily
                  ELSE Source.PimAttributeFamilyId
              END,
              @PimProductId,
              SOURCE.PimAttributeId,
              CASE
                  WHEN SOURCE.ProductAttributeDefaultValueId = 0
                  THEN NULL
                  ELSE SOURCE.ProductAttributeDefaultValueId
              END, 
              --,SOURCE.AttributeValue
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             )
             --WHEN NOT MATCHED BY SOURCE AND TARGET.PimProductId = @PimProductId
             --                               AND Target.PimAttributeFamilyId IS NOT NULL
             --THEN DELETE
             OUTPUT INSERTED.PimAttributeValueId,
                    INSERTED.PimAttributeFamilyId,
                    INSERTED.PimAttributeId
                    INTO @ZnodePimAttributeValue;
        		 
		INSERT INTO @TBL_MediaAttributeValue (PimAttributeValueId,LocaleId , AttributeValue,MediaId)
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                         zm.Path AttributeValue
						 ,ZM.MediaId
        FROM @ZnodePimAttributeValue AS a
        INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_MediaAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		INNER JOIN ZnodeMedia ZM ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue ,',') SP WHERE sp.Item = ZM.MediaId ))
		
		DELETE FROM ZnodePimProductAttributeMedia 
		WHERE EXISTS 
		 (SELECT TOP 1 1 FROM @TBL_MediaAttributeValue TBLM WHERE ZnodePimProductAttributeMedia.PimAttributeValueId = TBLM.PimAttributeValueId 
		 AND TBLM.MediaId <> ZnodePimProductAttributeMedia.MediaId  AND ZnodePimProductAttributeMedia.Localeid = @LocaleId)



		MERGE INTO ZnodePimProductAttributeMedia TARGET 
		USING @TBL_MediaAttributeValue SOURCE 
		ON (        TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
		        AND TARGET.MediaPAth = SOURCE.AttributeValue
                  AND TARGET.LocaleId = SOURCE.LocaleId)
		WHEN MATCHED THEN 
		UPDATE SET
                                 TARGET.MediaPath = SOURCE.AttributeValue,
						   TARGET.MediaId   = SOURCE.MediaId,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN 
		    INSERT(PimAttributeValueId,
                             LocaleId,
                             MediaPath,
							 MediaId ,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) 
			VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
			  SOURCE.MediaId,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
		 --WHEN NOT MATCHED BY SOURCE AND EXISTS 
		 --(SELECT TOP 1 1 FROM @TBL_MediaAttributeValue TBLM WHERE TARGET.PimAttributeValueId = TBLM.PimAttributeValueId AND TBLM.MediaId = TARGET.MediaId  AND TARGET.Localeid = @LocaleId)
		 --  THEN 
		 --DELETE  ;


	   ;With Cte_TextAreaAttributeValue AS 
		 (
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        AttributeValue
        FROM @ZnodePimAttributeValue AS a
        INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_TextAreaAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		
		)
		
		MERGE INTO ZnodePimProductAttributeTextAreaValue TARGET 
		USING Cte_TextAreaAttributeValue SOURCE 
		ON (TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
                AND TARGET.LocaleId = SOURCE.LocaleId)
		WHEN MATCHED THEN 
		UPDATE SET
                                 TARGET.AttributeValue = SOURCE.AttributeValue,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN 
		    INSERT(PimAttributeValueId,
                             LocaleId,
                             AttributeValue,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) 
			VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
		-- SELECT a.PimAttributeValueId,
  --                      b.LocaleId,
  --                      d.PimAttributeDefaultValueId  AttributeValue,b.PimAttributeId
  --      FROM @ZnodePimAttributeValue AS a
  --        INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
  --                                              AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		--INNER JOIN @TBL_DefaultAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		--INNER JOIN ZnodePimAttributeDefaultValue d ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,',') SP WHERE d.PimAttributeId = b.PimAttributeId AND SP.Item = d.AttributeDefaultValueCode))
	



        INSERT INTO @TBL_DefaultAttributeValue (PimAttributeValueId,LocaleId,AttributeValue)  
		SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        d.PimAttributeDefaultValueId  AttributeValue
        FROM @ZnodePimAttributeValue AS a
          INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
		INNER JOIN @TBL_DefaultAttributeId c ON ( c.PimAttributeId  = b.PimAttributeId )
		INNER JOIN ZnodePimAttributeDefaultValue d ON (EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,',') SP WHERE d.PimAttributeId = b.PimAttributeId AND SP.Item = d.AttributeDefaultValueCode))
	
	     -- SELECT * FROM @TBL_DefaultAttributeValue

		--  SELECT * FROM Cte_DefaultAttributeValue
		DELETE FROM ZnodePimProductAttributeDefaultValue 
		WHERE  EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeValue TBLAV WHERE TBLAV.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId 
												AND TBLAV.AttributeValue   <> ZnodePimProductAttributeDefaultValue.PimAttributeDefaultValueId 
												 AND ZnodePimProductAttributeDefaultValue.LocaleId = @LocaleId )

		MERGE INTO ZnodePimProductAttributeDefaultValue TARGET 
		USING @TBL_DefaultAttributeValue SOURCE 
		ON (TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
              AND TARGET.PimAttributeDefaultValueId =  SOURCE.AttributeValue
			    AND TARGET.LocaleId = SOURCE.LocaleId)
		WHEN MATCHED THEN 
		UPDATE SET
                                 TARGET.PimAttributeDefaultValueId = SOURCE.AttributeValue,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN 
		    INSERT(PimAttributeValueId,
                             LocaleId,
                             PimAttributeDefaultValueId,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) 
			VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
			 --WHEN NOT MATCHED BY SOURCE  AND EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeValue TBLAV WHERE TBLAV.PimAttributeValueId = TARGET.PimAttributeValueId 
				--								AND TBLAV.AttributeValue   = TARGET.PimAttributeDefaultValueId  AND TARGET.LocaleId = @LocaleId )
			 --THEN 
			 --DELETE 
			 --;
		
   
			 
		   MERGE INTO ZnodePimAttributeValueLocale TARGET
             USING
             (
                 SELECT a.PimAttributeValueId,
                        b.LocaleId,
                        AttributeValue
                 FROM @ZnodePimAttributeValue AS a
                      INNER JOIN #PimProductDetail AS b ON(a.PimAttributeId = b.PimAttributeId
                                                             AND ISNULL(a.PimAttributeFamilyId, 0) = ISNULL(b.PimAttributeFamilyId, 0))
                 WHERE NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBLDA WHERE TBLDA.PimAttributeId = b.PimAttributeId  )
			     AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_MediaAttributeId TBLMA WHERE TBLMA.PimAttributeId = b.PimAttributeId  )
				 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBLTA WHERE TBLTA.PimAttributeId = b.PimAttributeId  )
			 ) SOURCE
             ON(TARGET.PimAttributeValueId = SOURCE.PimAttributeValueId
                AND TARGET.LocaleId = SOURCE.LocaleId)
                 WHEN MATCHED
                 THEN UPDATE SET
                                 TARGET.AttributeValue = SOURCE.AttributeValue,
                                 TARGET.CreatedBy = @UserId,
                                 TARGET.CreatedDate = @GetDate,
                                 TARGET.ModifiedBy = @UserId,
                                 TARGET.ModifiedDate = @GetDate
                 WHEN NOT MATCHED
                 THEN INSERT(PimAttributeValueId,
                             LocaleId,
                             AttributeValue,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) VALUES
             (SOURCE.PimAttributeValueId,
              SOURCE.LocaleId,
              SOURCE.AttributeValue,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             );
             SET @AssociatedProduct =
             (
                 SELECT MAX(AssociatedProducts)
                 FROM #PimProductDetail AS a
             );
             INSERT INTO ZnodePimProductTypeAssociation
             (PimParentProductId,
              PimProductId,
              DisplayOrder,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT @PimProductId,
                           Item,
                           ID AS RowId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM dbo.Split(@AssociatedProduct, ',') AS b
                         INNER JOIN ZNodePimProduct AS q ON(q.PimProductId = b.Item);
             SET @ConfigureAttributeId =
             (
                 SELECT MAX(ConfigureAttributeIds)
                 FROM #PimProductDetail AS a
             );
             SET @ConfigureFamilyId =
             (
                 SELECT MAX(ConfigureFamilyIds)
                 FROM #PimProductDetail AS a
             );
             INSERT INTO [ZnodePimConfigureProductAttribute]
             (PimProductId,
              PimFamilyId,
              PimAttributeId,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT @PimProductId,
                           @ConfigureFamilyId,
                           q.PimAttributeId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM dbo.Split(@ConfigureAttributeId, ',') AS b
                         INNER JOIN ZnodePimAttribute AS q ON(q.PimAttributeId = b.Item)
					WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimConfigureProductAttribute RTR  WHERE  RTR.PimProductId = @PimProductId AND RTR.PimAttributeId = q.PimAttributeId);



             IF @IsNotReturnOutput = 0
                 SELECT @PimProductId AS Id,
                        CAST(1 AS BIT) AS Status;
             SET @status = 1;

			 IF @CopyPimProductId > 0 
			 BEGIN 
			   INSERT INTO ZnodePimAttributeValueLocale  (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.AttributeValue,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimAttributeValueLocale ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId

			    INSERT INTO ZnodePimProductAttributeDefaultValue  (PimAttributeValueId,LocaleId,PimAttributeDefaultValueId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.PimAttributeDefaultValueId,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeDefaultValue ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId


			   INSERT INTO ZnodePimProductAttributeTextAreaValue  (PimAttributeValueId,LocaleId,AttributeValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.AttributeValue,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeTextAreaValue ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId
			   			   
			   INSERT INTO ZnodePimProductAttributeMedia  (PimAttributeValueId,LocaleId,MediaPath,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			   SELECT ZPAVI.PimAttributeValueId,ZPAVL.LocaleId,ZPAVL.MediaPath,@UserId,@GetDate,@UserId,@GetDate
			   FROM ZnodePimProductAttributeMedia ZPAVL 
			   INNER JOIN ZnodePimAttributeValue ZPAV ON (ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId )
			   INNER JOIN ZnodePimAttributeValue ZPAVI ON (ZPAVI.PimAttributeId = ZPAV.PimAttributeId AND ZPAVI.PimProductId = @PimProductId )
			   WHERE ZPAVL.LocaleId <> dbo.Fn_GetDefaultLocaleId()
			   AND ZPAV.PimProductId = @CopyPimProductId
			   
			 END 

             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdatePimProduct @UserId = '+CAST(@UserId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@CopyPimProductId='+CAST(@CopyPimProductId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdatePimProduct',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ImportInventory_Ver1]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportInventory_Ver1')
BEGIN 
	DROP PROCEDURE Znode_ImportInventory_Ver1
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportInventory_Ver1](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200))
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Inventory data 
	--		   Input data in XML format Validate data with all scenario 
	-- Unit Testing : 
	--BEGIN TRANSACTION;
	--update ZnodeGlobalSetting set FeatureValues = '5' WHERE FeatureName = 'InventoryRoundOff' 
	--    DECLARE @status INT;
	--    EXEC [Znode_ImportInventory] @InventoryXML = '<ArrayOfImportInventoryModel>
	-- <ImportInventoryModel>
	--   <SKU>S1002</SKU>
	--   <Quantity>999998.33</Quantity>
	--   <ReOrderLevel>10</ReOrderLevel>
	--   <RowNumber>1</RowNumber>
	--   <ListCode>TestInventory</ListCode>
	--   <ListName>TestInventory</ListName>
	-- </ImportInventoryModel>
	--</ArrayOfImportInventoryModel>' , @status = @status OUT , @UserId = 2;
	--    SELECT @status;
	--    ROLLBACK TRANSACTION;
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @RoundOffValue int, @MessageDisplay nvarchar(100), @MessageDisplayForFloat nvarchar(100);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 
		SELECT @RoundOffValue = FeatureValues
		FROM ZnodeGlobalSetting
		WHERE FeatureName = 'InventoryRoundOff';
		
		IF OBJECT_ID('tempdb.dbo.#InserInventoryForValidation', 'U') IS NOT NULL 
		DROP TABLE tempdb.dbo.#InserInventoryForValidation
		
		IF OBJECT_ID('tempdb.dbo.#InsertInventory ', 'U') IS NOT NULL 
		DROP TABLE tempdb.dbo.#InsertInventory 

		--@MessageDisplay will use to display validate message for input inventory value  

		DECLARE @sSql nvarchar(max);
		SET @sSql = ' Select @MessageDisplay_new = Convert(Numeric(28, '+CONVERT(nvarchar(200), @RoundOffValue)+'), 123.12345699 ) ';
		EXEC SP_EXecutesql @sSql, N'@MessageDisplay_new NVARCHAR(100) OUT', @MessageDisplay_new = @MessageDisplay OUT;
		SET @sSql = ' Select @MessageDisplay_new = Convert(Numeric(28, '+CONVERT(nvarchar(200), @RoundOffValue)+'), 0.999999 ) ';
		EXEC SP_EXecutesql @sSql, N'@MessageDisplay_new NVARCHAR(100) OUT', @MessageDisplay_new = @MessageDisplayForFloat OUT;
		Create TABLE tempdb..#InserInventoryForValidation 
		( 
				RowNumber int, SKU varchar(max), Quantity varchar(max), ReOrderLevel varchar(max), WarehouseCode varchar(max), GUID nvarchar(400)
		);
		CREATE TABLE tempdb..#InsertInventory  
		( 
				InsertInventoryId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300) INDEX Ix CLUSTERED (SKU), Quantity numeric(28, 6), ReOrderLevel numeric(28, 6), WarehouseCode varchar(200), GUID nvarchar(400) 
		);
		--DECLARE tempdb..#InsertInventory  TABLE
		--( 
		--		InsertInventoryId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, SKU varchar(300) INDEX Ix CLUSTERED (SKU), Quantity numeric(28, 6), ReOrderLevel numeric(28, 6), WarehouseCode varchar(200), GUID nvarchar(400) 
		--);
	
		DECLARE @SKU TABLE
		( 
				SKU nvarchar(300)
		);
			
		INSERT INTO @SKU
			   SELECT b.AttributeValue
			   FROM ZnodePimAttributeValue AS a
					INNER JOIN
					ZnodePimAttributeValueLocale AS b
					ON a.PimAttributeId = dbo.Fn_GetProductSKUAttributeId() AND 
					   a.PimAttributeValueId = b.PimAttributeValueId;

		DECLARE @InventoryListId int;
		SET @SSQL = 'Select RowNumber,SKU,Quantity,ReOrderLevel,WarehouseCode ,GUID FROM '+@TableName;
		INSERT INTO tempdb..#InserInventoryForValidation( RowNumber, SKU, Quantity, ReOrderLevel, WarehouseCode, GUID )
		EXEC sys.sp_sqlexec @SSQL;
		
		
		--Required Validation 
		--UomName should not be null 
		--Data for this Inventory list is already available  
		-- 
		-- 1)  Validation for SKU is pending Proper data not found and 
		--Discussion still open for Publish version where we create SKU and use thi SKU code for validation 
		--Select * from ZnodePimAttributeValue  where PimAttributeId =248
		--select * from View_ZnodePimAttributeValue Vzpa Inner join ZnodePimAttribute Zpa on Vzpa.PimAttributeId=Zpa.PimAttributeId where Zpa.AttributeCode = 'SKU'
		--Select * from ZnodePimAttribute where AttributeCode = 'SKU'
		--2)  Start Data Type Validation for XML Data  
		--SELECT * FROM ZnodeInventory
		--SELECT * FROM ZNodeInventoryList
		UPDATE tempdb..#InserInventoryForValidation
		  SET ReOrderLevel = 0
		WHERE ReOrderLevel = '';

		DELETE FROM tempdb..#InserInventoryForValidation
		WHERE RowNumber IN
		(

			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId AND 
				  GUID = @NewGUID
		);
	
		INSERT INTO tempdb..#InsertInventory ( RowNumber, SKU, Quantity, ReOrderLevel, WarehouseCode )
			   SELECT RowNumber, SKU, Quantity, ReOrderLevel, WarehouseCode
			   FROM tempdb..#InserInventoryForValidation;
					 
		-- start Functional Validation 
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM tempdb..#InsertInventory  AS ii
			   WHERE ii.SKU NOT IN
			   (
				   SELECT SKU
				   FROM @SKU
			   );
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'WarehouseCode', WarehouseCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM tempdb..#InsertInventory  AS ii
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM ZnodeWarehouse AS zw
				   WHERE zw.WarehouseCode = ii.WarehouseCode
			   );

		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  
		DELETE FROM tempdb..#InsertInventory 
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId AND 
				  GUID = @NewGUID
		);
		
		DECLARE @TBL_ReadyToInsertInventory TABLE
		( 
			RowNumber int, SKU varchar(300), Quantity numeric(28, 6), ReOrderLevel numeric(28, 6), WarehouseId int
		);

		INSERT INTO @TBL_ReadyToInsertInventory( RowNumber, SKU, Quantity, ReOrderLevel, WarehouseId )
			   SELECT ii.RowNumber, ii.SKU, ii.Quantity, ISNULL(ii.ReOrderLevel, 0), zw.WarehouseId
			   FROM tempdb..#InsertInventory  AS ii
					INNER JOIN
					ZnodeWarehouse AS zw
					ON ii.WarehouseCode = zw.WarehouseCode AND 
					   ii.RowNumber IN
			   (
				   SELECT MAX(ii1.RowNumber)
				   FROM tempdb..#InsertInventory  AS ii1
				   WHERE ii1.WarehouseCode = ii.WarehouseCode AND 
						 ii1.SKU = ii.SKU
			   );
				-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM @TBL_ReadyToInsertInventory
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End
		   	
		
		--select 'update started'  
		UPDATE zi
		  SET Quantity = rtii.Quantity, ReOrderLevel = ISNULL(rtii.ReOrderLevel, 0), ModifiedBy = @UserId, ModifiedDate = @GetDate
		FROM ZNodeInventory zi
			 INNER JOIN
			 @TBL_ReadyToInsertInventory rtii
			 ON( zi.WarehouseId = rtii.WarehouseId AND 
				 zi.SKU = rtii.SKU
			   );
			   
		--select 'update End'                
		INSERT INTO ZnodeInventory( WarehouseId, SKU, Quantity, ReOrderLevel, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
			   SELECT WarehouseId, SKU, Quantity, ISNULL(ReOrderLevel, 0), @UserId, @GetDate, @UserId, @GetDate
			   FROM @TBL_ReadyToInsertInventory AS rtii
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM ZnodeInventory AS zi
				   WHERE zi.WarehouseId = rtii.WarehouseId AND 
						 zi.SKU = rtii.SKU
			   ); 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportPimCategoryData]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportPimCategoryData')
BEGIN 
	DROP PROCEDURE Znode_ImportPimCategoryData
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportPimCategoryData]
(   @TableName          VARCHAR(200),
    @NewGUID            NVARCHAR(200),
    @TemplateId         NVARCHAR(200),
    @ImportProcessLogId INT,
    @UserId             INT,
    @LocaleId           INT,
    @DefaultFamilyId    INT)
AS

    /*
      Summary : Finally Import data into ZnodePimProduct, ZnodePimAttributeValue and ZnodePimAttributeValueLocale Table 
      Process : Flat global temporary table will split into cloumn wise and associted with Znode Attributecodes,
    		    Create group of product with their attribute code and values and inseerted one by one products. 	   
    
      SourceColumnName : CSV file column headers
      TargetColumnName : Attributecode from ZnodePimAttribute Table 

	 ***  Need to log error if transaction failed during insertion of records into table.

	EXEC Znode_ImportPimCategoryData 
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             
             DECLARE @SQLQuery NVARCHAR(MAX);
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @AttributeTypeName NVARCHAR(10), @AttributeCode NVARCHAR(300), @AttributeId INT, @IsRequired BIT, @SourceColumnName NVARCHAR(600), @PimAttributeFamilyId INT, @NewProductId INT, @PimAttributeValueId INT, @status BIT= 0; 
             --Declare error Log Table 

             DECLARE @FamilyAttributeDetail TABLE
             (PimAttributeId       INT,
              AttributeTypeName    VARCHAR(300),
              AttributeCode        VARCHAR(300),
              SourceColumnName     NVARCHAR(600),
              IsRequired           BIT,
              PimAttributeFamilyId INT
             );
             IF @DefaultFamilyId = 0
                 BEGIN
                     INSERT INTO @FamilyAttributeDetail
                     (PimAttributeId,
                      AttributeTypeName,
                      AttributeCode,
                      SourceColumnName,
                      IsRequired,
                      PimAttributeFamilyId
                     )
                     --Call Process to insert data of defeult family with cource column name and target column name 
                     EXEC Znode_ImportGetTemplateDetails
                          @TemplateId = @TemplateId,
                          @IsValidationRules = 0,
                          @IsIncludeRespectiveFamily = 1,
                          @IsCategory = 1;
                     UPDATE @FamilyAttributeDetail
                       SET
                           PimAttributeFamilyId = DBO.Fn_GetCategoryDefaultFamilyId();
                 END;
             ELSE
                 BEGIN
                     INSERT INTO @FamilyAttributeDetail
                     (PimAttributeId,
                      AttributeTypeName,
                      AttributeCode,
                      SourceColumnName,
                      IsRequired,
                      PimAttributeFamilyId
                     )
                     --Call Process to insert data of defeult family with cource column name and target column name 
                     EXEC Znode_ImportGetTemplateDetails
                          @TemplateId = @TemplateId,
                          @IsValidationRules = 0,
                          @IsIncludeRespectiveFamily = 1,
                          @DefaultFamilyId = @DefaultFamilyId,
                          @IsCategory = 1;
                 END;  
			 --Read all matched CategoryId with respect to their CategoryCode 
			 --SET @SQLQuery = 
			 --SELECT * FROM ZnodePimCategoryAttributeValue zpca INNER JOIN ZnodePimCategoryAttributeValueLocale zpcal 
			 --ON zpca.PimCategoryAttributeValueId = zpcal.PimCategoryAttributeValueId Inner join ZnodePimAttribute ZPA on zpca.PimAttributeId = zpa.PimAttributeId 
			 --AND ZPA.IsCategory =1 AND ZPA.AttributeCode = 'CategoryCode' 
			 --Inner join ' + @TableName +' tlb ON zpcal.CategoryValue = tlb.CategoryCode

		
             --Read all attribute details with their datatype 

             IF NOT EXISTS
             (
                 SELECT TOP 1 1
                 FROM INFORMATION_SCHEMA.TABLES
                 WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '#DefaultAttributeValue'
             )
                 BEGIN
                     CREATE TABLE #DefaultAttributeValue
                     (AttributeTypeName          VARCHAR(300),
                      PimAttributeDefaultValueId INT,
                      PimAttributeId             INT,
                      AttributeDefaultValueCode  VARCHAR(100)
                     );
                     INSERT INTO #DefaultAttributeValue
                     (AttributeTypeName,
                      PimAttributeDefaultValueId,
                      PimAttributeId,
                      AttributeDefaultValueCode
                     )
                     --Call Process to insert default data value 
                     EXEC Znode_ImportGetPimAttributeDefaultValue;
                 END;
             ELSE
                 BEGIN
                     DROP TABLE #DefaultAttributeValue;
                 END;  
         
             -- Split horizontal table into verticle table by column name and attribute Value with their 
             -- corresponding AttributeId, Default family , Default AttributeValue Id  
             DECLARE @PimCategoryDetail TABLE
             ([PimCategoryId]              [INT] NULL,
              [PimAttributeId]             [INT] NULL,
              [PimAttributeValueId]        [INT] NULL,
              [PimAttributeDefaultValueId] [INT] NULL,
              [PimAttributeFamilyId]       [INT] NULL,
              [LocaleId]                   [INT] NULL,
              [AttributeCode]              [VARCHAR](500) NULL,
              [AttributeValue]             [NVARCHAR](MAX) NULL,
              [RowNumber]                  INT 
             );
             -- Column wise split data from source table ( global temporary table ) and inserted into temporary table variable @PimCategoryDetail
             -- Add PimAttributeDefaultValue 


			-- Update Record count in log 
			DECLARE @FailedRecordCount BIGINT
			DECLARE @SuccessRecordCount BIGINT
			SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
			SET @SQLQuery = ' Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM '+ @TableName ;
			EXEC	sp_executesql @SQLQuery, N'@SuccessRecordCount BIGINT out' , @SuccessRecordCount=@SuccessRecordCount
			UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
			WHERE ImportProcessLogId = @ImportProcessLogId;


             DECLARE Cr_AttributeDetails CURSOR LOCAL FAST_FORWARD
             FOR SELECT PimAttributeId,
                        AttributeTypeName,
                        AttributeCode,
                        IsRequired,
                        SourceColumnName,
                        PimAttributeFamilyId
                 FROM @FamilyAttributeDetail
                 WHERE ISNULL(SourceColumnName, '') <> '';
             OPEN Cr_AttributeDetails;
             FETCH NEXT FROM Cr_AttributeDetails INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @PimAttributeFamilyId;
             WHILE @@FETCH_STATUS = 0
                 BEGIN
                     SET @NewProductId = 0;
                     SET @SQLQuery = 'SELECT '''+CONVERT(VARCHAR(100), @PimAttributeFamilyId)+''' PimAttributeFamilyId, 0 PimCategoryId,'''+CONVERT(VARCHAR(100), @AttributeId)+''' AttributeId ,
						   (SELECT TOP 1 PimAttributeDefaultValueId FROM #DefaultAttributeValue Where PimAttributeId =  '+CONVERT(VARCHAR(100), @AttributeId)+'AND  AttributeDefaultValueCode = TN.'+@SourceColumnName+' ) PimAttributeDefaultValueId,'+@SourceColumnName+','+CONVERT(VARCHAR(100), @LocaleId)+'LocaleId,RowNumber FROM '+@TableName+' TN';
                     INSERT INTO @PimCategoryDetail
                     ([PimAttributeFamilyId],
                      [PimCategoryId],
                      [PimAttributeId],
                      [PimAttributeDefaultValueId],
                      AttributeValue,
                      LocaleId,
                      RowNumber
                     )
                     EXEC sys.sp_sqlexec
                          @SQLQuery;
                     FETCH NEXT FROM Cr_AttributeDetails INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @PimAttributeFamilyId;
                 END;
             CLOSE Cr_AttributeDetails;
             DEALLOCATE Cr_AttributeDetails;
             UPDATE ppdti
               SET
                   ppdti.AttributeValue = CASE
                                              WHEN ppdti.AttributeValue = 'Yes/No'
                                              THEN 'False'
                                          END
             FROM @PimCategoryDetail ppdti
                  INNER JOIN #DefaultAttributeValue dav ON dav.PimAttributeDefaultValueId = ppdti.PimAttributeDefaultValueId
             WHERE ISNULL(ppdti.AttributeValue, '') = '';

             -- Pass product records one by one 
             DECLARE @IncrementalId INT= 1;
             DECLARE @SequenceId INT=
             (
                 SELECT MAX(RowNumber)
                 FROM @PimCategoryDetail
             );
             DECLARE @PimCategoryDetailToInsert PIMCATEGORYDETAIL;  --User define table type to pass multiple records of product in single step

             WHILE @IncrementalId <= @SequenceId
                 BEGIN
                     INSERT INTO @PimCategoryDetailToInsert
                     ([PimCategoryId],
                      [PimAttributeId],
                      [PimAttributeValueId],
                      [PimAttributeDefaultValueId],
                      [PimAttributeFamilyId],
                      [LocaleId],
                      [AttributeCode],
                      [AttributeValue]
                     )
                            SELECT [PimCategoryId],
                                   [PimAttributeId],
                                   [PimAttributeValueId],
                                   [PimAttributeDefaultValueId],
                                   [PimAttributeFamilyId],
                                   [LocaleId],
                                   [AttributeCode],
                                   [AttributeValue]
                            FROM @PimCategoryDetail
                            WHERE [@PimCategoryDetail].RowNumber = @IncrementalId AND LTRIM(RTRIM([AttributeValue])) <> '';
                     --ORDER BY [@PimCategoryDetail].RowNumber;
                     ----Call process to finally insert data into 
                     ----------------------------------------------------------
                     --1. [dbo].[ZnodePimProduct]
                     --2. [dbo].[ZnodePimAttributeValue]
                     --3. [dbo].[ZnodePimAttributeValueLocale]

                     EXEC [Znode_ImportInsertUpdatePimCategory]
                          @InsertCategory = @PimCategoryDetailToInsert,
                          @UserID = @UserID,
                          @status = @status OUT;--,@IsNotReturnOutput=1;
                     DELETE FROM @PimCategoryDetailToInsert;
                     SET @IncrementalId = @IncrementalId + 1;
                 END;
             UPDATE ZnodeImportProcessLog
               SET
                   Status = dbo.Fn_GetImportStatus(2),
                   ProcessCompletedDate = @GetDate
             WHERE ImportProcessLogId = @ImportProcessLogId;		   	  
            
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE(),
                    ERROR_LINE(),
                    ERROR_PROCEDURE();
             UPDATE ZnodeImportProcessLog
               SET
                   Status = dbo.Fn_GetImportStatus(3),
                   ProcessCompletedDate = @GetDate
             WHERE ImportProcessLogId = @ImportProcessLogId;
            
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ImportPriceList]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportPriceList')
BEGIN 
	DROP PROCEDURE Znode_ImportPriceList
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportPriceList]
(
	@TableName nvarchar(100),
	@Status bit OUT, 
	@UserId int, 
	@ImportProcessLogId int,
	@NewGUId nvarchar(200),
	@PriceListId int )
AS 
	/*
	----Summary:  Import RetailPrice List 
	----		  Input XML data extracted in table format (table variable name:  #InsertPriceForValidation) by using  @xml.nodes 
	----		  Validate data column wise and store error log into @ErrorLogForInsertPrice table 
	----          Remove wrong data from table #InsertPriceForValidation and inserted correct data into @InsertPrice table for 
	----		  further processing (Importing to target database )
	---- Version 1 : Required Validation 
	---- UomName should not be null 
	---- Data for this RetailPrice list is already available  
	---- Version 2 : Required Validation 
	---- If UomName will be null then insert first record from UomTable and If UomName is wrong then raise error
	---- SKU with retailprice data is available with price list id will insert 
	---- multiple SKU with retail price is available then updated last sku details to price table and price tier table for respective price list
	----1. Import functionality should be provided only for single price list (Validate - Pending) 
	----  Tier price : TierStartQuantity should not between TierStartQuantity and TierEndQuantity for already existing SKU 
	----  In case of update details for SKU if any kind of price value will null then avoid it to update on existing value. 
	----2. From XML only SKU and RetailPrice is mandatory
	----3. SKUActivation date sholud be less than SKUExpriration date
	----4. Activation date sholud be less than Expiration date
	----5. If Tier RetailPrice has values and TierSartQuantity /TierEndQuantity or both has null value then it should not get updated/created.
	----6. ActivationDate and ExpirationDate value for tier price will be SKUActivationDate SKUExprirationDate 
	--- Change History : 
	--Remove column which is used to store range of qunatity by single column Quantity from table ZnodeTierProduct 
	--Manditory Retail price in Znodepricetable 
	-- SKUActivationfrom date and to date will used for tier price will store in single table ZnodePrice
	--Unit Testing   
	
*/
BEGIN
	BEGIN TRAN A;
	BEGIN TRY
	    DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
		
		IF OBJECT_ID('#InsertPriceForValidation', 'U') IS NOT NULL 
			DROP TABLE #InsertPriceForValidation
		ELSE 
			CREATE TABLE #InsertPriceForValidation 
			(SKU varchar(300) NULL, TierStartQuantity varchar(300) NULL, RetailPrice varchar(300) NULL, SalesPrice varchar(300) NULL, TierPrice varchar(300) NULL, SKUActivationDate varchar(300) NULL, SKUExpirationDate varchar(300) NULL, RowNumber varchar(300) NULL)
	
		--DECLARE #InsertPriceForValidation TABLE
		--( 
		--	SKU varchar(300) NULL, TierStartQuantity varchar(300) NULL, RetailPrice varchar(300) NULL, SalesPrice varchar(300) NULL, TierPrice varchar(300) NULL, SKUActivationDate varchar(300) NULL, SKUExpirationDate varchar(300) NULL, RowNumber varchar(300) NULL
		--);
		IF OBJECT_ID('#InsertPrice', 'U') IS NOT NULL 
			DROP TABLE #InsertPrice
		ELSE 
			CREATE TABLE #InsertPrice 
			( 
				SKU varchar(300), TierStartQuantity numeric(28, 6) NULL, RetailPrice numeric(28, 6) NULL, SalesPrice numeric(28, 6) NULL, TierPrice numeric(28, 6) NULL, SKUActivationDate varchar(300) NULL, SKUExpirationDate varchar(300) NULL, RowNumber varchar(300)
			);
	


		DECLARE @SKU TABLE
		( 
				SKU nvarchar(300)
		);
		INSERT INTO @SKU
			   SELECT b.AttributeValue
			   FROM ZnodePimAttributeValue AS a
					INNER JOIN
					ZnodePimAttributeValueLocale AS b
					ON a.PimAttributeId = dbo.Fn_GetProductSKUAttributeId() AND 
					   a.PimAttributeValueId = b.PimAttributeValueId;


		--SET @CategoryXML =  REPLACE(@CategoryXML,'<?xml version="1.0" encoding="utf-16"?>','')

		DECLARE @RoundOffValue int, @MessageDisplay nvarchar(100); 
		-- Retrive RoundOff Value from global setting 

		SELECT @RoundOffValue = FeatureValues FROM ZnodeGlobalSetting WHERE FeatureName = 'PriceRoundOff';
	
		--@MessageDisplay will use to display validate message for input inventory value  

		DECLARE @sSql nvarchar(max);
		SET @sSql = ' Select @MessageDisplay_new = Convert(Numeric(28, '+CONVERT(nvarchar(200), @RoundOffValue)+'), 999999.000000000 ) ';
		EXEC SP_EXecutesql @sSql, N'@MessageDisplay_new NVARCHAR(100) OUT', @MessageDisplay_new = @MessageDisplay OUT;
		
		SET @SSQL = 'Select SKU,TierStartQuantity ,RetailPrice,SalesPrice,TierPrice,SKUActivationDate ,SKUExpirationDate ,RowNumber FROM '+@TableName;
		INSERT INTO #InsertPriceForValidation( SKU, TierStartQuantity, RetailPrice, SalesPrice, TierPrice, SKUActivationDate, SKUExpirationDate, RowNumber )
		EXEC sys.sp_sqlexec @SSQL;


		-- 1)  Validation for SKU is pending Proper data not found and 
		--Discussion still open for Publish version where we create SKU and use the SKU code for validation 
		--Select * from ZnodePimAttributeValue  where PimAttributeId =248
		--select * from View_ZnodePimAttributeValue Vzpa Inner join ZnodePimAttribute Zpa on Vzpa.PimAttributeId=Zpa.PimAttributeId where Zpa.AttributeCode = 'SKU'
		--Select * from ZnodePimAttribute where AttributeCode = 'SKU'
		--------------------------------------------------------------------------------------
		--2)  Start Data Type Validation for XML Data  
		--------------------------------------------------------------------------------------			
		---------------------------------------------------------------------------------------
		---------If UOM will blank then retrive top -- Finctionality pending 
		---Validate 
		
		
		INSERT INTO #InsertPrice( SKU, TierStartQuantity, RetailPrice, SalesPrice, TierPrice, SKUActivationDate, SKUExpirationDate, RowNumber )
			   SELECT SKU,
					  CASE
					  WHEN CONVERT(Varchar(100),TierStartQuantity) = '' THEN 0
					  ELSE CONVERT(numeric(28, 6), TierStartQuantity)
					  END, CONVERT(numeric(28, 6), RetailPrice),
															  CASE
															  WHEN SalesPrice = '' THEN NULL
															  ELSE CONVERT(numeric(28, 6), SalesPrice)
															  END,
															  CASE
															  WHEN TierPrice = '' THEN NULL
															  ELSE CONVERT(numeric(28, 6), TierPrice)
															  END, SKUActivationDate, SKUExpirationDate, RowNumber
			   FROM #InsertPriceForValidation;
				
		--------------------------------------------------------------------------------------
		--- start Functional Validation 
		--------------------------------------------------------------------------------------
		--- Verify SKU is present or not 

		--INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
		--	   SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
		--	   FROM @InsertPrice
		--	   WHERE SKU NOT IN
		--	   (
		--		   SELECT ZPAVL.AttributeValue
		--		   FROM ZnodePimAttribute AS ZPA
		--				INNER JOIN
		--				ZnodePimAttributeValue AS ZPAV
		--				ON ZPA.PimAttributeId = ZPAV.PimAttributeId
		--				INNER JOIN
		--				ZnodePimAttributeValueLocale AS ZPAVL
		--				ON ZPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId
		--		   WHERE ZPA.AttributeCode = 'SKU'
		--	   );
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
		SELECT '19', 'SKU', SKU, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
		FROM #InsertPrice AS ii
		WHERE ii.SKU NOT IN
		(
			SELECT SKU
			FROM @SKU
		);

			 
		--INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
		--	   SELECT '26', 'RetailPrice', RetailPrice, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
		--	   FROM #InsertPriceForValidation
		--	   WHERE ISNULL(CAST(RetailPrice AS numeric(28, 6)), 0) <= 0 AND 
		--			 RetailPrice <> '';
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '39', 'SKUActivationDate', SKUActivationDate, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM #InsertPrice AS IP
			   WHERE SKUActivationDate > SKUExpirationDate AND 
					 ISNULL(SKUExpirationDate, '') <> '';
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '35', 'TierStartQuantity', TierStartQuantity, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM #InsertPriceForValidation
			   WHERE( TierPrice IS NULL OR TierPrice = '0') AND  TierStartQuantity = '';
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '35', 'TierPrice', TierPrice, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM #InsertPriceForValidation WHERE( TierPrice IS NULL OR  TierPrice = '') AND TierStartQuantity <> 0;
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '26', 'TierStartQuantity', TierStartQuantity, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM #InsertPriceForValidation
			   WHERE ISNULL(CAST(TierStartQuantity AS numeric(28, 6)), 0) < 0 AND 
					 TierPrice <> '';
 
		-- End Function Validation 	
		---------------------------
		--- Delete Invalid Data after functional validation 
		DELETE FROM #InsertPrice
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId AND 
				  Guid = @NewGUId
		);
	
		-- Remove duplicate records 
		--insert into @RemoveDuplicateInsertPrice
		--(SKU,TierStartQuantity, RetailPrice , SalesPrice , TierPrice , Uom , UnitSize , PriceListCode , PriceListName , CurrencyId , ActivationDate , ExpirationDate 
		--, SKUActivationDate , SKUExpirationDate , RowNumber )
		--Select SKU,TierStartQuantity, RetailPrice , SalesPrice , TierPrice , Uom , UnitSize , PriceListCode , PriceListName , CurrencyId , ActivationDate , ExpirationDate 
		--, SKUActivationDate , SKUExpirationDate , RowNumber FROM @InsertPrice 
		
		--Delete from @InsertPrice 

		--insert into @InsertPrice (SKU,TierStartQuantity, RetailPrice , SalesPrice , TierPrice , Uom , UnitSize , PriceListCode , PriceListName , CurrencyId , ActivationDate , ExpirationDate 
		--, SKUActivationDate , SKUExpirationDate , RowNumber)
		--Select SKU,TierStartQuantity, RetailPrice , SalesPrice , TierPrice , Uom , UnitSize , PriceListCode , PriceListName , CurrencyId , ActivationDate , ExpirationDate 
		--, SKUActivationDate , SKUExpirationDate , RowNumber from @RemoveDuplicateInsertPrice rdip WHERE rdip.RowNumber IN
		--(
		--	SELECT MAX(ipi.RowNumber) FROM @InsertPrice ipi WHERE rdip.PriceListCode = ipi.PriceListCode AND rdip.SKU = ipi.SKU
		--);

		--Validate StartQuantity and EndQuantity from PriceTier : This validation only for existing data 
		--INSERT INTO @ErrorLogForInsertPrice (RowNumber,SKU,TierStartQuantity ,RetailPrice ,SalesPrice,TierPrice,Uom ,UnitSize,PriceListCode,PriceListName,CurrencyId ,ActivationDate,ExpirationDate,SKUActivationDate,SKUExpirationDate,SequenceNumber,ErrorDescription) 
		--Select IP.RowNumber,IP.SKU,IP.TierStartQuantity ,IP.RetailPrice ,IP.SalesPrice,IP.TierPrice,IP.Uom ,IP.UnitSize,IP.PriceListCode,IP.PriceListName,IP.CurrencyId ,IP.ActivationDate,IP.ExpirationDate,IP.SKUActivationDate,IP.SKUExpirationDate,IP.SequenceNumber,
		--'TierStartQuantity already exists in PriceTier table for SKU '
		--From @InsertPrice IP  Inner join
		--ZnodePriceList Zpl ON Zpl.Listcode = IP.PriceListcode and Zpl.ListName = IP.PriceListName
		--INNER JOIN ZnodeUOM Zu ON ltrim(rtrim(IP.Uom)) = ltrim(rtrim(Zu.Uom)) 
		--INNER JOIN ZnodePriceTier ZPT  ON ZPT.PriceListId = Zpl.PriceListId 
		--AND ZPT.SKU = IP.SKU
		--Where IP.TierStartQuantity  = ZPT.Quantity  
		--- Delete Invalid Data after  Validate StartQuantity and EndQuantity from PriceTier
		
		--INSERT INTO ZnodeUOM (Uom,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		--Select distinct ltrim(rtrim(Uom)) , @UserId,@GetDate,@UserId,@GetDate  from @InsertPrice 
		--where ltrim(rtrim(Uom)) not in (Select ltrim(rtrim(UOM)) From ZnodeUOM where UOM  is not null )
		
		DECLARE @FailedRecordCount BIGINT, @SuccessRecordCount BIGINT 
	
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;

		SELECT @SuccessRecordCount = COUNT(DISTINCT ROWNUMBER) FROM #InsertPrice WHERE 	ROWNUMBER IS NOT NULL ;

		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;

		UPDATE ZP
				SET ZP.SalesPrice = IP.SalesPrice, ZP.RetailPrice = CASE
				WHEN CONVERT(varchar(100), ISNULL(IP.RetailPrice, '')) <> '' THEN IP.RetailPrice
				END, ZP.ActivationDate = CASE
				WHEN ISNULL(IP.SKUActivationDate, '') <> '' THEN IP.SKUActivationDate
				ELSE NULL
				END, ZP.ExpirationDate = CASE
				WHEN ISNULL(IP.SKUExpirationDate, '') <> '' THEN IP.SKUExpirationDate
				ELSE NULL
				END, ZP.ModifiedBy = @UserId, ZP.ModifiedDate = @GetDate
		FROM #InsertPrice IP INNER JOIN ZnodePrice ZP ON ZP.PriceListId = @PriceListId AND  ZP.SKU = IP.SKU  
			 --Retrive last record from prince list of specific SKU ListCode and Name 									
		WHERE IP.RowNumber IN
		(
			SELECT MAX(IPI.RowNumber) FROM #InsertPrice AS IPI WHERE IPI.SKU = IP.SKU 
		);
		INSERT INTO ZnodePrice( PriceListId, SKU, SalesPrice, RetailPrice, ActivationDate, ExpirationDate, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
			   SELECT @PriceListId, IP.SKU, IP.SalesPrice, IP.RetailPrice,
																						   CASE
																						   WHEN ISNULL(IP.SKUActivationDate, '') = '' THEN NULL
																						   ELSE IP.SKUActivationDate
																						   END,
																						   CASE
																						   WHEN ISNULL(IP.SKUExpirationDate, '') = '' THEN NULL
																						   ELSE IP.SKUExpirationDate
																						   END, @UserId, @GetDate, @UserId, @GetDate
			   FROM #InsertPrice AS IP
			   WHERE NOT EXISTS
			   (
				   SELECT TOP 1 1
				   FROM ZnodePrice
				   WHERE ZnodePrice.PriceListId = @PriceListId AND 
						 ZnodePrice.SKU = IP.SKU AND 
						 ISNULL(ZnodePrice.SalesPrice, 0) = ISNULL(IP.SalesPrice, 0) AND 
						 ZnodePrice.RetailPrice = IP.RetailPrice
			   ) AND 
					 IP.RowNumber IN
			   (
					SELECT MAX(IPI.RowNumber)
					FROM #InsertPrice AS IPI
					WHERE IPI.SKU = IP.SKU 
			   );
		IF EXISTS
		(
			SELECT TOP 1 1
			FROM #InsertPrice
			WHERE CONVERT(varchar(100), TierStartQuantity) <> '' AND 
				  (CONVERT(varchar(100), TierPrice) <> '')
		)
		BEGIN
			UPDATE ZPT
			  SET ZPT.Price = IP.TierPrice, ZPT.ModifiedBy = @UserId, ZPT.ModifiedDate = @GetDate
			FROM #InsertPrice IP INNER JOIN ZnodePriceTier ZPT ON ZPT.PriceListId = @PriceListId AND  ZPT.SKU = IP.SKU AND ZPT.Quantity = IP.TierStartQuantity 
		    --Retrive last record from prince list of specific SKU ListCode and Name 
			WHERE IP.RowNumber IN
			(
				SELECT MAX(IPI.RowNumber) FROM #InsertPrice AS IPI WHERE IPI.SKU = IP.SKU 
			);
			INSERT INTO ZnodePriceTier( PriceListId, SKU, Price, Quantity, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
				   SELECT @PriceListId, IP.SKU, IP.TierPrice, IP.TierStartQuantity,  @UserId, @GetDate, @UserId, @GetDate
				   FROM #InsertPrice AS IP 
				   WHERE NOT EXISTS
				   (
					   SELECT TOP 1 1 FROM ZnodePriceTier WHERE ZnodePriceTier.PriceListId = @PriceListId AND  ZnodePriceTier.SKU = IP.SKU AND 
							 ZnodePriceTier.Quantity = IP.TierStartQuantity
				   ) AND  IP.RowNumber IN
				   (
					   SELECT MAX(IPI.RowNumber) FROM #InsertPrice AS IPI WHERE IPI.SKU = IP.SKU AND  IPI.TierStartQuantity = IP.TierStartQuantity
				   );
		END;  
		--SELECT @PriceListId ID , cast(1 As Bit ) Status  
		--SELECT RowNumber , ErrorDescription , SKU , TierStartQuantity , RetailPrice , SalesPrice , TierPrice , Uom , UnitSize , PriceListCode , PriceListName , CurrencyId , ActivationDate , ExpirationDate
		--FROM @ErrorLogForInsertPrice;
		SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- COMMIT TRAN ImportProducts;
		COMMIT TRAN A;
	END TRY
	BEGIN CATCH
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;
		 
		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_ImportProcessCustomer]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportProcessCustomer')
BEGIN 
	DROP PROCEDURE Znode_ImportProcessCustomer
END 
GO
CREATE   PROCEDURE [dbo].[Znode_ImportProcessCustomer](@TblGUID nvarchar(255) = '' ,@ERPTaskSchedulerId  int )
AS
BEGIN

	SET NOCOUNT ON;
	Declare @NewuGuId nvarchar(255)
	set @NewuGuId = newid()
	Declare @CurrencyId int ,@PortalId int,@TemplateId INT ,@ImportHeadId INT 
	
	DECLARE @LocaleId  int = dbo.Fn_GetDefaultLocaleId()
	SELECT TOP 1 @PortalId  = PortalId FROM dbo.ZnodePortal

	Select @CurrencyId = CurrencyId  from ZnodeCurrency where CurrencyCode in (Select FeatureValues from   ZnodeGlobalSetting where FeatureName = 'Currency') 

	DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '', 
		    @InsertColumnName NVARCHAR(MAX), 
			@ImportTableColumnName NVARCHAR(MAX),
			@TableName NVARCHAR(255) = 'MAGSOLD',			
			@Sql NVARCHAR(MAX) = '',
			@PriceListId int,
			@RowNum int, 
			@MaxRowNum int,
			@FirstStep nvarchar(255),
			@PriceTableName  nvarchar(255),
			@WarehouseCode varchar(100)
			
	   IF OBJECT_ID('tempdb..##Customer', 'U') IS NOT NULL 
		DROP TABLE tempdb.dbo.##Customer

	   IF OBJECT_ID('tempdb.dbo.##CustomerAddress', 'U') IS NOT NULL 
		DROP TABLE tempdb.dbo.##CustomerAddress

		--SELECT @CustomerTableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =6 --AND ImportTableName = 'PRDH'
		--SELECT @CustomerAddTableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =7 --AND ImportTableName = 'PRDH'

	    SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']' 
	    -- User Data
	    	SET @InsertColumnName = ''  
			SET @ImportTableColumnName = ''
			SET @CreateTableScriptSql = ''
				
			--Create Temp table for customer 
			SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CustomerTemplate'
			SELECT @ImportHeadId= ImportHeadId FROM dbo.ZnodeImportHead WHERE Name = 'Customer'

			SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb..##Customer ('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)' 
			FROM [dbo].[ZnodeImportTemplateMapping]
			WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'
			EXEC ( @CreateTableScriptSql )
		
			SET @Sql = ' 
			SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  
			ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Insert'' 
			AND ImportHeadId = @ImportHeadId	AND ImportTableName = ''MAGSOLD'' ) 
			AND ITD.ImportTableName = ''MAGSOLD''  
			AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)

			SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'') 
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  
			ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Insert'' 
			AND ImportHeadId = @ImportHeadId AND ImportTableName = ''MAGSOLD'' ) 
			AND ITD.ImportTableName = ''MAGSOLD'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'

			EXEC sp_executesql @SQL, N'@ImportHeadId int , @TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT',@ImportHeadId = @ImportHeadId ,  @TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT
	
			IF( LEN(@InsertColumnName) > 0 )
			BEGIN
				SET @SQL = 'INSERT INTO tempdb..##Customer ( '+@InsertColumnName+',GUID )
					SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + ''' 
					FROM '+ @TableName + ' PRD '
					EXEC sp_executesql @SQL

				SET @SQL = 'Update tempdb..##Customer  SET IsActive =  1 , LastName = ISNULL(LastName,''.'') , Email = UserName '
				EXEC sp_executesql @SQL

				
				EXEC Znode_ImportData @TableName = 'tempdb..##Customer' ,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
				 @UserId = 2,@PortalId = 1,@LocaleId = 1,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = ''--, @IsDebug =1 
				,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 1, @StepName = 'Import' ,@ERPTaskSchedulerId  = @ERPTaskSchedulerId
			END

			-- User Address Data
			SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CustomerAddressTemplate'
			SELECT @ImportHeadId= ImportHeadId FROM dbo.ZnodeImportHead WHERE Name = 'CustomerAddress'
			SET @InsertColumnName = ''  
			SET @ImportTableColumnName = ''
			SET @CreateTableScriptSql = ''
			
			--Create Temp table for customer Address 
			SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb..##CustomerAddress ('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)' 
			FROM [dbo].[ZnodeImportTemplateMapping]
			WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'
			EXEC ( @CreateTableScriptSql )
		
			SET @Sql = ' 
			SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  
			ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update'' 
			AND ImportHeadId =@ImportHeadId	AND ImportTableName = ''MAGSOLD'' ) 
			AND ITD.ImportTableName = ''MAGSOLD''  AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)

			SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'') 
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  
			ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update'' 
			AND ImportHeadId =@ImportHeadId	AND ImportTableName = ''MAGSOLD'' ) 
			AND ITD.ImportTableName = ''MAGSOLD'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'

			EXEC sp_executesql @SQL, N'@ImportHeadId int ,@TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT',@ImportHeadId = @ImportHeadId,@TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT

			IF( LEN(@InsertColumnName) > 0 )
			BEGIN
				SET @SQL = 'INSERT INTO tempdb..##CustomerAddress ( '+@InsertColumnName+',GUID )
					SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + ''' 
					FROM '+ @TableName + ' PRD '
					EXEC sp_executesql @SQL
				SET @SQL = 'Update tempdb..##CustomerAddress  SET IsActive =  1 '
				EXEC sp_executesql @SQL
			END

			--Append address data from shipping table 
	
			
			SET @InsertColumnName = ''  
			SET @ImportTableColumnName = ''
			Declare @CustomerTableName  nvarchar(255)
			SET @CustomerTableName = @TableName 
			SET @TableName = 'MAGSHIP'	
			SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']' 
			SET @Sql = ' 
			SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  
			ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update'' 
			AND ImportHeadId =@ImportHeadId	AND ImportTableName = ''MAGSHIP'' ) 
			AND ITD.ImportTableName = ''MAGSHIP''  AND Isnull(ITCD.BaseImportColumn,'''' ) <> ''''  FOR XML PATH ('''')),2,4000)

			SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'') 
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  
			ITD.ImportTableId in (SELECT ImportTableId FROM ZnodeImportTableDetail WHERE ImportTableNature = ''Update'' 
			AND ImportHeadId =@ImportHeadId	AND ImportTableName = ''MAGSHIP'' ) 
			AND ITD.ImportTableName = ''MAGSHIP'' AND Isnull(ITCD.BaseImportColumn,'''' ) <> '''' FOR XML PATH ('''')),2,4000)'

			EXEC sp_executesql @SQL, N'@ImportHeadId int , @TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT', @ImportHeadId=@ImportHeadId , @TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT

			IF( LEN(@InsertColumnName) > 0 )
			BEGIN
				SET @SQL = 'INSERT INTO tempdb..##CustomerAddress ( '+@InsertColumnName+',GUID )
					SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + ''' 
					FROM '+ @TableName + ' PRD '
					EXEC sp_executesql @SQL

				SET @SQL = 'Update tempdb..##CustomerAddress  SET IsActive =  1 '
				EXEC sp_executesql @SQL

				SET @SQL = 'Update A SET A.UserName = b.[EMAIL LOGON ID] from tempdb..##CustomerAddress A INNER JOIN '+@CustomerTableName+' B ON
				            A.ExternalId = b.[Sold-to number] AND A.UserName is null   '
				EXEC sp_executesql @SQL

				SET @SQL = 'Update tempdb..##CustomerAddress  SET LastName = ISNULL(LastName,''.''),FirstName  = ISNULL(UserName,'''')'
				EXEC sp_executesql @SQL

				EXEC Znode_ImportData @TableName = 'tempdb..##CustomerAddress' ,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
				@UserId = 2,@PortalId = 1,@LocaleId = 1,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = ''--, @IsDebug =1 
				,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 0, @StepName = 'Import1', @StartStepName  ='Import',@step_id = 2 
			    ,@Nextstep_id  = 1,@ERPTaskSchedulerId  =@ERPTaskSchedulerId 
				select 'Job Successfully Started'
			END

END
GO
PRINT N'Altering [dbo].[Znode_ImportProcessPriceData]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportProcessPriceData')
BEGIN 
	DROP PROCEDURE Znode_ImportProcessPriceData
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportProcessPriceData](@TblGUID nvarchar(255) = '',@ERPTaskSchedulerId int  )
AS
BEGIN
	
--EXEC [Znode_ImportProcessPriceData] @TblGUID = '93519c74-f252-40ec-bed9-37ae8270d4da',@ERPTaskSchedulerId  = 14 
--select * from [TPRICE_93519c74-f252-40ec-bed9-37ae8270d4da]
--EXEC Znode_ImportProcessPriceData](@TblGUID nvarchar(255) = '',@ERPTaskSchedulerId int  )
--select * into [TPRICE_93519c74-f252-40ec-bed9-37ae8270d4da] from [##TPRICE_93519c74-f252-40ec-bed9-37ae8270d4da]
--Select * from Tempdb..sysobjects where name  like  '%TPR%'

	SET NOCOUNT ON;
	Declare @NewuGuId nvarchar(255)
	set @NewuGuId = newid()
	Declare @CurrencyId int 
	DECLARE @TemplateId INT , @PortalId INT 
	DECLARE @LocaleId  int = dbo.Fn_GetDefaultLocaleId()
	SELECT TOP 1 @PortalId  = PortalId FROM dbo.ZnodePortal
	Select @CurrencyId = CurrencyId  from ZnodeCurrency where CurrencyCode in (Select FeatureValues from   ZnodeGlobalSetting where FeatureName = 'Currency') 
	IF OBJECT_ID('tempdb.dbo.##PriceDetail', 'U') IS NOT NULL 
	   DROP TABLE ##PriceDetail

	DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '', 
		    @InsertColumnName NVARCHAR(MAX), 
			@ImportTableColumnName NVARCHAR(MAX),
			@TableName NVARCHAR(500) = 'TPRICE',			
			@Sql NVARCHAR(MAX) = '',
			@PriceListId int,
			@ListCode nvarchar(255),
			@RowNum int, 
			@MaxRowNum int,
			@FirstStep nvarchar(255),
			@PriceTableName  nvarchar(255)
	
	
	SELECT @TableName = ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId =2 --AND ImportTableName = 'PRDH'
	SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']' 
	--SET @TableName = '[' + @TableName + '_' + @TblGUID + ']' 

	IF OBJECT_ID('tempdb.dbo.##PriceListcode', 'U') IS NOT NULL 
		DROP TABLE #PriceListcode 
	CREATE TABLE #PriceListcode (RowNum int Identity, ListCode nvarchar(255),	ListName	nvarchar(255) , CurrencyId int)
	
	SET @SQL = 
	'INSERT INTO #PriceListcode ( ListCode,ListName,CurrencyId )
	SELECT  Distinct ltrim(rtrim(Replace(PRD.PricelistCode,''"'',''''))),ltrim(rtrim(Replace(PRD.PricelistCode,''"'',''''))), '+ Convert (nvarchar(30),@CurrencyId ) + '  FROM ' +@TableName+ ' PRD '
	EXEC sp_executesql @SQL
	
	SET @SQL = 
	'INSERT INTO ZnodePriceList ( ListCode,ListName,CurrencyId , CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
	SELECT  Distinct PRD.ListCode,PRD.ListCode,'+ Convert (nvarchar(30),@CurrencyId ) + ',2,GETDATE(),2,GETDATE() FROM  #PriceListcode PRD 
	WHERE NOT EXISTS ( SELECT TOP 1 1  FROM ZnodePriceList ZPL WHERE ZPL.ListCode = PRD.ListCode ) AND PRD.ListCode is not null '
	EXEC sp_executesql @SQL
	
	SET @Rownum  =1 

	Select  @MaxRowNum = count(RowNum) from #PriceListcode TPLC INNER JOIN ZnodePriceList ZPL On 
	TPLC.ListCode = ZPL.ListCode  where ZPL.ListCode    is not null 
	AND  Isnull(TPLC.ListCode,'') <> '' 
	
	DECLARE Cur_ListCode CURSOR FOR SELECT ZPL.PriceListId, TPLC.ListCode
	FROM #PriceListcode TPLC INNER JOIN ZnodePriceList ZPL On 
	TPLC.ListCode = ZPL.ListCode  where ZPL.ListCode    is not null  Order by  TPLC.RowNum
    OPEN Cur_ListCode
    FETCH NEXT FROM Cur_ListCode INTO @PriceListId, @ListCode
    WHILE ( @@FETCH_STATUS = 0 )
	BEGIN	
			
	    	SET @InsertColumnName = ''  
			SET @ImportTableColumnName = ''
			SET @CreateTableScriptSql = ''
			
		    IF OBJECT_ID('tempdb.dbo.##' + @ListCode , 'U') IS NOT NULL 
			BEGIN
				SET @Sql = 'DROP TABLE tempdb.dbo.##' + @ListCode
				EXEC sp_executesql @SQL
			END
			SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'PriceTemplate'
	
			--Create Temp table for price with respective their code 
			SELECT @CreateTableScriptSql = 'CREATE TABLE tempdb..##' + @ListCode + '('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)' 
			FROM [dbo].[ZnodeImportTemplateMapping]
			WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , GUID nvarchar(255) )'
		
			EXEC ( @CreateTableScriptSql )

			SET @Sql = ' 
			SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  ITD.ImportTableName = ''TPRICE'' AND ITCD.BaseImportColumn is not null FOR XML PATH ('''')),2,4000)

			SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'') 
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  ITD.ImportTableName = ''TPRICE''  AND ITCD.BaseImportColumn is not null FOR XML PATH ('''')),2,4000)'

			EXEC sp_executesql @SQL, N'@TableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT', @TableName = @TableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT

			IF( LEN(@InsertColumnName) > 0 )
			BEGIN
				SET @SQL = 'INSERT INTO tempdb..##' + @ListCode+'  ( '+@InsertColumnName+',GUID )
					SELECT '+ @ImportTableColumnName +',''' + @TblGUID  + ''' 
					FROM '+ @TableName + ' PRD 
					WHERE 
					ltrim(rtrim(replace(PRD.PricelistCode,''"'',''''))) = ''' +  @ListCode + ''' AND 
					EXISTS ( SELECT TOP 1 1  FROM ZnodePriceList ZPL WHERE 
					ZPL.ListCode = ltrim(rtrim(replace(PRD.PricelistCode,''"'',''''))) )'
				EXEC sp_executesql @SQL
				
				SET @PriceTableName  ='tempdb..[##' + @ListCode +']'
				--SET @Sql = 'Select * from ' + @PriceTableName  
				--EXEC sp_executesql @SQL
				If @RowNum = 1 
					Begin
						IF @RowNum <> @MaxRowNum
						BEGIN
							--Print 'Create Job  ' + Convert(nvarchar(100),@RowNum) 
							EXEC Znode_ImportData @TableName = @PriceTableName,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
							 @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1 
							,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 1, @StepName = @ListCode,@ERPTaskSchedulerId  =@ERPTaskSchedulerId  
							SET @FirstStep = @ListCode 
						END
						ELSE If  @MaxRowNum = 1 
						BEGIN
							--Print 'Start Job in case of single  ' + Convert(nvarchar(100),@RowNum) 
							EXEC Znode_ImportData @TableName = @PriceTableName,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
							 @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1 
							,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 0,
							 --@StepName = @ListCode, 
							 @ERPTaskSchedulerId  = @ERPTaskSchedulerId 
							--@step_id = @RowNum  ,@Nextstep_id  = 1
						END
					END
				ELSE If @RowNum = @MaxRowNum
					Begin
						--Print 'Start Job  ' + Convert(nvarchar(100),@RowNum) 
						EXEC Znode_ImportData @TableName = @PriceTableName,	@NewGUID =  @TblGUID ,@TemplateId = @TemplateId,
						 @UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1 
						,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 0, @StepName = @ListCode, @StartStepName  = @FirstStep ,@step_id = @RowNum --, @IsDebug =1
						,@Nextstep_id  = 1,@ERPTaskSchedulerId  = @ERPTaskSchedulerId 
					END 
				ELSE 
					BEGIN
						--Print 'Create another  Job  ' + Convert(nvarchar(100),@RowNum) 
						EXEC Znode_ImportData @TableName = @PriceTableName ,	@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
						@UserId = 2,@PortalId = @PortalId, @LocaleId = @LocaleId, @DefaultFamilyId = 0,@PriceListId = @PriceListId, @CountryCode = ''--, @IsDebug =1 
						,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 1, @StepName = @ListCode ,@step_id = @RowNum
						,@ERPTaskSchedulerId  = @ERPTaskSchedulerId 
					END
			SET @RowNum = @RowNum +1 
			END
	
		FETCH NEXT FROM Cur_ListCode INTO  @PriceListId, @ListCode
	END
		select 'Job Successfully Started'
	CLOSE Cur_ListCode
	DEALLOCATE Cur_ListCode
END
GO
PRINT N'Altering [dbo].[Znode_ImportProcessProductData]...';


GO
--  [dbo].[Znode_ImportProcessProductData] '1928de37-30d3-4cc1-b5e3-0c498c0da183'
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportProcessProductData')
BEGIN 
	DROP PROCEDURE Znode_ImportProcessProductData
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportProcessProductData](@TblGUID nvarchar(255),@ERPTaskSchedulerId int )
AS
BEGIN
	SET NOCOUNT ON;
	SET TEXTSIZE 2147483647;
	DECLARE @NewuGuId nvarchar(255),@ImportHeadId INT 
	set @NewuGuId = newid()
    DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
	DECLARE @DefaultFamilyId  INT = dbo.Fn_GetDefaultPimProductFamilyId();
	DECLARE @LocaleId  INT = dbo.Fn_GetDefaultLocaleId()
	DECLARE @TemplateId INT , @PortalId INT 
	DECLARE @WebsiteCode Varchar(100) 
	SET  @WebsiteCode = 'b9001'
	SELECT TOP 1 @PortalId  = PortalId   FROM dbo.ZnodePortal

	IF OBJECT_ID('tempdb.dbo.##ProductDetail', 'U') IS NOT NULL 
		DROP TABLE ##ProductDetail

	IF OBJECT_ID('tempdb.dbo.#Attributecode', 'U') IS NOT NULL 
		DROP TABLE #Attributecode
	
	IF OBJECT_ID('tempdb.dbo.#ConfigurableAttributecode', 'U') IS NOT NULL 
		DROP TABLE #ConfigurableAttributecode 
	
	IF OBJECT_ID('tempdb.dbo.#DefaultAttributeCode', 'U') IS NOT NULL 
		DROP TABLE #DefaultAttributeCode 

    IF OBJECT_ID('tempdb.dbo.[##ProductAssociation]', 'U') IS NOT NULL 
		DROP TABLE tempdb.dbo.[##ProductAssociation]

		
	Declare @GlobalTemporaryTable nvarchar(255)
	DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '', 
		    @InsertColumnName   NVARCHAR(MAX), 
			@UpdateTable2Column NVARCHAR(MAX),
			@UpdateTable3Column NVARCHAR(MAX),
			@UpdateTable4Column NVARCHAR(MAX),
			@ImportTableColumnName NVARCHAR(MAX),
			@ImportTableName VARCHAR(200),
			@TableName4 NVARCHAR(255) = 'tempdb..[##PRDDA_' + @TblGUID + ']',
			@Sql NVARCHAR(MAX) = '',
			@Attribute NVARCHAR(MAX)

	DECLARE @Attributecode TABLE ( Attrcode NVARCHAR(255) )

	CREATE TABLE #Attributecode ( Attrcode NVARCHAR(255) )
	CREATE TABLE #ConfigurableAttributecode (SKU NVARCHAR(255) , PimAttributeId  int , DefaultValue nvarchar(255) ,AttributeCode nvarchar(255) ,ParentSKU nvarchar(255)) 
	
	SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'ProductTemplate'
	SELECT @ImportHeadId= ImportHeadId FROM dbo.ZnodeImportHead WHERE Name = 'Product'
	SET @Sql = '
	INSERT INTO ZnodeImportTemplateMapping ( ImportTemplateId, SourceColumnName, TargetColumnName, DisplayOrder, IsActive, IsAllowNull, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
	SELECT Distinct 1 AS ImportTemplateId,  PA.AttributeCode AS SourceColumnName,  PA.AttributeCode AS TargetColumnName, 0 AS DisplayOrder, 0 AS IsActive, 0 AS IsAllowNull, 2 AS CreatedBy, GETDATE() AS CreatedDate, 2 AS ModifiedBy, GETDATE() AS ModifiedDate
	FROM '+@TableName4+' PRD
	INNER JOIN ZnodePimAttribute PA ON PRD.Attribute = PA.AttributeCode
	WHERE NOT EXISTS ( SELECT * FROM ZNODEIMPORTTEMPLATEMAPPING ITM WHERE ImportTemplateId = ' + CONVERT(NVARCHAR(100), @TemplateId ) + ' AND PRD.ATTRIBUTE =  ITM.SOURCECOLUMNNAME )'


	EXEC ( @Sql )
	
	SELECT @CreateTableScriptSql = 'CREATE TABLE ##ProductDetail ('+SUBSTRING ((Select ',' +  ISNULL([TargetColumnName] ,'NULL')+ ' nvarchar(max)' 
	FROM [dbo].[ZnodeImportTemplateMapping]
	WHERE [ImportTemplateId]= @TemplateId FOR XML PATH ('')),2,4000)+' , ParentStyle NVARCHAR(MAX),GUID nvarchar(255), BaseProductType nvarchar(255) )'

	EXEC ( @CreateTableScriptSql )
	


	--Merge all the tables which is type is inserted / updated 
	DECLARE Cur_InsertProduct CURSOR FOR
	
	SELECT ImportTableName FROM ZnodeImportTableDetail WHERE ImportTableNature = 'Insert' AND ImportHeadId = @ImportHeadId --AND ImportTableName = 'PRDH'
	
	OPEN Cur_InsertProduct 

	FETCH NEXT FROM Cur_InsertProduct INTO @ImportTableName

	WHILE ( @@FETCH_STATUS = 0 )
	BEGIN
	    SET @GlobalTemporaryTable = 'tempdb..[##' + @ImportTableName + '_' + @TblGUID + ']' 
		--1 simple 
		    SET @Sql = ' 
			SELECT @InsertColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ITCD.BaseImportColumn +'']''  ,''NULL'')
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  ITD.ImportTableName = @ImportTableName 
			AND ITD.ImportHeadId = ' + convert(nvarchar(100),@ImportHeadId)+ '
			  AND ITCD.BaseImportColumn is not null FOR XML PATH ('''')),2,4000)

			SELECT @ImportTableColumnName = SUBSTRING ((Select '','' +  ISNULL(''[''+ ImportTableColumnName +'']''  ,''NULL'') 
			FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
			ON ITCD.ImportTableId = ITD.ImportTableId
			WHERE  ITD.ImportTableName = @ImportTableName  AND ITD.ImportHeadId =  
			' + convert(nvarchar(100),@ImportHeadId)+    '
			AND ITCD.BaseImportColumn is not null FOR XML PATH ('''')),2,4000)'


		EXEC sp_executesql @SQL, N'@ImportTableName VARCHAR(200),@InsertColumnName NVARCHAR(MAX) OUTPUT, @ImportTableColumnName  NVARCHAR(MAX) OUTPUT', @ImportTableName = @ImportTableName, @InsertColumnName = @InsertColumnName OUTPUT, @ImportTableColumnName = @ImportTableColumnName OUTPUT

			
		IF( LEN(@InsertColumnName) > 0 )
		BEGIN
			SET @SQL = 'INSERT INTO ##ProductDetail ( ParentStyle, '+@InsertColumnName+' )	SELECT [Parent Style], '+@ImportTableColumnName +' FROM '+@GlobalTemporaryTable
			SET @SQL = @SQL + ' Where Website = ''' + @WebsiteCode + '''' 
			EXEC sp_executesql @SQL
		END
		
		SELECT @InsertColumnName ='', @GlobalTemporaryTable=''

		FETCH NEXT FROM Cur_InsertProduct INTO @ImportTableName
	END

	CLOSE Cur_InsertProduct
	DEALLOCATE Cur_InsertProduct

	
	DECLARE @UpdateTableColumn varchar(max)


	SET @Sql = 
		'SELECT @UpdateTableColumn = 
		 COALESCE(@UpdateTableColumn + '','', '''') + ''[''+BaseImportColumn+''] = B.[''+BaseImportColumn+'']''
		 FROM [ZnodeImportTableColumnDetail] ITCD INNER JOIN [ZnodeImportTableDetail] ITD 
		 ON ITCD.ImportTableId = ITD.ImportTableId
		 WHERE  ITD.ImportTableName = ''PRDH''  AND ITCD.BaseImportColumn IS NOT NULL AND ITCD.BaseImportColumn <> ''SKU'''

	EXEC sp_executesql @SQL, N'@UpdateTableColumn VARCHAR(200) OUTPUT', @UpdateTableColumn = @UpdateTableColumn OUTPUT
	
	SET @Sql = 
		';WITH CTE AS
		(
			SELECT * FROM ##ProductDetail WHERE ProductName IS NOT NULL
		)
		UPDATE A 
		SET '+@UpdateTableColumn+'
		FROM ##ProductDetail A 
		INNER JOIN CTE B ON B.ParentStyle = A.ParentStyle'
	EXEC ( @Sql )
    
	SET @Sql = 'INSERT INTO #Attributecode ( Attrcode ) SELECT DISTINCT ltrim(rtrim([Attribute])) FROM '+ @TableName4
	 + ' where ltrim(rtrim([Attribute]))  in (Select AttributeCode from ZnodePimAttribute where IsCategory = 0 ) AND RowNumber = ''' + @WebsiteCode + ''''
	EXEC ( @Sql )

	DECLARE Cur_AttributeCode CURSOR FOR SELECT Attrcode FROM #Attributecode where Attrcode is not null 
    OPEN Cur_AttributeCode
    FETCH NEXT FROM Cur_AttributeCode INTO @Attribute
    WHILE ( @@FETCH_STATUS = 0 )
	BEGIN
		SET @SQL = ''
		SET @SQL =  'UPDATE PD SET PD.' + @Attribute  + '= ' +
		 ' Replace(Replace(PDD.[Attribute Value], ''/'', ''''), '' '', '''')' +
		 ' FROM ##ProductDetail PD inner join '+ @TableName4 + ' PDD on PD.SKU = PDD.SKU# WHERE PDD.Attribute =  '''+@Attribute + ''' 
		 AND PDD.RowNumber = ''' + @WebsiteCode + ''''

		EXEC sp_executesql @SQL
		FETCH NEXT FROM Cur_AttributeCode INTO @Attribute
	END
	CLOSE Cur_AttributeCode
	DEALLOCATE Cur_AttributeCode
	
	SET @Sql = 'UPDATE ##ProductDetail SET GUID= '''+@NewuGuId  + ''', BaseProductType = ProductType'
	EXEC sp_executesql @SQL
	
	SET @Sql = 'UPDATE ##ProductDetail SET ProductType =  CASE when [ParentStyle] = SKU 
	then ''ConfigurableProduct'' ELSE ''SimpleProduct'' END ,
	MinimumQuantity = 1 , MaximumQuantity = 10 ,ShippingCostRules = ''WeightBasedRate'',OutOfStockOptions = ''DontTrackInventory''
	,ProductCode = CASE When ProductCode Is Null then SKU ELSE ProductCode  END , 
	IsActive = CASE when Isnull(IsActive,'''') = '''' then 1 END'
	EXEC sp_executesql @SQL
	
	DELETE  FROM ##ProductDetail where isnull(SKU,'') = ''
	---- Read All default data 
	
	-- Product Association data prepartion 
	Create TABLE tempdb..[##ProductAssociation] (ParentSKU nvarchar(255),ChildSKU nvarchar(255), DisplayOrder int,GUID nvarchar(100) )
	SET @Sql = '
	insert into tempdb..[##ProductAssociation]  (ParentSKU ,ChildSKU , DisplayOrder,GUID )
	select [ParentStyle], SKU  ,1, ''' + @NewuGuId + ''' from ##ProductDetail  where [ParentStyle] <>  SKU and [ParentStyle] is not null 
	'
	EXEC (@Sql)
	
	-- Configrable Attributes
	SET @Sql = 'INSERT INTO #ConfigurableAttributecode (PimAttributeId ,DefaultValue ,AttributeCode,ParentSKU)
	            SELECT Distinct ZPA.PimAttributeId,[Attribute Value]	 ,ltrim(rtrim(PDA.[Attribute])), PDA.[Parent Style]  FROM '+ @TableName4
	 + ' PDA Inner join  tempdb..##ProductDetail PD  ON PDA.[SKU#]= PD.SKU and PD.BaseProductType = ''C''
	 AND PDA.Rownumber = ''' + @WebsiteCode + ''' 
	  Inner join ZnodePimAttribute ZPA ON ZPA.AttributeCode = ltrim(rtrim(PDA.[Attribute])) AND ZPA.IsCategory = 0 and ZPA.IsConfigurable =1 '
	EXEC ( @Sql )

	-- Update default vaule of confi attribute in main template
	
	DECLARE @DefaultValue nvarchar(255),@ParentSKU  nvarchar(255),@AttributeName nvarchar(255)
	DECLARE Cur_ConfigAttributeCode CURSOR FOR SELECT DefaultValue, AttributeCode,ParentSKU 
	FROM #ConfigurableAttributecode  where DefaultValue is not null 
    OPEN Cur_ConfigAttributeCode
    FETCH NEXT FROM Cur_ConfigAttributeCode INTO @DefaultValue, @AttributeName,@ParentSKU
    WHILE ( @@FETCH_STATUS = 0 )
	BEGIN
		SET @SQL = ''
		SET @SQL =  'UPDATE ##ProductDetail SET ' + @AttributeName  + ' = ''' +  Replace(Replace(@DefaultValue, '/', ''), ' ', '') + 
		''' WHERE SKU  =  '''+	@ParentSKU + ''''
		EXEC sp_executesql @SQL
		FETCH NEXT FROM Cur_ConfigAttributeCode INTO @DefaultValue, @AttributeName,@ParentSKU
	END
	CLOSE Cur_ConfigAttributeCode
	DEALLOCATE Cur_ConfigAttributeCode
		
	SET @Sql = 'Alter TABLE ##ProductDetail drop column [ParentStyle],[BaseProductType]'
	EXEC sp_executesql @SQL
	

	SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'ProductTemplate'
	---- Import product    
	EXEC Znode_ImportData @TableName = 'tempdb..[##ProductDetail]',	@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
	      @UserId = 2,@PortalId = @PortalId,@LocaleId = @LocaleId,@DefaultFamilyId = @DefaultFamilyId,@PriceListId = 0, @CountryCode = ''
		 ,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 1, @StepName = 'Import' ,@ERPTaskSchedulerId  = @ERPTaskSchedulerId 

		--SET @Sql = 'SELECT * FROM tempdb..[##ProductDetail]' 
		--EXEC sp_executesql @SQL

	If Exists (select TOP 1 1 from #ConfigurableAttributecode ) 
	BEGIN
	--SET @Sql = 'SELECT * FROM tempdb..[##ProductAssociation]' 
	--	EXEC sp_executesql @SQL
			SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'ProductAssociation'

			EXEC Znode_ImportData @TableName = 'tempdb..[##ProductAssociation]',	@NewGUID =  @TblGUID ,@TemplateId = @TemplateId,
			 @UserId = 2,@PortalId = @PortalId,@LocaleId = @LocaleId,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = ''--, @IsDebug =1 
			,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 0, @StepName = 'Import1', @StartStepName  ='Import',@step_id = 2 
			,@Nextstep_id  = 1,@ERPTaskSchedulerId  = @ERPTaskSchedulerId  
		
	END
	 select 'Job create successfully.' 
	
END
GO
PRINT N'Altering [dbo].[Znode_ImportSEODetails]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportSEODetails')
BEGIN 
	DROP PROCEDURE Znode_ImportSEODetails
END 
GO
CREATE PROCEDURE [dbo].[Znode_ImportSEODetails](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @LocaleId int= 0,@PortalId int ,@CsvColumnString nvarchar(max))
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import SEO Details
	
	-- Unit Testing : 
	--------------------------------------------------------------------------------------

BEGIN
	BEGIN TRAN A;
	BEGIN TRY
	
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		-- Retrive RoundOff Value from global setting 

		-- Three type of import required three table varible for product , category and brand
		DECLARE @InsertSEODetails TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), 
			RedirectFrom nvarchar(max),RedirectTo nvarchar(max), EnableRedirection bit,
			GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		DECLARE @InsertSEODetailsOFProducts TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max),
			RedirectFrom nvarchar(max),RedirectTo nvarchar(max), EnableRedirection bit, 
			GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		DECLARE @InsertSEODetailsOFCategory TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max),
			RedirectFrom nvarchar(max),RedirectTo nvarchar(max), EnableRedirection bit, 
			GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		DECLARE @InsertSEODetailsOFBrand TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, ImportType varchar(20), Code nvarchar(300), 
			IsRedirect	bit	,MetaInformation	nvarchar(max),PortalId	int	,SEOUrl	nvarchar(max),IsActive bit,
			SEOTitle	nvarchar(max),SEODescription	nvarchar(max),SEOKeywords	nvarchar(max), 
			RedirectFrom nvarchar(max),RedirectTo nvarchar(max), EnableRedirection bit, 
			GUID nvarchar(400)
			--Index Ind_ImportType (ImportType),Index Ind_Code (Code)
		);

		
		DECLARE @InsertedZnodeCMSSEODetail TABLE
		( 
			CMSSEODetailId int , SEOId int, CMSSEOTypeId int
		);
		
		--SET @SSQL = 'Select RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,GUID  FROM '+@TableName;
		SET @SSQL = 'Select RowNumber,'+@CsvColumnString+',GUID  FROM '+@TableName;

		INSERT INTO @InsertSEODetails(RowNumber,ImportType,Code,IsRedirect,MetaInformation,SEOUrl,IsActive,SEOTitle,SEODescription,SEOKeywords,RedirectFrom,RedirectTo,EnableRedirection,GUID )
		EXEC sys.sp_sqlexec @SSQL;

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '30', 'SEOUrl', SEOUrl, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetails AS ii 
			   where ii.SEOURL in (Select ISD.SEOURL from @InsertSEODetails ISD Group by ISD.SEOUrl having count(*) > 1 ) 

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '35', 'SEOUrl', SEOUrl, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetails AS ii 
			   where ii.RedirectFrom = ii.RedirectTo 

		DELETE FROM @InsertSEODetails
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		SET @SSQL = 'Select RowNumber,' +@CsvColumnString +',GUID  FROM '+@TableName
		+ ' Where ImportType = ''Product'' ';
		INSERT INTO @InsertSEODetailsOFProducts(  RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation	,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords, RedirectFrom, RedirectTo,EnableRedirection, GUID )
		EXEC sys.sp_sqlexec @SSQL;

		SET @SSQL = 'Select RowNumber,' +@CsvColumnString +',GUID  FROM '+@TableName
		+ ' Where ImportType = ''Category'' ';
		INSERT INTO @InsertSEODetailsOFCategory( RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords, RedirectFrom, RedirectTo,EnableRedirection	, GUID )
		EXEC sys.sp_sqlexec @SSQL;

		SET @SSQL = 'Select RowNumber,' +@CsvColumnString +',GUID  FROM '+@TableName
		+ ' Where ImportType = ''Brand'' ';
		INSERT INTO @InsertSEODetailsOFBrand( RowNumber , ImportType , Code , 
			IsRedirect	,MetaInformation	,SEOUrl	,IsActive ,
			SEOTitle	,SEODescription	,SEOKeywords, RedirectFrom, RedirectTo,EnableRedirection	, GUID )
		EXEC sys.sp_sqlexec @SSQL;

	    -- start Functional Validation 
		--1. Product
		--2. Category
		--3. Content Page
		--4. Brand
		-----------------------------------------------

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'ImportType', ImportType, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetails AS ii
			   WHERE ii.ImportType NOT in 
			   (
				   Select NAME from ZnodeCMSSEOType where NAME <> 'Content Page'
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'SKU', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFProducts AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select SKU from ZnodePublishProductDetail ZPPD
					INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
					INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
					AND ZPC.PortalId  = @PortalId AND SKU is not null 
			   )  AND ImportType = 'Product';


		
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'Category', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFCategory AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select PublishCategoryName from ZnodePublishCategoryDetail ZPPD
				   	INNER JOIN ZnodePublishCategory ZPP ON ZPP.PublishCategoryId = ZPPD.PublishCategoryId
					INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
				   where ZPPD.PublishCategoryName is not null  AND   ZPC.PortalId = @PortalId
			   )  AND ImportType = 'Category';

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'Brand', CODE, @NewGUId, RowNumber, @UserId, @GetDate, @UserId, @GetDate, @ImportProcessLogId
			   FROM @InsertSEODetailsOFBrand AS ii
			   WHERE ii.CODE NOT in 
			   (
				   Select BrandCode from ZnodeBrandDetails 
			   )  AND ImportType = 'Brand';
		
		
		--Note : Content page import is not required 
		
		-- End Function Validation 	
		-----------------------------------------------
		--- Delete Invalid Data after functional validatin  

		DELETE FROM @InsertSEODetailsOFProducts
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		DELETE FROM @InsertSEODetailsOFCategory
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		DELETE FROM @InsertSEODetailsOFBrand
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
			--AND GUID = @NewGUID
		);

		-- Insert Product Data 
		If Exists (Select top 1 1 from @InsertSEODetailsOFProducts)
		Begin
			Update ZCSD SET ZCSD.IsRedirect = ISD.IsRedirect ,
						   ZCSD.MetaInformation =  ISD.MetaInformation,
						   ZCSD.SEOUrl=  ISD.SEOUrl
			FROM 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId = ZPPD.PublishProductId
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = ZCSD.PortalId
			where  ZCSD.PortalId  =@PortalId;
			
			Update ZCSDL SET ZCSDL.SEOTitle = ISD.SEOTitle
							,ZCSDL.SEODescription = ISD.SEODescription
							,ZCSDL.SEOKeywords= ISD.SEOKeywords
 			FROM 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId = ZPPD.PublishProductId
			INNER JOIN ZnodeCMSSEODetailLocale ZCSDL ON ZCSD.CMSSEODetailId = ZCSDL.CMSSEODetailId
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = ZCSD.PortalId
			where  ZCSD.PortalId  =@PortalId AND ZCSDL.LocaleId = @LocaleId; 

			Delete from @InsertedZnodeCMSSEODetail
			INSERT INTO ZnodeCMSSEODetail(CMSSEOTypeId,SEOId,IsRedirect,MetaInformation,PortalId,SEOUrl,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
			OUTPUT Inserted.CMSSEODetailId,Inserted.SEOId,Inserted.CMSSEOTypeId INTO @InsertedZnodeCMSSEODetail
		
			Select Distinct 1,ZPPD.PublishProductId , ISD.IsRedirect,ISD.MetaInformation,@PortalId,ISD.SEOUrl,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertSEODetailsOFProducts ISD  INNER JOIN ZnodePublishProductDetail ZPPD ON ISD.Code = ZPPD.SKU 
			INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
			where  ZPC.PortalId  =@PortalId AND
			 NOT EXISTS (Select TOP 1 1 from ZnodeCMSSEODetail ZCSD where ZCSD.CMSSEOTypeId = 1 AND ZCSD.SEOId  = ZPPD.PublishProductId
			 and  ZCSD .PortalId =@PortalId   );
		
        	insert into ZnodeCMSSEODetailLocale(CMSSEODetailId,LocaleId,SEOTitle,SEODescription,SEOKeywords,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			Select Distinct IZCSD.CMSSEODetailId,@LocaleId,ISD.SEOTitle,ISD.SEODescription,ISD.SEOKeywords,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertedZnodeCMSSEODetail IZCSD INNER JOIN ZnodePublishProductDetail ZPPD ON IZCSD.SEOId = ZPPD.PublishProductId AND IZCSD.CMSSEOTypeId =1  
											 INNER JOIN @InsertSEODetailsOFProducts ISD ON ZPPD.SKU = ISD.Code 
											 INNER JOIN ZnodePublishProduct ZPP ON ZPP.PublishProductId = ZPPD.PublishProductId
											 INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId 
			where  ZPC.PortalId  =@PortalId 

	
			-----RedirectUrlInsert
			INSERT INTO ZnodeCMSUrlRedirect ( RedirectFrom,RedirectTo,IsActive,PortalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			select RedirectFrom,RedirectTo,EnableRedirection,@PortalId as PortalId ,2 as CreatedBy,getdate() as CreatedDate,2 as ModifiedBy,getdate() as ModifiedDate
			from @InsertSEODetailsOFProducts
			where IsRedirect = 1
		END

		-- Insert Category Data 
		
		If Exists (Select top 1 1 from @InsertSEODetailsOFCategory)
		Begin

			Update ZCSD SET ZCSD.IsRedirect = ISD.IsRedirect ,
						   ZCSD.MetaInformation =  ISD.MetaInformation,
						   ZCSD.SEOUrl=  ISD.SEOUrl
			FROM 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId = ZPPD.PublishCategoryId
			where  ZCSD.PortalId  =@PortalId;
			
			Update ZCSDL SET ZCSDL.SEOTitle = ISD.SEOTitle
							,ZCSDL.SEODescription = ISD.SEODescription
							,ZCSDL.SEOKeywords= ISD.SEOKeywords
 			FROM 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodeCMSSEODetail ZCSD ON  ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId = ZPPD.PublishCategoryId
			INNER JOIN ZnodeCMSSEODetailLocale ZCSDL ON ZCSD.CMSSEODetailId = ZCSDL.CMSSEODetailId
			where  ZCSD.PortalId  =@PortalId AND ZCSDL.LocaleId = @LocaleId; 

			Delete from @InsertedZnodeCMSSEODetail
			INSERT INTO ZnodeCMSSEODetail(CMSSEOTypeId,SEOId,IsRedirect,MetaInformation,PortalId,SEOUrl,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
			OUTPUT Inserted.CMSSEODetailId,Inserted.SEOId,Inserted.CMSSEOTypeId INTO @InsertedZnodeCMSSEODetail
		
			Select Distinct 2,ZPPD.PublishCategoryId , ISD.IsRedirect,ISD.MetaInformation,@PortalId,ISD.SEOUrl,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertSEODetailsOFCategory ISD  INNER JOIN ZnodePublishCategoryDetail ZPPD ON ISD.Code = ZPPD.PublishCategoryName 
			INNER JOIN ZnodePublishCategory ZPP ON ZPP.PublishCategoryId = ZPPD.PublishCategoryId
			INNER JOIN ZnodePortalCatalog ZPC ON ZPC.PublishCatalogId = ZPP.PublishCatalogId AND   ZPC.PortalId = @PortalId
			where NOT EXISTS (Select TOP 1 1 from ZnodeCMSSEODetail ZCSD where ZCSD.CMSSEOTypeId = 2 AND ZCSD.SEOId  = ZPPD.PublishCategoryId AND ZCSD.PortalId = @PortalId );
		


			insert into ZnodeCMSSEODetailLocale(CMSSEODetailId,LocaleId,SEOTitle,SEODescription,SEOKeywords,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			Select Distinct IZCSD.CMSSEODetailId,@LocaleId,ISD.SEOTitle,ISD.SEODescription,ISD.SEOKeywords,@USerId, @GetDate,@USerId, @GetDate from 
			@InsertedZnodeCMSSEODetail IZCSD INNER JOIN ZnodePublishCategoryDetail ZPPD ON IZCSD.SEOId = ZPPD.PublishCategoryId AND IZCSD.CMSSEOTypeId =2  
											 INNER JOIN @InsertSEODetailsOFCategory ISD ON ZPPD.PublishCategoryName = ISD.Code 

			-----RedirectUrlInsert
			insert into ZnodeCMSUrlRedirect ( RedirectFrom,RedirectTo,IsActive,PortalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			select RedirectFrom,RedirectTo,EnableRedirection,@PortalId as PortalId ,2 as CreatedBy,getdate() as CreatedDate,2 as ModifiedBy,getdate() as ModifiedDate
			from @InsertSEODetailsOFProducts SDP
			where IsRedirect = 1
		END
										 
		--select 'End'
		--      SET @Status = 1;
		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_InsertUpdateAttributeDefaultValue]...';


GO
--CREATE TABLE ZnodePimAttributeDefaultXML 
--(
-- PimAttributeDefaultXMLId INT IDENTITY(1,1) CONSTRAINT PK_ZnodePimAttributeDefaultXML PRIMARY KEY 
-- ,PimAttributeDefaultValueId INT 
-- ,AttributeDefaultValueCode VARCHAr(300)
-- ,DefaultValueXML NVARCHAR(4000)
-- ,LocaleId		  INT
-- ,CreatedBy    INT NOT NULL 
-- ,CreatedDate  DATETIME NOT NULL 
-- ,ModifiedBy   INT NOT NULL 
-- ,ModifiedDate DATETIME NOT NULL 
--)

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateAttributeDefaultValue')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateAttributeDefaultValue
END 
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateAttributeDefaultValue] 
(
@PimAttributeDefaultValueId INT
 )
AS
BEGIN 
 BEGIN TRY 
    
	;With Cte_DefaultValue AS
	(
	SELECT ZPADV.PimAttributeDefaultValueId,ZPADV.AttributeDefaultValueCode,ZPADVL.AttributeDefaultValue,ZPADV.DisplayOrder,ZPADV.IsEditable,ZPADV.SwatchText,ZM.[Path],LocaleId 
	FROM ZnodePimAttributeDefaultValue ZPADV 
	INNER JOIN ZnodePimAttributeDefaultValueLocale ZPADVL ON (ZPADVL.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId )
	LEFT JOIN ZnodeMedia ZM ON (ZM.MediaId = ZPADV.MediaId)
	)
    
	MERGE INTO ZnodePimAttributeDefaultXML TARGET
    USING (SELECT PimAttributeDefaultValueId,AttributeDefaultValueCode,'<SelectValuesEntity>'+'<Value>'+ISNULL((SELECT ''+AttributeDefaultValue FOR XML PATH('')),'')+'</Value>'+'<Code>'
	+ISNULL(AttributeDefaultValueCode,'')+'</Code>'+'<Path>'+ISNULL([Path],'')+'</Path>'+'<SwatchText>'+ISNULL(SwatchText,'')+'</SwatchText>'+'<DisplayOrder>'+CAST(ISNULL(DisplayOrder,0) AS VARCHAR(50))
	+'</DisplayOrder>'+'</SelectValuesEntity>' AttributeValue ,LocaleId 
	FROM Cte_DefaultValue ) SOURCE 
	ON (
	    TARGET.PimAttributeDefaultValueId = SOURCE.PimAttributeDefaultValueId
		AND TARGET.LocaleId = SOURCE.LocaleId 
	)
	WHEN MATCHED THEN 
	UPDATE 
	SET 
	   TARGET.DefaultValueXML = SOURCE.AttributeValue
	   ,TARGET.LocaleId = SOURCE.LocaleId
	   ,ModifiedDate = Getdate()
	WHEN NOT MATCHED THEN 
	INSERT (PimAttributeDefaultValueId
			,AttributeDefaultValueCode
			,DefaultValueXML
			,LocaleId
			,CreatedBy
			,CreatedDate
			,ModifiedBy
			,ModifiedDate)
	VALUES ( SOURCE.PimAttributeDefaultValueId
			,SOURCE.AttributeDefaultValueCode
			,SOURCE.AttributeValue
			,SOURCE.LocaleId
			,2
			,GETDATE()
			,2
			,GETDATE());
			
 END TRY 
 BEGIN CATCH 
 SELECT ERROR_MESSAGE()
 END CATCH 

END
GO
PRINT N'Altering [dbo].[Znode_InsertUpdateOmsQuoteTemplate]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateOmsQuoteTemplate')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateOmsQuoteTemplate
END 
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateOmsQuoteTemplate]
(   @TemplateLineItemXML XML,
    @UserId              INT,
    @Status              BIT = 0 OUT)
AS 
   /* -- Summary :- This Pocedure is USed to create the Quote Template 
     Unit Testing 
     EXEC 
     SELECT * FROM ZnodeOmsTemplate
     SELECT * FROM ZnodeOmsTemplateLineItem
	*/
     BEGIN
         BEGIN TRAN InsertUpdateSaveCartLineItem;
         BEGIN TRY
             SET NOCOUNT ON;
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @TBL_SavecartLineitems TABLE
             (RowId                           INT IDENTITY(1, 1),
              OmsTemplateLineItemId           INT,
              ParentOmsTemplateLineItemId     INT,
              OmsTemplateId                   INT,
              SKU                             NVARCHAR(600),
              Quantity                        NUMERIC(28, 6),
              OrderLineItemRelationshipTypeID INT,
              CustomText                      NVARCHAR(MAX),
              CartAddOnDetails                NVARCHAR(MAX),
              Sequence                        INT,
              AddOnValueIds                   VARCHAR(MAX),
              BundleProductIds                VARCHAR(MAX),
              ConfigurableProductIds          VARCHAR(MAX),
              GroupProductIds                 VARCHAR(MAX)
             );
             DECLARE @OrderLineItemRelationshipTypeIdAddon INT=
             (
                 SELECT TOP 1 OrderLineItemRelationshipTypeId
                 FROM ZnodeOmsOrderLineItemRelationshipType
                 WHERE [Name] = 'AddOns'
             );
             DECLARE @OrderLineItemRelationshipTypeIdBundle INT=
             (
                 SELECT TOP 1 OrderLineItemRelationshipTypeId
                 FROM ZnodeOmsOrderLineItemRelationshipType
                 WHERE [Name] = 'Bundles'
             );
             DECLARE @OrderLineItemRelationshipTypeIdConfigurable INT=
             (
                 SELECT TOP 1 OrderLineItemRelationshipTypeId
                 FROM ZnodeOmsOrderLineItemRelationshipType
                 WHERE [Name] = 'Configurable'
             );
             DECLARE @OrderLineItemRelationshipTypeIdGroup INT=
             (
                 SELECT TOP 1 OrderLineItemRelationshipTypeId
                 FROM ZnodeOmsOrderLineItemRelationshipType
                 WHERE [Name] = 'Group'
             );
             INSERT INTO @TBL_SavecartLineitems
             (OmsTemplateLineItemId,
              ParentOmsTemplateLineItemId,
              OmsTemplateId,
              SKU,
              Quantity,
              OrderLineItemRelationshipTypeID,
              CustomText,
              CartAddOnDetails,
              Sequence,
              AddOnValueIds,
              BundleProductIds,
              ConfigurableProductIds,
              GroupProductIds
             )
                    SELECT Tbl.Col.value('OmsTemplateLineItemId[1]', 'NVARCHAR(2000)') AS OmsSavedCartLineItemId,
                           Tbl.Col.value('ParentOmsTemplateLineItemId[1]', 'NVARCHAR(2000)') AS ParentOmsSavedCartLineItemId,
                           Tbl.Col.value('OmsTemplateId[1]', 'NVARCHAR(2000)') AS OmsSavedCartId,
                           Tbl.Col.value('SKU[1]', 'NVARCHAR(2000)') AS SKU,
                           Tbl.Col.value('Quantity[1]', 'NVARCHAR(2000)') AS Quantity,
                           Tbl.Col.value('OrderLineItemRelationshipTypeID[1]', 'NVARCHAR(2000)') AS OrderLineItemRelationshipTypeID,
                           Tbl.Col.value('CustomText[1]', 'NVARCHAR(2000)') AS CustomText,
                           Tbl.Col.value('CartAddOnDetails[1]', 'NVARCHAR(2000)') AS CartAddOnDetails,
                           Tbl.Col.value('Sequence[1]', 'NVARCHAR(2000)') AS Sequence,
                           Tbl.Col.value('AddonProducts[1]', 'NVARCHAR(2000)') AS AddOnValueIds,
                           Tbl.Col.value('BundleProducts[1]', 'NVARCHAR(2000)') AS BundleProductIds,
                           Tbl.Col.value('ConfigurableProducts[1]', 'NVARCHAR(2000)') AS ConfigurableProductIds,
                           Tbl.Col.value('GroupProducts[1]', 'NVARCHAR(Max)') AS GroupProductIds
                    FROM @TemplateLineItemXML.nodes('//ArrayOfAccountTemplateLineItemModel/AccountTemplateLineItemModel') AS Tbl(Col);

             -- SELECT * FROM  @TBL_SavecartLineitems
             DECLARE @OmsTemplateId INT, @OmsTemplateLineItemId INT;
             DECLARE @TBL_bundleAddonRows TABLE
             (RowId                           INT,
              SequenceId                      INT IDENTITY(1, 1),
              ParentOmsTemplateLineItemId     INT,
              SKU                             NVARCHAR(1000),
              Quantity                        NUMERIC(28, 6),
              OrderLineItemRelationshipTypeID INT,
              CustomText                      NVARCHAR(MAX),
              CartAddOnDetails                NVARCHAR(MAX)
             );

             DECLARE @AddonProductSKU NVARCHAR(MAX)=
             (
                 SELECT TOP 1 AddOnValueIds
                 FROM @TBL_SavecartLineitems
             ), @BundleProductSKU NVARCHAR(MAX)=
             (
                 SELECT TOP 1 BundleProductIds
                 FROM @TBL_SavecartLineitems
             );
             SET @OmsTemplateId =
             (
                 SELECT TOP 1 OmsTemplateId
                 FROM @TBL_SavecartLineitems
             );
             IF EXISTS
             (
                 SELECT TOP 1 1
                 FROM ZnodeOmsSavedCartLineItem AS qa
                 WHERE EXISTS
                 (
                     SELECT TOP 1 1
                     FROM @TBL_SavecartLineitems AS ssds
                     WHERE ssds.sku = qa.SKU
                 )
             )
                 BEGIN
                     DELETE FROM ZnodeOmsTemplateLineItem
                     WHERE OmsTemplateId = @OmsTemplateId;
                 END; 
			
            

             INSERT INTO @TBL_bundleAddonRows
             (RowId,
              ParentOmsTemplateLineItemId,
              SKU,
              Quantity,
              OrderLineItemRelationshipTypeID,
              CustomText,
              CartAddOnDetails
             )
                    SELECT a.RowID,
                           NULL,
                           q.Item AS SKU,
                           a.Quantity,
                           @OrderLineItemRelationshipTypeIdAddon,
                           CustomText,
                           CartAddOnDetails
                    FROM @TBL_SavecartLineitems AS a
                         CROSS APPLY dbo.Split(a.AddOnValueIds, ',') AS q
                    WHERE a.AddOnValueIds IS NOT NULL  AND a.AddOnValueIds <> ''; 

             

             INSERT INTO @TBL_bundleAddonRows
             (RowId,
              ParentOmsTemplateLineItemId,
              SKU,
              Quantity,
              OrderLineItemRelationshipTypeID,
              CustomText,
              CartAddOnDetails
             )
                    SELECT RowID,
                           NULL,
                           q.Item AS SKU,
                           a.Quantity,
                           @OrderLineItemRelationshipTypeIdBundle,
                           CustomText,
                           CartAddOnDetails
                    FROM @TBL_SavecartLineitems AS a
                         CROSS APPLY dbo.Split(a.BundleProductIds, ',') AS q
                    WHERE a.BundleProductIds IS NOT NULL AND a.BundleProductIds <>'';
             INSERT INTO @TBL_bundleAddonRows
             (RowId,
              ParentOmsTemplateLineItemId,
              SKU,
              Quantity,
              OrderLineItemRelationshipTypeID,
              CustomText,
              CartAddOnDetails
             )
                    SELECT RowID,
                           NULL,
                           q.Item AS SKU,
                           a.Quantity,
                           @OrderLineItemRelationshipTypeIdConfigurable,
                           CustomText,
                           CartAddOnDetails
                    FROM @TBL_SavecartLineitems AS a
                         CROSS APPLY dbo.Split(a.ConfigurableProductIds, ',') AS q
                    WHERE a.ConfigurableProductIds IS NOT NULL AND a.ConfigurableProductIds <>'';
             INSERT INTO @TBL_bundleAddonRows
             (RowId,
              ParentOmsTemplateLineItemId,
              SKU,
              Quantity,
              OrderLineItemRelationshipTypeID,
              CustomText,
              CartAddOnDetails
             )
                    SELECT RowID,
                           NULL,
                           SUBSTRING(q.Item, 1, CHARINDEX('~', q.Item)-1) AS SKU,
                           SUBSTRING(q.Item, CHARINDEX('~', q.Item)+1, 4000) AS Quantity,
                           @OrderLineItemRelationshipTypeIdGroup,
                           CustomText,
                           CartAddOnDetails
                    FROM @TBL_SavecartLineitems AS a
                         CROSS APPLY dbo.Split(a.GroupProductIds, ',') AS q
                    WHERE a.GroupProductIds IS NOT NULL AND GroupProductIds <>''; 



            -- SELECT * FROM @TBL_SavecartLineitems

             DECLARE @Tbl_SAvecartIds TABLE
             (OmsTemplateLineItemId INT,
              RowId                 INT
             );
			 
			 SELECT * FROM @TBL_SavecartLineitems

             MERGE INTO ZnodeOmsTemplateLineItem TARGET
             USING @TBL_SavecartLineitems SOURCE
             ON  SOURCE.OmsTemplateId = TARGET.OmsTemplateId
			    AND SOURCE.OmsTemplateLineItemId = TARGET.OmsTemplateLineItemId
                 WHEN NOT MATCHED
                 THEN INSERT(ParentOmsTemplateLineItemId,
                             OmsTemplateId,
                             SKU,
                             Quantity,
                             OrderLineItemRelationshipTypeID,
                             CustomText,
                             CartAddOnDetails,
                             Sequence,
                             CreatedBy,
                             CreatedDate,
                             ModifiedBy,
                             ModifiedDate) VALUES
             (NULL,
              @OmsTemplateId,
              Source.SKU,
              Source.Quantity,
              CASE
                  WHEN Source.OrderLineItemRelationshipTypeID = 0
                  THEN NULL
                  ELSE OrderLineItemRelationshipTypeID
              END,
              Source.CustomText,
              Source.CartAddOnDetails,
              Source.Sequence,
              @UserId,
              @GetDate,
              @UserId,
              @GetDate
             )
             OUTPUT Inserted.OmsTemplateLineItemId,
                    SOURCE.RowID
                    INTO @Tbl_SAvecartIds; 
             

			-- SELECT * FROM @Tbl_SAvecartIds

             INSERT INTO ZnodeOmsTemplateLineItem
             (ParentOmsTemplateLineItemId,
              OmsTemplateId,
              SKU,
              Quantity,
              OrderLineItemRelationshipTypeID,
              CustomText,
              CartAddOnDetails,
              Sequence,
              CreatedBy,
              CreatedDate,
              ModifiedBy,
              ModifiedDate
             )
                    SELECT b.OmsTemplateLineItemId,
                           @OmsTemplateId,
                           SKU,
                           Quantity,
                           CASE
                               WHEN OrderLineItemRelationshipTypeID = 0
                               THEN NULL
                               ELSE OrderLineItemRelationshipTypeID
                           END,
                           CustomText,
                           CartAddOnDetails,
                           SequenceId,
                           @UserId,
                           @GetDate,
                           @UserId,
                           @GetDate
                    FROM @TBL_bundleAddonRows AS a
                         INNER JOIN @Tbl_SAvecartIds AS b ON(a.RowId = b.RowId)
                    WHERE a.SKU IS NOT NULL AND a.SKU <> '';

             SET @Status = 1;
             COMMIT TRAN InsertUpdateSaveCartLineItem;
         END TRY
         BEGIN CATCH
        
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_InsertUpdateOmsQuoteTemplate @TemplateLineItemXML = '+CAST(@TemplateLineItemXML AS VARCHAR(max))+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			 ROLLBACK TRAN InsertUpdateSaveCartLineItem;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_InsertUpdateOmsQuoteTemplate',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_InsertUpdateSaveCartLineItem]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_InsertUpdateSaveCartLineItem')
BEGIN 
	DROP PROCEDURE Znode_InsertUpdateSaveCartLineItem
END 
GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateSaveCartLineItem](
	  @CartLineItemXML xml, @UserId int, @Status bit OUT)
AS 
   /* 
    Summary: THis Procedure is USed to save and edit the saved cart line item      
    Unit Testing 
	begin tran  
    Exec Znode_InsertUpdateSaveCartLineItem @CartLineItemXML= '<ArrayOfSavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>BlueGreenYellow</SKU>
    <Quantity>1.000000</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>1</Sequence>
    <AddonProducts>YELLOW</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts>GREEN</ConfigurableProducts>
  </SavedCartLineItemModel>
  <SavedCartLineItemModel>
    <OmsSavedCartLineItemId>0</OmsSavedCartLineItemId>
    <ParentOmsSavedCartLineItemId>0</ParentOmsSavedCartLineItemId>
    <OmsSavedCartId>1259</OmsSavedCartId>
    <SKU>ap1534</SKU>
    <Quantity>1.0</Quantity>
    <OrderLineItemRelationshipTypeId>0</OrderLineItemRelationshipTypeId>
    <Sequence>2</Sequence>
    <AddonProducts >PINK</AddonProducts>
    <BundleProducts />
    <ConfigurableProducts />
    <PersonaliseValuesList>Address~Hello</PersonaliseValuesList>
  </SavedCartLineItemModel>
</ArrayOfSavedCartLineItemModel>' , @UserId=1 ,@Status=0
	rollback tran
*/
BEGIN
	BEGIN TRAN InsertUpdateSaveCartLineItem;
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @GetDate datetime= dbo.Fn_GetDate();
		DECLARE @AddOnQuantity numeric(28, 6)= 0;
		DECLARE @SaveCartLineItemIdForGroup int= 0;
		DECLARE @TBL_SavecartLineitems TABLE
		( 
			RowId int IDENTITY(1, 1), OmsSavedCartLineItemId int, ParentOmsSavedCartLineItemId int, OmsSavedCartId int, SKU nvarchar(600), Quantity numeric(28, 6), OrderLineItemRelationshipTypeID int, CustomText nvarchar(max), 
			CartAddOnDetails nvarchar(max), Sequence int, AddOnValueIds varchar(max), BundleProductIds varchar(max), ConfigurableProductIds varchar(max), GroupProductIds varchar(max), PersonalisedAttribute varchar(max), 
			AutoAddon varchar(max), OmsOrderId int, ItemDetails nvarchar(max)
		);
		DECLARE @OrderLineItemRelationshipTypeIdAddon int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'AddOns'
		);
		DECLARE @OrderLineItemRelationshipTypeIdBundle int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Bundles'
		);
		DECLARE @OrderLineItemRelationshipTypeIdConfigurable int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Configurable'
		);
		DECLARE @OrderLineItemRelationshipTypeIdGroup int=
		(
			SELECT TOP 1 OrderLineItemRelationshipTypeId
			FROM ZnodeOmsOrderLineItemRelationshipType
			WHERE [Name] = 'Group'
		);
		INSERT INTO @TBL_SavecartLineitems( OmsSavedCartLineItemId, ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence, AddOnValueIds, BundleProductIds, ConfigurableProductIds, GroupProductIds, PersonalisedAttribute, AutoAddon, OmsOrderId, ItemDetails )
			   SELECT Tbl.Col.value( 'OmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartLineItemId, Tbl.Col.value( 'ParentOmsSavedCartLineItemId[1]', 'NVARCHAR(2000)' ) AS ParentOmsSavedCartLineItemId, Tbl.Col.value( 'OmsSavedCartId[1]', 'NVARCHAR(2000)' ) AS OmsSavedCartId, Tbl.Col.value( 'SKU[1]', 'NVARCHAR(2000)' ) AS SKU, Tbl.Col.value( 'Quantity[1]', 'NVARCHAR(2000)' ) AS Quantity, Tbl.Col.value( 'OrderLineItemRelationshipTypeID[1]', 'NVARCHAR(2000)' ) AS OrderLineItemRelationshipTypeID, Tbl.Col.value( 'CustomText[1]', 'NVARCHAR(2000)' ) AS CustomText, Tbl.Col.value( 'CartAddOnDetails[1]', 'NVARCHAR(2000)' ) AS CartAddOnDetails, Tbl.Col.value( 'Sequence[1]', 'NVARCHAR(2000)' ) AS Sequence, Tbl.Col.value( 'AddonProducts[1]', 'NVARCHAR(2000)' ) AS AddOnValueIds, Tbl.Col.value( 'BundleProducts[1]', 'NVARCHAR(2000)' ) AS BundleProductIds, Tbl.Col.value( 'ConfigurableProducts[1]', 'NVARCHAR(2000)' ) AS ConfigurableProductIds, Tbl.Col.value( 'GroupProducts[1]', 'NVARCHAR(Max)' ) AS GroupProductIds, 
			          Tbl.Col.value( 'PersonaliseValuesList[1]', 'NVARCHAR(Max)' ) AS GroupProductIds, Tbl.Col.value( 'AutoAddon[1]', 'NVARCHAR(Max)' ) AS AutoAddon, Tbl.Col.value( 'OmsOrderId[1]', 'NVARCHAR(Max)' ) AS OmsOrderId,
					  Tbl.Col.value( 'ItemDetails[1]', 'NVARCHAR(Max)' ) AS ItemDetails
			   FROM @CartLineItemXML.nodes( '//ArrayOfSavedCartLineItemModel/SavedCartLineItemModel' ) AS Tbl(Col);

		DECLARE @OmsSavedCartId int, @OmsSavedCartLineItemId int,@OmsOrderId int;

	 --SELECT * FROM @TBL_SavecartLineitems
		  
		DECLARE @TBL_bundleAddonRows TABLE
		( 
										   RowId int, SequenceId int IDENTITY(1, 1), ParentOmsSavedCartLineItemId int, SKU nvarchar(1000), Quantity numeric(28, 6), OrderLineItemRelationshipTypeID int, CustomText nvarchar(max), CartAddOnDetails nvarchar(max), AutoAddon varchar(max), OmsOrderId int null ,IsFromAddon INT 
		);
		DECLARE @AddonProductSKU nvarchar(max)=
		(
			SELECT TOP 1 AddOnValueIds
			FROM @TBL_SavecartLineitems
		), @BundleProductSKU nvarchar(max)=
		(
			SELECT TOP 1 BundleProductIds
			FROM @TBL_SavecartLineitems
		);
		SET @OmsSavedCartId =
		(
			SELECT TOP 1 OmsSavedCartId
			FROM @TBL_SavecartLineitems
		);
		SET @OmsOrderId =
		(
			SELECT TOP 1 OmsOrderId
			FROM @TBL_SavecartLineitems
		);
		IF EXISTS
		(
			SELECT TOP 1 1
			FROM ZnodeOmsSavedCartLineItem AS qa
			WHERE EXISTS
			(
				SELECT TOP 1 1
				FROM @TBL_SavecartLineitems AS ssds
				WHERE ssds.sku = qa.SKU
			)
		)
		BEGIN
			DELETE FROM ZnodeOmsPersonalizeCartItem
			WHERE EXISTS
			(
				SELECT TOP 1 1
				FROM ZnodeOmsSavedCartLineItem
				WHERE OmsSavedCartId = @OmsSavedCartId AND 
					  OmsSavedCartLineItemId = ZnodeOmsPersonalizeCartItem.OmsSavedCartLineItemId
			);
		
			IF EXISTS (SELECT * FROM @TBL_SavecartLineitems WHERE ItemDetails is not null)
			BEGIN 
				DELETE ZnodeOmsSavedCartLineItemDetails
				WHERE EXISTS
				( 
					SELECT * FROM ZnodeOmsSavedCartLineItem SCLI
					WHERE ZnodeOmsSavedCartLineItemDetails.OmsSavedCartLineItemId = SCLI.OmsSavedCartLineItemId AND SCLI.OmsSavedCartId = @OmsSavedCartId AND SCLI.OmsOrderId = @OmsOrderId	
				)
		    END

			DELETE FROM ZnodeOmsSavedCartLineItem 
			WHERE OmsSavedCartId = @OmsSavedCartId AND OmsOrderId = @OmsOrderId									

		END;

		INSERT INTO @TBL_bundleAddonRows( RowId, ParentOmsSavedCartLineItemId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId ,IsFromAddon)
			   SELECT RowID, NULL, q.Item AS SKU, a.Quantity, @OrderLineItemRelationshipTypeIdBundle, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId,1
			   FROM @TBL_SavecartLineitems AS a
					CROSS APPLY
					dbo.Split( a.BundleProductIds, ',' ) AS q
			   WHERE a.BundleProductIds IS NOT NULL;

		INSERT INTO @TBL_bundleAddonRows( RowId, ParentOmsSavedCartLineItemId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId ,IsFromAddon)
			   SELECT RowID, NULL, q.Item AS SKU, a.Quantity, @OrderLineItemRelationshipTypeIdConfigurable, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId,0
			   FROM @TBL_SavecartLineitems AS a
					CROSS APPLY
					dbo.Split( a.ConfigurableProductIds, ',' ) AS q
			   WHERE a.ConfigurableProductIds IS NOT NULL;

		INSERT INTO @TBL_bundleAddonRows( RowId, ParentOmsSavedCartLineItemId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId,IsFromAddon )
			   SELECT RowID, NULL, SUBSTRING(q.Item, 1, CHARINDEX('~', q.Item)-1) AS SKU, SUBSTRING(q.Item, CHARINDEX('~', q.Item)+1, 4000) AS Quantity, @OrderLineItemRelationshipTypeIdGroup, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId,0
			   FROM @TBL_SavecartLineitems AS a
					CROSS APPLY
					dbo.Split( a.GroupProductIds, ',' ) AS q
			   WHERE a.GroupProductIds IS NOT NULL;

		IF EXISTS
		(
			SELECT TOP 1 1
			FROM @TBL_SavecartLineitems
			WHERE GroupProductIds IS NOT NULL OR 
				  ConfigurableProductIds IS NOT NULL
		)
		BEGIN
			SET @AddOnQuantity =
			(
				SELECT MAX(Quantity)
				FROM @TBL_bundleAddonRows
			);
		END;


		INSERT INTO @TBL_bundleAddonRows( RowId, ParentOmsSavedCartLineItemId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId,IsFromAddon )
			   SELECT a.RowID, NULL, q.Item AS SKU,
											   CASE
											   WHEN @AddOnQuantity = 0 THEN a.Quantity
											   ELSE @AddOnQuantity
											   END, @OrderLineItemRelationshipTypeIdAddon, CustomText, CartAddOnDetails, AutoAddon, OmsOrderId,1
			   FROM @TBL_SavecartLineitems AS a
					CROSS APPLY
					dbo.Split( a.AddOnValueIds, ',' ) AS q
			   WHERE a.AddOnValueIds IS NOT NULL; 
	
		DECLARE @Tbl_SAvecartIds TABLE
		( 
			OmsSavedCartLineItemId int, SKU nvarchar(max), RowId int,ParentOmsSavedCartLineItemId INT 
		);
	
		MERGE INTO ZnodeOmsSavedCartLineItem TARGET
		USING @TBL_SavecartLineitems SOURCE
		ON 1 = 0
		WHEN NOT MATCHED
			  THEN INSERT(ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, Sequence, OmsOrderId, AutoAddon, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate) 
			  VALUES( NULL, @OmsSavedCartId, Source.SKU, Source.Quantity,CASE
																			WHEN Source.OrderLineItemRelationshipTypeID = 0 
																			THEN NULL
																			ELSE OrderLineItemRelationshipTypeID
																		 END, 
					 Source.CustomText, Source.CartAddOnDetails, Source.Sequence, SOURCE.OmsOrderId, SOURCE.AutoAddon, @UserId, @GetDate, @UserId, @GetDate )
		OUTPUT Inserted.OmsSavedCartLineItemId, Source.SKU, SOURCE.RowID,INSERTED.ParentOmsSavedCartLineItemId
		INTO @Tbl_SAvecartIds;

		--IF EXISTS ( SELECT * FROM @TBL_SavecartLineitems WHERE ItemDetails is not null )
		--BEGIN
			INSERT INTO ZnodeOmsSavedCartLineItemDetails ( OmsSavedCartLineItemId, OmsSavedCartId, [Key], Value, CreatedBy, CreatedDate,ModifiedBy, ModifiedDate ) 
			SELECT SCLI.OmsSavedCartLineItemId, SCLI.OmsSavedCartId, LEFT(ID.item,CHARINDEX('~',ID.item)-1) as [Key], RIGHT(ID.item, LEN(ID.item)-CHARINDEX('~',ID.item)) as Value, @UserId, @GetDate, @UserId, @GetDate
			FROM ZnodeOmsSavedCartLineItem SCLI
			INNER JOIN @Tbl_SAvecartIds TSCI ON SCLI.OmsSavedCartLineItemId = TSCI.OmsSavedCartLineItemId
			INNER JOIN @TBL_SavecartLineitems TSCLI ON TSCI.SKU = TSCLI.SKU AND TSCLI.RowID = TSCLI.RowID
			CROSS APPLY dbo.split ( ItemDetails, ',' ) ID 
			WHERE SCLI.OmsSavedCartId = @OmsSavedCartId AND LEFT(ID.item,CHARINDEX('~',ID.item)-1) IS NOT NULL
			AND EXISTS ( SELECT * FROM @TBL_SavecartLineitems TSCLI1 WHERE TSCLI.SKU = TSCLI.SKU AND TSCLI.RowId = TSCLI.RowId AND TSCLI.ItemDetails IS NOT NULL )
		--END

        MERGE INTO ZnodeOmsSavedCartLineItem TARGET
		USING ( SELECT b.OmsSavedCartLineItemId, @OmsSavedCartId OmsSavedCartId , a.SKU, Quantity,
																		CASE
																		WHEN OrderLineItemRelationshipTypeID = 0 THEN NULL
																		ELSE OrderLineItemRelationshipTypeID
																		END OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, SequenceId, OmsOrderId, AutoAddon, @UserId CreatedBy , @GetDate CreatedDate, @UserId ModifiedBy, @GetDate ModifiedDate,a.RowId
			   FROM @TBL_bundleAddonRows AS a
					INNER JOIN
					@Tbl_SAvecartIds AS b
					ON(a.RowId = b.RowId)
			   WHERE a.SKU IS NOT NULL AND 
					 a.SKU <> '') SOURCE
		ON 1 = 0
		WHEN NOT MATCHED
			  THEN INSERT ( ParentOmsSavedCartLineItemId, OmsSavedCartId, SKU, Quantity, OrderLineItemRelationshipTypeID, CustomText, CartAddOnDetails, [Sequence], OmsOrderId, AutoAddon, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )

			  VALUES (SOURCE.OmsSavedCartLineItemId,SOURCE.OmsSavedCartId,SOURCE.SKU,SOURCE.Quantity,SOURCE.OrderLineItemRelationshipTypeID , SOURCE.CustomText,
			  SOURCE.CartAddOnDetails,SOURCE.SequenceId,SOURCE.OmsOrderId,SOURCE.AutoAddon,SOURCE.CreatedBy,SOURCE.CREATEDDATE,SOURCE.ModifiedBy, SOURCE.ModifiedDate
			  
			  )
		OUTPUT Inserted.OmsSavedCartLineItemId, Source.SKU, SOURCE.RowID,INSERTED.ParentOmsSavedCartLineItemId
			   INTO @Tbl_SAvecartIds;
			   
		--IF EXISTS ( SELECT * FROM @TBL_SavecartLineitems WHERE ItemDetails IS NOT NULL )
		--BEGIN
			INSERT INTO ZnodeOmsSavedCartLineItemDetails ( OmsSavedCartLineItemId, OmsSavedCartId, [Key], Value, CreatedBy, CreatedDate,ModifiedBy, ModifiedDate ) 
			SELECT SCLI.OmsSavedCartLineItemId, SCLI.OmsSavedCartId, LEFT(ID.item,CHARINDEX('~',ID.item)-1) as [Key], RIGHT(ID.item, LEN(ID.item)-CHARINDEX('~',ID.item)) as Value, @UserId, @GetDate, @UserId, @GetDate
			FROM ZnodeOmsSavedCartLineItem SCLI
			INNER JOIN @Tbl_SAvecartIds TSCI ON SCLI.OmsSavedCartLineItemId = TSCI.OmsSavedCartLineItemId
			INNER JOIN @TBL_bundleAddonRows BAR ON ( TSCI.SKU = BAR.SKU AND BAR.RowID = TSCI.RowID )
			INNER JOIN @TBL_SavecartLineitems TSCLI ON (BAR.SKU = TSCLI.SKU AND BAR.RowID = TSCLI.RowID )
			CROSS APPLY dbo.split ( TSCLI.ItemDetails, ',' ) ID 
			WHERE SCLI.OmsSavedCartId = @OmsSavedCartId AND LEFT(ID.item,CHARINDEX('~',ID.item)-1) IS NOT NULL
			AND EXISTS ( SELECT * FROM @TBL_SavecartLineitems TSCLI1 WHERE TSCLI.SKU = TSCLI.SKU AND TSCLI.RowId = TSCLI.RowId AND TSCLI.ItemDetails IS NOT NULL )
		--END
		--IF EXISTS
		--(
		--	SELECT TOP 1 1
		--	FROM @TBL_SavecartLineitems
		--	WHERE GroupProductIds IS NOT NULL OR 
		--		  ConfigurableProductIds IS NOT NULL
		--)
		--BEGIN
		 --SELECT * FROM @Tbl_SAvecartIds
		 --SELECT * FROM @TBL_bundleAddonRows
		 --SELECT * FROM @TBL_SavecartLineitems
			DECLARE @TBL_SaveCartConfigProduct TABLE (OmsSavedCartLineItemId INT, SKU VARCHAR(2000),RowId INT, PersonalisedAttribute NVARCHAr(max))
			    INSERT @TBL_SaveCartConfigProduct    
			    SELECT DISTINCT    ZOSCL.OmsSavedCartLineItemId   ,ZOSCL.SKU 
				,  ZOSCL.RowId , (SELECT TOP 1 PersonalisedAttribute FROM @TBL_SavecartLineitems TRTR   WHERE TRTR.SKU = ZOSCL.SKU AND TRTR.RowID = ZOSCL.RowID )  PersonalisedAttribute
				FROM @Tbl_SAvecartIds AS ZOSCL
				LEFT JOIN @TBL_bundleAddonRows AS TBBR ON (ZOSCL.SKU = TBBR.SKU AND TBBR.RowID = ZOSCL.RowId  )
				WHERE ( EXISTS (SELECT TOP 1 1 FROM @TBL_SavecartLineitems TRTR   WHERE TRTR.SKU = ZOSCL.SKU AND TRTR.RowID = ZOSCL.RowID AND TRTR.PersonalisedAttribute IS NOT NULL )
				OR   EXISTS (SELECT TOP 1 1 FROM @TBL_bundleAddonRows TRT WHERE SKU <> ''  AND IsFromAddon <> 1  AND TRT.RowID = ZOSCl.RowID   ) )
				AND ((ZOSCL.SKU = TBBR.SKU AND TBBR.RowID = ZOSCL.RowId) OR NOT EXISTS (SELECT TOP 1 1 FROM @TBL_bundleAddonRows RTR WHERE SKU <> '' AND IsFromAddon <> 1   AND RTR.RowID = ZOSCl.RowID) 
				
				)
				
					
		INSERT INTO ZnodeOmsPersonalizeCartItem( OmsSavedCartLineItemId, PersonalizeCode, PersonalizeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
			   SELECT DISTINCT 
			   b.OmsSavedCartLineItemId 
			  , SUBSTRING(q.Item, 1, CHARINDEX('~', q.Item)-1) AS Keyi, SUBSTRING(q.Item, CHARINDEX('~', q.Item)+1, 4000) AS Value, @UserId, @GetDate, @UserId, @GetDate
			   FROM @Tbl_SAvecartIds m  
			   LEFT JOIN @TBL_SaveCartConfigProduct AS b ON( b.RowId = m.RowId )
			   CROSS APPLY	dbo.Split( (SELECT TOP 1 PersonalisedAttribute FROM  @TBL_SavecartLineitems TRTR   WHERE TRTR.SKU = m.SKU AND TRTR.RowID = m.RowID ), ',' ) AS q
			   WHERE EXISTS (SELECT TOP 1 1 FROM  @TBL_SavecartLineitems TRTR   WHERE TRTR.SKU = m.SKU AND TRTR.RowID = m.RowID AND TRTR.PersonalisedAttribute IS NOT NULL )
			   ;
        
		
	SET @Status = 1;
	COMMIT TRAN InsertUpdateSaveCartLineItem;
	END TRY
	BEGIN CATCH

		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_InsertUpdateSaveCartLineItem @CartLineItemXML = '+CAST(@CartLineItemXML
 AS varchar(max))+',@UserId = '+CAST(@UserId AS varchar(50))+',@Status='+CAST(@Status AS varchar(10));

		SELECT 0 AS ID, CAST(0 AS bit) AS Status,ERROR_MESSAGE();
		ROLLBACK TRAN InsertUpdateSaveCartLineItem;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_InsertUpdateSaveCartLineItem', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[ZnodeReport_DashboardLowInventoryProductCount]...';


GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'ZnodeReport_DashboardLowInventoryProductCount')
BEGIN 
	DROP PROCEDURE ZnodeReport_DashboardLowInventoryProductCount
END 
GO
CREATE PROCEDURE [dbo].[ZnodeReport_DashboardLowInventoryProductCount]
(
	 @PortalId       VARCHAR(MAX)  = '',
	 @BeginDate      DATE          = NULL,
	 @EndDate        DATE          = NULL
)
AS
	/* Summary : -This Procedure is used to get the dashboard report on basis of portal 
	 Unit Testing 
	 EXEC ZnodeReport_DashboardLowInventoryProductCOunt
	 
	*/
 BEGIN 
	BEGIN TRY
	SET NOCOUNT ON
             DECLARE @TBL_ProtalIds TABLE(PortalId INT);
			 DECLARE @CountDetail INT = 0 
             --INSERT INTO @TBL_SKUs
             --       SELECT item
             --       FROM dbo.split(@SKUs, ',');
             INSERT INTO @TBL_ProtalIds
                    SELECT item
                    FROM dbo.split(@PortalId, ',');
             DECLARE @TLB_SKUSumInventory TABLE
             (SKU          VARCHAR(600),
              Quantity     NUMERIC(28, 6),
              ReOrderLevel NUMERIC(28, 6),
              PortalId     INT
             );
           
			 CREATE TABLE #TBL_AllwareHouseToportal 
             (WarehouseId       INT,
              PortalId          INT,
              PortalWarehouseId INT
			  
             );

			 CREATE INDEX idx_#TBL_AllwareHouseToportal ON #TBL_AllwareHouseToportal(WarehouseId)

             INSERT INTO #TBL_AllwareHouseToportal
                    SELECT ZPw.WarehouseId,
                           zp.PortalId,
                           zpw.PortalWarehouseId
                    FROM [dbo].ZnodePortal AS zp
                         INNER JOIN [ZnodePortalWarehouse] AS zpw ON(zpw.PortalId = zp.PortalId)
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM @TBL_ProtalIds AS tp
                        WHERE tp.PortalId = zp.PortalId OR @PortalId= ''
                    );

             INSERT INTO #TBL_AllwareHouseToportal
                    SELECT zpaw.WarehouseId,
                           a.PortalId,
                           zpaw.PortalWarehouseId
                    FROM [dbo].[ZnodePortalAlternateWarehouse] AS zpaw
                         INNER JOIN #TBL_AllwareHouseToportal AS a ON(zpaw.PortalWarehouseId = a.PortalWarehouseId);
  
			 
		   SELECT @CountDetail = COUNT(*)Over()
           FROM #TBL_AllwareHouseToportal AS zpw
                  INNER JOIN #TBL_AllwareHouseToportal AS ziw ON(ziw.WarehouseId = zpw.WarehouseId)
                  INNER JOIN [dbo].[ZnodeInventory] AS ZI ON(zi.WarehouseId = ziw.WarehouseId)
				  INNER JOIN dbo.ZnodePublishProductDetail ZPPD ON (ZPPD.SKU = ZI.SKU)
				  INNER JOIN ZnodeWareHouse ZW ON (ZW.WarehouseId = ziw.WarehouseId)
				  INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZPW.PortalId)
           GROUP BY ZI.SKU , zpw.PortalId,ZPPD.ProductName,ZW.WarehouseName,ZP.StoreName 
		   HAVING SUM(ISNULL(zi.Quantity, 0)) <= SUM(ISNULL(Zi.ReOrderLevel, 0))
		   
		   SELECT @CountDetail  ProductCount
		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC ZnodeReport_DashboardLowInventoryProductCount @PortalId = '+@PortalId+',@BeginDate='+CAST(@BeginDate AS VARCHAR(200))+',@EndDate='+CAST(@EndDate AS VARCHAR(200))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'ZnodeReport_DashboardLowInventoryProductCount',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		END CATCH

END
GO
PRINT N'Creating [dbo].[Znode_CheckUniqueFormBuilderAttributevalues]...';


GO

CREATE PROCEDURE [dbo].[Znode_CheckUniqueFormBuilderAttributevalues]
(
	  @AttributeCodeValues xml,
	  @FormBuilderId int= 0,
	  @PortalId      int=0
	  )
AS
 /*
	
Summary : Check existance of attribute code with values,Input parameter will be @AttributeCodeValues as a XML string 	
    	  Used Fn_GetDefaultLocaleId function to find locale default value 
  */
BEGIN
	BEGIN TRY
		SET NOCOUNT ON; 
		--Table variable to store string formated attribute code with their values concatenate through _
		DECLARE @DefaultLocaleId int= dbo.Fn_GetDefaultLocaleId()
		DECLARE @TBL_XMLParser TABLE
		( 
		 AttributeCode varchar(600), AttributeValue nvarchar(max), GlobalAttributeId int, AttributeName nvarchar(max)
		);
		INSERT INTO @TBL_XMLParser
		SELECT Tbl.Col.value( 'AttributeCode[1]', 'NVARCHAR(2000)' ) AttributeCode, 
		Tbl.Col.value( 'AttributeValues[1]', 'NVARCHAR(max)' ) AttributeValues,
		 zpa.GlobalAttributeId, 
		 zpal.AttributeName
		FROM @AttributeCodeValues.nodes( '//ArrayOfGlobalAttributeCodeValueModel/GlobalAttributeCodeValueModel' ) AS Tbl(Col)
		INNER JOIN ZnodeGlobalAttribute AS ZPA ON(ZPA.AttributeCode = Tbl.Col.value( 'AttributeCode[1]', 'NVARCHAR(2000)' ))
		LEFT JOIN ZnodeGlobalAttributeLocale AS ZPAL ON( ZPAL.GlobalAttributeId = ZPA.GlobalAttributeId AND  ZPAL.LocaleId = @DefaultLocaleId);

		DECLARE @AttriburteId TABLE
		( 
		AttributeName nvarchar(max)
		); 
		    -- check the attribute value is exists 
			INSERT INTO @AttriburteId 
			SELECT AttributeName FROM @TBL_XMLParser 
			AS TBXP WHERE EXISTS
			(
			SELECT TOP 1 1 
			FROM ZnodeFormBuilderSubmit ss
			inner join ZnodeFormBuilderGlobalAttributeValue AS ZPAV on ss.FormBuilderSubmitId=ZPAV.FormBuilderSubmitId
			INNER JOIN ZnodeFormBuilderGlobalAttributeValueLocale AS ZPAVL
			ON  ( ZPAVL.FormBuilderGlobalAttributeValueId = ZPAV.FormBuilderGlobalAttributeValueId)
			WHERE TBXP.GlobalAttributeId = ZPAV.GlobalAttributeId 
			AND ISNULL(RTRIM(LTRIM(zpavl.AttributeValue)), '') = TBXP.AttributeValue 
			AND ss.PortalId = @PortalId
			and ss.FormBuilderId=@FormBuilderId
			AND ZPAVL.AttributeValue <> ''
			)

		SELECT AttributeName FROM @AttriburteId;
	END TRY
	BEGIN CATCH
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_CheckUniqueFormBuilderAttributevalues @AttributeCodeValues = '+CAST(@AttributeCodeValues AS nvarchar(max))--+',@LocaleId='+CAST(@LocaleId AS varchar(50));
		EXEC Znode_InsertProcedureErrorLog 
			 @ProcedureName = 'Znode_CheckUniqueFormBuilderAttributevalues',
			 @ErrorInProcedure = @Error_procedure,
			 @ErrorMessage = @ErrorMessage,
			 @ErrorLine = @ErrorLine, 
			 @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_CheckUniqueGlobalAttributevalues]...';


GO

CREATE PROCEDURE [dbo].[Znode_CheckUniqueGlobalAttributevalues]
(     
	  @AttributeCodeValues xml,
	  @EntityType nvarchar(100), 
	  @EntityValueId int= 0, 
	  @LocaleId int)
AS
 /*
	
Summary : Check existance of attribute code with values,Input parameter will be @AttributeCodeValues as a XML string 	
    	  Used Fn_GetDefaultLocaleId function to find locale default value 
    	
Unit testing 
1. For Global Product Attribute
begin tran 
Exec [Znode_CheckUniqueAttributevalues] @AttributeCodeValues = '' ,@IsCategory=  0 , @LocaleID =1 ,@ProductId = 1
rollback tran
2. For Global Category Attribute 
begin tran
Exec [Znode_CheckUniqueAttributevalues] @AttributeCodeValues = '' ,@IsCategory=  1 , @LocaleID =1,@CategoryId = 1
rollback tran    
*/
BEGIN
	BEGIN TRY
		SET NOCOUNT ON; 
		 Declare @TableName nvarchar(200) ,@SQL nvarchar(max) ,@ColumnName Nvarchar(2000)
		--Table variable to store string formated attribute code with their values concatenate through _
		DECLARE @DefaultLocaleId int= dbo.Fn_GetDefaultLocaleId()
		Select @TableName=TableName
			from ZnodeGlobalEntity
			Where EntityName =@EntityType
			Set @ColumnName= replace(+replace(@TableName,'Znode',''),'GlobalAttributeValue','')
        DECLARE @TBL_Mappingvalues TABLE
		( 
		  AttributeValue nvarchar(max), GlobalAttributeId int,EntityValueId int 
		);
		DECLARE @TBL_XMLParser TABLE
		( 
		 AttributeCode varchar(600), AttributeValue nvarchar(max), GlobalAttributeId int, AttributeName nvarchar(max)
		);
		INSERT INTO @TBL_XMLParser
		SELECT Tbl.Col.value( 'AttributeCode[1]', 'NVARCHAR(2000)' ) AS AttributeCode, Tbl.Col.value( 'AttributeValues[1]', 'NVARCHAR(max)' ) AS AttributeValues, zpa.GlobalAttributeId, zpal.AttributeName
		FROM @AttributeCodeValues.nodes( '//ArrayOfGlobalAttributeCodeValueModel/GlobalAttributeCodeValueModel' ) AS Tbl(Col)
		INNER JOIN ZnodeGlobalAttribute AS ZPA ON(ZPA.AttributeCode = Tbl.Col.value( 'AttributeCode[1]', 'NVARCHAR(2000)' ))
		LEFT JOIN ZnodeGlobalAttributeLocale AS ZPAL ON( ZPAL.GlobalAttributeId = ZPA.GlobalAttributeId AND  ZPAL.LocaleId = @DefaultLocaleId);

		DECLARE @AttriburteId TABLE
		( 
		AttributeName nvarchar(max)
		); 
		-- if attribute name in table then it exists otherwise its unique
		BEGIN 

		     	if @TableName is not null
			Begin
		    	Set @SQL =' Select zpavl.AttributeValue, ZPAV.GlobalAttributeId ,ZPAV.'
				         +@ColumnName+'Id 
						from [dbo].['+@TableName+'] ZPAV
						INNER JOIN [dbo].['+@TableName+'Locale]  AS ZPAVL
						ON( ZPAVL.'+@ColumnName+'GlobalAttributeValueId = ZPAV.'+@ColumnName+'GlobalAttributeValueId AND ZPAVL.LocaleId IN('+convert( nvarchar(100),@LocaleId )+' , '+convert( nvarchar(100), @DefaultLocaleId)+' ))
						WHERE ZPAVL.AttributeValue <> '''' '
				   Begin Try
					  insert into @TBL_Mappingvalues
					   EXEC SP_EXECUTESQl  @SQL
				   End Try
					Begin Catch
					select @SQL
					End  Catch;
			end 

		    -- check the attribute value is exists 
			INSERT INTO @AttriburteId 
			SELECT AttributeName FROM @TBL_XMLParser AS TBXP 
			WHERE EXISTS
			(
			SELECT TOP 1 1 FROM @TBL_Mappingvalues a
			WHERE TBXP.GlobalAttributeId = a.GlobalAttributeId 
			AND ISNULL(RTRIM(LTRIM(a.AttributeValue)), '') = TBXP.AttributeValue 
			AND a.EntityValueId <> @EntityValueId
			); 
		END;
		
		SELECT AttributeName FROM @AttriburteId;
	END TRY
	BEGIN CATCH
		--DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_CheckUniqueAttributeValues @AttributeCodeValues = '+CAST(@AttributeCodeValues AS nvarchar(max))+' ,@IsCategory='+CAST(@IsCategory AS varchar(100))+' ,@CategoryId= '+CAST(@CategoryId AS varchar(50))+',@ProductId='+CAST(@ProductId AS varchar(50))+',@LocaleId='+CAST(@LocaleId AS varchar(50));
		--EXEC Znode_InsertProcedureErrorLog 
		--	 @ProcedureName = 'Znode_CheckUniqueAttributeValues',
		--	 @ErrorInProcedure = @Error_procedure,
		--	 @ErrorMessage = @ErrorMessage,
		--	 @ErrorLine = @ErrorLine, 
		--	 @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_DeleteFormBuilder]...';


GO
-- EXEC Znode_DeleteFormBuilder 256 ,1 

CREATE PROCEDURE [dbo].[Znode_DeleteFormBuilder](
       @FormBuilderId VARCHAR(300) ,
	  @Status BIT OUT)
AS 
    -----------------------------------------------------------------------------
    --Summary:  Remove GlobalAttribute still in used 
    --		   	
    --          
    --Unit Testing   

    ----------------------------------------------------------------------------- 


     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 --Declare @Status bit=0
             BEGIN TRAN A;
             DECLARE @DeleteFormBuilderId TABLE (
                                              FormBuilderId INT
                                              );
             INSERT INTO @DeleteFormBuilderId
                    SELECT Item
                    FROM dbo.split ( @FormBuilderId , ','
                                   ) AS a 
					INNER JOIN ZnodeFormBuilder AS B ON ( a.item = b.FormBuilderId )
					Where not exists(  Select 1 
					from ZnodeFormBuilderSubmit dd
					where dd.FormBuilderId =b.FormBuilderId)
                   
				   Delete From ZnodeFormBuilderAttributeMapper
				   where  FormBuilderId in (Select FormBuilderId from @DeleteFormBuilderId)

				   Delete From ZnodeFormBuilder
				   where  FormBuilderId in (Select FormBuilderId from @DeleteFormBuilderId)
            
             IF ( SELECT COUNT(1)
                  FROM @DeleteFormBuilderId
                ) = ( SELECT COUNT(1)
                      FROM dbo.split ( @FormBuilderId , ','
                                     ) AS a
                    )
                 BEGIN
                    SELECT 1 AS ID,
                            CAST(1 AS BIT) AS [Status];
                     SET @Status = 1;
                 END;
             ELSE
                 BEGIN
                      SELECT 0 AS ID,
                            CAST(0 AS BIT) AS [Status];
                     SET @Status = 0;
                 END;
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT 0 AS ID , CAST(0 AS BIT) AS Status;
             SELECT ERROR_MESSAGE() , ERROR_LINE() , ERROR_PROCEDURE();
             ROLLBACK TRAN A;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_DeleteGlobalAttribute]...';


GO
-- EXEC Znode_DeleteGlobalAttribute 256 ,1 

CREATE PROCEDURE [dbo].[Znode_DeleteGlobalAttribute](
       @GlobalAttributeId VARCHAR(300) = NULL ,
       @Status         INT OUT)
AS 
    -----------------------------------------------------------------------------
    --Summary:  Remove GlobalAttribute still in used 
    --		   	
    --          
    --Unit Testing   
	--Begin Transaction 
		--DECLARE @Status INT  EXEC Znode_DeleteGlobalAttribute @GlobalAttributeId = '59,60,61,62' ,@Status=@Status OUT  SELECT @Status
		--select * from ZnodeGlobalAttributeValue where GlobalAttributeId in (59,60,61,62)
		--select * from ZnodeGlobalAttribute where AttributeCode in ( 'SpecValue','TempSettings','UPCcode', 'ratest') 	
	--Rollback Transaction 
    ----------------------------------------------------------------------------- 


     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             BEGIN TRAN A;
             DECLARE @DeletdAttributeId TABLE (
                                              GlobalAttributeId INT
                                              );
             INSERT INTO @DeletdAttributeId
                    SELECT Item
                    FROM dbo.split ( @GlobalAttributeId , ','
                                   ) AS a 
					INNER JOIN ZnodeGlobalAttribute AS B ON ( a.item = b.GlobalAttributeId )
					Where not exists(  Select 1 
					from ZnodeGlobalAttributeGroupMapper dd
					where dd.GlobalAttributeId =b.GlobalAttributeId)
                   
             DELETE FROM ZnodeGlobalAttributeLocale
             WHERE EXISTS ( SELECT 1
                            FROM @DeletdAttributeId AS sd
                            WHERE sd.GlobalAttributeId = ZnodeGlobalAttributeLocale.GlobalAttributeId
                          );
             DELETE FROM ZnodeGlobalAttributeValidation
             WHERE EXISTS ( SELECT 1
                            FROM @DeletdAttributeId AS sd
                            WHERE sd.GlobalAttributeId = ZnodeGlobalAttributeValidation.GlobalAttributeId
                          );

			 DELETE FROM ZnodeGlobalAttributeValueLocale 
             WHERE EXISTS ( SELECT 1
                            FROM @DeletdAttributeId AS sd Inner join ZnodeGlobalAttributeValue AS zpav ON sd.GlobalAttributeId=zpav.GlobalAttributeId
                            WHERE zpav.GlobalAttributeValueId = ZnodeGlobalAttributeValueLocale.GlobalAttributeValueId);

             DELETE FROM ZnodeGlobalAttributeValue
             WHERE EXISTS ( SELECT 1
                            FROM @DeletdAttributeId AS sd
                            WHERE sd.GlobalAttributeId = ZnodeGlobalAttributeValue.GlobalAttributeId
                          );
			 DELETE FROM ZnodeGlobalAttributeDefaultValueLocale
             WHERE EXISTS ( SELECT 1
                            FROM ZnodeGlobalAttributeDefaultValue
                            WHERE EXISTS ( SELECT 1
                                           FROM @DeletdAttributeId AS sd
                                           WHERE sd.GlobalAttributeId = ZnodeGlobalAttributeDefaultValue.GlobalAttributeId
                                         )
                                  AND
                                  ZnodeGlobalAttributeDefaultValueLocale.GlobalAttributeDefaultValueId = ZnodeGlobalAttributeDefaultValue.GlobalAttributeDefaultValueId
                          );
           
			 DELETE FROM ZnodeGlobalAttributeDefaultValue
             WHERE EXISTS ( SELECT 1
                            FROM @DeletdAttributeId AS sd
                            WHERE sd.GlobalAttributeId = ZnodeGlobalAttributeDefaultValue.GlobalAttributeId
                          );
						  
             DELETE FROM ZnodeGlobalAttribute
             WHERE EXISTS ( SELECT 1
                            FROM @DeletdAttributeId AS sd
                            WHERE sd.GlobalAttributeId = ZnodeGlobalAttribute.GlobalAttributeId
                          );
             IF ( SELECT COUNT(1)
                  FROM @DeletdAttributeId
                ) = ( SELECT COUNT(1)
                      FROM dbo.split ( @GlobalAttributeId , ','
                                     ) AS a
                    )
                 BEGIN
                     SELECT 1 AS ID , CAST(1 AS BIT) AS Status;
                 END;
             ELSE
                 BEGIN
                     SELECT 0 AS ID , CAST(0 AS BIT) AS Status;
                 END;
             SET @Status = 1;
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT 0 AS ID , CAST(0 AS BIT) AS Status;
             SELECT ERROR_MESSAGE() , ERROR_LINE() , ERROR_PROCEDURE();
             SET @Status = 0;
             ROLLBACK TRAN A;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_DeleteGlobalAttributeGroup]...';


GO
CREATE PROCEDURE [dbo].[Znode_DeleteGlobalAttributeGroup]
( @GlobalAttributeGroupId VARCHAR(2000),
  @Status                BIT OUT,
  @IsDebug bit = 0)
AS 
   /*
     Summary: Remove attribute group with details from child tables
     Before delete check is not system defined group or is not associated with any family or attribute 
     output dataset contain the status if passed @GlobalAttributegroupedId all ids are deleted then this will true other wise false 
     dbo.Split function use to make comma separeted data in table rows 
     Delete table sequence 
     1.[ZnodeGlobalAttributeGroupMapper]
     2.[ZnodeGlobalAttributeGroupLocale]
     3.[ZnodeGlobalAttributeGroup]
     Unit Testing
	 begin tran   
     EXEC ZNode_DeleteGlobalAttributeGroup 15,1
     rollback tran
  */
     BEGIN
         BEGIN TRY
             BEGIN TRAN DeleteAttributeGroup;
			 -- to hold the group ids
             DECLARE @TBL_DeletedGroupedId TABLE(GlobalAttributeGroupId INT); 
             INSERT INTO @TBL_DeletedGroupedId(GlobalAttributeGroupId)
                    SELECT Item
                    FROM  dbo.Split(@GlobalAttributeGroupId, ',') 
					Where NOT EXISTS ( SELECT TOP 1 1
                                       FROM ZnodeGlobalGroupEntityMapper AS c
                                       WHERE c.GlobalAttributeGroupId = item
                                     )
                    
            DELETE FROM ZnodeGlobalGroupEntityMapper
			WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletedGroupedId AS a
                 WHERE a.GlobalAttributeGroupId = ZnodeGlobalGroupEntityMapper.GlobalAttributeGroupId
             );

             DELETE FROM [dbo].[ZnodeGlobalAttributeGroupMapper]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletedGroupedId AS a
                 WHERE a.GlobalAttributeGroupId = ZnodeGlobalAttributeGroupMapper.GlobalAttributeGroupId
             );
             DELETE FROM [dbo].[ZnodeGlobalAttributeGroupLocale]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletedGroupedId AS a
                 WHERE a.GlobalAttributeGroupId = ZnodeGlobalAttributeGroupLocale.GlobalAttributeGroupId
             );
             DELETE FROM [dbo].[ZnodeGlobalAttributeGroup]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletedGroupedId AS a
                 WHERE a.GlobalAttributeGroupId = ZnodeGlobalAttributeGroup.GlobalAttributeGroupId
             );
             IF
             (
                 SELECT COUNT(1)
                 FROM @TBL_DeletedGroupedId
             ) =
             (   -- check statement with counts if equal then data set return true else return false
                 SELECT COUNT(1)
                 FROM Split(@GlobalAttributeGroupId, ',')
             )   
                 BEGIN
                     SET @Status = 1;
                     SELECT 1 AS ID,
                            CAST(1 AS BIT) AS [Status];
                 END;
             ELSE
                 BEGIN
                     SET @Status = 0;
                     SELECT 1 AS ID,
                            CAST(0 AS BIT) AS [Status];
                 END;
             COMMIT TRAN DeleteAttributeGroup;
         END TRY
         BEGIN CATCH
		    -- SELECT ERROR_MESSAGE()
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC ZNode_DeleteGlobalAttributeGroup @GlobalAttributegroupedId = '+@GlobalAttributeGroupId+',@Status='+CAST(@Status AS VARCHAR(50));
             SELECT 1 AS ID,
                    CAST(0 AS BIT) AS [Status];
             SET @Status = 0;
             ROLLBACK TRAN DeleteAttributeGroup;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'ZNode_DeleteGlobalAttributeGroup',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_DeleteGlobalDefaultAttributeValues]...';


GO
CREATE PROCEDURE [dbo].[Znode_DeleteGlobalDefaultAttributeValues](
       @GlobalAttributeDefaultValueId VARCHAR(300) ,
       @Status                     BIT OUT)
AS
/*
Summary: This Procedure is used to delete Product Attribute default value
Unit Testing:
EXEC Znode_DeleteGlobalDefaultAttributeValues '108',0

*/
     BEGIN
         BEGIN TRAN;
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @DeletedValues TABLE (
                                          GlobalAttributeDefaultValueId INT,
										  GlobalAttributeId    int
                                          );
             INSERT INTO @DeletedValues
                    SELECT Item,c.GlobalAttributeId
                    FROM dbo.Split ( @GlobalAttributeDefaultValueId , ','
                                   ) AS a INNER JOIN ZnodeGlobalAttributeDefaultValue AS b ON ( b.GlobalAttributeDefaultValueId = a.item )
                                          INNER JOIN ZnodeGlobalAttribute AS c ON ( c.GlobalAttributeId = b.GlobalAttributeId )
                    WHERE 
					
                          NOT EXISTS ( SELECT TOP 1 1
                                       FROM ZnodeGlobalAttributeValue AS d
                                       WHERE b.GlobalAttributeDefaultValueId = d.GlobalAttributeDefaultValueId
                                     )
					and dbo.[Fn_CheckGlobalAttributeTransactionUsed]('GlobalAttributeDefaultValue',a.Item)=0

             DELETE FROM ZnodeGlobalAttributeDefaultValueLocale
             WHERE EXISTS ( SELECT TOP 1 1
                            FROM @DeletedValues AS a
                            WHERE a.GlobalAttributeDefaultValueId = ZnodeGlobalAttributeDefaultValueLocale.GlobalAttributeDefaultValueId
                          );
             DELETE FROM ZnodeGlobalAttributeDefaultValue
             WHERE EXISTS ( SELECT TOP 1 1
                            FROM @DeletedValues AS a
                            WHERE a.GlobalAttributeDefaultValueId = ZnodeGlobalAttributeDefaultValue.GlobalAttributeDefaultValueId
                          );
             
			 update aa
			 Set aa.IsActive=0
			 from ZnodeGlobalAttribute aa
			 inner join View_ZnodeGlobalAttribute vv on vv.GlobalAttributeId=aa.GlobalAttributeId
			 and vv.GroupAttributeType='Select'
			 WHere EXISTS ( SELECT TOP 1 1
                            FROM @DeletedValues AS a
                            WHERE a.GlobalAttributeId = aa.GlobalAttributeId
                          )
			and not EXISTS ( SELECT TOP 1 1
                            FROM ZnodeGlobalAttributeDefaultValue AS a
                            WHERE a.GlobalAttributeId = aa.GlobalAttributeId
                          )


             IF ( SELECT COUNT(1)
                  FROM @DeletedValues
                ) = ( SELECT COUNT(1)
                      FROM dbo.split ( @GlobalAttributeDefaultValueId , ','
                                     )
                    )
                 BEGIN
                     SELECT 1 AS ID , CAST(1 AS BIT) AS Status;
                 END;
             ELSE
                 BEGIN
                     SELECT 0 AS ID , CAST(0 AS BIT) AS Status;
                 END;
             SET @Status = 1;
             COMMIT TRAN;
         END TRY
         BEGIN CATCH
            
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_DeleteGlobalDefaultAttributeValues @GlobalAttributeDefaultValueId = '+@GlobalAttributeDefaultValueId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		     ROLLBACK TRAN;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_DeleteGlobalDefaultAttributeValues',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
     END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_DeletePimDownloadableProductKey]...';


GO
CREATE PROCEDURE [dbo].[Znode_DeletePimDownloadableProductKey]
( @PimDownloadableProductKeyId VARCHAR(2000),
  @Status           BIT OUT)
AS 
/*  
     Summary : Remove content page details with their referance data 
			   Here complete delete the PimDownloadableProductKeys and their references without any check  
			   If passed @CMSPimDownloadableProductKeyIds are matched with deleted count then data set return true other wise false 
			   dbo.Split function use to make comma separeted data in table rows 
			   1 ZnodeCMSPimDownloadableProductKeysProfile
			   2 ZnodeCMSPimDownloadableProductKeysLocale
			   3 ZnodeCMSPimDownloadableProductKeyGroupMapping
			   4 ZnodeCMSSEODetail
			   5 ZnodeCMSPimDownloadableProductKeys
     Unit Testing 
	 begin tran
     DEclare @Status bit 
     EXEC Znode_DeletePimDownloadableProductKey  29 ,@Status =@Status OUT 
	 rollback tran
       
    */
	 BEGIN
         BEGIN TRAN DeletePimDownloadableProductKey;
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @TBL_DeletePimDownloadableProductKey TABLE(PimDownloadableProductKeysId INT);  -- table holds the PimDownloadableProductKeysId id 
             DECLARE @IsUsed BIT =0
			 INSERT INTO @TBL_DeletePimDownloadableProductKey
                    SELECT a.PimDownloadableProductKeyId
                    FROM [dbo].[ZnodePimDownloadableProductKey] AS a
                         INNER JOIN dbo.Split(@PimDownloadableProductKeyId, ',') AS b ON(a.PimDownloadableProductKeyId = b.Item) -- dbo.Split function use to make ',' separeted data in table rows 
					WHERE a.IsUsed=@IsUsed

			 DELETE FROM [ZnodePimDownloadableProductKey]
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM @TBL_DeletePimDownloadableProductKey AS TBDCP
                 WHERE TBDCP.PimDownloadableProductKeysId = [ZnodePimDownloadableProductKey].PimDownloadableProductKeyId
             );
			 IF
             (
                 SELECT COUNT(1)
                 FROM @TBL_DeletePimDownloadableProductKey
             ) =
             (   -- if count are equal then  dataset status are return true other wise false 
                 SELECT COUNT(1)
                 FROM dbo.Split(@PimDownloadableProductKeyId, ',')
             ) 
                 BEGIN
                     SELECT 1 AS ID,
                            CAST(1 AS BIT) AS [Status];
                     SET @Status = 1;
                 END;
             ELSE
                 BEGIN
                     SELECT 0 AS ID,
                            CAST(0 AS BIT) AS [Status];
                     SET @Status = 0;
                 END;
             COMMIT TRAN DeletePimDownloadableProductKey;
         END TRY
         BEGIN CATCH
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_DeletePimDownloadableProductKey @CMSPimDownloadableProductKeyId = '+@PimDownloadableProductKeyId+',@Status='+CAST(@Status AS VARCHAR(50));
             SET @Status = 0;
             SELECT 0 AS ID,
                    CAST(0 AS BIT) AS [Status];
             ROLLBACK TRAN DeletePimDownloadableProductKey;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_DeletePimDownloadableProductKey',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetAccountGlobalAttributeValue]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetAccountGlobalAttributeValue]
(
    @EntityName       nvarchar(200) = 0,
    @GlobalEntityValueId   INT = 0--,
 --   @LocaleId       INT = 0,
	--@GlobalEnt
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and EntityValue attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC [Znode_GetGlobalEntityAttributeValue] 'Store',1
	 ROLLBACK TRAN

*/	 
     BEGIN
 BEGIN TRY
 declare @EntityValue nvarchar(200)

  DECLARE @V_MediaServerThumbnailPath VARCHAR(4000);
          SET @V_MediaServerThumbnailPath =
         (
             SELECT URL+ZMSM.ThumbnailFolderName+'/'
             FROM ZnodeMediaConfiguration ZMC 
			 INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
		     WHERE IsActive = 1 
         );


 Select @EntityValue=Name  from ZnodeAccount
 Where AccountId=@GlobalEntityValueId

            Declare	@EntityAttributeList as	table  (GlobalEntityId int,EntityName nvarchar(300),EntityValue nvarchar(max),
			GlobalAttributeGroupId int,GlobalAttributeId int,AttributeTypeId int,AttributeTypeName nvarchar(300),
			 AttributeCode nvarchar(300) ,IsRequired bit,IsLocalizable bit,AttributeName  nvarchar(300) , HelpDescription nvarchar(max)
			) 
			 
			Declare @EntityAttributeValidationList  as	table  
			( GlobalAttributeId int, ControlName nvarchar(300), ValidationName nvarchar(300),SubValidationName nvarchar(300),
			 RegExp nvarchar(300), ValidationValue nvarchar(300),IsRegExp Bit)

			Declare	@EntityAttributeValueList as	table  (GlobalAttributeId int,AttributeValue nvarchar(max),
			GlobalAttributeValueId int,GlobalAttributeDefaultValueId int,AttributeDefaultValueCode nvarchar(300),
			AttributeDefaultValue nvarchar(300),
			MediaId int,MediaPath nvarchar(300) )



			Declare	@EntityAttributeDefaultValueList as	table  (GlobalAttributeDefaultValueId int,GlobalAttributeId int,
			AttributeDefaultValueCode nvarchar(300),AttributeDefaultValue nvarchar(300),RowId int,IsEditable bit,DisplayOrder int )


			
	insert into @EntityAttributeList
		(	GlobalEntityId ,EntityName ,EntityValue ,
		GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
		AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription  ) 
		SELECT qq.GlobalEntityId,qq.EntityName,@EntityValue EntityValue,ww.GlobalAttributeGroupId,
		c.GlobalAttributeId,c.AttributeTypeId,q.AttributeTypeName,c.AttributeCode,c.IsRequired,
		c.IsLocalizable,f.AttributeName,c.HelpDescription
     FROM dbo.ZnodeGlobalEntity AS qq
          INNER JOIN dbo.ZnodeGlobalGroupEntityMapper AS w ON qq.GlobalEntityId = w.GlobalEntityId
		  INNER JOIN dbo.ZnodeGlobalAttributeGroupMapper AS ww ON ww.GlobalAttributeGroupId = w.GlobalAttributeGroupId
          INNER JOIN dbo.ZnodeGlobalAttribute AS c ON ww.GlobalAttributeId = c.GlobalAttributeId
          INNER JOIN dbo.ZnodeAttributeType AS q ON c.AttributeTypeId = q.AttributeTypeId
          INNER JOIN dbo.ZnodeGlobalAttributeLocale AS f ON c.GlobalAttributeId = f.GlobalAttributeId
		  Where qq.EntityName=@EntityName


		  INSERT INTO @EntityAttributeValidationList
		  (GlobalAttributeId,ControlName , ValidationName ,SubValidationName ,
		RegExp, ValidationValue,IsRegExp)

		 Select aa.GlobalAttributeId,i.ControlName,i.Name AS ValidationName,j.ValidationName AS SubValidationName,
		j.RegExp,k.Name AS ValidationValue,CAST(CASE WHEN j.RegExp IS NULL THEN 0 ELSE 1 END AS BIT) AS IsRegExp
		
		fROM @EntityAttributeList aa
		  inner  JOIN dbo.ZnodeGlobalAttributeValidation AS k ON k.GlobalAttributeId = aa.GlobalAttributeId
          inner  JOIN dbo.ZnodeAttributeInputValidation AS i ON k.InputValidationId = i.InputValidationId
          LEFT  JOIN dbo.ZnodeAttributeInputValidationRule AS j ON k.InputValidationRuleId = j.InputValidationRuleId

		  insert into @EntityAttributeValueList
		  (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeValue ,MediaId,MediaPath)
		  Select GlobalAttributeId,aa.AccountGlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
		  case when bb.MediaPath is not null then  @V_MediaServerThumbnailPath+bb.MediaPath--+'~'+convert(nvarchar(10),bb.MediaId) 
		  else bb.AttributeValue end,		  
		  bb.MediaId,bb.MediaPath
		  from  dbo.ZnodeAccountGlobalAttributeValue aa
		   inner join ZnodeAccountGlobalAttributeValueLocale bb ON bb.AccountGlobalAttributeValueId = aa.AccountGlobalAttributeValueId 
		  Where  AccountId=@GlobalEntityValueId

		

		  

		  update aa
		  Set AttributeDefaultValueCode= h.AttributeDefaultValueCode,
              AttributeDefaultValue=g.AttributeDefaultValue,
			  GlobalAttributeDefaultValueId=g.GlobalAttributeDefaultValueId,
			  AttributeValue=case when aa.AttributeValue is  null then h.AttributeDefaultValueCode else aa.AttributeValue end
		  from  @EntityAttributeValueList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeDefaultValueId = aa.GlobalAttributeDefaultValueId                                       
          inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
          
		  insert into @EntityAttributeDefaultValueList
		  (GlobalAttributeDefaultValueId,GlobalAttributeId,AttributeDefaultValueCode,
			AttributeDefaultValue ,RowId ,IsEditable ,DisplayOrder )
		  Select  h.GlobalAttributeDefaultValueId, aa.GlobalAttributeId,h.AttributeDefaultValueCode,g.AttributeDefaultValue,0,ISNULL(h.IsEditable, 1),
		  h.DisplayOrder
		  from  @EntityAttributeList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeId = aa.GlobalAttributeId
          inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
		  
		 
			if not exists (Select 1 from @EntityAttributeList )
			Begin
			insert into @EntityAttributeList
			(	GlobalEntityId ,EntityName ,EntityValue ,
			GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
			AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription  ) 
			SELECT qq.GlobalEntityId,qq.EntityName,@EntityValue EntityValue,0 GlobalAttributeGroupId,
			0 GlobalAttributeId,0 AttributeTypeId,''AttributeTypeName,''AttributeCode,0 IsRequired,
			0 IsLocalizable,'' AttributeName,'' HelpDescription
			FROM dbo.ZnodeGlobalEntity AS qq
			 Where qq.EntityName=@EntityName 
			End
				

			SELECT GlobalEntityId,EntityName,EntityValue,GlobalAttributeGroupId,
			AA.GlobalAttributeId,AttributeTypeId,AttributeTypeName,AttributeCode,IsRequired,
			IsLocalizable,AttributeName,ControlName,ValidationName,SubValidationName,RegExp,
			ValidationValue,cast(isnull(IsRegExp,0) as bit)  IsRegExp,
			HelpDescription,AttributeValue,GlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
			aab.AttributeDefaultValueCode,
			aab.AttributeDefaultValue,isnull(aab.RowId,0)   RowId,cast(isnull(aab.IsEditable,0) as bit)   IsEditable
			,bb.MediaId
			fROM @EntityAttributeList AA				
			left join @EntityAttributeDefaultValueList aab on aab.GlobalAttributeId=AA.GlobalAttributeId	
			left join @EntityAttributeValidationList vl on vl.GlobalAttributeId=aa.GlobalAttributeId			
			LEFT JOIN @EntityAttributeValueList BB ON BB.GlobalAttributeId=AA.GlobalAttributeId		 
		    and ( (aab.GlobalAttributeDefaultValueId=bb.GlobalAttributeDefaultValueId	)
			or  ( bb.MediaId is not null and isnull(vl.ValidationName,'')='IsAllowMultiUpload'  and bb.GlobalAttributeDefaultValueId is null )
			or  ( bb.MediaId is  null and  bb.GlobalAttributeDefaultValueId is null ))
			order by GlobalEntityId,GlobalAttributeGroupId,GlobalAttributeId,aab.DisplayOrder,aab.GlobalAttributeDefaultValueId

			SELECT 0 AS ID,CAST(1 AS BIT) AS Status;       
		  END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= null       			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		 
          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetGlobalEntityValueAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetAttributeDefaultValueLocaleNew_TansferId]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetAttributeDefaultValueLocaleNew_TansferId]
( @PimAttributeId TransferId ReadOnly,
  @LocaleId       INT          = 1)
AS 
/*
    Summary :- This Procedure is used to find the default value of attribute if not present for same locale then use the default value
    Unit Testing
    EXEC Znode_GetAttributeDefaultValueLocale
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
			 -- here collect the both locale data 
             SELECT   VIPDV.PimAttributeId,VIPDV.AttributeDefaultValueCode,VIPDV.IsEditable,VIPDVL.AttributeDefaultValue,VIPDVL.LocaleId,VIPDV.PimAttributeDefaultValueId,VIPDV.DisplayOrder
             
			 INTO #Cte_DefaultValueLocale
			 FROM [dbo].[ZnodePimAttributeDefaultValue] VIPDV
			 INNER JOIN [dbo].[ZnodePimAttributeDefaultValueLocale] VIPDVL ON (VIPDVL.PimAttributeDefaultValueId = VIPDV.PimAttributeDefaultValueId) 
             WHERE VIPDVL.LocaleId IN(@DefaultLocaleId, @LocaleId) 
             AND EXISTS
             (
                SELECT TOP 1 1
                FROM @PimAttributeId SP
                WHERE SP.id = VIPDV.PimAttributeId
             )

			 -- filter for first locale
             ;with Cte_DefaultValueFirstLocale
             AS (SELECT CTDVL.PimAttributeId,CTDVL.AttributeDefaultValueCode,CTDVL.IsEditable,CTDVL.AttributeDefaultValue,CTDVL.PimAttributeDefaultValueId,CTDVL.DisplayOrder
                 FROM #Cte_DefaultValueLocale CTDVL
                 WHERE LocaleId = @LocaleId	 
                ),

			 -- get data for second locale if not exists for firts locale 
             Cte_DefaultValueSecondLocale
             AS (SELECT CTDVFL.PimAttributeId,CTDVFL.AttributeDefaultValueCode,CTDVFL.IsEditable,CTDVFL.AttributeDefaultValue,CTDVFL.PimAttributeDefaultValueId,CTDVFL.DisplayOrder
                 FROM Cte_DefaultValueFirstLocale CTDVFL
                 UNION ALL
                 SELECT CTDVL.PimAttributeId,CTDVL.AttributeDefaultValueCode,CTDVL.IsEditable,CTDVL.AttributeDefaultValue,CTDVL.PimAttributeDefaultValueId,CTDVL.DisplayOrder
                 FROM #Cte_DefaultValueLocale CTDVL
                 WHERE LocaleId = @DefaultLocaleId 
                 AND NOT EXISTS
                  (
                      SELECT TOP 1 1
                      FROM Cte_DefaultValueFirstLocale CTDVFL
                      WHERE CTDVFL.PimAttributeDefaultValueId = CTDVL.PimAttributeDefaultValueId
                  ))

                  SELECT PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId
                  FROM Cte_DefaultValueSecondLocale;
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetAttributeDefaultValueLocale ,@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetAttributeDefaultValueLocale',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetFilterPimProductId]...';


GO

CREATE  PROCEDURE [dbo].[Znode_GetFilterPimProductId]
(
  @WhereClause XML 
 ,@PimProductId TransferId Readonly 
 ,@LocaleId   INT 
)
AS 
BEGIN 
SET NOCOUNT ON 

DECLARE  @DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleID()
		,@SQL NVARCHAR(max)
		,@InternalProductWhereClause NVARCHAR(max)

DECLARE @WorkingProcess INT = 0 

DECLARE @TBL_FilterClause TABLE (ID INT IDENTITY(1,1),AttributeValue NVARCHAR(max),AttributeCode NVARCHAr(max),PimAttributeId INT ,AttributeTypeName VARCHAR(300),AttributeCodeOrg VARCHAR(600))

DECLARE @WhereClauseXML XML = @WhereClause 


IF EXISTS (SELECT TOP 1 1 FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col) 
WHERE Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)')  LIKE  '% in (%')
BEGIN 
 SET @WorkingProcess = 1
 INSERT INTO @TBL_FilterClause (AttributeValue,AttributeCode,AttributeTypeName,PimAttributeId,AttributeCodeOrg)
SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeValue,ZTY.AttributeTypeName,ZPA.PimAttributeId,AttributeCode AttributeCodeOrg
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
LEFT JOIN  ZnodePimAttribute ZPA  ON ((Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)')  LIKE '%in (%' OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''','')) 
									= ZPA.AttributeCode ) AND IsCategory = 0 
AND IsShowOnGrid = 1   )
LEFT JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)

END 
ELSE 
BEGIN 

INSERT INTO @TBL_FilterClause (AttributeValue,AttributeCode,AttributeTypeName,PimAttributeId,AttributeCodeOrg)
SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeValue,ZTY.AttributeTypeName,ZPA.PimAttributeId,AttributeCode AttributeCodeOrg
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
INNER JOIN ZnodePimAttribute ZPA  ON (dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''','')) 
									= ZPA.AttributeCode )
INNER JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)
WHERE IsCategory = 0 
AND ( IsShowOnGrid = 1 OR IsConfigurable =1  ) 

END 



CREATE TABLE #TBL_PimProductId (PimProductId INT)
CREATE TABLE #TBL_PimProductIdDelete (PimProductId INT )

  INSERT INTO #TBL_PimProductId (PimProductId )
  SELECT Id 
  FROM @PimProductId

  SELECT ZPAV.PimProductId ,PimAttributeValueId 
			,ZPAV.CreatedDate,ZPAV.ModifiedDate,TBLA.AttributeCodeOrg AttributeCode
  INTO #TBL_AttributeValueId 
  FROM  ZnodePimAttributeValue ZPAV 
  INNER JOIN @TBL_FilterClause TBLA ON (TBLA.PimAttributeId = ZPAV.PimAttributeId)
  INNER JOIN #TBL_PimProductId YT ON (YT.PimProductId = ZPAV.PimProductId OR NOT EXISTS (SELECT TOP 1 1 #TBL_PimProductId))
IF @WorkingProcess =1 
BEGIN 
 DECLARE @PimAttributeId_in TransferId 

 INSERT INTO @PimAttributeId_in 
 SELECT PimAttributeId
 FROM  @TBL_FilterClause 
 WHERE AttributeTypeName IN ('Simple Select','Multi Select') 
 AND AttributeCode LIKE '%in (%'


 CREATE TABLE #TBL_AttributeDefaultValue_in ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue_in(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId_in, @LocaleId;
 
 DECLARE @WhereClauseInCom NVARCHAR(max) = (SELECT TOP 1 AttributeValue FROM @TBL_FilterClause WHERE AttributeCode LIKE '%in (%') 

SET @SQL = '
   ;With Cte_AttributeValue AS 
   (
   SELECT PimAttributeValueId 
   FROM ZnodePimAttributeValueLocale 
   WHERE AttributeValue '+@WhereClauseInCom+'
   UNION ALL 
   SELECT PimAttributeValueId 
   FROM ZnodePimProductAttributeTextAreaValue   
   WHERE AttributeValue '+@WhereClauseInCom+'
   UNION ALL 
   SELECT ZPADV.PimAttributeValueID 
   FROM ZnodePimProductAttributeDefaultValue ZPADV 
   INNER JOIN #TBL_AttributeDefaultValue_in TBL ON (TBL.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
   WHERE TBL.AttributeDefaultValue '+@WhereClauseInCom+'
   )
   
   SELECT PimProductId 
   FROM #TBL_AttributeValueId ZPAV 
   INNER JOIN  Cte_AttributeValue CTAC ON (CTAC.PimAttributeValueId = ZPAV.PimAttributeVaLueId )
   GROUP BY PimProductId
   '
   -- PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
   BEGIN
    INSERT INTO  #TBL_PimProductId (PimProductId)
	SELECT 0 
   END 
  DELETE  FROM @TBL_FilterClause WHERE AttributeCode LIKE '% in (%'

   DROP TABLE #TBL_AttributeDefaultValue_in
   SET @WorkingProcess  = 0 
END 



  IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeCode <> '' AND ISNULL(AttributeValue,'') = '')
  BEGIN 

   SET  @InternalProductWhereClause = STUFF( (  SELECT ' INNER JOIN #TBL_AttributeValueId AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' )'				
							FROM @TBL_FilterClause
							WHERE ISNULL(AttributeValue,'') = ''
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
   
   SET @SQL = ' 
				SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV '+@InternalProductWhereClause+' '+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimProductId 
			'
   PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   DELETE FROM @TBL_FilterClause WHERE ISNULL(AttributeValue,'') = ''
   IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
   BEGIN
    INSERT INTO  #TBL_PimProductId (PimProductId)
	SELECT 0 
   END 
  END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Simple Select','Multi Select') )
BEGIN
 DECLARE @PimAttributeId TransferId 

 INSERT INTO @PimAttributeId 
 SELECT PimAttributeId
 FROM  @TBL_FilterClause WHERE AttributeTypeName IN ('Simple Select','Multi Select') 

 CREATE TABLE #TBL_AttributeDefaultValue ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId, @LocaleId;
 
  IF @DefaultLocaleId = @LocaleID AND  @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = STUFF( (  SELECT ' INNER JOIN Cte_AttributeValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Simple Select','Multi Select')
							AND AttributeValue <> ''
							AND AttributeValue IS NOT NULL
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')

  SET @SQL = ' ;With Cte_AttributeValue AS 
			   (
	            SELECT TBLAV.PimAttributeValueId ,SUBSTRING((SELECT '',''+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = '+Cast(@localeId AS VARCHAR(200))+'
				FOR XML PATH('''') ),2,4000) AttributeValue
				    ,  '+Cast(@localeId AS VARCHAR(200))+' LocaleId,TBLAV.AttributeCode,TBLAV.PimProductId
				FROM #TBL_AttributeValueId TBLAV
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimAttributeValueId,TBLAV.AttributeCode,TBLAV.PimProductId
			   )
  
				SELECT  TBLAV.PimProductId
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'	GROUP BY TBLAV.PimProductId '
				
  END 
  ELSE IF  @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+'  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Simple Select','Multi Select')
							AND AttributeValue <> ''
							AND AttributeValue IS NOT NULL
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = '  			 
			   SELECT TBLAV.PimAttributeValueId,ZPAVL.PimAttributeDefaultValueId , ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimAttributeValueId ,TBLAV.PimProductId ORDER BY TBLAV.PimAttributeValueId ,TBLAV.PimProductId  ) RowId
			   INTO #temp_Table 
			   FROM #TBL_AttributeValueId TBLAV 
			   INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId)
			   WHERE (ZPAVL.LocaleId = '+Cast(@localeId AS VARCHAR(200))+' OR ZPAVL.LocaleId = '+Cast(@DefaultlocaleId AS VARCHAR(200))+')
				
				;with Cte_AttributeValue AS 
			   (
	            SELECT TBLAV.PimAttributeValueId ,SUBSTRING((SELECT '',''+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN #temp_Table  ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = CASE WHEN ZPAVL.RowId = 2 THEN '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  
				FOR XML PATH('''') ),2,4000) AttributeValue,TBLAV.AttributeCode ,TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimAttributeValueId,TBLAV.AttributeCode ,TBLAV.PimProductId 
			   )
  
				SELECT   TBLAV.PimProductId
				FROM  #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'	GROUP BY TBLAV.PimProductId '

  END 
   PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   DROP TABLE #TBL_AttributeDefaultValue
END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No') )
BEGIN  
   
  IF @DefaultLocaleId = @LocaleID AND @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN View_PimProducttextValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text','Number','Datetime')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
 
  SET @SQL = '	SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId   ) ' END 
				+' GROUP BY TBLAV.PimProductId '

  END 
  ELSE IF @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeDetails AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId = CASE WHEN ZPAVL'+CAST(ID AS VARCHAR(200))+'.RowId = 2 THEN  '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text','Number','Datetime')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = ' 
     ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.PimProductId,ZPAVL.AttributeValue,TBLAV.AttributeCode,ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimProductId,TBLAV.AttributeCode ORDER BY TBLAV.PimProductId,TBLAV.AttributeCode  ) RowId
	 FROM #TBL_AttributeValueId TBLAV 
	 INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId )
	 WHERE (LocaleId = '+Cast(@DefaultLocaleId AS Varchar(300))+' OR LocaleId = '+CAST(@LocaleId AS Varchar(300))+' )'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' AND EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END +'
	 ) 
	 SELECT  TBLAV.PimProductId 
  	 FROM #TBL_AttributeValueId TBLAV
	 '+@InternalProductWhereClause+'
	 GROUP BY TBLAV.PimProductId 
	 '
	 

  END 
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Text Area') )
BEGIN    
  IF @DefaultLocaleId = @LocaleID AND @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
								STUFF( (  SELECT ' INNER JOIN View_PimProductTextAreaValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text Area')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
 
  SET @SQL = '
              SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' GROUP BY TBLAV.PimProductId '
  END 
  ELSE IF @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeDetails AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId = CASE WHEN ZPAVL'+CAST(ID AS VARCHAR(200))+'.RowId = 2 THEN  '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text Area')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = ' 
     ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.PimProductId,TBLAV.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimProductId,TBLAV.AttributeCode ORDER BY TBLAV.PimProductId,TBLAV.AttributeCode  ) RowId
	 FROM #TBL_AttributeValueId TBLAV 
	 INNER JOIN ZnodePimProductAttributeTextAreaValue ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId )
	 WHERE (LocaleId = '+Cast(@DefaultLocaleId AS Varchar(300))+' OR LocaleId = '+CAST(@LocaleId AS Varchar(300))+' )
	 
	 ) 
	 SELECT  TBLAV.PimProductId 
  	 FROM #TBL_AttributeValueId TBLAV
	 '+@InternalProductWhereClause+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' 
							GROUP BY TBLAV.PimProductId 	
							'
   END 
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 
SET @SQL = '
 IF EXISTS ( SELECT TOP 1 1 FROM tempdb..sysobjects WHERE name = ''##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+''' )
  BEGIN 
   DROP TABLE ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+'
  END 
 CREATE TABLE ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+' (PimProductId INT )
 INSERT INTO  ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+'
 SELECT PimProductId 
 FROM #TBL_PimProductId
'
   EXEC (@SQL)
   DROP TABLE #TBL_PimProductId
   DROP TABLE #TBL_AttributeValueId
   DROP TABLE #TBL_PimProductIdDelete
 END
GO


GO
PRINT N'Creating [dbo].[Znode_GetFormBuilderGlobalAttributeValue]...';


GO
CREATE   PROCEDURE [dbo].[Znode_GetFormBuilderGlobalAttributeValue]
(
    @FormBuilderId  int=null,
    @UserId			int= null,
	@PortalId		int = null,
	@FormBuilderSubmitId int=null,
    @LocaleId       INT = 0
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and EntityValue attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC [Znode_GetFormBuilderGlobalAttributeValue_back] 1
	 ROLLBACK TRAN

*/	 
     BEGIN
 BEGIN TRY
 declare @EntityValue nvarchar(200),@FormCode nvarchar(200),@DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId()

 If isnull(@LocaleId,0) =0
 Begin
   Set @LocaleId =@DefaultLocaleId
 End 

 If isnull( @FormBuilderSubmitId,0) >0 
 Select @FormBuilderId=FormBuilderId
 From ZnodeFormBuilderSubmit
 Where FormBuilderSubmitId=@FormBuilderSubmitId

  DECLARE @V_MediaServerThumbnailPath VARCHAR(4000);
          SET @V_MediaServerThumbnailPath =
         (
             SELECT URL+ZMSM.ThumbnailFolderName+'/'
             FROM ZnodeMediaConfiguration ZMC 
			 INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
		     WHERE IsActive = 1 
         );
Declare	@AttributeList as	table (GlobalAttributeGroupId int,GlobalAttributeId int,AttributeGroupDisplayOrder int
,AttributeDisplayOrder int)

 Select @EntityValue=FormCode,@FormCode=FormCode
 from ZnodeFormBuilder
 Where FormBuilderId=@FormBuilderId

            Declare	@EntityAttributeList as	table  (GlobalEntityId int,EntityName nvarchar(300),EntityValue nvarchar(max),
			GlobalAttributeGroupId int,GlobalAttributeId int,AttributeTypeId int,AttributeTypeName nvarchar(300),
			 AttributeCode nvarchar(300) ,IsRequired bit,IsLocalizable bit,AttributeName  nvarchar(300) , HelpDescription nvarchar(max)
			,AttributeGroupDisplayOrder int,AttributeDisplayOrder int) 
			 
			Declare @EntityAttributeValidationList  as	table  
			( GlobalAttributeId int, ControlName nvarchar(300), ValidationName nvarchar(300),SubValidationName nvarchar(300),
			 RegExp nvarchar(300), ValidationValue nvarchar(300),IsRegExp Bit)

			Declare	@EntityAttributeValueList as	table  (GlobalAttributeId int,AttributeValue nvarchar(max),
			GlobalAttributeValueId int,GlobalAttributeDefaultValueId int,AttributeDefaultValueCode nvarchar(300),
			AttributeDefaultValue nvarchar(300),
			MediaId int,MediaPath nvarchar(300) )



			Declare	@EntityAttributeDefaultValueList as	table  (GlobalAttributeDefaultValueId int,GlobalAttributeId int,
			AttributeDefaultValueCode nvarchar(300),AttributeDefaultValue nvarchar(300),RowId int,IsEditable bit,DisplayOrder int )

			insert into @AttributeList
			 Select qq.GlobalAttributeGroupId,isnull(dd.GlobalAttributeId ,qq.GlobalAttributeId) ,qq.DisplayOrder,dd.AttributeDisplayOrder
			   from dbo.ZnodeFormBuilderAttributeMapper  qq
			   left join ZnodeGlobalAttributeGroupMapper dd on dd.GlobalAttributeGroupId=qq.GlobalAttributeGroupId
			   Where qq.FormBuilderId=@FormBuilderId
			
	insert into @EntityAttributeList
		(	GlobalEntityId ,EntityName ,EntityValue ,
		GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
		AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription ,AttributeGroupDisplayOrder,AttributeDisplayOrder ) 
		SELECT @FormBuilderId GlobalEntityId,'FormBuilder' EntityName,@EntityValue EntityValue,qq.GlobalAttributeGroupId,
		c.GlobalAttributeId,c.AttributeTypeId,q.AttributeTypeName,c.AttributeCode,c.IsRequired,
		c.IsLocalizable,null AttributeName,c.HelpDescription,qq.AttributeGroupDisplayOrder,qq.AttributeDisplayOrder
     FROM @AttributeList AS qq
          INNER JOIN dbo.ZnodeGlobalAttribute AS c ON qq.GlobalAttributeId = c.GlobalAttributeId
          INNER JOIN dbo.ZnodeAttributeType AS q ON c.AttributeTypeId = q.AttributeTypeId
  		  
		  update c
		  Set AttributeName=f.AttributeName
		  from  @EntityAttributeList c
		  INNER JOIN dbo.ZnodeGlobalAttributeLocale AS f ON c.GlobalAttributeId = f.GlobalAttributeId
		   where  f.LocaleId=@LocaleId 

		 if  @LocaleId !=@DefaultLocaleId
		 Begin
				update c
				Set AttributeName=f.AttributeName
				from  @EntityAttributeList c
				INNER JOIN dbo.ZnodeGlobalAttributeLocale AS f ON c.GlobalAttributeId = f.GlobalAttributeId
				Where c.AttributeName is null
				and f.LocaleId=@DefaultLocaleId 
		 End


		  INSERT INTO @EntityAttributeValidationList
		  (GlobalAttributeId,ControlName , ValidationName ,SubValidationName ,
		RegExp, ValidationValue,IsRegExp)

		 Select aa.GlobalAttributeId,i.ControlName,i.Name AS ValidationName,j.ValidationName AS SubValidationName,
		j.RegExp,k.Name AS ValidationValue,CAST(CASE WHEN j.RegExp IS NULL THEN 0 ELSE 1 END AS BIT) AS IsRegExp
		fROM @EntityAttributeList aa
		  inner  JOIN dbo.ZnodeGlobalAttributeValidation AS k ON k.GlobalAttributeId = aa.GlobalAttributeId
          inner  JOIN dbo.ZnodeAttributeInputValidation AS i ON k.InputValidationId = i.InputValidationId
          LEFT  JOIN dbo.ZnodeAttributeInputValidationRule AS j ON k.InputValidationRuleId = j.InputValidationRuleId

		  insert into @EntityAttributeValueList
		  (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeValue ,MediaId,MediaPath)
		  Select GlobalAttributeId,aa.FormBuilderGlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
		  case when bb.MediaPath is not null then  bb.MediaPath  else bb.AttributeValue end,		  
		  bb.MediaId,bb.MediaPath
		  from  dbo.ZnodeFormBuilderSubmit ss
		  inner join dbo.ZnodeFormBuilderGlobalAttributeValue aa on ss.FormBuilderSubmitId =aa.FormBuilderSubmitId
		  inner join ZnodeFormBuilderGlobalAttributeValueLocale bb ON bb.FormBuilderGlobalAttributeValueId = aa.FormBuilderGlobalAttributeValueId 
		  Where  ss.FormBuilderId=@FormBuilderId
		  and ss.FormBuilderSubmitId=@FormBuilderSubmitId		 

		  update aa
		  Set AttributeDefaultValueCode= h.AttributeDefaultValueCode,
         	  GlobalAttributeDefaultValueId=h.GlobalAttributeDefaultValueId,
			  AttributeValue=case when aa.AttributeValue is  null then h.AttributeDefaultValueCode else aa.AttributeValue end
		  from  @EntityAttributeValueList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeDefaultValueId = aa.GlobalAttributeDefaultValueId                                       
         
		  update h
		  Set AttributeDefaultValue=g.AttributeDefaultValue
		  from  @EntityAttributeValueList h
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
          where  g.LocaleId=@LocaleId 

		 if  @LocaleId !=@DefaultLocaleId
		 Begin
				update h
				Set AttributeDefaultValue=g.AttributeDefaultValue
				from  @EntityAttributeValueList h
				inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
                Where h.AttributeDefaultValue is null
				and g.LocaleId=@DefaultLocaleId 
		 End

		  
		  insert into @EntityAttributeDefaultValueList
		  (GlobalAttributeDefaultValueId,GlobalAttributeId,AttributeDefaultValueCode,
			AttributeDefaultValue ,RowId ,IsEditable ,DisplayOrder )
		  Select  h.GlobalAttributeDefaultValueId, aa.GlobalAttributeId,h.AttributeDefaultValueCode,null AttributeDefaultValue,0,ISNULL(h.IsEditable, 1),
		  h.DisplayOrder
		  from  @EntityAttributeList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeId = aa.GlobalAttributeId
          
		  update h
		  Set h.AttributeDefaultValue=g.AttributeDefaultValue
          from @EntityAttributeDefaultValueList h
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
		  Where g.LocaleId=@LocaleId 

		  if  @LocaleId !=@DefaultLocaleId
		 Begin
				  update h
				  Set h.AttributeDefaultValue=g.AttributeDefaultValue
				  from @EntityAttributeDefaultValueList h
				  inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
				  Where g.LocaleId=@DefaultLocaleId
				  and  h.AttributeDefaultValue is null 
		 End



		  if not exists (Select 1 from @EntityAttributeList )
			Begin
			insert into @EntityAttributeList
			(	GlobalEntityId ,EntityName ,EntityValue ,
			GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
			AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription  ) 
			SELECT 0 GlobalEntityId,'FormBuilder' EntityName,@EntityValue EntityValue,0 GlobalAttributeGroupId,
			0 GlobalAttributeId,0 AttributeTypeId,''AttributeTypeName,''AttributeCode,0 IsRequired,
			0 IsLocalizable,'' AttributeName,'' HelpDescription
			End

				

			SELECT  GlobalEntityId,EntityName,EntityValue,GlobalAttributeGroupId,
			AA.GlobalAttributeId,AttributeTypeId,AttributeTypeName,AttributeCode,IsRequired,
			IsLocalizable,AttributeName,ControlName,ValidationName,SubValidationName,RegExp,
			ValidationValue,cast(isnull(IsRegExp,0) as bit)  IsRegExp,
			HelpDescription,AttributeValue,GlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
			aab.AttributeDefaultValueCode,
			aab.AttributeDefaultValue,isnull(aab.RowId,0)   RowId,cast(isnull(aab.IsEditable,0) as bit)   IsEditable
			,bb.MediaId--,aa.AttributeGroupDisplayOrder,aa.AttributeDisplayOrder
			fROM @EntityAttributeList AA				
			left join @EntityAttributeDefaultValueList aab on aab.GlobalAttributeId=AA.GlobalAttributeId	
			left join @EntityAttributeValidationList vl on vl.GlobalAttributeId=aa.GlobalAttributeId			
			LEFT JOIN @EntityAttributeValueList BB ON BB.GlobalAttributeId=AA.GlobalAttributeId		 
		    and ( (aab.GlobalAttributeDefaultValueId=bb.GlobalAttributeDefaultValueId	)
			or  ( bb.MediaId is not null and isnull(vl.ValidationName,'')='IsAllowMultiUpload'  and bb.GlobalAttributeDefaultValueId is null )
			or  ( bb.MediaId is  null and  bb.GlobalAttributeDefaultValueId is null ))
			order by GlobalEntityId,AttributeGroupDisplayOrder,GlobalAttributeGroupId,aa.AttributeDisplayOrder, GlobalAttributeId,aab.DisplayOrder,aab.GlobalAttributeDefaultValueId


			--Select CMSWidgetsId,WidgetsKey,CMSMappingId,TypeOFMapping,FormBuilderId,
			--		FormTitle,ButtonText,IsTextMessage,TextMessage,RedirectURL 
			--from ZnodeCMSFormWidgetConfiguration
			--where FormBuilderId=@FormBuilderId

			SELECT 0 AS ID,CAST(1 AS BIT) AS Status;       
		  END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= null       			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		 
          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetGlobalEntityValueAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetFormBuilderList]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetFormBuilderList]
(   @WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT

)
AS 
   /* 
   SUMMARY : Stored Procedure to Get list of searchProfileid 
   Unit Testing:

   -- EXEC Znode_GetFormBuilderList @WhereClause = '',@RowsCount = 0
   
   
   	*/

     BEGIN
         BEGIN TRY

		 SET NOCOUNT ON 

		 DECLARE @SQL  NVARCHAR(max) 

		 
			DECLARE @TBL_FormBuilder TABLE (FormBuilderId INT,FormCode nvarchar(200), FormDescription nvarchar(200), RowId INT, CountNo INT)


		SET @SQL = '

		;With Cte_GetFormBuilderDetails 
		 AS     (

				SELECT  ZFB.FormBuilderId,ZFB.FormCode,ZFB.FormDescription
				FROM ZnodeFormBuilder ZFB
				--INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZFB.PortalId)
								
				)



				,Cte_GetFilterFormBuilder
				AS (
				SELECT FormBuilderId,FormCode,FormDescription,
				'+dbo.Fn_GetPagingRowId(@Order_BY,'FormBuilderId DESC')+',Count(*)Over() CountNo 
				FROM  Cte_GetFormBuilderDetails CGPTL 
				WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
						
				)
																								
				SELECT FormBuilderId,FormCode,FormDescription,RowId,CountNo
				FROM Cte_GetFilterFormBuilder
				'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
						
						
				INSERT INTO @TBL_FormBuilder(FormBuilderId,FormCode,FormDescription,RowId,CountNo)
				EXEC(@SQL)

				SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_FormBuilder ),0)
			
				SELECT FormBuilderId,FormCode,FormDescription
				FROM @TBL_FormBuilder


		
		 END TRY
		 BEGIN CATCH
			 DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetFormBuilder @WhereClause = '+CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetFormBuilder',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		 END CATCH
     END
GO
PRINT N'Creating [dbo].[Znode_GetFormBuilderSubmitList]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetFormBuilderSubmitList]
(   @WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT

)
AS 
   /* 
   SUMMARY : Stored Procedure to Get list of searchProfileid 
   Unit Testing:

   -- EXEC [Znode_GetFormBuilderSubmitList] @WhereClause = '',@RowsCount = 0
   
   
   	*/

     BEGIN
         BEGIN TRY

		 SET NOCOUNT ON 

		 DECLARE @SQL  NVARCHAR(max) 

		 
			DECLARE @TBL_FormBuilder TABLE (FormBuilderSubmitId INT,FormBuilderId INT,FormCode nvarchar(200), FormDescription nvarchar(200),
			CreatedDate datetime,PortalId int,StoreName nvarchar(max),UserId int,UserName nvarchar(max),FullName nvarchar(max),
			 RowId INT, CountNo INT)


		SET @SQL = '

		;With Cte_GetFormBuilderDetails 
		 AS     (

				SELECT ss.FormBuilderSubmitId, ZFB.FormBuilderId,ZFB.FormCode,ZFB.FormDescription,ss.CreatedDate,ss.PortalId ,ZP.StoreName,
				ss.UserId,zu.UserName,zu.FullName 
				FROM ZnodeFormBuilderSubmit ss 
				inner join ZnodeFormBuilder ZFB on ss.FormBuilderId=ZFB.FormBuilderId
				inner join ZnodePortal ZP on ZP.PortalId =ss.PortalId 
				left  join View_CustomerUserDetail ZU on ZU.UserId=ss.UserId

								
				)



				,Cte_GetFilterFormBuilder
				AS (
				SELECT FormBuilderSubmitId, FormBuilderId,FormCode,FormDescription,CreatedDate,PortalId,StoreName,UserId,UserName,FullName,
				'+dbo.Fn_GetPagingRowId(@Order_BY,'FormBuilderId DESC')+',Count(*)Over() CountNo 
				FROM  Cte_GetFormBuilderDetails CGPTL 
				WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
						
				)
																								
				SELECT FormBuilderSubmitId,FormBuilderId,FormCode,FormDescription,CreatedDate,PortalId,StoreName,UserId,UserName,FullName,RowId,CountNo
				FROM Cte_GetFilterFormBuilder
				'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
						
					
				INSERT INTO @TBL_FormBuilder(FormBuilderSubmitId,FormBuilderId,FormCode,FormDescription,CreatedDate,PortalId,StoreName,UserId,UserName,FullName,RowId,CountNo)
				EXEC(@SQL)

				SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_FormBuilder ),0)
			
				SELECT FormBuilderSubmitId,FormBuilderId,FormCode,FormDescription,CreatedDate,PortalId,StoreName,UserId,UserName,FullName
				FROM @TBL_FormBuilder


		
		 END TRY
		 BEGIN CATCH
			 DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetFormBuilder @WhereClause = '+CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetFormBuilder',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		 END CATCH
     END
GO
PRINT N'Creating [dbo].[Znode_GetGlobalAttributeGroups]...';


GO
CREATE PROCEDURE [dbo].[Znode_GetGlobalAttributeGroups]
( @WhereClause NVARCHAR(Max) = '',
  @Rows        INT           = 100,
  @PageNo      INT           = 1,
  @Order_BY VARCHAR(1000)    = '',
  @RowsCount   INT OUT)
AS
/*
Summary: This procedure is used get GlobalAttributeGroups from both the locale
		 The result is displayed order by GlobalAttributeGroupId in descending order
Unit Testing:
		
		 DECLARE @Ree INT 
         EXEC Znode_GetGlobalAttributeGroups @WhereClause= 'LocaleId = 1' , @RowsCount =  @Ree OUT, @PageNo = 1, @Rows = 10 
			
		 
*/
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_GlobalAttributeGroups TABLE (GlobalAttributeGroupId int,GroupCode VARCHAR(200), AttributeGroupName NVARCHAR(600),LocaleId INT,RowId INT,CountNo INT )
           
		  SET @SQL = '
					;WITH CTE_GlobalGroupList AS
					( SELECT ZPAG.GlobalAttributeGroupId,ZPAG.GroupCode ,ZPAGL.AttributeGroupName,ZPAGL.LocaleId
					  FROM ZnodeGlobalAttributeGroup ZPAG 
				      Inner JOIN ZnodeGlobalAttributeGroupLocale ZPAGL on (ZPAG.GlobalAttributeGroupId = ZPAGL.GlobalAttributeGroupId ) 
					 )

				    ,CTE_GlobalGroup AS
				     ( SELECT GlobalAttributeGroupId,GroupCode,AttributeGroupName,LocaleId
					   ,'+dbo.Fn_GetPagingRowId(@Order_BY,'GlobalAttributeGroupId DESC')+',Count(*)Over() CountNo
					   FROM CTE_GlobalGroupList
				       WHERE 1=1 
					   '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'				
					 )
					SELECT GlobalAttributeGroupId,GroupCode,AttributeGroupName,LocaleId,RowId,CountNo
					FROM CTE_GlobalGroup
					'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)

					INSERT INTO @TBL_GlobalAttributeGroups(GlobalAttributeGroupId,GroupCode,AttributeGroupName,LocaleId,RowId,CountNo)
					EXEC(@SQL)

					SET @RowsCount = ISNULL((SELECT TOP 1 CountNo FROM @TBL_GlobalAttributeGroups),0)

					SELECT GlobalAttributeGroupId,GroupCode,AttributeGroupName,LocaleId
					FROM  @TBL_GlobalAttributeGroups
	
         END TRY
         BEGIN CATCH
          DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetGlobalAttributeGroups @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetGlobalAttributeGroups',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;                            
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetGlobalAttributes]...';


GO
CREATE PROCEDURE [dbo].[Znode_GetGlobalAttributes]
(   @WhereClause         VARCHAR(MAX)  = '',
    @Rows                INT           = 100,
    @PageNo              INT           = 1,
    @Order_BY            VARCHAR(1000) = '',
    @RowsCount           INT OUT,
    @LocaleId            INT           = 0,
    @GlobalAttributeId      VARCHAR(MAX)  = '',
    @IsReturnAllCoulumns BIT           = 0)
AS
/*
     Summary :- This Procedure is used to get the attribute details with the attribute name locale wise 
				Result is fetched order by GlobalAttributeId in descending order
     Unit Testing 
	 
     EXEC [Znode_GetGlobalAttributes] '',10,1,'',0,1,'54,53,56',1
	
*/
     BEGIN
         SET NOCOUNT ON;
		 
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX);
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetdefaultLocaleId();
            
             DECLARE @TBL_AttributeDefault TABLE
             (GlobalAttributeId       INT,
              AttributeTypeId      INT,
              AttributeCode        VARCHAR(600),
              IsRequired           BIT,
              IsLocalizable        BIT,
              DisplayOrder         INT,
              HelpDescription      VARCHAR(MAX),  
              CreatedDate          DATETIME,
              ModifiedDate         DATETIME,
              AttributeName        NVARCHAR(MAX),
              AttributeTypeName    VARCHAR(300),
              RowId                INT,
              CountId              INT
             );
             IF @GlobalAttributeId <> ''
                 BEGIN
                     SET @WhereClause = CASE  WHEN @WhereClause = '' THEN '' ELSE ' AND ' END+' EXISTS (SELECT TOP 1  1  FROM dbo.Split('''+@GlobalAttributeId+''','','') SP WHERE SP.Item = CTPADV.GlobalAttributeId )';                                                                                                                                                                          
                 END;
             SET @SQL = '
		     ;With Cte_GlobalAttribute AS 
			 (
				 SELECT ZPA.GlobalAttributeId,ZPA.AttributeTypeId,ZPA.AttributeCode,ZPA.IsRequired,ZPA.IsLocalizable,
				 ZPA.DisplayOrder,ZPA.HelpDescription
				 ,ZPA.CreatedBy,ZPA.CreatedDate,ZPA.ModifiedBy,ZPA.ModifiedDate,ZPAL.AttributeName,ZAT.AttributeTypeName , ZPAL.LocaleId 
				 FROM ZnodeGlobalAttribute ZPA 
				 INNER JOIN ZnodeGlobalAttributeLocale ZPAL ON (ZPAL.GlobalAttributeId = ZPA.GlobalAttributeId)
				 INNER JOIN ZnodeAttributeType ZAT ON (ZAT.AttributeTypeId = ZPA.AttributeTypeId)
				 
			 )
			 , Cte_GlobalAttributeFirstLocale AS 
			 (
				 SELECT GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable
				 ,DisplayOrder,HelpDescription
				 ,AttributeName ,AttributeTypeName,CreatedDate,ModifiedDate,LocaleId
				 FROM Cte_GlobalAttribute CTA 
				 WHERE LocaleId = '+CAST(@localeId AS VARCHAR(20))+'
			 )
			 , Cte_GlobalAttributeDefaultLocale AS 
			 (
			     SELECT GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,DisplayOrder,HelpDescription
			     ,AttributeName ,AttributeTypeName,CreatedDate,ModifiedDate,LocaleId
			     FROM Cte_GlobalAttributeFirstLocale 
			     UNION ALL 
			     SELECT GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,DisplayOrder,HelpDescription
				 ,AttributeName ,AttributeTypeName,CreatedDate,ModifiedDate,LocaleId
			     FROM Cte_GlobalAttribute CTA
			     WHERE LocaleId = '+CAST(@DefaultLocaleId AS VARCHAR(20))+'
			     AND NOT EXISTS (SELECT TOP 1 1 FROM Cte_GlobalAttributeFirstLocale CTAFL WHERE CTAFL.GlobalAttributeId = CTA.GlobalAttributeId)		 
			  )
			  ,Cte_GlobalAttributeFilter AS 
			  (
			     SELECT GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,DisplayOrder,HelpDescription,CreatedDate,ModifiedDate
				 ,AttributeName ,AttributeTypeName,LocaleId, '+[dbo].[Fn_GetPagingRowId](@Order_BY, ' GlobalAttributeId DESC')+' , Count(*)Over() CountId
			     FROM Cte_GlobalAttributeDefaultLocale 	CTPADV 
			     WHERE 1=1 
			     '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+'
			  )
			 
			     SELECT GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,DisplayOrder,HelpDescription,CreatedDate,ModifiedDate
				 ,AttributeName ,AttributeTypeName ,RowId ,CountId 
			     FROM Cte_GlobalAttributeFilter CTAF 
			     '+[dbo].[Fn_GetPaginationWhereClause](@PageNo, @Rows)+'
			     '+[dbo].[Fn_GetOrderByClause](@Order_BY, 'GlobalAttributeId DESC')+'
			     ';
            	 INSERT INTO @TBL_AttributeDefault
				 (GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,DisplayOrder,HelpDescription,CreatedDate,ModifiedDate,AttributeName,AttributeTypeName,RowId,CountId)
				 EXEC (@SQL);
				 IF @IsReturnAllCoulumns = 0
                 BEGIN
                     SELECT GlobalAttributeId,AttributeCode,AttributeName,AttributeTypeName,IsRequired,IsLocalizable,CreatedDate
                     FROM @TBL_AttributeDefault;
                 END;
                 ELSE
                 BEGIN
                     SELECT GlobalAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable
					 ,DisplayOrder,HelpDescription,CreatedDate,ModifiedDate,AttributeName,AttributeTypeName
                     FROM @TBL_AttributeDefault;
                 END;
                 SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM @TBL_AttributeDefault), 0);
		
         END TRY
         BEGIN CATCH
		select  error_message()
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetGlobalAttributes @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@GlobalAttributeId='+@GlobalAttributeId+',@IsReturnAllCoulumns='+CAST(@IsReturnAllCoulumns AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetGlobalAttributes',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
            
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetOrderByPagingProduct]...';


GO
CREATE PROCEDURE [dbo].[Znode_GetOrderByPagingProduct]
(
 @Order_by  Nvarchar(max)
 ,@Rows     INT =10 
 ,@PageNo   INT =1 
 ,@PimProductId TransferId Readonly 
 ,@AttributeCode VARCHAR(max)= ''
 ,@localeId INT  
)
AS 
BEGIN 
 SET NOCOUNT ON 
 SET @AttributeCode = CASE WHEN @AttributeCode = '' OR  @AttributeCode IS NULL THEN REPLACE(REPLACE (@Order_by , ' DESC',''),' ASC','')

  ELSE @AttributeCode END 
 DECLARE @StartId INT =  CASE WHEN @PageNo = 1 OR @PageNo = 0 THEN 1 ELSE ((@PageNo-1)*@Rows)+1 END 
 DECLARE @EndId INT = CASE WHEN @PageNo = 0 THEN @Rows ELSE @PageNo*@Rows END
 ,@DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleID()   
 DECLARE @AttributeTypeName NVARCHAR(2000)= ''
 SELECT TOP 1 @AttributeTypeName = AttributeTypeName 
 FROM ZnodePimAttribute ZPA 
 INNER JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)
 WHERE ZPA.AttributeCode = @AttributeCode
 
 IF  @Order_by = '' 
 BEGIN 
  
  ;WIth Cte_getData AS ( 
  
  SELECT Id , ROW_NUMBER()Over(Order by ZPP.ModifiedDate DESC,ZPP.PimProductId) RowId  
  FROM @PimProductId TBLP
  INNER JOIN ZnodePimProduct ZPP ON (TBLP.Id= ZPP.PimProductId)
  
  ) 
  
  SELECT ID PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
 
 END 
 IF  @Order_by LIKE 'PimProductId%'  OR @Order_by LIKE 'DisplayOrder%'
 BEGIN 
  ;WIth Cte_getData AS (
  SELECT Id , CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by ZPP.PimProductId DESC) ELSE 
	  ROW_NUMBER()Over(Order by ZPP.PimProductId ASC) END  RowId 
  FROM @PimProductId TBLP
  INNER JOIN ZnodePimProduct ZPP ON (TBLP.Id= ZPP.PimProductId)
  ) 
  SELECT ID PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
 END 
 ELSE IF  @Order_by LIKE  'ModifiedDate%' 
 BEGIN 
  ;with Cte_GetData AS
  (
  SELECT Id , CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by ZPAV.ModifiedDate DESC ,ZPAV.PimProductId) ELSE 
	  ROW_NUMBER()Over(Order by ZPAV.ModifiedDate ASC ,ZPAV.PimProductId) END  RowId 
  FROM  @PimProductId TBLP
  INNER JOIN ZnodePimAttributeValue ZPAV ON (TBLP.Id = ZPAV.PimProductId)
  INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId) 
  WHERE ZPA.AttributeCode = CASE WHEN @AttributeCode = '' OR @AttributeCode = 'ModifiedDate'  THEN 'SKU' ELSE @AttributeCode END 
  )
  SELECT ID PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
 END
 ELSE IF @AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
 BEGIN 
  IF @DefaultLocaleId = @LocaleID 
  BEGIN 
  ;With Cte_getData AS ( 
  SELECT VPP.PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,VPP.PimProductId) ELSE  
	  ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,VPP.PimProductId) END RowId 
  FROM @PimProductId TBLP 
  INNER JOIN View_PimProducttextValue VPP ON (TBLP.Id = VPP.PimProductId ) 
  WHERE AttributeCode = @AttributeCode 
  AND LocaleId = @LocaleID
  ) 
  SELECT PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
  END 
  ELSE 
  BEGIN 
   ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.ID PimProductId,ZPAVL.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId,COUNT(*)Over(Partition By TBLAV.ID,ZPAVL.AttributeCode ORDER BY TBLAV.ID,ZPAVL.AttributeCode  ) RowIdIn
	 FROM @PimProductId   TBLAV 
	 INNER JOIN View_PimProducttextValue ZPAVL ON (ZPAVL.PimProductId = TBLAV.id )
	 WHERE (LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId  )
	 AND AttributeCode = @AttributeCode
	 ) 
	 ,Cte_DataLocale AS 
	 (
	 SELECT  TBLAV.PimProductId ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by TBLAV.AttributeValue DESC ,TBLAV.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by TBLAV.AttributeValue ASC ,TBLAV.PimProductId) END RowId
  	 FROM Cte_AttributeDetails TBLAV 
	 WHERE LocaleId = CASE WHEN RowIdIn =2 THEN @localeId ELSE @DefaultLocaleId END 
	 ) 
	 SELECT PimProductId ,RowId
	 FROM Cte_DataLocale 
	 WHERE RowId BETWEEN @StartId AND @EndId
  END 
 END
 ELSE IF @AttributeTypeName IN ('Simple Select','Multi Select') 
  BEGIN 
 DECLARE @PimAttributeId TransferId 

 INSERT INTO @PimAttributeId 
 SELECT PimAttributeId
 FROM  ZnodePimAttribute 
 WHERE AttributeCode = @AttributeCode  

 CREATE TABLE #TBL_AttributeDefaultValue ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId, @LocaleId;


  IF @DefaultLocaleId = @LocaleID 
  BEGIN
      ;with Cte_AttributeValue AS 
	  (
	  SELECT  PimProductId , SUBSTRING((SELECT ','+AttributeDefaultValue 
											FROM #TBL_AttributeDefaultValue TTR 
											INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
											WHERE ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId  
											AND ZPAVL.LocaleId = @localeId 
											FOR XML PATH('') ),2,4000) AttributeValue
	  FROM @PimProductId TBLP  
	  INNER JOIN ZnodePimAttributeValue ZPAV  ON (TBLP.ID = ZPAV.PimProductId )
	  INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
	  WHERE AttributeCode = @AttributeCode
	 ) 
	 ,CTe_GetDataIn AS 
	 (
	 SELECT PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,ZPP.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,ZPP.PimProductId) END RowId
	 FROM  Cte_AttributeValue  VPP
     ) 
	 SELECT PimProductId ,RowId
	 FROM CTe_GetDataIn 
	 WHERE RowId BETWEEN @StartId AND @EndId 
   END 
   ELSE 
   BEGIN
    SELECT ZPAV.PimAttributeValueId,ZPAVL.PimAttributeDefaultValueId , ZPAVL.LocaleId ,COUNT(*)Over(Partition By ZPAV.PimAttributeValueId ,ZPAV.PimProductId ORDER BY ZPAV.PimAttributeValueId ,ZPAV.PimProductId  ) RowId
			   INTO #temp_Table 
			   FROM @PimProductId TBLP  
	           INNER JOIN ZnodePimAttributeValue ZPAV  ON (TBLP.ID = ZPAV.PimProductId )
			   INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
			   WHERE (ZPAVL.LocaleId = @localeId  OR ZPAVL.LocaleId = @DefaultlocaleId )

   ;with Cte_AttributeValue AS 
	  (
	  SELECT  PimProductId ,SUBSTRING((SELECT ','+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN #temp_Table  ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = CASE WHEN ZPAVL.RowId = 2 THEN @LocaleId  ELSE @DefaultLocaleId  END  
				FOR XML PATH('') ),2,4000) AttributeValue
	  FROM @PimProductId TBLP  
	  INNER JOIN ZnodePimAttributeValue ZPAV  ON (TBLP.ID = ZPAV.PimProductId )
	  INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
	  WHERE AttributeCode = @AttributeCode
	 ) 
	 ,CTe_GetDataIn AS 
	 (
	 SELECT PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,ZPP.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,ZPP.PimProductId) END RowId
	 FROM  Cte_AttributeValue  VPP
     ) 
	 SELECT PimProductId ,RowId
	 FROM CTe_GetDataIn 
	 WHERE RowId BETWEEN @StartId AND @EndId 
   
   END 
    DROP TABLE #TBL_AttributeDefaultValue
  END 
  ELSE IF @AttributeTypeName IN ('Text Area') 
  BEGIN 
   IF @DefaultLocaleId = @LocaleID 
   BEGIN 
   ;With Cte_getData AS ( 
    SELECT VPP.PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,VPP.PimProductId) ELSE  
	  ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,VPP.PimProductId) END RowId 
  FROM @PimProductId TBLP 
  INNER JOIN View_PimProductTextAreaValue VPP ON (TBLP.Id = VPP.PimProductId ) 
  WHERE AttributeCode = @AttributeCode 
  AND LocaleId = @LocaleID
  ) 
  SELECT PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
   END 
   ELSE 
   BEGIN 
   ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.ID PimProductId,ZPAVL.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId,COUNT(*)Over(Partition By ZPAVL.PimProductId,ZPAVL.AttributeCode ORDER BY ZPAVL.PimProductId,ZPAVL.AttributeCode  ) RowIdIn
	 FROM @PimProductId   TBLAV 
	 INNER JOIN View_PimProductTextAreaValue ZPAVL ON (ZPAVL.PimProductId = TBLAV.id )
	 WHERE (LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId  )
	 AND AttributeCode = @AttributeCode
	 ) 
	 ,Cte_DataLocale AS 
	 (
	 SELECT  TBLAV.PimProductId ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by TBLAV.AttributeValue DESC ,TBLAV.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by TBLAV.AttributeValue ASC ,TBLAV.PimProductId) END RowId
  	 FROM Cte_AttributeDetails TBLAV 
	 WHERE LocaleId = CASE WHEN RowIdIn = 2 THEN @localeId ELSE @DefaultLocaleId END 
	 ) 
	 SELECT PimProductId ,RowId
	 FROM Cte_DataLocale 
	 WHERE RowId BETWEEN @StartId AND @EndId
   END 
END 
END
GO
PRINT N'Creating [dbo].[Znode_GetPimDownloadableProductKeyList]...';


GO
CREATE PROCEDURE [dbo].[Znode_GetPimDownloadableProductKeyList]
(
 @WhereClause NVARCHAR(3000),
 @Rows        INT            = 100,
 @PageNo      INT            = 1,
 @Order_BY    VARCHAR(1000)  = 'CreatedDate desc',
 @RowsCount   INT OUT
 )
 
AS

/*
 Summary :
 This procedure use to find the list of  DownloadableProduct Keys

 declare @p7 int
set @p7=8
exec sp_executesql N'Znode_GetPimDownloadableProductKeyList @WhereClause,@Rows,@PageNo,@Order_BY,@RowsCount OUT',N'@WhereClause nvarchar(19),@Rows int,@PageNo int,@Order_BY nvarchar(1000),@RowsCount int output',@WhereClause=N'sku like ''%milton%''',@Rows=50,@PageNo=1,@Order_BY=N'DownloadableProductKey desc',@RowsCount=@p7 output
select @p7

*/
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
		  if Isnull(@Order_BY,'') =''
		  Set @Order_BY='CreatedDate desc'

             DECLARE @SQL NVARCHAR(MAX);
             SET @SQL = '
					DECLARE @PimDownloadableProductKey TABLE (PimDownloadableProductKeyId int,PimDownloadableProductId int,SKU Nvarchar(300),
					DownloadableProductKey	nvarchar(250),DownloadableProductURL nvarchar(2000),IsUsed bit,CreatedDate datetime,RowId int)
					

					;With Cte_GetFormBuilderDetails 
					 AS     ( select ZPDPK.PimDownloadableProductKeyId,ZPDPK.PimDownloadableProductId,ZPDP.SKU, ZPDPK.DownloadableProductKey,
								ZPDPK.DownloadableProductURL,ZPDPK.IsUsed,ZPDPK.CreatedDate
							from ZnodePimDownloadableProduct ZPDP 
								INNER JOIN ZnodePimDownloadableProductKey ZPDPK
								ON ZPDP.PimDownloadableProductId =ZPDPK.PimDownloadableProductId 								
							)
				    INSERT INTO @PimDownloadableProductKey
					select PimDownloadableProductKeyId,PimDownloadableProductId,SKU, DownloadableProductKey,
					DownloadableProductURL,IsUsed,CreatedDate, '+[dbo].[Fn_GetPagingRowId](@Order_BY,'PimDownloadableProductKeyId')+'
					from Cte_GetFormBuilderDetails
					WHERE 1=1 '+CASE
									WHEN @WhereClause = ''
									THEN ''
									ELSE ' AND '+@WhereClause
								END
								+' ORDER BY '+CASE
													 WHEN @Order_BY = ''
													 THEN ' 1 '
													 ELSE ' '+ @Order_BY
												 END+' SELECT @Count = COUNT (1) FROM @PimDownloadableProductKey  
												 SELECT * FROM @PimDownloadableProductKey 
												' +[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)+' '+ CASE
													 WHEN @Order_BY = ''
													 THEN ' ORDER BY  1 '
													 ELSE ' ORDER BY  '+ @Order_BY END ; 
													 
					
								 EXEC SP_executesql
									  @SQL,
									  N'@Count INT OUT ',
									  @Count = @RowsCount OUT;
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCMSContentPageList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              	select ERROR_MESSAGE()		 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPimDownloadableProductKeyList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END
GO
PRINT N'Creating [dbo].[Znode_GetPortalGlobalAttributeValue]...';


GO
CREATE   PROCEDURE [dbo].[Znode_GetPortalGlobalAttributeValue]
(
    @EntityName       nvarchar(200) = 0,
    @GlobalEntityValueId   INT = 0--,
 --   @LocaleId       INT = 0,
	--@GlobalEnt
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and EntityValue attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC [Znode_GetGlobalEntityAttributeValue] 'Store',1
	 ROLLBACK TRAN

*/	 
     BEGIN
 BEGIN TRY
 declare @EntityValue nvarchar(200)

  DECLARE @V_MediaServerThumbnailPath VARCHAR(4000);
          SET @V_MediaServerThumbnailPath =
         (
             SELECT URL+ZMSM.ThumbnailFolderName+'/'
             FROM ZnodeMediaConfiguration ZMC 
			 INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
		     WHERE IsActive = 1 
         );


 Select @EntityValue=StoreName from ZnodePortal
 Where PortalId=@GlobalEntityValueId

            Declare	@EntityAttributeList as	table  (GlobalEntityId int,EntityName nvarchar(300),EntityValue nvarchar(max),
			GlobalAttributeGroupId int,GlobalAttributeId int,AttributeTypeId int,AttributeTypeName nvarchar(300),
			 AttributeCode nvarchar(300) ,IsRequired bit,IsLocalizable bit,AttributeName  nvarchar(300) , HelpDescription nvarchar(max)
			,AttributeGroupDisplayOrder int) 
			 
			Declare @EntityAttributeValidationList  as	table  
			( GlobalAttributeId int, ControlName nvarchar(300), ValidationName nvarchar(300),SubValidationName nvarchar(300),
			 RegExp nvarchar(300), ValidationValue nvarchar(300),IsRegExp Bit)

			Declare	@EntityAttributeValueList as	table  (GlobalAttributeId int,AttributeValue nvarchar(max),
			GlobalAttributeValueId int,GlobalAttributeDefaultValueId int,AttributeDefaultValueCode nvarchar(300),
			AttributeDefaultValue nvarchar(300),
			MediaId int,MediaPath nvarchar(300) )



			Declare	@EntityAttributeDefaultValueList as	table  (GlobalAttributeDefaultValueId int,GlobalAttributeId int,
			AttributeDefaultValueCode nvarchar(300),AttributeDefaultValue nvarchar(300),RowId int,IsEditable bit,DisplayOrder int )


			
	insert into @EntityAttributeList
		(	GlobalEntityId ,EntityName ,EntityValue ,
		GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
		AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription ,AttributeGroupDisplayOrder ) 
		SELECT qq.GlobalEntityId,qq.EntityName,@EntityValue EntityValue,ww.GlobalAttributeGroupId,
		c.GlobalAttributeId,c.AttributeTypeId,q.AttributeTypeName,c.AttributeCode,c.IsRequired,
		c.IsLocalizable,f.AttributeName,c.HelpDescription,w.AttributeGroupDisplayOrder
     FROM dbo.ZnodeGlobalEntity AS qq
          INNER JOIN dbo.ZnodeGlobalGroupEntityMapper AS w ON qq.GlobalEntityId = w.GlobalEntityId
		  INNER JOIN dbo.ZnodeGlobalAttributeGroupMapper AS ww ON ww.GlobalAttributeGroupId = w.GlobalAttributeGroupId
          INNER JOIN dbo.ZnodeGlobalAttribute AS c ON ww.GlobalAttributeId = c.GlobalAttributeId
          INNER JOIN dbo.ZnodeAttributeType AS q ON c.AttributeTypeId = q.AttributeTypeId
          INNER JOIN dbo.ZnodeGlobalAttributeLocale AS f ON c.GlobalAttributeId = f.GlobalAttributeId
		  Where qq.EntityName=@EntityName


		  INSERT INTO @EntityAttributeValidationList
		  (GlobalAttributeId,ControlName , ValidationName ,SubValidationName ,
		RegExp, ValidationValue,IsRegExp)

		 Select aa.GlobalAttributeId,i.ControlName,i.Name AS ValidationName,j.ValidationName AS SubValidationName,
		j.RegExp,k.Name AS ValidationValue,CAST(CASE WHEN j.RegExp IS NULL THEN 0 ELSE 1 END AS BIT) AS IsRegExp
		fROM @EntityAttributeList aa
		  inner  JOIN dbo.ZnodeGlobalAttributeValidation AS k ON k.GlobalAttributeId = aa.GlobalAttributeId
          inner  JOIN dbo.ZnodeAttributeInputValidation AS i ON k.InputValidationId = i.InputValidationId
          LEFT  JOIN dbo.ZnodeAttributeInputValidationRule AS j ON k.InputValidationRuleId = j.InputValidationRuleId

		  insert into @EntityAttributeValueList
		  (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeValue ,MediaId,MediaPath)
		  Select GlobalAttributeId,aa.PortalGlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
		  case when bb.MediaPath is not null then  @V_MediaServerThumbnailPath+bb.MediaPath--+'~'+convert(nvarchar(10),bb.MediaId) 
		  else bb.AttributeValue end,		  
		  bb.MediaId,bb.MediaPath
		  from  dbo.ZnodePortalGlobalAttributeValue aa
		   inner join ZnodePortalGlobalAttributeValueLocale bb ON bb.PortalGlobalAttributeValueId = aa.PortalGlobalAttributeValueId 
		  Where  PortalId=@GlobalEntityValueId

		

		  

		  update aa
		  Set AttributeDefaultValueCode= h.AttributeDefaultValueCode,
              AttributeDefaultValue=g.AttributeDefaultValue,
			  GlobalAttributeDefaultValueId=g.GlobalAttributeDefaultValueId,
			  AttributeValue=case when aa.AttributeValue is  null then h.AttributeDefaultValueCode else aa.AttributeValue end
		  from  @EntityAttributeValueList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeDefaultValueId = aa.GlobalAttributeDefaultValueId                                       
          inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
          
		  insert into @EntityAttributeDefaultValueList
		  (GlobalAttributeDefaultValueId,GlobalAttributeId,AttributeDefaultValueCode,
			AttributeDefaultValue ,RowId ,IsEditable ,DisplayOrder )
		  Select  h.GlobalAttributeDefaultValueId, aa.GlobalAttributeId,h.AttributeDefaultValueCode,g.AttributeDefaultValue,0,ISNULL(h.IsEditable, 1),
		  h.DisplayOrder
		  from  @EntityAttributeList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeId = aa.GlobalAttributeId
          inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
		  
		  if not exists (Select 1 from @EntityAttributeList )
			Begin
			insert into @EntityAttributeList
			(	GlobalEntityId ,EntityName ,EntityValue ,
			GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
			AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription  ) 
			SELECT qq.GlobalEntityId,qq.EntityName,@EntityValue EntityValue,0 GlobalAttributeGroupId,
			0 GlobalAttributeId,0 AttributeTypeId,''AttributeTypeName,''AttributeCode,0 IsRequired,
			0 IsLocalizable,'' AttributeName,'' HelpDescription
			FROM dbo.ZnodeGlobalEntity AS qq
			 Where qq.EntityName=@EntityName 
			End

				

			SELECT  GlobalEntityId,EntityName,EntityValue,GlobalAttributeGroupId,
			AA.GlobalAttributeId,AttributeTypeId,AttributeTypeName,AttributeCode,IsRequired,
			IsLocalizable,AttributeName,ControlName,ValidationName,SubValidationName,RegExp,
			ValidationValue,cast(isnull(IsRegExp,0) as bit)  IsRegExp,
			HelpDescription,AttributeValue,GlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
			aab.AttributeDefaultValueCode,
			aab.AttributeDefaultValue,isnull(aab.RowId,0)   RowId,cast(isnull(aab.IsEditable,0) as bit)   IsEditable
			,bb.MediaId
			fROM @EntityAttributeList AA				
			left join @EntityAttributeDefaultValueList aab on aab.GlobalAttributeId=AA.GlobalAttributeId	
			left join @EntityAttributeValidationList vl on vl.GlobalAttributeId=aa.GlobalAttributeId			
			LEFT JOIN @EntityAttributeValueList BB ON BB.GlobalAttributeId=AA.GlobalAttributeId		 
		    and ( (aab.GlobalAttributeDefaultValueId=bb.GlobalAttributeDefaultValueId	)
			or  ( bb.MediaId is not null and isnull(vl.ValidationName,'')='IsAllowMultiUpload'  and bb.GlobalAttributeDefaultValueId is null )
			or  ( bb.MediaId is  null and  bb.GlobalAttributeDefaultValueId is null ))
			order by GlobalEntityId,AttributeGroupDisplayOrder,GlobalAttributeGroupId,GlobalAttributeId,aab.DisplayOrder,aab.GlobalAttributeDefaultValueId

			SELECT 0 AS ID,CAST(1 AS BIT) AS Status;       
		  END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= null       			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		 
          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetGlobalEntityValueAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetPortalSearchProfile]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetPortalSearchProfile]
(   @WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT
	

)
AS 
   /* 
   SUMMARY : Stored Procedure to Get list of PortalsearchProfileid 
   Unit Testing:

   -- EXEC Znode_GetPortalSearchProfile @WhereClause = 'searchprofileid = 2',@RowsCount = 0
   
   
   	*/

     BEGIN
         BEGIN TRY

		 SET NOCOUNT ON 

		 DECLARE @SQL  NVARCHAR(max) 
		
			DECLARE @TBL_PortalSearchProfile TABLE (PortalSearchProfileId INT,PublishCatalogId INT,SearchProfileId INT,PortalName nvarchar(400),PortalId INT,ProfileName NVARCHAR(400), CatalogName nvarchar(400), RowId INT, CountNo INT)


		SET @SQL = '

		;With Cte_GetPortalSearchProfileList 
		 AS     (

				SELECT  ZPSP.PortalSearchProfileId,ZPSP.PublishCatalogId,ZPSP.SearchProfileId,ZP.StoreName as PortalName,ZP.PortalId,ZSP.ProfileName,ZPC.CatalogName
				FROM ZnodePortalSearchProfile ZPSP 
				INNER JOIN ZnodePortal ZP ON (ZP.PortalId = ZPSP.PortalId)
				INNER JOIN ZnodeSearchProfile ZSP ON (ZSP.SearchProfileId = ZPSP.SearchProfileId)
				INNER JOIN ZnodePublishCatalogSearchProfile ZSCP ON (ZSCP.PublishCatalogId = ZPSP.PublishCatalogId AND ZSP.SearchProfileId = ZSCP.SearchProfileId)
				INNER JOIN ZnodePublishCatalog ZPC ON (ZPC.PublishCatalogId = ZSCP.PublishCatalogId)
				
				)


				,Cte_GetFilterPortalSearchProfile
				AS (
				SELECT PortalSearchProfileId,PublishCatalogId,SearchProfileId,PortalName,PortalId,ProfileName,CatalogName,
				'+dbo.Fn_GetPagingRowId(@Order_BY,'PortalSearchProfileId DESC')+',Count(*)Over() CountNo 
				FROM  Cte_GetPortalSearchProfileList CGPTL 
				WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
						
				)
																								
				SELECT PortalSearchProfileId,PublishCatalogId,SearchProfileId,PortalName,PortalId,ProfileName,CatalogName,RowId,CountNo
				FROM Cte_GetFilterPortalSearchProfile
				'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
						
						
				INSERT INTO @TBL_PortalSearchProfile(PortalSearchProfileId,PublishCatalogId,SearchProfileId,PortalName,PortalId,ProfileName,CatalogName,RowId,CountNo)
				EXEC(@SQL)

				SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_PortalSearchProfile ),0)
			
				SELECT PortalSearchProfileId,PublishCatalogId,SearchProfileId,PortalName,PortalId,ProfileName,CatalogName
				FROM @TBL_PortalSearchProfile

		 END TRY
		 BEGIN CATCH
			 DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPortalSearchProfile @WhereClause = '+CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPortalSearchProfile',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		 END CATCH
     END
GO
PRINT N'Creating [dbo].[Znode_GetProductList]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetProductList]
(
 @IsAssociated BIT = 0
 ,@PimProductId Transferid Readonly 
)
AS 
BEGIN 

 IF @IsAssociated = 0  --AND NOT EXISTS (SELECT Max(id) FROM @PimProductId WHERE id = 0)
 BEGIN 

 SELECT PimProductId 
 FROM ZnodePimProduct ZPP 
 WHERE NOT EXISTS (SELECT TOP 1  1 FROM @PimProductId WHERE id = ZPP.PimProductId )
 AND PimProductId IS NOT NULL 
 END 
 ELSE IF NOT EXISTS (SELECT TOP 1 1  FROM @PimProductId HAVING max(id) = 0)
 BEGIN

 SELECT PimProductId 
 FROM ZnodePimProduct ZPP 
 WHERE  EXISTS (SELECT TOP 1  1 FROM @PimProductId WHERE id = ZPP.PimProductId )
  AND PimProductId IS NOT NULL 
 END 
 ELSE 
 BEGIN 
  SELECT 0 PimProductId
END 
END
GO
PRINT N'Creating [dbo].[Znode_GetPublishPortalAttribute]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetPublishPortalAttribute](
        @PortalId varchar(2000)= ''
	  , @VersionId int= 0
	  , @UserId int
	  , @NotReturnXML int= NULL	  
	  , @IsDebug bit= 0
	  , @TokenId nvarchar(max)= ''
	  )
AS
    
/*
    Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

 */

BEGIN
	
	BEGIN TRY
		SET NOCOUNT ON;
	
	           DECLARE @TBL_GlobalAttributeGrouplist TABLE ([GlobalAttributeGroupId] INT , [AttributeGroupDisplayOrder] INT,Groups int )
			   DECLARE @TBL_GlobalAttributelist      TABLE ([GlobalAttributeGroupId] INT , [GlobalAttributeId] INT,[AttributeDisplayOrder] int ,Attributes int )
			   Declare	@EntityAttributeValueList as	table
			    (IsInput bit, IsMedia BIT, AttributeValues int,PortalGlobalAttributeValueId int,GlobalAttributeId int,AttributeValue nvarchar(max),
				GlobalAttributeValueId int,GlobalAttributeDefaultValueId int,AttributeDefaultValueCode nvarchar(300),
				AttributeDefaultValue nvarchar(300),
				MediaId int,MediaPath nvarchar(300) ,SwatchText nvarchar(300),DisplayOrder int,SingleAttributeValue nvarchar(max))
			    Declare	@EntityAttributeSingleValueList as	table
			    (AttributeValues int,PortalGlobalAttributeValueId int,GlobalAttributeId int)

			   Declare @StoreName nvarchar(max),@LocaleId INT 
			   , @GetDate DATETIME =dbo.Fn_GetDate()
			  
			   Select @LocaleId=LocaleId
			   From ZnodePortalLocale
			   Where PortalId=@PortalId
			   and IsDefault=1


				Select @StoreName= StoreName 
				from ZnodePortal 
				Where PortalId =@PortalId


				insert into @EntityAttributeValueList
				(IsInput, IsMedia,AttributeValues,PortalGlobalAttributeValueId,GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeValue ,MediaId,MediaPath,SingleAttributeValue)
				Select case when zga.GroupAttributeType in('Input','TextArea')   then 1  else 0 end ,
				 0, 1, aa.PortalGlobalAttributeValueId,aa.GlobalAttributeId,aa.PortalGlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
				--case when bb.MediaPath is not null then  --@V_MediaServerThumbnailPath+
				--bb.MediaPath--+'~'+convert(nvarchar(10),bb.MediaId) 
				--else bb.AttributeValue end,	
				case when zga.GroupAttributeType in('Input','TextArea')   then null  else  bb.AttributeValue  end AttributeValue,	  
				bb.MediaId,bb.MediaPath,
				case when zga.GroupAttributeType in('Input','TextArea')   then bb.AttributeValue   else null end  SingleAttributeValue	
				from  dbo.ZnodePortalGlobalAttributeValue aa
				inner join ZnodePortalGlobalAttributeValueLocale bb ON bb.PortalGlobalAttributeValueId = aa.PortalGlobalAttributeValueId 
				inner join View_ZnodeGlobalAttribute zga       on zga.[GlobalAttributeId]=aa.[GlobalAttributeId]
				Where  PortalId=@PortalId
				and bb.MediaId is null 
				

				insert into @EntityAttributeValueList
				(IsInput,IsMedia,AttributeValues,PortalGlobalAttributeValueId,GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeValue ,MediaId,MediaPath,SingleAttributeValue)
				Select 1,1 ,1, aa.PortalGlobalAttributeValueId,aa.GlobalAttributeId,aa.PortalGlobalAttributeValueId,null GlobalAttributeDefaultValueId,
				NULL AttributeValue,	  
				NULL MediaId,null MediaPath,
				NULL SingleAttributeValue	
				from  dbo.ZnodePortalGlobalAttributeValue aa
				inner join View_ZnodeGlobalAttribute zga       on zga.[GlobalAttributeId]=aa.[GlobalAttributeId]
				Where  PortalId=@PortalId
				and zga.GroupAttributeType ='Media'


				update aa
				Set SingleAttributeValue= ( Select bb.MediaPath from  ZnodePortalGlobalAttributeValueLocale bb 
				 Where bb.PortalGlobalAttributeValueId = aa.PortalGlobalAttributeValueId
				 FOR XML PATH ('') )				
				from  @EntityAttributeValueList aa
		    	Where aa.IsMedia=1

				update aa
				Set SingleAttributeValue= replace(replace(SingleAttributeValue,'</MediaPath>',','),'<MediaPath>','')
				from  @EntityAttributeValueList aa
		    	Where aa.IsMedia=1

				update aa
				Set SingleAttributeValue= Substring(SingleAttributeValue,1,len(SingleAttributeValue)-1)
				from  @EntityAttributeValueList aa
		    	Where aa.IsMedia=1
				  


				update aa
				Set AttributeDefaultValueCode= h.AttributeDefaultValueCode,
				    SwatchText=h.SwatchText,
					AttributeValue=g.AttributeDefaultValue,
					GlobalAttributeDefaultValueId=g.GlobalAttributeDefaultValueId,
					DisplayOrder=h.DisplayOrder
				from  @EntityAttributeValueList aa
				inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeDefaultValueId = aa.GlobalAttributeDefaultValueId                                       
				inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
          
		 
			   insert into @TBL_GlobalAttributeGrouplist
			   ([GlobalAttributeGroupId] , [AttributeGroupDisplayOrder],Groups )
				SELECT ss.[GlobalAttributeGroupId],ss.[AttributeGroupDisplayOrder],1
				FROM [dbo].[ZnodeGlobalGroupEntityMapper] SS
				inner join dbo.ZnodeGlobalEntity aa on ss.[GlobalEntityId]=aa.[GlobalEntityId]
				WHere aa.EntityName='Store'
				--FOR XML PATH('')

				insert into @TBL_GlobalAttributelist
				([GlobalAttributeGroupId] , [GlobalAttributeId],[AttributeDisplayOrder],Attributes )
				SELECT aa.[GlobalAttributeGroupId],aa.[GlobalAttributeId] ,aa.[AttributeDisplayOrder],1
				FROM [dbo].[ZnodeGlobalAttributeGroupMapper] aa
				inner join @TBL_GlobalAttributeGrouplist ss on ss.GlobalAttributeGroupId=aa.GlobalAttributeGroupId

			

		DELETE FROM ZnodePublishedPortalXml 
		WHERE PublishPortalLogId = @versionId   AND LocaleId = @LocaleId 


		INSERT INTO [dbo].[ZnodePublishedPortalXml]
        ([PublishedXML],PortalId,[PublishPortalLogId],[LocaleId],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
		select (	Select 			
				case 
		 when GROUPING_ID(ss.[GlobalAttributeId]) = 0 then 5 
		 when GROUPING_ID(ss.Attributes) = 0 then 4 
         when GROUPING_ID(AA.[GlobalAttributeGroupId]) = 0 then 3 
		 when GROUPING_ID(aa.Groups) = 0 then 2 
         else 1 
         end as tag,
       case
	     when GROUPING_ID(ss.[GlobalAttributeId]) = 0 then 4 
		 when GROUPING_ID(ss.Attributes) = 0 then 3 
         when GROUPING_ID(aa.[GlobalAttributeGroupId]) = 0 then 2 
		 when GROUPING_ID(aa.Groups) = 0 then 1 
         else null
       end as parent,
       null								as 'PortalGlobalAttributeEntity!1',
	   @PortalId						as 'PortalGlobalAttributeEntity!1!PortalId!element',
	   @StoreName						as 'PortalGlobalAttributeEntity!1!PortalName!element',
	   null								as 'GlobalAttributeGroups!2',
       aa.[GlobalAttributeGroupId]		as 'GlobalAttributeGroupEntity!3!GlobalAttributeGroupId!element', 
	   zgag.GroupCode					as 'GlobalAttributeGroupEntity!3!GroupCode!element',
	   zgagl.AttributeGroupName         as 'GlobalAttributeGroupEntity!3!GroupName!element',
       [AttributeGroupDisplayOrder]		as 'GlobalAttributeGroupEntity!3!AttributeGroupDisplayOrder!element', 
	   null								as 'GlobalAttributes!4',
       ss.[GlobalAttributeId]			as 'GlobalAttributeEntity!5!GlobalAttributeId!element', 
       ss.[AttributeDisplayOrder]		as 'GlobalAttributeEntity!5!DisplayOrder!element',
	   zga.AttributeCode				as 'GlobalAttributeEntity!5!AttributeCode!element',
	   zgal.AttributeName				as 'GlobalAttributeEntity!5!AttributeName!element',
	   zga.IsRequired					as 'GlobalAttributeEntity!5!IsRequired!element',
	   zga.AttributeTypeName            as 'GlobalAttributeEntity!5!AttributeTypeName!element',
	   zga.AttributeTypeId				as 'GlobalAttributeEntity!5!AttributeTypeId!element',
	   sv.SingleAttributeValue			as 'GlobalAttributeEntity!5!AttributeValues!element',
	   ( Select 
	    SelectValuesEntity.DisplayOrder					as DisplayOrder,
	   SelectValuesEntity.GlobalAttributeDefaultValueId as GlobalAttributeDefaultValueId,
		 SelectValuesEntity.AttributeValue				as [Value]	,
	   SelectValuesEntity.AttributeDefaultValueCode		as Code	,
	   SelectValuesEntity.SwatchText                    as SwatchText	,
	   SelectValuesEntity.MediaPath		         		as [Path]	
	    from  @EntityAttributeValueList SelectValuesEntity 
		Where SelectValuesEntity.PortalGlobalAttributeValueId = sv.PortalGlobalAttributeValueId
		  and zga.GroupAttributeType ='Select'
		  FOR XML PATH('SelectValuesEntity'), type
		  ) as 'GlobalAttributeEntity!5!SelectValues!element'
		from @TBL_GlobalAttributeGrouplist aa				
		inner join @TBL_GlobalAttributelist ss on  ss.GlobalAttributeGroupId=aa.GlobalAttributeGroupId
		inner join ZnodeGlobalAttributeGroup zgag on zgag.[GlobalAttributeGroupId]=aa.[GlobalAttributeGroupId]
		inner join ZnodeGlobalAttributeGroupLocale zgagl on zgagl.GlobalAttributeGroupId=zgag.GlobalAttributeGroupId
		inner join View_ZnodeGlobalAttribute zga       on zga.[GlobalAttributeId]=ss.[GlobalAttributeId]
		inner join ZnodeGlobalAttributeLocale zgal on zga.[GlobalAttributeId]=zgal.[GlobalAttributeId]
		inner join @EntityAttributeValueList sv   on sv.[GlobalAttributeId]=ss.[GlobalAttributeId]
		Where zgagl.LocaleId=@LocaleId
		   and zgal.LocaleId=@LocaleId
		group by grouping sets ((),  (aa.Groups),
		(aa.Groups,aa.[GlobalAttributeGroupId] , [AttributeGroupDisplayOrder],zgag.GroupCode, zgag.DisplayOrder,zgagl.AttributeGroupName),
		(aa.Groups,aa.[GlobalAttributeGroupId],ss.Attributes),
		(aa.Groups,aa.[GlobalAttributeGroupId] ,ss.Attributes, ss.[GlobalAttributeId], ss.[AttributeDisplayOrder]	,
		zga.AttributeTypeId,zga.AttributeCode,zgal.AttributeName,zga.IsRequired,zga.IsLocalizable,zga.IsActive,zga.DisplayOrder,zga.AttributeTypeName,
		sv.SingleAttributeValue,zga.GroupAttributeType,sv.PortalGlobalAttributeValueId)
		)
		order by aa.Groups,aa.[GlobalAttributeGroupId]  ,ss.Attributes,ss.[GlobalAttributeId],sv.PortalGlobalAttributeValueId  
	    for xml explicit, type  )as PortalXml,@PortalId,@versionId,@LocaleId,@UserId,@GetDate,@UserId,@GetDate

		Select  [PublishedXML] PortalXMl 
		FROM ZnodePublishedPortalXml 
		WHERE PublishPortalLogId = @versionId   AND LocaleId = @LocaleId 
				
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE(), ERROR_PROCEDURE();
		DECLARE @Status bit;
		SET @Status = 0;
		--DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PublishCatalogId = '+CAST(@PublishCatalogId AS varchar(max))+',@PublishCategoryId='+@PublishCategoryId+',@UserId='+CAST(@UserId AS Varchar(50))+',@NotReturnXML='+CAST(@NotReturnXML AS Varchar(50))+',@UserId = '+CAST(@UserId AS Varchar(50))+',@PimProductId='+CAST(@PimProductId AS Varchar(50))+',@VersionId='+CAST(@VersionId AS Varchar(50))+',@TokenId='+CAST(@TokenId AS varchar(max))+',@Status='+CAST(@Status AS varchar(10));
		--SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		--ROLLBACK TRAN GetPublishProducts;
		--EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_GetPublishProducts', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Creating [dbo].[Znode_GetSearchProfileList]...';


GO

CREATE PROCEDURE [dbo].[Znode_GetSearchProfileList]
(
	@WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT
)
AS 
/*
	 Summary :- This Procedure is used to get the publish status of the catalog 
	 Unit Testig 
	 EXEC  Znode_GetSearchProfileList '',100,1,'',0
*/
   BEGIN 
		BEGIN TRY 
		SET NOCOUNT ON 

		 DECLARE @SQL  NVARCHAR(max) 
		 DECLARE @TBL_CatalogId TABLE 
		 (PublishCatalogId int ,CatalogName NVARCHAR(2000), SearchProfileId INT , SearchQueryTypeId INT , ProfileName NVARCHAR(2000),QueryTypeName  NVARCHAR(2000),QueryBuilderClassName  NVARCHAR(2000),SearchSubQueryTypeId INT,SubQueryTypeName  NVARCHAR(2000),
		SubQueryBuilderClassName  NVARCHAR(2000),--RowId INT ,
		PortalId INT,PortalName NVARCHAR(MAX),IsDefault BIT,CountId INT )
		
	 
		 SET @SQL = '
		;With Cte_CatalogLog AS (
		Select dd.PublishCatalogId,pc.CatalogName,B.SearchProfileId,  b.SearchQueryTypeId ,b.ProfileName,
		c.QueryTypeName,c.QueryBuilderClassName,
		b.SearchSubQueryTypeId,d.QueryTypeName SubQueryTypeName,d.QueryBuilderClassName SubQueryBuilderClassName,ZPSP.PortalId,ZP.StoreName as PortalName,isnull(ZPSP.IsDefault,0) as Isdefault
		from  ZnodeSearchProfile B 
		INNER JOIN ZnodePublishCatalogSearchProfile dd on  dd.SearchProfileId=b.SearchProfileId
		inner join ZnodePublishCatalog pc on pc.PublishCatalogId=dd.PublishCatalogId
		inner join ZnodeSearchQueryType C on b.SearchQueryTypeId=C.SearchQueryTypeId 
		Left join ZnodeSearchQueryType d on  d.SearchQueryTypeId =b.SearchSubQueryTypeId
		LEFT Join ZnodePortalSearchProfile ZPSP ON (ZPSP.SearchProfileId = B.SearchProfileId AND ZPSP.PublishCatalogId = DD.PublishCatalogId)
		LEFT JOIN ZnodePortal ZP ON (ZP.PortalId = ZPSP.PortalId)
			
		)	 
	     ,Cte_PublishStatus 
		 AS (
		 SELECT PublishCatalogId,CatalogName,SearchProfileId , SearchQueryTypeId ,ProfileName,
		QueryTypeName,QueryBuilderClassName,
		SearchSubQueryTypeId,SubQueryTypeName,
		SubQueryBuilderClassName,PortalId,PortalName	,IsDefault,	
		 '+[dbo].[Fn_GetPagingRowId](@Order_BY,'SearchProfileId DESC')+' , Count(*)Over() CountId FROM Cte_CatalogLog
         WHERE 1=1 '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+' )
	 
		 SELECT PublishCatalogId,CatalogName,SearchProfileId , SearchQueryTypeId ,
		 ProfileName,
		QueryTypeName,QueryBuilderClassName,
		SearchSubQueryTypeId,SubQueryTypeName,
		SubQueryBuilderClassName,PortalId,PortalName	,IsDefault,CountId
		 FROM Cte_PublishStatus 
		 '+[dbo].[Fn_GetPaginationWhereClause](@PageNo,@Rows)+' '
	

	     PRINT @sql 
		 INSERT INTO @TBL_CatalogId 
		 EXEC (@SQL)

		 SELECT   PublishCatalogId,CatalogName,SearchProfileId , SearchQueryTypeId ,
		 ProfileName,
		QueryTypeName,QueryBuilderClassName,
		SearchSubQueryTypeId,SubQueryTypeName,
		SubQueryBuilderClassName,PortalId,PortalName	,IsDefault,CountId
		 FROM @TBL_CatalogId

		 SET @RowsCount = ISNULL((SELECT TOP 1 COUNTID 
		 FROM @TBL_CatalogId),0)
	 
		 END TRY 
		 BEGIN CATCH 
			DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSearchProfileList @WhereClause = '+@WhereClause+',@Rows='+CAST(@Rows AS
 VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetSearchProfileList',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
		 END CATCH 
   END
GO
PRINT N'Creating [dbo].[Znode_GetSearchProfileTrigger]...';


GO
CREATE  PROCEDURE [dbo].[Znode_GetSearchProfileTrigger]
(   @WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(100)  = '',
    @RowsCount   INT OUT

)
AS 
   /* 
   SUMMARY : Stored Procedure to Get list of searchProfileid 
   Unit Testing:

   -- EXEC Znode_GetSearchProfileTrigger N'keyword like ''%vvvvvv%'' ',@RowsCount = 0 , @Order_BY = 'UserProfile '
   
   searchProfileid = 2
   	*/

     BEGIN
         BEGIN TRY

		 SET NOCOUNT ON 

		 DECLARE @SQL  NVARCHAR(max) 
		
			DECLARE @TBL_ProfileTrigger TABLE (SearchProfileTriggerId INT,Keyword nvarchar(2000),UserProfileId INT,SearchProfileId INT,UserProfile nvarchar(400), RowId INT, CountNo INT)


		SET @SQL = '
						;With Cte_GetProfileTriggerList 
						AS (
						Select ZSPT.SearchProfileTriggerId, ZSPT.Keyword,ZSPT.UserProfileId,ZSPT.SearchProfileId,ZP.ProfileName as UserProfile
						FROM  ZnodeSearchProfileTrigger ZSPT 
						left JOIN ZnodeUserProfile ZUP ON (ZSPT.UserProfileId = ZUP.UserProfileID)
						left JOIN ZnodeProfile ZP ON (ZUP.ProfileId = ZP.ProfileId)
						
									
						)	
						
						
						,Cte_GetFilterProfileTrigger
						AS (
						SELECT SearchProfileTriggerId,Keyword,UserProfileId,SearchProfileId,UserProfile,
						'+dbo.Fn_GetPagingRowId(@Order_BY,'SearchProfileTriggerId DESC')+',Count(*)Over() CountNo 
						FROM  Cte_GetProfileTriggerList CGPTL 
						WHERE 1=1 '+dbo.Fn_GetFilterWhereClause(@WhereClause)+'
						
						)
																								
						SELECT SearchProfileTriggerId,Keyword,UserProfileId,SearchProfileId,UserProfile,RowId,CountNo
						FROM Cte_GetFilterProfileTrigger
						'+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)
						
						--print @sql
						INSERT INTO @TBL_ProfileTrigger(SearchProfileTriggerId,Keyword,UserProfileId,SearchProfileId,UserProfile,RowId,CountNo)
						EXEC(@SQL)

						SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_ProfileTrigger ),0)
			
						SELECT SearchProfileTriggerId,Keyword,UserProfileId,SearchProfileId,UserProfile
						FROM @TBL_ProfileTrigger

				
		 END TRY
		 BEGIN CATCH
			 DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSearchProfileTrigger @WhereClause = '+CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSearchProfileTrigger',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
		 END CATCH
     END
GO
PRINT N'Creating [dbo].[Znode_GetSearchQueryTypeWiseFeatureDetails]...';


GO

Create PROCEDURE [dbo].[Znode_GetSearchQueryTypeWiseFeatureDetails]
(
	@SearchProfileId int ,
	@SearchQueryTypeId int
)
AS 
/*
	 Summary :- This Procedure is used to get the publish status of the catalog 
	 Unit Testig 
	 EXEC  Znode_GetCatalogList '',100,1,'',0
*/
   BEGIN 
		BEGIN TRY 
		SET NOCOUNT ON 
				Declare @FeatureList as table (SearchFeatureId int,ParentSearchFeatureId int )
				
				
				Insert into @FeatureList
				(SearchFeatureId)
				Select SearchFeatureId
				from dbo.ZnodeSearchQueryTypeFeature dd 
				inner join dbo.ZnodeSearchQueryType  ss on ss.SearchQueryTypeId=dd.SearchQueryTypeId
				and ss.SearchQueryTypeId=@SearchQueryTypeId

				; WITH Objects --(Id, NextId,HLevel,SortPath/*,NewView1*/) 
				AS
				( -- This is the 'Anchor' or starting point of the recursive query
				SELECT null Id,
				SearchFeatureId NextId,
				1 AS HLevel,
				CAST(ParentSearchFeatureId  AS nvarchar(max)) AS SortPath 
				FROM @FeatureList rel
				UNION ALL -- This is the recursive portion of the query
				SELECT rel.ParentSearchFeatureId Id,
				rel.SearchFeatureId NextId,
				Objects.HLevel + 1 AS HLevel,
				null AS SortPath 
				FROM ZnodeSearchFeature rel
				INNER JOIN Objects -- Note the reference to CTE table name (Recursive Join)
				ON rel.ParentSearchFeatureId = Objects.NextId-- OR ( rel.NextId= @id AND rel.Id!= @id )
				)
				select aa.SearchFeatureId,aa.ParentSearchFeatureId,aa.FeatureCode,aa.FeatureName,aa.IsAdvanceFeature,aa.ControlType,aa.HelpDescription,
				ss.SearchFeatureValue
				from ZnodeSearchFeature aa
				inner join Objects o on o.NextId =aa.SearchFeatureId
				left join  ZnodeSearchProfileFeatureMapping ss on ss.SearchFeatureId=aa.SearchFeatureId
				and SearchProfileId=@SearchProfileId 
				order by o.NextId,o.id 

 
		 END TRY 
		 BEGIN CATCH 
			DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), 
			@ErrorLine VARCHAR(100)= ERROR_LINE(), 
			@ErrorCall NVARCHAR(MAX)
	--		= 'EXEC Znode_GetCatalogList @WhereClause = '+@WhereClause+',@Rows='+CAST(@Rows AS
 --VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetZnodeSearchProfileList',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
		 END CATCH 
   END
GO
PRINT N'Creating [dbo].[Znode_GetSearchQueryTypeWiseFeatureDetails_bak]...';


GO

CREATE PROCEDURE [dbo].[Znode_GetSearchQueryTypeWiseFeatureDetails_bak]
(
	@SearchProfileId int ,
	@SearchQueryTypeId int
)
AS 
/*
	 Summary :- This Procedure is used to get the publish status of the catalog 
	 Unit Testig 
	 EXEC  Znode_GetSearchQueryTypeWiseFeatureDetails 2,2
*/
   BEGIN 
		BEGIN TRY 
		SET NOCOUNT ON 
				Declare @FeatureList as table (SearchFeatureId int,ParentSearchFeatureId int )
				
				
				Insert into @FeatureList
				(SearchFeatureId)
				Select SearchFeatureId
				from dbo.ZnodeSearchQueryTypeFeature dd 
				inner join dbo.ZnodeSearchQueryType  ss on ss.SearchQueryTypeId=dd.SearchQueryTypeId
				and ss.SearchQueryTypeId=@SearchQueryTypeId

				; WITH Objects --(Id, NextId,HLevel,SortPath/*,NewView1*/) 
				AS
				( -- This is the 'Anchor' or starting point of the recursive query
				SELECT null Id,
				SearchFeatureId NextId,
				1 AS HLevel,
				CAST(ParentSearchFeatureId  AS nvarchar(max)) AS SortPath 
				FROM @FeatureList rel
				UNION ALL -- This is the recursive portion of the query
				SELECT rel.ParentSearchFeatureId Id,
				rel.SearchFeatureId NextId,
				Objects.HLevel + 1 AS HLevel,
				null AS SortPath 
				FROM ZnodeSearchFeature rel
				INNER JOIN Objects -- Note the reference to CTE table name (Recursive Join)
				ON rel.ParentSearchFeatureId = Objects.NextId-- OR ( rel.NextId= @id AND rel.Id!= @id )
				)
				select aa.SearchFeatureId,aa.ParentSearchFeatureId,aa.FeatureCode,aa.FeatureName,aa.IsAdvanceFeature,aa.ControlType,aa.HelpDescription,
				ss.SearchFeatureValue
				from ZnodeSearchFeature aa
				inner join Objects o on o.NextId =aa.SearchFeatureId
				left join  ZnodeSearchProfileFeatureMapping ss on ss.SearchFeatureId=aa.SearchFeatureId
				and SearchProfileId=@SearchProfileId 
				order by o.NextId,o.id 

 
		 END TRY 
		 BEGIN CATCH 
			DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), 
			@ErrorLine VARCHAR(100)= ERROR_LINE(), 
			@ErrorCall NVARCHAR(MAX)
	--		= 'EXEC Znode_GetCatalogList @WhereClause = '+@WhereClause+',@Rows='+CAST(@Rows AS
 --VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetZnodeSearchProfileList',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
		 END CATCH 
   END
GO
PRINT N'Creating [dbo].[Znode_GetSkuPricebyCatalog_Stock]...';


GO

CREATE PROCEDURE [dbo].[Znode_GetSkuPricebyCatalog_Stock]
(   @WhereClause		NVARCHAR(max),
    @Rows				INT            = 100,
    @PageNo				INT            = 1,
    @Order_BY			VARCHAR(1000)  = '',
    @RowsCount			INT  out,
	@LocaleId			INT			   = 0,
	@Sku                VARCHAR(MAX),
	@PortalId		    INT = 0,
	@currentUtcDate     VARCHAR(200) = '',
	@PublishProductId   TransferId READONLY,
	@IsInStock			varchar(5) 
		)		
AS 
/*
    Summary: This procedure is used to find the PriceList by catalog 
	Unit Testing: 
	
    @IsInStock --- for 1 - In stock data , for 0 - out off stock data , for -1 - all data

	 EXEC Znode_GetSkuPricebyCatalog @WhereClause='' ,@Order_BY='RetailPrice',@RowsCount= 0,@Sku = 'str324,pe3251,pe0978,kw001,lm001,li001,sf001,og002', @LocaleId = 1,@PortalId=1,@currentUtcDate='2017'
*/

     BEGIN
         BEGIN TRY
		 
             SET NOCOUNT ON;
             DECLARE @SQL NVARCHAR(MAX);
			 DECLARE @TBL_PricebyCatalog TABLE (SKU NVARCHAR(4000),RetailPrice numeric(28,6),RowId INT,CountNo INT,callforpricing int)
			 DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId()

			DECLARE  @tbl_PricingSku TABLE (sku nvarchar(200),RetailPrice numeric(28,6),SalesPrice numeric(28,6),TierPrice numeric(28,6),
						TierQuantity numeric(28,6),CurrencyCode varchar(200),CurrencySuffix varchar(2000), ExternalId NVARCHAR(2000))				
			
						INSERT INTO @tbl_PricingSku (sku,RetailPrice ,SalesPrice,TierPrice,TierQuantity,CurrencyCode,CurrencySuffix, ExternalId )	
						EXEC Znode_GetPublishProductPricingBySku  @Sku ,@portaliD  ,@currentUtcDate,2,@PublishProductId
		
					  SELECT DISTINCT sku,RetailPrice
					  INTO #tbl_PricingSku
					  FROM   @tbl_PricingSku 
					  UNION  ALL 
					  SELECT item sku,NULL RetailPrice
					  FROM dbo.split(@Sku,',') SP 
					  WHERE NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = Sp.Item) 
					  AND @Sku <> ''
					  UNION ALL 
					  SELECT SKU , NULL RetailPrice
					  FROM ZnodePublishProductDetail  a 
					  INNER JOIN @PublishProductId b ON (b.Id = a.PublishProductId) 
					  WHERE LocaleId = @DefaultLocaleId
					  AND NOT EXISTS (SELECT TOP 1 1  FROM @tbl_PricingSku TBSP WHERE TBSP.sku = a.SKU) 
					  AND @Sku = ''


					

	 SET @SQL = 
			       '
			DECLARE @tbl_ProductIDSKU Table(productid int,sku nvarchar(200))
					Insert into @tbl_ProductIDSKU (productid,sku)
					Select vw.PimProductId,vw.AttributeValue from View_PimProductAttributeValue vw where vw.AttributeCode = ''SKU'' and vw.AttributeValue in (select sku from #tbl_PricingSku);
					
			DECLARE @tbl_ProductIdCallForPricing Table(productid int,callforpricing nvarchar(200))
					Insert into @tbl_ProductIdCallForPricing (productid,callforpricing)
					select DISTINCT vw.PimProductId,vw.AttributeValue from View_PimProductAttributeValue vw where vw.AttributeCode = ''CallForPricing'' and vw.PimProductId in (Select PimProductid from View_PimProductAttributeValue where AttributeCode = ''SKU'' and AttributeValue in (select sku from #tbl_PricingSku))

            DECLARE @tbl_SKUCallForPricing Table(sku nvarchar(200),callforpricing int)
					Insert into @tbl_SKUCallForPricing (sku,callforpricing)
					select _ps.sku,Case when _pcp.callforpricing = ''true'' then 1 else 0 end callforpricing from @tbl_ProductIdCallForPricing _pcp join @tbl_ProductIDSKU _ps on _pcp.productid=_ps.productid where _ps.sku in (select sku from #tbl_PricingSku)

				
				   ;WITH CTE_GetFilteredList AS
					(
						SELECT DISTINCT A.sku,A.RetailPrice,B.callforpricing as CallForPricing, '+dbo.Fn_GetPagingRowId(@Order_BY,'A.SKU DESC ')+',Count(*)Over() CountNo
						FROM #tbl_PricingSku A 
						LEFT join @tbl_SKUCallForPricing B on A.sku = b.sku 
						WHERE 1=1
						'+dbo.Fn_GetFilterWhereClause(@WhereClause)+'			
					)
				
	
					SELECT SKU,RetailPrice,CallForPricing,RowId,CountNo
					FROM CTE_GetFilteredList
				   '+dbo.Fn_GetPaginationWhereClause(@PageNo,@Rows)+
					CASE WHEN @Order_BY = '' THEN '' ELSE ' ORDER BY '+ @Order_BY END

            PRINT @SQL
			INSERT INTO @TBL_PricebyCatalog(SKU,RetailPrice,CallForPricing,RowId,CountNo)
			EXEC sys.sp_sqlexec @SQL

			DECLARE @TBL_PricebyCatalogFinalResult TABLE ( SKU NVARCHAR(4000), RetailPrice numeric(28,6), Callforpricing int, RowId INT,CountNo INT )

			IF ( @IsInStock = '-1' )  
			BEGIN
				INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,CallForPricing, RowId ,CountNo )
				SELECT SKU,RetailPrice,CallForPricing, RowId ,CountNo
				FROM @TBL_PricebyCatalog
			END
			ELSE IF ( @IsInStock = '1' )
			BEGIN	
				  INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,CallForPricing, RowId ,CountNo )			
				  SELECT distinct TPC.SKU, TPC.RetailPrice, TPC.CallForPricing, TPC.RowId ,TPC.CountNo
				  FROM [dbo].[ZnodePimProductAttributeDefaultValue] oosdv
				  INNER JOIN ZnodePimAttributeValue oos ON oosdv.PimAttributeValueId = oos.PimAttributeValueId
				  INNER JOIN ZnodePimAttributeDefaultValue oosv ON oosdv.PimAttributeDefaultValueId = oosv.PimAttributeDefaultValueId
				  INNER JOIN ZnodePimAttributeValue sku ON oos.PimProductId = sku.PimProductId
				  INNER JOIN ZnodePimAttributeValueLocale skul ON sku.PimAttributeValueId = skul.PimAttributeValueId
				  INNER JOIN @TBL_PricebyCatalog TPC ON SKUL.AttributeValue = TPC.SKU
				  INNER JOIN ZnodePimAttribute Attr ON oos.PimAttributeId = Attr.PimAttributeId
				  WHERE Attr.AttributeCode = 'OutOfStockOptions' 
				  AND  EXISTS ( SELECT * FROM [dbo].[ZnodeInventory] I WHERE I.SKU = TPC.SKU AND 1 = (case when oosv.AttributeDefaultValueCode = 'DisablePurchasing' and I.Quantity < 1 then 0 else 1 end) )
			END
			ELSE IF ( @IsInStock = '0' )
			BEGIN
			      INSERT INTO @TBL_PricebyCatalogFinalResult ( SKU,RetailPrice,CallForPricing, RowId, CountNo )
				  SELECT distinct TPC.SKU, TPC.RetailPrice, TPC.CallForPricing, TPC.RowId ,TPC.CountNo
				  FROM [dbo].[ZnodePimProductAttributeDefaultValue] oosdv
				  INNER JOIN ZnodePimAttributeValue oos ON oosdv.PimAttributeValueId = oos.PimAttributeValueId
				  INNER JOIN ZnodePimAttributeDefaultValue oosv ON oosdv.PimAttributeDefaultValueId = oosv.PimAttributeDefaultValueId
				  INNER JOIN ZnodePimAttributeValue sku ON oos.PimProductId = sku.PimProductId
				  INNER JOIN ZnodePimAttributeValueLocale skul ON sku.PimAttributeValueId = skul.PimAttributeValueId
				  INNER JOIN @TBL_PricebyCatalog TPC ON SKUL.AttributeValue = TPC.SKU
				  INNER JOIN ZnodePimAttribute Attr ON oos.PimAttributeId = Attr.PimAttributeId
				  WHERE Attr.AttributeCode = 'OutOfStockOptions' 
				  AND  EXISTS ( SELECT TOP 1 1  FROM [dbo].[ZnodeInventory] I WHERE I.SKU = TPC.SKU  AND  oosv.AttributeDefaultValueCode = 'DisablePurchasing' GROUP BY I.SKU HAVING SUM(I.Quantity ) < 1  )
			END

			SET @RowsCount =ISNULL((SELECT TOP 1 CountNo FROM @TBL_PricebyCatalogFinalResult ),0)

			SELECT SKU,RetailPrice,CallForPricing FROM @TBL_PricebyCatalogFinalResult

		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSkuPricebyCatalog @WhereClause = '
			 +CAST(@WhereClause AS VARCHAR(MAX))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))
			 +',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(20))
			 +',@PortalId= '+cast(@PortalId as varchar(200))+',@currentUtcDate= '
			 +@currentUtcDate+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status,ERROR_MESSAGE();                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSkuPricebyCatalog',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

		END CATCH

	END
GO
PRINT N'Creating [dbo].[Znode_GetUserGlobalAttributeValue]...';


GO
CREATE   PROCEDURE [dbo].[Znode_GetUserGlobalAttributeValue]
(
    @EntityName       nvarchar(200) = 0,
    @GlobalEntityValueId   INT = 0--,
 --   @LocaleId       INT = 0,
	--@GlobalEnt
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and EntityValue attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC [Znode_GetGlobalEntityAttributeValue] 'Store',1
	 ROLLBACK TRAN

*/	 
     BEGIN
 BEGIN TRY
 declare @EntityValue nvarchar(200)

  DECLARE @V_MediaServerThumbnailPath VARCHAR(4000);
          SET @V_MediaServerThumbnailPath =
         (
             SELECT URL+ZMSM.ThumbnailFolderName+'/'
             FROM ZnodeMediaConfiguration ZMC 
			 INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
		     WHERE IsActive = 1 
         );


		 Select @EntityValue=Isnull(FirstName,'')+' '+Isnull(LastName,'')
		  from ZnodeUser
		 Where UserId=@GlobalEntityValueId

            Declare	@EntityAttributeList as	table  (GlobalEntityId int,EntityName nvarchar(300),EntityValue nvarchar(max),
			GlobalAttributeGroupId int,GlobalAttributeId int,AttributeTypeId int,AttributeTypeName nvarchar(300),
			 AttributeCode nvarchar(300) ,IsRequired bit,IsLocalizable bit,AttributeName  nvarchar(300) , HelpDescription nvarchar(max)
			) 
			 
			Declare @EntityAttributeValidationList  as	table  
			( GlobalAttributeId int, ControlName nvarchar(300), ValidationName nvarchar(300),SubValidationName nvarchar(300),
			 RegExp nvarchar(300), ValidationValue nvarchar(300),IsRegExp Bit)

			Declare	@EntityAttributeValueList as	table  (GlobalAttributeId int,AttributeValue nvarchar(max),
			GlobalAttributeValueId int,GlobalAttributeDefaultValueId int,AttributeDefaultValueCode nvarchar(300),
			AttributeDefaultValue nvarchar(300),
			MediaId int,MediaPath nvarchar(300) )



			Declare	@EntityAttributeDefaultValueList as	table  (GlobalAttributeDefaultValueId int,GlobalAttributeId int,
			AttributeDefaultValueCode nvarchar(300),AttributeDefaultValue nvarchar(300),RowId int,IsEditable bit,DisplayOrder int )


			
	insert into @EntityAttributeList
		(	GlobalEntityId ,EntityName ,EntityValue ,
		GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
		AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription  ) 
		SELECT qq.GlobalEntityId,qq.EntityName,@EntityValue EntityValue,ww.GlobalAttributeGroupId,
		c.GlobalAttributeId,c.AttributeTypeId,q.AttributeTypeName,c.AttributeCode,c.IsRequired,
		c.IsLocalizable,f.AttributeName,c.HelpDescription
     FROM dbo.ZnodeGlobalEntity AS qq
          INNER JOIN dbo.ZnodeGlobalGroupEntityMapper AS w ON qq.GlobalEntityId = w.GlobalEntityId
		  INNER JOIN dbo.ZnodeGlobalAttributeGroupMapper AS ww ON ww.GlobalAttributeGroupId = w.GlobalAttributeGroupId
          INNER JOIN dbo.ZnodeGlobalAttribute AS c ON ww.GlobalAttributeId = c.GlobalAttributeId
          INNER JOIN dbo.ZnodeAttributeType AS q ON c.AttributeTypeId = q.AttributeTypeId
          INNER JOIN dbo.ZnodeGlobalAttributeLocale AS f ON c.GlobalAttributeId = f.GlobalAttributeId
		  Where qq.EntityName=@EntityName


		  INSERT INTO @EntityAttributeValidationList
		  (GlobalAttributeId,ControlName , ValidationName ,SubValidationName ,
		RegExp, ValidationValue,IsRegExp)

		 Select aa.GlobalAttributeId,i.ControlName,i.Name AS ValidationName,j.ValidationName AS SubValidationName,
		j.RegExp,k.Name AS ValidationValue,CAST(CASE WHEN j.RegExp IS NULL THEN 0 ELSE 1 END AS BIT) AS IsRegExp
		
		fROM @EntityAttributeList aa
		  inner  JOIN dbo.ZnodeGlobalAttributeValidation AS k ON k.GlobalAttributeId = aa.GlobalAttributeId
          inner  JOIN dbo.ZnodeAttributeInputValidation AS i ON k.InputValidationId = i.InputValidationId
          LEFT  JOIN dbo.ZnodeAttributeInputValidationRule AS j ON k.InputValidationRuleId = j.InputValidationRuleId

		  insert into @EntityAttributeValueList
		  (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeValue ,MediaId,MediaPath)
		  Select GlobalAttributeId,aa.UserGlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
		  case when bb.MediaPath is not null then  @V_MediaServerThumbnailPath+bb.MediaPath--+'~'+convert(nvarchar(10),bb.MediaId) 
		  else bb.AttributeValue end,		  
		  bb.MediaId,bb.MediaPath
		  from  dbo.ZnodeUserGlobalAttributeValue aa
		   inner join ZnodeUserGlobalAttributeValueLocale bb ON bb.UserGlobalAttributeValueId = aa.UserGlobalAttributeValueId 
		  Where  UserId=@GlobalEntityValueId

		

		  

		  update aa
		  Set AttributeDefaultValueCode= h.AttributeDefaultValueCode,
              AttributeDefaultValue=g.AttributeDefaultValue,
			  GlobalAttributeDefaultValueId=g.GlobalAttributeDefaultValueId,
			  AttributeValue=case when aa.AttributeValue is  null then h.AttributeDefaultValueCode else aa.AttributeValue end
		  from  @EntityAttributeValueList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeDefaultValueId = aa.GlobalAttributeDefaultValueId                                       
          inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
          
		  insert into @EntityAttributeDefaultValueList
		  (GlobalAttributeDefaultValueId,GlobalAttributeId,AttributeDefaultValueCode,
			AttributeDefaultValue ,RowId ,IsEditable ,DisplayOrder )
		  Select  h.GlobalAttributeDefaultValueId, aa.GlobalAttributeId,h.AttributeDefaultValueCode,g.AttributeDefaultValue,0,ISNULL(h.IsEditable, 1),
		  h.DisplayOrder
		  from  @EntityAttributeList aa
		  inner JOIN dbo.ZnodeGlobalAttributeDefaultValue h ON h.GlobalAttributeId = aa.GlobalAttributeId
          inner JOIN dbo.ZnodeGlobalAttributeDefaultValueLocale g ON h.GlobalAttributeDefaultValueId = g.GlobalAttributeDefaultValueId
		  
		   if not exists (Select 1 from @EntityAttributeList )
			Begin
			insert into @EntityAttributeList
			(	GlobalEntityId ,EntityName ,EntityValue ,
			GlobalAttributeGroupId ,GlobalAttributeId ,AttributeTypeId ,AttributeTypeName ,
			AttributeCode  ,IsRequired ,IsLocalizable ,AttributeName,HelpDescription  ) 
			SELECT qq.GlobalEntityId,qq.EntityName,@EntityValue EntityValue,0 GlobalAttributeGroupId,
			0 GlobalAttributeId,0 AttributeTypeId,''AttributeTypeName,''AttributeCode,0 IsRequired,
			0 IsLocalizable,'' AttributeName,'' HelpDescription
			FROM dbo.ZnodeGlobalEntity AS qq
			 Where qq.EntityName=@EntityName 
			End
				

			SELECT GlobalEntityId,EntityName,EntityValue,GlobalAttributeGroupId,
			AA.GlobalAttributeId,AttributeTypeId,AttributeTypeName,AttributeCode,IsRequired,
			IsLocalizable,AttributeName,ControlName,ValidationName,SubValidationName,RegExp,
			ValidationValue,cast(isnull(IsRegExp,0) as bit)  IsRegExp,
			HelpDescription,AttributeValue,GlobalAttributeValueId,bb.GlobalAttributeDefaultValueId,
			aab.AttributeDefaultValueCode,
			aab.AttributeDefaultValue,isnull(aab.RowId,0)   RowId,cast(isnull(aab.IsEditable,0) as bit)   IsEditable
			,bb.MediaId
			fROM @EntityAttributeList AA				
			left join @EntityAttributeDefaultValueList aab on aab.GlobalAttributeId=AA.GlobalAttributeId	
			left join @EntityAttributeValidationList vl on vl.GlobalAttributeId=aa.GlobalAttributeId			
			LEFT JOIN @EntityAttributeValueList BB ON BB.GlobalAttributeId=AA.GlobalAttributeId		 
		    and ( (aab.GlobalAttributeDefaultValueId=bb.GlobalAttributeDefaultValueId	)
			or  ( bb.MediaId is not null and isnull(vl.ValidationName,'')='IsAllowMultiUpload'  and bb.GlobalAttributeDefaultValueId is null )
			or  ( bb.MediaId is  null and  bb.GlobalAttributeDefaultValueId is null ))
			order by GlobalEntityId,GlobalAttributeGroupId,GlobalAttributeId,aab.DisplayOrder,aab.GlobalAttributeDefaultValueId

			SELECT 0 AS ID,CAST(1 AS BIT) AS Status;       
		  END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= null       			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		 
          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetGlobalEntityValueAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_ImportInsertUpdateAccountGlobalAttributeValue]...';


GO


Create PROCEDURE [dbo].[Znode_ImportInsertUpdateAccountGlobalAttributeValue]
(
    @GlobalEntityValueDetail  [GlobalEntityValueDetail] READONLY,
    @AccountId            INT       ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0 )
AS
   /*
     Summary : To Insert / Update single Entity with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
			 DECLARE @GlobalEntityId INT,
			  @MultiSelectGroupAttributeTypeName nvarchar(200)='Select'
			 ,@MediaGroupAttributeTypeName nvarchar(200)='Media'
             DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @LocaleId INT 
			 DECLARE @TBL_Account TABLE (AccountId [int] NULL)
			 DECLARE @TBL_DeleteAccount TABLE (AccountId [int] NULL,AccountGlobalAttributeValueId int)
			 DECLARE @TBL_AttributeDefaultValueList TABLE 
			   (NewAccountGlobalAttributeValueId int,AccountGlobalAttributeValueId int,[AttributeValue] [varchar](300),[GlobalAttributeDefaultValueId] int,
			   [GlobalAttributeId] int,MediaId int,AccountGlobalAttributeValueLocaleId int)

			 DECLARE @TBL_MediaValueList TABLE 
			   (NewAccountGlobalAttributeValueId int,AccountGlobalAttributeValueId int,GlobalAttributeId int,
			   MediaId int,MediaPath nvarchar(300),AccountGlobalAttributeValueLocaleId int)
			 DECLARE @TBL_InsertGlobalEntityValue TABLE 
				([GlobalAttributeId] [int] NULL,GlobalAttributeDefaultValueId [int] NULL,AccountId [int] NULL,
					AccountGlobalAttributeValueId int null)
		 	 DECLARE @TBL_GlobalEntityValueDetail TABLE ([GlobalAttributeId] [int] NULL,
				[AttributeCode] [varchar](300),[GlobalAttributeDefaultValueId] [int],[GlobalAttributeValueId] [int],
				[LocaleId] [int],AccountId [int],[AttributeValue] [nvarchar](max),AccountGlobalAttributeValueId int,
				NewAccountGlobalAttributeValueId int,GroupAttributeTypeName [varchar](300))

				SELECT TOP 1 @LocaleId = LocaleId FROM @GlobalEntityValueDetail;

				Insert into @TBL_GlobalEntityValueDetail
				([GlobalAttributeId],[AttributeCode],[GlobalAttributeDefaultValueId],
				[GlobalAttributeValueId],[LocaleId],AccountId,[AttributeValue],GroupAttributeTypeName)
				Select dd.[GlobalAttributeId],dd.[AttributeCode],case when [GlobalAttributeDefaultValueId]=0 then null else 
				[GlobalAttributeDefaultValueId] end [GlobalAttributeDefaultValueId],
				case when [GlobalAttributeValueId]=0 then null else 
				[GlobalAttributeValueId] end [GlobalAttributeValueId],[LocaleId],[GlobalEntityValueId],[AttributeValue],ss.GroupAttributeType
				From @GlobalEntityValueDetail dd
				inner join [View_ZnodeGlobalAttribute] ss on ss.GlobalAttributeId=dd.GlobalAttributeId

				Update ss
				Set ss.AccountGlobalAttributeValueId=dd.AccountGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail ss
				inner join ZnodeAccountGlobalAttributeValue dd on dd.AccountId=ss.AccountId
				and dd.GlobalAttributeId=ss.GlobalAttributeId
				
				insert into @TBL_Account(AccountId)
				Select distinct  AccountId from @TBL_GlobalEntityValueDetail;

                insert into @TBL_DeleteAccount
				Select p.AccountId,a.AccountGlobalAttributeValueId
				from ZnodeAccountGlobalAttributeValue a
				inner join @TBL_Account p on p.AccountId=a.AccountId
				Where not exists(select 1 from @TBL_GlobalEntityValueDetail dd 
				where dd.AccountId=a.AccountId and dd.GlobalAttributeId=a.GlobalAttributeId)
				
				               
				Delete From ZnodeAccountGlobalAttributeValueLocale
				WHere exists (select 1 from @TBL_DeleteAccount dd 
				Where dd.AccountGlobalAttributeValueId=ZnodeAccountGlobalAttributeValueLocale.AccountGlobalAttributeValueId)

				Delete From ZnodeAccountGlobalAttributeValue
				WHere exists (select 1 from @TBL_DeleteAccount dd 
				Where dd.AccountGlobalAttributeValueId=ZnodeAccountGlobalAttributeValue.AccountGlobalAttributeValueId)
							

				INSERT INTO [dbo].[ZnodeAccountGlobalAttributeValue]
				([AccountId],[GlobalAttributeId],[GlobalAttributeDefaultValueId],[CreatedBy],[CreatedDate],
				[ModifiedBy],[ModifiedDate])
				 output Inserted.GlobalAttributeId,inserted.[GlobalAttributeDefaultValueId],inserted.AccountId,
				 inserted.AccountGlobalAttributeValueId into @TBL_InsertGlobalEntityValue
				Select [AccountId],[GlobalAttributeId],[GlobalAttributeDefaultValueId]
				,@AccountId [CreatedBy],@GetDate [CreatedDate],@AccountId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE AccountGlobalAttributeValueId IS NULL				

            
				Update dd
				Set dd.NewAccountGlobalAttributeValueId=ss.AccountGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_InsertGlobalEntityValue ss on dd.[AccountId]=ss.[AccountId]
				and dd.GlobalAttributeId=ss.GlobalAttributeId				

				INSERT INTO [dbo].[ZnodeAccountGlobalAttributeValueLocale]
			   ([AccountGlobalAttributeValueId],[LocaleId],[AttributeValue],[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select NewAccountGlobalAttributeValueId,[LocaleId],[AttributeValue],@AccountId [CreatedBy],@GetDate [CreatedDate],
				@AccountId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE NewAccountGlobalAttributeValueId IS not NULL
				and isnull([AttributeValue],'') <>''    
				and isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName		
				
				Update ss
				Set ss.AttributeValue=dd.AttributeValue,ss.ModifiedDate=@GetDate,ss.ModifiedBy=@AccountId
				From @TBL_GlobalEntityValueDetail dd
				inner join [dbo].[ZnodeAccountGlobalAttributeValueLocale] ss on ss.AccountGlobalAttributeValueId =dd.AccountGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName	

				insert into @TBL_AttributeDefaultValueList
				(NewAccountGlobalAttributeValueId,AccountGlobalAttributeValueId,dd.AttributeValue,GlobalAttributeId)
				Select dd.NewAccountGlobalAttributeValueId, dd.AccountGlobalAttributeValueId,ss.Item,dd.GlobalAttributeId
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				Update dd
				Set dd.GlobalAttributeDefaultValueId=ss.GlobalAttributeDefaultValueId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeGlobalAttributeDefaultValue] ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and dd.AttributeValue=ss.AttributeDefaultValueCode

				Update dd
				Set dd.AccountGlobalAttributeValueLocaleId=ss.AccountGlobalAttributeValueLocaleId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeAccountGlobalAttributeValueLocale] ss on dd.AccountGlobalAttributeValueId=ss.AccountGlobalAttributeValueId
				and ss.GlobalAttributeDefaultValueId=dd.GlobalAttributeDefaultValueId

				delete ss
				From @TBL_GlobalEntityValueDetail dd
				inner join [ZnodeAccountGlobalAttributeValueLocale] ss on dd.AccountGlobalAttributeValueId=ss.AccountGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName
				and not exists (Select 1 from @TBL_AttributeDefaultValueList cc 
				where cc.AccountGlobalAttributeValueLocaleId=ss.AccountGlobalAttributeValueLocaleId )

				INSERT INTO [dbo].[ZnodeAccountGlobalAttributeValueLocale]
			   ([AccountGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewAccountGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@AccountId [CreatedBy],@GetDate [CreatedDate],
				@AccountId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewAccountGlobalAttributeValueId=dd.NewAccountGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				INSERT INTO [dbo].[ZnodeAccountGlobalAttributeValueLocale]
			   ([AccountGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.AccountGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@AccountId [CreatedBy],@GetDate [CreatedDate],
				@AccountId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.AccountGlobalAttributeValueId=dd.AccountGlobalAttributeValueId				
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName
				and ss.AccountGlobalAttributeValueLocaleId is null 


				insert into @TBL_MediaValueList
				(NewAccountGlobalAttributeValueId,AccountGlobalAttributeValueId,GlobalAttributeId,MediaId)
				Select dd.NewAccountGlobalAttributeValueId, dd.AccountGlobalAttributeValueId,GlobalAttributeId,ss.Item 
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				Update dd
				Set dd.MediaPath=ss.Path
				from  @TBL_MediaValueList DD
				inner join ZnodeMedia ss on dd.MediaId=ss.MediaId

				Update dd
				Set dd.AccountGlobalAttributeValueLocaleId=ss.AccountGlobalAttributeValueLocaleId
				from  @TBL_MediaValueList DD
				inner join [ZnodeAccountGlobalAttributeValueLocale] ss on dd.AccountGlobalAttributeValueId=ss.AccountGlobalAttributeValueId
				and ss.MediaId=dd.MediaId

				delete ss
				From @TBL_GlobalEntityValueDetail dd
				inner join [ZnodeAccountGlobalAttributeValueLocale] ss on dd.AccountGlobalAttributeValueId=ss.AccountGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName
				and not exists (Select 1 from @TBL_MediaValueList cc 
				where cc.MediaId=ss.MediaId
				and cc.AccountGlobalAttributeValueId=dd.AccountGlobalAttributeValueId )

				INSERT INTO [dbo].[ZnodeAccountGlobalAttributeValueLocale]
			   ([AccountGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewAccountGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@AccountId [CreatedBy],@GetDate [CreatedDate],
				@AccountId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewAccountGlobalAttributeValueId=dd.NewAccountGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				INSERT INTO [dbo].[ZnodeAccountGlobalAttributeValueLocale]
			   ([AccountGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.AccountGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@AccountId [CreatedBy],@GetDate [CreatedDate],
				@AccountId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.AccountGlobalAttributeValueId=dd.AccountGlobalAttributeValueId				
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName
				and ss.AccountGlobalAttributeValueLocaleId is null 

				Update dd 
				Set dd.MediaPath=ss.MediaPath
				from [ZnodeAccountGlobalAttributeValueLocale] dd
                inner join @TBL_MediaValueList ss on 
				ss.AccountGlobalAttributeValueLocaleId =dd.AccountGlobalAttributeValueLocaleId										    
		
		     SELECT 0 AS ID,CAST(1 AS BIT) AS Status;    
			   
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdateGlobalEntity @AccountId = '+CAST(@AccountId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdateGlobalEntity',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_ImportInsertUpdateFormBuilderGlobalAttributeValue]...';


GO


CREATE PROCEDURE [dbo].[Znode_ImportInsertUpdateFormBuilderGlobalAttributeValue]
(   @GlobalEntityValueXml NVARCHAR(max),
  --  
	@FormCode          NVARCHAR(max),
	@UserGuid          NVARCHAR(max),
	@PortalId          int=0,
    @UserId            INT ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0 )
AS
   /*
     Summary : To Insert / Update single Entity with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
		     Declare    @GlobalEntityValueId int,@FormBuilderSubmitId int , @GlobalEntityValueDetail  [GlobalEntityValueDetail]


			 
 Select @GlobalEntityValueId=FormBuilderId 
 from ZnodeFormBuilder
 Where FormCode=@FormCode


			 DECLARE @ConvertedXML XML = REPLACE(REPLACE(REPLACE(@GlobalEntityValueXml,' & ', '&amp;'),'"', '&quot;'),'''', '&apos;')
             
             INSERT INTO @GlobalEntityValueDetail
			 (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeCode,AttributeValue
			 ,LocaleId,GlobalEntityValueId)
			SELECT Tbl.Col.value('GlobalAttributeId[1]', 'int') AS GlobalAttributeId,
			Tbl.Col.value('GlobalAttributeValueId[1]', 'int') AS GlobalAttributeValueId,
			Tbl.Col.value('GlobalAttributeDefaultValueId[1]', 'int') AS GlobalAttributeDefaultValueId,
			Tbl.Col.value('AttributeCode[1]', 'NVARCHAR(300)') AS AttributeCode,
			Tbl.Col.value('AttributeValue[1]', 'NVARCHAR(300)') AS AttributeValue,
			Tbl.Col.value('LocaleId[1]', 'INT') AS LocaleId,
			@GlobalEntityValueId AS GlobalEntityValueId
			FROM @ConvertedXML.nodes('//ArrayOfEntityAttributeDetailsModel/EntityAttributeDetailsModel') AS Tbl(Col);

			 DECLARE @GlobalEntityId INT,
			  @MultiSelectGroupAttributeTypeName nvarchar(200)='Select'
			 ,@MediaGroupAttributeTypeName nvarchar(200)='Media'
             DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @LocaleId INT 
			 DECLARE @TBL_FormBuilder TABLE (FormBuilderId [int] NULL)
			 DECLARE @TBL_DeleteFormBuilder TABLE (FormBuilderId [int] NULL,FormBuilderGlobalAttributeValueId int)
			 DECLARE @TBL_AttributeDefaultValueList TABLE 
			   (NewFormBuilderGlobalAttributeValueId int,FormBuilderGlobalAttributeValueId int,[AttributeValue] [varchar](300),[GlobalAttributeDefaultValueId] int,
			   [GlobalAttributeId] int,MediaId int,FormBuilderGlobalAttributeValueLocaleId int)

			 DECLARE @TBL_MediaValueList TABLE 
			   (NewFormBuilderGlobalAttributeValueId int,FormBuilderGlobalAttributeValueId int,GlobalAttributeId int,
			   MediaId int,MediaPath nvarchar(300),FormBuilderGlobalAttributeValueLocaleId int)
			 DECLARE @TBL_InsertGlobalEntityValue TABLE 
				([GlobalAttributeId] [int] NULL,GlobalAttributeDefaultValueId [int] NULL,FormBuilderId [int] NULL,
					FormBuilderGlobalAttributeValueId int null)
		 	 DECLARE @TBL_GlobalEntityValueDetail TABLE ([GlobalAttributeId] [int] NULL,
				[AttributeCode] [varchar](300),[GlobalAttributeDefaultValueId] [int],[GlobalAttributeValueId] [int],
				[LocaleId] [int],FormBuilderId [int],[AttributeValue] [nvarchar](max),FormBuilderGlobalAttributeValueId int,
				NewFormBuilderGlobalAttributeValueId int,GroupAttributeTypeName [varchar](300))

				SELECT TOP 1 @LocaleId = LocaleId FROM @GlobalEntityValueDetail;

				Insert into @TBL_GlobalEntityValueDetail
				([GlobalAttributeId],[AttributeCode],[GlobalAttributeDefaultValueId],
				[GlobalAttributeValueId],[LocaleId],FormBuilderId,[AttributeValue],GroupAttributeTypeName)
				Select dd.[GlobalAttributeId],dd.[AttributeCode],case when [GlobalAttributeDefaultValueId]=0 then null else 
				[GlobalAttributeDefaultValueId] end [GlobalAttributeDefaultValueId],
				case when [GlobalAttributeValueId]=0 then null else 
				[GlobalAttributeValueId] end [GlobalAttributeValueId],[LocaleId],[GlobalEntityValueId],[AttributeValue],ss.GroupAttributeType
				From @GlobalEntityValueDetail dd
				inner join [View_ZnodeGlobalAttribute] ss on ss.GlobalAttributeId=dd.GlobalAttributeId

				
				insert into @TBL_FormBuilder(FormBuilderId)
				Select distinct  FormBuilderId from @TBL_GlobalEntityValueDetail;

               INSERT INTO [dbo].[ZnodeFormBuilderSubmit]
               ([FormBuilderId],[PortalId],[UserId],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
			   Select @GlobalEntityValueId,@PortalId,@UserId,@UserId [CreatedBy],@GetDate [CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]

			   Set @FormBuilderSubmitId =SCOPE_IDENTITY()

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValue]
				(FormBuilderSubmitId,[GlobalAttributeId],[GlobalAttributeDefaultValueId],[CreatedBy],[CreatedDate],
				[ModifiedBy],[ModifiedDate])
				 output Inserted.GlobalAttributeId,inserted.[GlobalAttributeDefaultValueId],inserted.FormBuilderSubmitId,
				 inserted.FormBuilderGlobalAttributeValueId into @TBL_InsertGlobalEntityValue
				Select @FormBuilderSubmitId,[GlobalAttributeId],[GlobalAttributeDefaultValueId]
				,@UserId [CreatedBy],@GetDate [CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE FormBuilderGlobalAttributeValueId IS NULL				

            
				Update dd
				Set dd.NewFormBuilderGlobalAttributeValueId=ss.FormBuilderGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_InsertGlobalEntityValue ss on dd.[FormBuilderId]=ss.[FormBuilderId]
				and dd.GlobalAttributeId=ss.GlobalAttributeId				

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]
			   ([FormBuilderGlobalAttributeValueId],[LocaleId],[AttributeValue],[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select NewFormBuilderGlobalAttributeValueId,[LocaleId],[AttributeValue],@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE NewFormBuilderGlobalAttributeValueId IS not NULL
				and isnull([AttributeValue],'') <>''    
				and isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName		
				
				

				insert into @TBL_AttributeDefaultValueList
				(NewFormBuilderGlobalAttributeValueId,FormBuilderGlobalAttributeValueId,dd.AttributeValue,GlobalAttributeId)
				Select dd.NewFormBuilderGlobalAttributeValueId, dd.FormBuilderGlobalAttributeValueId,ss.Item,dd.GlobalAttributeId
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				Update dd
				Set dd.GlobalAttributeDefaultValueId=ss.GlobalAttributeDefaultValueId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeGlobalAttributeDefaultValue] ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and dd.AttributeValue=ss.AttributeDefaultValueCode

				
				

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]
			   ([FormBuilderGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewFormBuilderGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewFormBuilderGlobalAttributeValueId=dd.NewFormBuilderGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				


				insert into @TBL_MediaValueList
				(NewFormBuilderGlobalAttributeValueId,FormBuilderGlobalAttributeValueId,GlobalAttributeId,MediaId)
				Select dd.NewFormBuilderGlobalAttributeValueId, dd.FormBuilderGlobalAttributeValueId,GlobalAttributeId,ss.Item 
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				Update dd
				Set dd.MediaPath=ss.Path
				from  @TBL_MediaValueList DD
				inner join ZnodeMedia ss on dd.MediaId=ss.MediaId

				

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]
			   ([FormBuilderGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewFormBuilderGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewFormBuilderGlobalAttributeValueId=dd.NewFormBuilderGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

													    
		
		     SELECT 0 AS ID,CAST(1 AS BIT) AS Status;    
			   
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdateGlobalEntity @UserId = '+CAST(@UserId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdateGlobalEntity',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_ImportInsertUpdatePortalGlobalAttributeValue]...';


GO


CREATE PROCEDURE [dbo].[Znode_ImportInsertUpdatePortalGlobalAttributeValue]
(
    @GlobalEntityValueDetail  [GlobalEntityValueDetail] READONLY,
    @UserId            INT       ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0 )
AS
   /*
     Summary : To Insert / Update single Entity with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
			 DECLARE @GlobalEntityId INT,
			  @MultiSelectGroupAttributeTypeName nvarchar(200)='Select'
			 ,@MediaGroupAttributeTypeName nvarchar(200)='Media'
             DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @LocaleId INT 
			 DECLARE @TBL_Portal TABLE (PortalId [int] NULL)
			 DECLARE @TBL_DeletePortal TABLE (PortalId [int] NULL,PortalGlobalAttributeValueId int)
			 DECLARE @TBL_AttributeDefaultValueList TABLE 
			   (NewPortalGlobalAttributeValueId int,PortalGlobalAttributeValueId int,[AttributeValue] [varchar](300),[GlobalAttributeDefaultValueId] int,
			   [GlobalAttributeId] int,MediaId int,PortalGlobalAttributeValueLocaleId int)

			 DECLARE @TBL_MediaValueList TABLE 
			   (NewPortalGlobalAttributeValueId int,PortalGlobalAttributeValueId int,GlobalAttributeId int,
			   MediaId int,MediaPath nvarchar(300),PortalGlobalAttributeValueLocaleId int)
			 DECLARE @TBL_InsertGlobalEntityValue TABLE 
				([GlobalAttributeId] [int] NULL,GlobalAttributeDefaultValueId [int] NULL,PortalId [int] NULL,
					PortalGlobalAttributeValueId int null)
		 	 DECLARE @TBL_GlobalEntityValueDetail TABLE ([GlobalAttributeId] [int] NULL,
				[AttributeCode] [varchar](300),[GlobalAttributeDefaultValueId] [int],[GlobalAttributeValueId] [int],
				[LocaleId] [int],PortalId [int],[AttributeValue] [nvarchar](max),PortalGlobalAttributeValueId int,
				NewPortalGlobalAttributeValueId int,GroupAttributeTypeName [varchar](300))

				SELECT TOP 1 @LocaleId = LocaleId FROM @GlobalEntityValueDetail;

				Insert into @TBL_GlobalEntityValueDetail
				([GlobalAttributeId],[AttributeCode],[GlobalAttributeDefaultValueId],
				[GlobalAttributeValueId],[LocaleId],PortalId,[AttributeValue],GroupAttributeTypeName)
				Select dd.[GlobalAttributeId],dd.[AttributeCode],case when [GlobalAttributeDefaultValueId]=0 then null else 
				[GlobalAttributeDefaultValueId] end [GlobalAttributeDefaultValueId],
				case when [GlobalAttributeValueId]=0 then null else 
				[GlobalAttributeValueId] end [GlobalAttributeValueId],[LocaleId],[GlobalEntityValueId],[AttributeValue],ss.GroupAttributeType
				From @GlobalEntityValueDetail dd
				inner join [View_ZnodeGlobalAttribute] ss on ss.GlobalAttributeId=dd.GlobalAttributeId

				Update ss
				Set ss.PortalGlobalAttributeValueId=dd.PortalGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail ss
				inner join ZnodePortalGlobalAttributeValue dd on dd.PortalId=ss.PortalId
				and dd.GlobalAttributeId=ss.GlobalAttributeId
				
				insert into @TBL_Portal(PortalId)
				Select distinct  PortalId from @TBL_GlobalEntityValueDetail;

                insert into @TBL_DeletePortal
				Select p.PortalId,a.PortalGlobalAttributeValueId
				from ZnodePortalGlobalAttributeValue a
				inner join @TBL_Portal p on p.PortalId=a.PortalId
				Where not exists(select 1 from @TBL_GlobalEntityValueDetail dd 
				where dd.PortalId=a.PortalId and dd.GlobalAttributeId=a.GlobalAttributeId)
				
				               
				Delete From ZnodePortalGlobalAttributeValueLocale
				WHere exists (select 1 from @TBL_DeletePortal dd 
				Where dd.PortalGlobalAttributeValueId=ZnodePortalGlobalAttributeValueLocale.PortalGlobalAttributeValueId)

				Delete From ZnodePortalGlobalAttributeValue
				WHere exists (select 1 from @TBL_DeletePortal dd 
				Where dd.PortalGlobalAttributeValueId=ZnodePortalGlobalAttributeValue.PortalGlobalAttributeValueId)
							

				INSERT INTO [dbo].[ZnodePortalGlobalAttributeValue]
				([PortalId],[GlobalAttributeId],[GlobalAttributeDefaultValueId],[CreatedBy],[CreatedDate],
				[ModifiedBy],[ModifiedDate])
				 output Inserted.GlobalAttributeId,inserted.[GlobalAttributeDefaultValueId],inserted.PortalId,
				 inserted.PortalGlobalAttributeValueId into @TBL_InsertGlobalEntityValue
				Select [PortalId],[GlobalAttributeId],[GlobalAttributeDefaultValueId]
				,@UserId [CreatedBy],@GetDate [CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE PortalGlobalAttributeValueId IS NULL				

            
				Update dd
				Set dd.NewPortalGlobalAttributeValueId=ss.PortalGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_InsertGlobalEntityValue ss on dd.[PortalId]=ss.[PortalId]
				and dd.GlobalAttributeId=ss.GlobalAttributeId				

				INSERT INTO [dbo].[ZnodePortalGlobalAttributeValueLocale]
			   ([PortalGlobalAttributeValueId],[LocaleId],[AttributeValue],[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select NewPortalGlobalAttributeValueId,[LocaleId],[AttributeValue],@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE NewPortalGlobalAttributeValueId IS not NULL
				and isnull([AttributeValue],'') <>''    
				and isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName		
				
				Update ss
				Set ss.AttributeValue=dd.AttributeValue,ss.ModifiedDate=@GetDate,ss.ModifiedBy=@UserId
				From @TBL_GlobalEntityValueDetail dd
				inner join [dbo].[ZnodePortalGlobalAttributeValueLocale] ss on ss.PortalGlobalAttributeValueId =dd.PortalGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName	

				insert into @TBL_AttributeDefaultValueList
				(NewPortalGlobalAttributeValueId,PortalGlobalAttributeValueId,dd.AttributeValue,GlobalAttributeId)
				Select dd.NewPortalGlobalAttributeValueId, dd.PortalGlobalAttributeValueId,ss.Item,dd.GlobalAttributeId
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				Update dd
				Set dd.GlobalAttributeDefaultValueId=ss.GlobalAttributeDefaultValueId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeGlobalAttributeDefaultValue] ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and dd.AttributeValue=ss.AttributeDefaultValueCode

				Update dd
				Set dd.PortalGlobalAttributeValueLocaleId=ss.PortalGlobalAttributeValueLocaleId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodePortalGlobalAttributeValueLocale] ss on dd.PortalGlobalAttributeValueId=ss.PortalGlobalAttributeValueId
				and ss.GlobalAttributeDefaultValueId=dd.GlobalAttributeDefaultValueId

				delete ss
				From @TBL_GlobalEntityValueDetail dd
				inner join [ZnodePortalGlobalAttributeValueLocale] ss on dd.PortalGlobalAttributeValueId=ss.PortalGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName
				and not exists (Select 1 from @TBL_AttributeDefaultValueList cc 
				where cc.PortalGlobalAttributeValueLocaleId=ss.PortalGlobalAttributeValueLocaleId )

				INSERT INTO [dbo].[ZnodePortalGlobalAttributeValueLocale]
			   ([PortalGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewPortalGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewPortalGlobalAttributeValueId=dd.NewPortalGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				INSERT INTO [dbo].[ZnodePortalGlobalAttributeValueLocale]
			   ([PortalGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.PortalGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.PortalGlobalAttributeValueId=dd.PortalGlobalAttributeValueId				
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName
				and ss.PortalGlobalAttributeValueLocaleId is null 


				insert into @TBL_MediaValueList
				(NewPortalGlobalAttributeValueId,PortalGlobalAttributeValueId,GlobalAttributeId,MediaId)
				Select dd.NewPortalGlobalAttributeValueId, dd.PortalGlobalAttributeValueId,GlobalAttributeId,ss.Item 
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				Update dd
				Set dd.MediaPath=ss.Path
				from  @TBL_MediaValueList DD
				inner join ZnodeMedia ss on dd.MediaId=ss.MediaId

				Update dd
				Set dd.PortalGlobalAttributeValueLocaleId=ss.PortalGlobalAttributeValueLocaleId
				from  @TBL_MediaValueList DD
				inner join [ZnodePortalGlobalAttributeValueLocale] ss on dd.PortalGlobalAttributeValueId=ss.PortalGlobalAttributeValueId
				and ss.MediaId=dd.MediaId

				delete ss
				From @TBL_GlobalEntityValueDetail dd
				inner join [ZnodePortalGlobalAttributeValueLocale] ss on dd.PortalGlobalAttributeValueId=ss.PortalGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName
				and not exists (Select 1 from @TBL_MediaValueList cc 
				where cc.MediaId=ss.MediaId 
				and cc.PortalGlobalAttributeValueId=dd.PortalGlobalAttributeValueId )

				INSERT INTO [dbo].[ZnodePortalGlobalAttributeValueLocale]
			   ([PortalGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewPortalGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewPortalGlobalAttributeValueId=dd.NewPortalGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				INSERT INTO [dbo].[ZnodePortalGlobalAttributeValueLocale]
			   ([PortalGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.PortalGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.PortalGlobalAttributeValueId=dd.PortalGlobalAttributeValueId				
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName
				and ss.PortalGlobalAttributeValueLocaleId is null 

				Update dd 
				Set dd.MediaPath=ss.MediaPath
				from [ZnodePortalGlobalAttributeValueLocale] dd
                inner join @TBL_MediaValueList ss on 
				ss.PortalGlobalAttributeValueLocaleId =dd.PortalGlobalAttributeValueLocaleId										    
		
		     SELECT 0 AS ID,CAST(1 AS BIT) AS Status;    
			   
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdateGlobalEntity @UserId = '+CAST(@UserId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdateGlobalEntity',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_ImportInsertUpdateUserGlobalAttributeValue]...';


GO


CREATE PROCEDURE [dbo].[Znode_ImportInsertUpdateUserGlobalAttributeValue]
(
    @GlobalEntityValueDetail  [GlobalEntityValueDetail] READONLY,
    @UserId            INT       ,
    @status            BIT    OUT,
    @IsNotReturnOutput BIT    = 0 )
AS
   /*
     Summary : To Insert / Update single Entity with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
			 DECLARE @GlobalEntityId INT,
			  @MultiSelectGroupAttributeTypeName nvarchar(200)='Select'
			 ,@MediaGroupAttributeTypeName nvarchar(200)='Media'
             DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @LocaleId INT 
			 DECLARE @TBL_User TABLE (UserId [int] NULL)
			 DECLARE @TBL_DeleteUser TABLE (UserId [int] NULL,UserGlobalAttributeValueId int)
			 DECLARE @TBL_AttributeDefaultValueList TABLE 
			   (NewUserGlobalAttributeValueId int,UserGlobalAttributeValueId int,[AttributeValue] [varchar](300),[GlobalAttributeDefaultValueId] int,
			   [GlobalAttributeId] int,MediaId int,UserGlobalAttributeValueLocaleId int)

			 DECLARE @TBL_MediaValueList TABLE 
			   (NewUserGlobalAttributeValueId int,UserGlobalAttributeValueId int,GlobalAttributeId int,
			   MediaId int,MediaPath nvarchar(300),UserGlobalAttributeValueLocaleId int)
			 DECLARE @TBL_InsertGlobalEntityValue TABLE 
				([GlobalAttributeId] [int] NULL,GlobalAttributeDefaultValueId [int] NULL,UserId [int] NULL,
					UserGlobalAttributeValueId int null)
		 	 DECLARE @TBL_GlobalEntityValueDetail TABLE ([GlobalAttributeId] [int] NULL,
				[AttributeCode] [varchar](300),[GlobalAttributeDefaultValueId] [int],[GlobalAttributeValueId] [int],
				[LocaleId] [int],UserId [int],[AttributeValue] [nvarchar](max),UserGlobalAttributeValueId int,
				NewUserGlobalAttributeValueId int,GroupAttributeTypeName [varchar](300))

				SELECT TOP 1 @LocaleId = LocaleId FROM @GlobalEntityValueDetail;

				Insert into @TBL_GlobalEntityValueDetail
				([GlobalAttributeId],[AttributeCode],[GlobalAttributeDefaultValueId],
				[GlobalAttributeValueId],[LocaleId],UserId,[AttributeValue],GroupAttributeTypeName)
				Select dd.[GlobalAttributeId],dd.[AttributeCode],case when [GlobalAttributeDefaultValueId]=0 then null else 
				[GlobalAttributeDefaultValueId] end [GlobalAttributeDefaultValueId],
				case when [GlobalAttributeValueId]=0 then null else 
				[GlobalAttributeValueId] end [GlobalAttributeValueId],[LocaleId],[GlobalEntityValueId],[AttributeValue],ss.GroupAttributeType
				From @GlobalEntityValueDetail dd
				inner join [View_ZnodeGlobalAttribute] ss on ss.GlobalAttributeId=dd.GlobalAttributeId

				Update ss
				Set ss.UserGlobalAttributeValueId=dd.UserGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail ss
				inner join ZnodeUserGlobalAttributeValue dd on dd.UserId=ss.UserId
				and dd.GlobalAttributeId=ss.GlobalAttributeId
				
				insert into @TBL_User(UserId)
				Select distinct  UserId from @TBL_GlobalEntityValueDetail;

                insert into @TBL_DeleteUser
				Select p.UserId,a.UserGlobalAttributeValueId
				from ZnodeUserGlobalAttributeValue a
				inner join @TBL_User p on p.UserId=a.UserId
				Where not exists(select 1 from @TBL_GlobalEntityValueDetail dd 
				where dd.UserId=a.UserId and dd.GlobalAttributeId=a.GlobalAttributeId)
				
				               
				Delete From ZnodeUserGlobalAttributeValueLocale
				WHere exists (select 1 from @TBL_DeleteUser dd 
				Where dd.UserGlobalAttributeValueId=ZnodeUserGlobalAttributeValueLocale.UserGlobalAttributeValueId)

				Delete From ZnodeUserGlobalAttributeValue
				WHere exists (select 1 from @TBL_DeleteUser dd 
				Where dd.UserGlobalAttributeValueId=ZnodeUserGlobalAttributeValue.UserGlobalAttributeValueId)
							

				INSERT INTO [dbo].[ZnodeUserGlobalAttributeValue]
				([UserId],[GlobalAttributeId],[GlobalAttributeDefaultValueId],[CreatedBy],[CreatedDate],
				[ModifiedBy],[ModifiedDate])
				 output Inserted.GlobalAttributeId,inserted.[GlobalAttributeDefaultValueId],inserted.UserId,
				 inserted.UserGlobalAttributeValueId into @TBL_InsertGlobalEntityValue
				Select [UserId],[GlobalAttributeId],[GlobalAttributeDefaultValueId]
				,@UserId [CreatedBy],@GetDate [CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE UserGlobalAttributeValueId IS NULL				

            
				Update dd
				Set dd.NewUserGlobalAttributeValueId=ss.UserGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_InsertGlobalEntityValue ss on dd.[UserId]=ss.[UserId]
				and dd.GlobalAttributeId=ss.GlobalAttributeId				

				INSERT INTO [dbo].[ZnodeUserGlobalAttributeValueLocale]
			   ([UserGlobalAttributeValueId],[LocaleId],[AttributeValue],[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select NewUserGlobalAttributeValueId,[LocaleId],[AttributeValue],@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE NewUserGlobalAttributeValueId IS not NULL
				and isnull([AttributeValue],'') <>''    
				and isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName		
				
				Update ss
				Set ss.AttributeValue=dd.AttributeValue,ss.ModifiedDate=@GetDate,ss.ModifiedBy=@UserId
				From @TBL_GlobalEntityValueDetail dd
				inner join [dbo].[ZnodeUserGlobalAttributeValueLocale] ss on ss.UserGlobalAttributeValueId =dd.UserGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName	

				insert into @TBL_AttributeDefaultValueList
				(NewUserGlobalAttributeValueId,UserGlobalAttributeValueId,dd.AttributeValue,GlobalAttributeId)
				Select dd.NewUserGlobalAttributeValueId, dd.UserGlobalAttributeValueId,ss.Item,dd.GlobalAttributeId
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				Update dd
				Set dd.GlobalAttributeDefaultValueId=ss.GlobalAttributeDefaultValueId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeGlobalAttributeDefaultValue] ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and dd.AttributeValue=ss.AttributeDefaultValueCode

				Update dd
				Set dd.UserGlobalAttributeValueLocaleId=ss.UserGlobalAttributeValueLocaleId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeUserGlobalAttributeValueLocale] ss on dd.UserGlobalAttributeValueId=ss.UserGlobalAttributeValueId
				and ss.GlobalAttributeDefaultValueId=dd.GlobalAttributeDefaultValueId

				delete ss
				From @TBL_GlobalEntityValueDetail dd
				inner join [ZnodeUserGlobalAttributeValueLocale] ss on dd.UserGlobalAttributeValueId=ss.UserGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName
				and not exists (Select 1 from @TBL_AttributeDefaultValueList cc 
				where cc.UserGlobalAttributeValueLocaleId=ss.UserGlobalAttributeValueLocaleId )

				INSERT INTO [dbo].[ZnodeUserGlobalAttributeValueLocale]
			   ([UserGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewUserGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewUserGlobalAttributeValueId=dd.NewUserGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				INSERT INTO [dbo].[ZnodeUserGlobalAttributeValueLocale]
			   ([UserGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.UserGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.UserGlobalAttributeValueId=dd.UserGlobalAttributeValueId				
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName
				and ss.UserGlobalAttributeValueLocaleId is null 


				insert into @TBL_MediaValueList
				(NewUserGlobalAttributeValueId,UserGlobalAttributeValueId,GlobalAttributeId,MediaId)
				Select dd.NewUserGlobalAttributeValueId, dd.UserGlobalAttributeValueId,GlobalAttributeId,ss.Item 
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				Update dd
				Set dd.MediaPath=ss.Path
				from  @TBL_MediaValueList DD
				inner join ZnodeMedia ss on dd.MediaId=ss.MediaId

				Update dd
				Set dd.UserGlobalAttributeValueLocaleId=ss.UserGlobalAttributeValueLocaleId
				from  @TBL_MediaValueList DD
				inner join [ZnodeUserGlobalAttributeValueLocale] ss on dd.UserGlobalAttributeValueId=ss.UserGlobalAttributeValueId
				and ss.MediaId=dd.MediaId

				delete ss
				From @TBL_GlobalEntityValueDetail dd
				inner join [ZnodeUserGlobalAttributeValueLocale] ss on dd.UserGlobalAttributeValueId=ss.UserGlobalAttributeValueId
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName
				and not exists (Select 1 from @TBL_MediaValueList cc 
				where cc.MediaId=ss.MediaId
				and cc.UserGlobalAttributeValueId=dd.UserGlobalAttributeValueId )

				INSERT INTO [dbo].[ZnodeUserGlobalAttributeValueLocale]
			   ([UserGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewUserGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewUserGlobalAttributeValueId=dd.NewUserGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

				INSERT INTO [dbo].[ZnodeUserGlobalAttributeValueLocale]
			   ([UserGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.UserGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.UserGlobalAttributeValueId=dd.UserGlobalAttributeValueId				
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName
				and ss.UserGlobalAttributeValueLocaleId is null 

				Update dd 
				Set dd.MediaPath=ss.MediaPath
				from [ZnodeUserGlobalAttributeValueLocale] dd
                inner join @TBL_MediaValueList ss on 
				ss.UserGlobalAttributeValueLocaleId =dd.UserGlobalAttributeValueLocaleId										    
		
		     SELECT 0 AS ID,CAST(1 AS BIT) AS Status;    
			   
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdateGlobalEntity @UserId = '+CAST(@UserId AS VARCHAR(50))+',@IsNotReturnOutput='+CAST(@IsNotReturnOutput AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdateGlobalEntity',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_ImportProcessCategoryData]...';


GO
CREATE  PROCEDURE [dbo].[Znode_ImportProcessCategoryData](@TblGUID nvarchar(255) = '',@ERPTaskSchedulerId int  )
AS
BEGIN

	--unit testing
	--EXEC Znode_ImportProcessCategoryData  @TblGUID = '45345354345',@ERPTaskSchedulerId =  19

	--Create Table PRDHA (Category nvarchar(100), [Parent Style] nvarchar(100))
	--insert into PRDHA (Category , [Parent Style]) VALUES ('Soft Shell','9024CLO')


	SET NOCOUNT ON;
	Declare @NewuGuId nvarchar(255)
	set @NewuGuId = newid()
	Declare @CurrencyId int 
	DECLARE @TemplateId INT , @PortalId INT 
	DECLARE @LocaleId  int = dbo.Fn_GetDefaultLocaleId()
	SELECT TOP 1 @PortalId  = PortalId FROM dbo.ZnodePortal
	
	DECLARE @CreateTableScriptSql NVARCHAR(MAX) = '', 
		    @InsertColumnName NVARCHAR(MAX), 
			@ImportTableColumnName NVARCHAR(MAX),
			@DefaultFamilyId  INT = dbo.Fn_GetCategoryDefaultFamilyId(),
			@TableName NVARCHAR(500) = 'PRDHA',
			@TableNameForSKU NVARCHAR(500) = 'PRDD',			
			@Sql NVARCHAR(MAX) = '',
			@RowNum int, 
			@MaxRowNum int,
			@FirstStep nvarchar(255),
			@PriceTableName  nvarchar(255)
	
		DECLARE @CategoryAttributId int;

		SET @CategoryAttributId =
		(
			SELECT TOP 1 PimAttributeId
			FROM ZnodePimAttribute AS ZPA
			WHERE ZPA.AttributeCode = 'CategoryName' AND 
				  ZPA.IsCategory = 1
		);
	SET @TableName = 'tempdb..[##' + @TableName + '_' + @TblGUID + ']' 
	SET @TableNameForSKU = 'tempdb..[##' + @TableNameForSKU + '_' + @TblGUID + ']' 
	
	--SET @TableName = '[' + @TableName + '_' + @TblGUID + ']' 
	--SET @TableNameForSKU = '[' + @TableNameForSKU + '_' + @TblGUID + ']' 

	IF OBJECT_ID('tempdb.dbo.#CategoryData', 'U') IS NOT NULL 
		DROP TABLE #CategoryData 
	CREATE TABLE #CategoryData (CategoryBanner nvarchar(max),CategoryName nvarchar(max),CategoryTitle nvarchar(max),DisplayOrderCategory nvarchar(max),
								LongDescription nvarchar(max),ShortDescription nvarchar(max),CategoryImage nvarchar(max) ,IsActive int , guId nvarchar(300))

	SET @SQL = 
	'INSERT INTO #CategoryData (CategoryBanner,CategoryName,CategoryTitle ,DisplayOrderCategory,IsActive,GUID)
	 SELECT  Distinct ltrim(rtrim(Replace(PRD.Category,''"'',''''))),ltrim(rtrim(Replace(PRD.Category,''"'',''''))), 
	 ltrim(rtrim(Replace(PRD.Category,''"'',''''))),1,1, ''' + @TblGUID + '''   FROM ' +@TableName+ ' PRD
	 where ltrim(rtrim(Replace(PRD.Category,''"'',''''))) NOT in 
	 (SELECT ltrim(rtrim(ZPCAL.CategoryValue))
			   FROM ZnodePimCategoryAttributeValue AS ZPCA	INNER JOIN	ZnodePimCategoryAttributeValueLocale AS ZPCAL
					ON ZPCA.PimAttributeId = ' + convert(nvarchar(100),@CategoryAttributId)  + ' AND 
					ZPCA.PimCategoryAttributeValueId = ZPCAL.PimCategoryAttributeValueId) '
	EXEC sp_executesql @SQL

	--SET @SQL = 'Select * from #CategoryData'
	--EXEC sp_executesql @SQL

	IF OBJECT_ID('tempdb.dbo.#CategoryDataAssociation', 'U') IS NOT NULL 
		DROP TABLE #CategoryDataAssociation
	CREATE TABLE #CategoryDataAssociation (CategoryName nvarchar(max),SKU nvarchar(max),DisplayOrder int,IsActive int , GUID nvarchar(300))
	
	SET @SQL = 
	'INSERT INTO #CategoryDataAssociation (CategoryName,SKU,DisplayOrder,IsActive,GUID)
	 SELECT  Distinct ltrim(rtrim(Replace(PRD.Category,''"'',''''))) Category ,ltrim(rtrim(Replace(PRDD.[Sku#],''"'',''''))) [Sku#] ,1,1, ''' + @TblGUID + '''  FROM ' +@TableName+ ' PRD INNER JOIN ' +@TableNameForSKU+  + ' PRDD ON '
	 + ' ltrim(rtrim(Replace(PRD.[Parent Style],''"'',''''))) = ltrim(rtrim(Replace(PRDD.[Parent Style],''"'','''')))  
	 AND ltrim(rtrim(Replace(PRD.[Website],''"'',''''))) = ltrim(rtrim(Replace(PRDD.[Website],''"'','''')))  '

	EXEC sp_executesql @SQL
	

	if Exists (Select TOP 1 1 from tempdb..[#CategoryData])
	Begin
		SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CategoryTemplate'

		EXEC Znode_ImportData @TableName = 'tempdb..[#CategoryData]',	@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
		      @UserId = 2,@PortalId = @PortalId,@LocaleId = @LocaleId,@DefaultFamilyId = @DefaultFamilyId,@PriceListId = 0, @CountryCode = ''
			 ,@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 1, @StepName = 'Import' ,@ERPTaskSchedulerId  = @ERPTaskSchedulerId , @IsDebug =1 

	
		SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CategoryAssociation'

		EXEC Znode_ImportData @TableName = 'tempdb..[#CategoryDataAssociation]',	@NewGUID =  @TblGUID ,@TemplateId = @TemplateId,
			 @UserId = 2,@PortalId = @PortalId,@LocaleId = @LocaleId,@DefaultFamilyId = 0,@PriceListId = 0, 
			 @CountryCode = ''--, @IsDebug =1 
			,@IsDoNotCreateJob = 1 , @IsDoNotStartJob = 0, @StepName = 'Import1'
			,@StartStepName  ='Import',@step_id = 2, @IsDebug =1 
			,@Nextstep_id  = 1,@ERPTaskSchedulerId  = @ERPTaskSchedulerId  
	END
	ELSE 
	Begin
		SELECT @TemplateId= ImportTemplateId FROM dbo.ZnodeImportTemplate WHERE TemplateName = 'CategoryAssociation'
		--EXEC Znode_ImportData @TableName = 't' ,@NewGUID = '0e8714de-abcb-423d-ad2a-fb219815c435' ,@TemplateId = 8,
		--@UserId = 2,@PortalId = 1,@LocaleId = 1,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = '',--, @IsDebug =1 
		--@ERPTaskSchedulerId  = 19

		EXEC Znode_ImportData @TableName = 'tempdb..[#CategoryDataAssociation]' ,@NewGUID = @TblGUID ,@TemplateId = @TemplateId,
				@UserId = 2,@PortalId = @PortalId,@LocaleId = @LocaleId,@DefaultFamilyId = 0,@PriceListId = 0, @CountryCode = '',--, @IsDebug =1 
				@IsDoNotCreateJob = 0 , @IsDoNotStartJob = 0,@Nextstep_id  = 1 ,
				@ERPTaskSchedulerId  = @ERPTaskSchedulerId  ,@Isdebug =1 
	END
	select 'Job create successfully.' 
END
GO
PRINT N'Creating [dbo].[Znode_InsertUpdateDownloadableProductsOrderDetail]...';


GO
 CREATE  PROCEDURE [dbo].[Znode_InsertUpdateDownloadableProductsOrderDetail]
(  
	@OMSDownloadableProduct  OMSDownloadableProduct READONLY,
	@UserId int 
)		
AS 
/*
    Summary: This procedure is used to insert data into table ZnodeOmsDownloadableProductKey
			 retrive data from ZnodePimDownloadableProductKey table for specific key of respective SKU
			 as per sold quantity with different key.
			  
	Unit Testing: 
	begin transaction 
	declare @p7 int
	set @p7=NULL
	declare @p12 dbo.OMSDownloadableProduct
	insert into @p12 values(123,'234234234234',4)
	insert into @p12 values(123,'WTR 07M4431',4)
		exec sp_executesql N'Znode_InsertUpdateDownloadableProductsOrderDetail  @OMSDownloadableProduct_local,@UserId',
		N'@OMSDownloadableProduct_local [dbo].[OMSDownloadableProduct] READONLY, @UserId int 
	',@OMSDownloadableProduct_local=@p12,@UserId =2 
	select @p7
	rollback transaction 


*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
			 Declare @RowCount int, @StartWith int ,@ItemNo int ,  @Quantity int , @SQLQuery  nvarchar(max),@SKU nvarchar(300), @OmsOrderLineItemsId int 
			 Declare @SKUSoldWithKeys TABLE (SKU nvarchar(300),ProductName nvarchar(300),PimDownloadableProductKeyId int,DownloadableProductKey nvarchar(250),DownloadableProductURL nvarchar(2000))
			 Declare @SKUSoldWithKeysOutPut TABLE (SKU nvarchar(300),ProductName nvarchar(300), PimDownloadableProductKeyId int,DownloadableProductKey nvarchar(250),DownloadableProductURL nvarchar(2000),[OmsOrderLineItemsId] [int] )

			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 SET @StartWith  =1 

			Declare   @OMSDownloadableProduct_local AS TABLE(
			[RowNum] [int]  Identity(1,1),
			[OmsOrderLineItemsId] [int] NULL,
			[SKU] [varchar](300) NULL,
			[Quantity] [numeric](26, 8) NULL
			)

			insert into @OMSDownloadableProduct_local
			select * from @OMSDownloadableProduct

			 Select @RowCount = MAx(RowNum) from @OMSDownloadableProduct_local 
			 While @StartWith <= @RowCount 
			 Begin
					SET @SKU = ''
					SET @Quantity =  0 
					SET @OmsOrderLineItemsId = 0 

					Select @Quantity = Quantity ,@SKU = SKU , @OmsOrderLineItemsId = [OmsOrderLineItemsId]  from @OMSDownloadableProduct_local where RowNum = @StartWith 

					SET @SQLQuery   = 
					'select TOP ' + Convert(Varchar(10), @Quantity ) + ' ZPDP.SKU,ZPDP.ProductName, ZPDPK.PimDownloadableProductKeyId, ZPDPK.DownloadableProductKey,ZPDPK.DownloadableProductURL
					from ZnodePimDownloadableProduct ZPDP Inner join  ZnodePimDownloadableProductKey ZPDPK ON 
					ZPDP.PimDownloadableProductId =ZPDPK.PimDownloadableProductId where ZPDP.SKU  =''' +  @SKU + ''' AND ZPDPK.IsUsed = 0 '
					
					insert into @SKUSoldWithKeys 
					EXEC sys.sp_sqlexec @SQLQuery;
					
					insert into @SKUSoldWithKeysOutPut
					(SKU,ProductName,PimDownloadableProductKeyId,DownloadableProductKey,DownloadableProductURL,[OmsOrderLineItemsId]) 
					Select SKU,ProductName,PimDownloadableProductKeyId,DownloadableProductKey,DownloadableProductURL,@OmsOrderLineItemsId  from @SKUSoldWithKeys 
					insert into ZnodeOmsDownloadableProductKey (OmsOrderLineItemsId,PimDownloadableProductKeyId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
					select @OmsOrderLineItemsId, PimDownloadableProductKeyId,@UserId,@GetDate,@UserId,@GetDate  from @SKUSoldWithKeys 
										
					Update PDP SET PDP.IsUsed =1 from 
					@SKUSoldWithKeys SSWK inner join ZnodePimDownloadableProductKey  PDP 
					on SSWK.PimDownloadableProductKeyId = PDP.PimDownloadableProductKeyId

					SET @StartWith  = @StartWith  + 1 
			 End   
			 Select * from @SKUSoldWithKeysOutPut 	
		END TRY
		BEGIN CATCH
		DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_InsertUpdateDownloadableProductsOrderDetail @OMSDownloadableProduct_local = '
			 
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status,ERROR_MESSAGE();                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_InsertUpdateDownloadableProductsOrderDetail',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

		END CATCH

	END
GO
PRINT N'Creating [dbo].[Znode_InsertUpdateFormBuilderGlobalAttributeValue]...';


GO



CREATE PROCEDURE [dbo].[Znode_InsertUpdateFormBuilderGlobalAttributeValue]
(   @GlobalEntityValueXml NVARCHAR(max),
	@FormBuilderId     int,
	@LocaleId          int,
	@PortalId          int=0,
    @UserId            INT  )
AS
   /*
     Summary : To Insert / Update single Entity with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
		     Declare  @status            BIT,  @GlobalEntityValueId int,@NewUserId int,
			 @FormBuilderSubmitId int , @GlobalEntityValueDetail  [GlobalEntityValueDetail]

			 If isnull(@UserId,0)=0
			 Begin
			 Set @UserId=-1
			 End
			 Else
			 Set @NewUserId=@UserId


			 
 Select @GlobalEntityValueId=FormBuilderId 
 from ZnodeFormBuilder
 Where FormBuilderId=@FormBuilderId


			 DECLARE @ConvertedXML XML = REPLACE(REPLACE(REPLACE(@GlobalEntityValueXml,' & ', '&amp;'),'"', '&quot;'),'''', '&apos;')
             
             INSERT INTO @GlobalEntityValueDetail
			 (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeCode,AttributeValue
			 ,LocaleId,GlobalEntityValueId)
			SELECT Tbl.Col.value('GlobalAttributeId[1]', 'int') AS GlobalAttributeId,
			Tbl.Col.value('GlobalAttributeValueId[1]', 'int') AS GlobalAttributeValueId,
			Tbl.Col.value('GlobalAttributeDefaultValueId[1]', 'int') AS GlobalAttributeDefaultValueId,
			Tbl.Col.value('AttributeCode[1]', 'NVARCHAR(300)') AS AttributeCode,
			Tbl.Col.value('AttributeValue[1]', 'NVARCHAR(300)') AS AttributeValue,
			Tbl.Col.value('LocaleId[1]', 'INT') AS LocaleId,
			@GlobalEntityValueId AS GlobalEntityValueId
			FROM @ConvertedXML.nodes('//ArrayOfFormSubmitAttributeModel/FormSubmitAttributeModel') AS Tbl(Col);

			 DECLARE @GlobalEntityId INT,
			  @MultiSelectGroupAttributeTypeName nvarchar(200)='Select'
			 ,@MediaGroupAttributeTypeName nvarchar(200)='Media'
             DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
			 DECLARE @TBL_FormBuilder TABLE (FormBuilderId [int] NULL)
			 DECLARE @TBL_DeleteFormBuilder TABLE (FormBuilderId [int] NULL,FormBuilderGlobalAttributeValueId int)
			 DECLARE @TBL_AttributeDefaultValueList TABLE 
			   (NewFormBuilderGlobalAttributeValueId int,FormBuilderGlobalAttributeValueId int,[AttributeValue] [varchar](300),[GlobalAttributeDefaultValueId] int,
			   [GlobalAttributeId] int,MediaId int,FormBuilderGlobalAttributeValueLocaleId int)

			 DECLARE @TBL_MediaValueList TABLE 
			   (NewFormBuilderGlobalAttributeValueId int,FormBuilderGlobalAttributeValueId int,GlobalAttributeId int,
			   MediaId int,MediaPath nvarchar(300),FormBuilderGlobalAttributeValueLocaleId int)
			 DECLARE @TBL_InsertGlobalEntityValue TABLE 
				([GlobalAttributeId] [int] NULL,GlobalAttributeDefaultValueId [int] NULL,FormBuilderId [int] NULL,
					FormBuilderGlobalAttributeValueId int null)
		 	 DECLARE @TBL_GlobalEntityValueDetail TABLE ([GlobalAttributeId] [int] NULL,
				[AttributeCode] [varchar](300),[GlobalAttributeDefaultValueId] [int],[GlobalAttributeValueId] [int],
				[LocaleId] [int],FormBuilderId [int],[AttributeValue] [nvarchar](max),FormBuilderGlobalAttributeValueId int,
				NewFormBuilderGlobalAttributeValueId int,GroupAttributeTypeName [varchar](300))

				--SELECT TOP 1 @LocaleId = LocaleId
				-- FROM @GlobalEntityValueDetail;

				Insert into @TBL_GlobalEntityValueDetail
				([GlobalAttributeId],[AttributeCode],[GlobalAttributeDefaultValueId],
				[GlobalAttributeValueId],[LocaleId],FormBuilderId,[AttributeValue],GroupAttributeTypeName)
				Select dd.[GlobalAttributeId],dd.[AttributeCode],case when [GlobalAttributeDefaultValueId]=0 then null else 
				[GlobalAttributeDefaultValueId] end [GlobalAttributeDefaultValueId],
				case when [GlobalAttributeValueId]=0 then null else 
				[GlobalAttributeValueId] end [GlobalAttributeValueId],[LocaleId],[GlobalEntityValueId],[AttributeValue],ss.GroupAttributeType
				From @GlobalEntityValueDetail dd
				inner join [View_ZnodeGlobalAttribute] ss on ss.GlobalAttributeId=dd.GlobalAttributeId

				
				insert into @TBL_FormBuilder(FormBuilderId)
				Select distinct  FormBuilderId from @TBL_GlobalEntityValueDetail;

               INSERT INTO [dbo].[ZnodeFormBuilderSubmit]
               ([FormBuilderId],LocaleId,[PortalId],[UserId],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
			   Select @GlobalEntityValueId,@LocaleId,@PortalId,@NewUserId,@UserId [CreatedBy],@GetDate [CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]

			   Set @FormBuilderSubmitId =SCOPE_IDENTITY()

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValue]
				(FormBuilderSubmitId,[GlobalAttributeId],[GlobalAttributeDefaultValueId],[CreatedBy],[CreatedDate],
				[ModifiedBy],[ModifiedDate])
				 output Inserted.GlobalAttributeId,inserted.[GlobalAttributeDefaultValueId],@GlobalEntityValueId,
				 inserted.FormBuilderGlobalAttributeValueId into @TBL_InsertGlobalEntityValue
				Select @FormBuilderSubmitId,[GlobalAttributeId],[GlobalAttributeDefaultValueId]
				,@UserId [CreatedBy],@GetDate [CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE FormBuilderGlobalAttributeValueId IS NULL				

            
				Update dd
				Set dd.NewFormBuilderGlobalAttributeValueId=ss.FormBuilderGlobalAttributeValueId
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_InsertGlobalEntityValue ss on dd.[FormBuilderId]=ss.[FormBuilderId]
				and dd.GlobalAttributeId=ss.GlobalAttributeId	
				

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]
			   ([FormBuilderGlobalAttributeValueId],[LocaleId],[AttributeValue],[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select NewFormBuilderGlobalAttributeValueId,[LocaleId],[AttributeValue],@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				WHERE NewFormBuilderGlobalAttributeValueId IS not NULL
				and isnull([AttributeValue],'') <>''    
				and isnull(GroupAttributeTypeName,'') != @MultiSelectGroupAttributeTypeName
				and isnull(GroupAttributeTypeName,'') != @MediaGroupAttributeTypeName		
				
				

				insert into @TBL_AttributeDefaultValueList
				(NewFormBuilderGlobalAttributeValueId,FormBuilderGlobalAttributeValueId,dd.AttributeValue,GlobalAttributeId)
				Select dd.NewFormBuilderGlobalAttributeValueId, dd.FormBuilderGlobalAttributeValueId,ss.Item,dd.GlobalAttributeId
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				Update dd
				Set dd.GlobalAttributeDefaultValueId=ss.GlobalAttributeDefaultValueId
				from  @TBL_AttributeDefaultValueList DD
				inner join [ZnodeGlobalAttributeDefaultValue] ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and dd.AttributeValue=ss.AttributeDefaultValueCode

				
				

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]
			   ([FormBuilderGlobalAttributeValueId],[LocaleId],GlobalAttributeDefaultValueId,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewFormBuilderGlobalAttributeValueId,dd.[LocaleId],ss.GlobalAttributeDefaultValueId,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_AttributeDefaultValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewFormBuilderGlobalAttributeValueId=dd.NewFormBuilderGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MultiSelectGroupAttributeTypeName

				


				insert into @TBL_MediaValueList
				(NewFormBuilderGlobalAttributeValueId,FormBuilderGlobalAttributeValueId,GlobalAttributeId,MediaPath)
				Select dd.NewFormBuilderGlobalAttributeValueId, dd.FormBuilderGlobalAttributeValueId,GlobalAttributeId,ss.Item 
				From @TBL_GlobalEntityValueDetail dd
				cross apply dbo.Split(dd.AttributeValue,',') ss
				Where isnull(GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

			
				

				INSERT INTO [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale]
			   ([FormBuilderGlobalAttributeValueId],[LocaleId],MediaId,MediaPath,[CreatedBy],[CreatedDate],[ModifiedBy]
			   ,[ModifiedDate])
				Select ss.NewFormBuilderGlobalAttributeValueId,dd.[LocaleId],ss.MediaId,ss.MediaPath,@UserId [CreatedBy],@GetDate [CreatedDate],
				@UserId [ModifiedBy],@GetDate [ModifiedDate]
				From @TBL_GlobalEntityValueDetail dd
				inner join @TBL_MediaValueList ss on dd.GlobalAttributeId=ss.GlobalAttributeId
				and ss.NewFormBuilderGlobalAttributeValueId=dd.NewFormBuilderGlobalAttributeValueId
				WHERE isnull(dd.GroupAttributeTypeName,'') = @MediaGroupAttributeTypeName

													    
		
		     SELECT 0 AS ID,CAST(1 AS BIT) AS Status;    
			   
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             --SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ImportInsertUpdateGlobalEntity @UserId = '+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT @FormBuilderSubmitId AS ID,CAST(0 AS BIT) AS Status;                    
			ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ImportInsertUpdateGlobalEntity',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_InsertUpdateGlobalEntityAttributeValue]...';


GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdateGlobalEntityAttributeValue]
(   @GlobalEntityValueXml NVARCHAR(max),
    @GlobalEntityValueId int,
	@EntityName varchar(200),
    @UserId     INT,
    @status     BIT OUT )
AS
/*
     Summary : To Insert / Update single Global Entity Value with multiple attribute values 
     Update Logic: 
*/
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY

		     DECLARE @ConvertedXML XML = REPLACE(REPLACE(REPLACE(@GlobalEntityValueXml,' & ', '&amp;'),'"', '&quot;'),'''', '&apos;')
              DECLARE @GlobalEntityValueDetail_xml GlobalEntityValueDetail;

             INSERT INTO @GlobalEntityValueDetail_xml
			 (GlobalAttributeId,GlobalAttributeValueId,GlobalAttributeDefaultValueId,AttributeCode,AttributeValue
			 ,LocaleId,GlobalEntityValueId)
			SELECT Tbl.Col.value('GlobalAttributeId[1]', 'int') AS GlobalAttributeId,
			Tbl.Col.value('GlobalAttributeValueId[1]', 'int') AS GlobalAttributeValueId,
			Tbl.Col.value('GlobalAttributeDefaultValueId[1]', 'int') AS GlobalAttributeDefaultValueId,
			Tbl.Col.value('AttributeCode[1]', 'NVARCHAR(300)') AS AttributeCode,
			Tbl.Col.value('AttributeValue[1]', 'NVARCHAR(300)') AS AttributeValue,
			Tbl.Col.value('LocaleId[1]', 'INT') AS LocaleId,
			@GlobalEntityValueId AS GlobalEntityValueId
			FROM @ConvertedXML.nodes('//ArrayOfEntityAttributeDetailsModel/EntityAttributeDetailsModel') AS Tbl(Col);

			If @EntityName='Store'
             EXEC [dbo].[Znode_ImportInsertUpdatePortalGlobalAttributeValue]
                  @GlobalEntityValueDetail_xml,
                  @UserId,
                  @status OUT,0 ; 
			else If @EntityName='User'
			EXEC [dbo].[Znode_ImportInsertUpdateUserGlobalAttributeValue]
                  @GlobalEntityValueDetail_xml,
                  @UserId,
                  @status OUT,0 ; 
			else If @EntityName='Account'
			EXEC [dbo].Znode_ImportInsertUpdateAccountGlobalAttributeValue
                  @GlobalEntityValueDetail_xml,
                  @UserId,
                  @status OUT,0 ; 
			else If @EntityName='FormBuilder'
			EXEC [dbo].Znode_ImportInsertUpdateFormBuilderGlobalAttributeValue
                  @GlobalEntityValueDetail_xml,
                  @UserId,
                  @status OUT,0 ; 
			
             SET @status = 1;
             COMMIT TRAN A;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE()
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC [Znode_InsertUpdateGlobalEntityValue] @GlobalEntityValueXml= '+CAST(@GlobalEntityValueXml AS VARCHAR(max))+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			 ROLLBACK TRAN A;
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_InsertUpdateGlobalEntityValue',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_InsertUpdatePortalSearchProfile]...';


GO
CREATE PROCEDURE [dbo].[Znode_InsertUpdatePortalSearchProfile]
(   @SearchProfileId       int,
    @UserPortalList TransferId readonly ,
    @UserId                INT    )
AS 
   /* 
   SUMMARY : Stored Procedure to insertupdate searchProfileid based on Profileid and portalid list
   Unit Testing:

   -- EXEC Znode_InsertUpdatePortalSearchProfile @SearchProfileId = 2,@UserId = 2,@UserPortalList = 1,2
   
   
   	*/
	DECLARE @GetDate DATETIME = dbo.Fn_GetDate()
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
		
			DECLARE @TBL_PortalList TABLE(PortalSearchProfileId INT)

			INSERT INTO ZnodePortalSearchProfile (PortalId,PublishCatalogId,SearchProfileId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			SELECT DISTINCT UPL.Id, ZSP.PublishCatalogId,ZSP.SearchProfileId,@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
			FROM ZnodePortalCatalog ZPA 
			INNER JOIN ZnodePublishCatalogSearchProfile ZSP ON (ZSP.PublishCatalogId = ZPA .PublishCatalogId)
			INNER JOIN @UserPortalList UPL  ON (ZPA.PortalId = UPL.Id)
			WHERE NOT EXISTS (SELECT 1 FROM ZnodePortalSearchProfile ZPSP
							WHERE ZPSP.SearchProfileId = ZSP.SearchProfileId
								AND ZPSP.PortalId = UPL.Id 
								AND ZSP.PublishCatalogId = ZPSP.PublishCatalogId)		 
			AND ZSP.SearchProfileId = @SearchProfileId
			
			INSERT INTO ZnodePortalSearchProfile (PortalId,PublishCatalogId,SearchProfileId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
			SELECT DISTINCT UPL.Id, ZSP.PublishCatalogId,ZSP.SearchProfileId,@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
			FROM ZnodePortalAccount ZPA 
			INNER JOIN ZnodeAccount ZA ON (ZPA.AccountId = ZA.AccountId )
			INNER JOIN ZnodePublishCatalogSearchProfile ZSP ON (ZSP.PublishCatalogId = ZA.PublishCatalogId)
			INNER JOIN @UserPortalList UPL  ON (ZPA.PortalId = UPL.Id)
			WHERE NOT EXISTS (SELECT 1 FROM ZnodePortalSearchProfile ZPSP
							WHERE ZPSP.SearchProfileId = ZSP.SearchProfileId 
							AND ZPSP.PortalId = UPL.Id AND ZSP.PublishCatalogId = ZPSP.PublishCatalogId)		 
			AND ZSP.SearchProfileId = @SearchProfileId

			-- Fetch ids which is not inserted
			IF EXISTS ( Select Id PortalId from @UserPortalList
			Where Id not in (
			SELECT ZPS.PortalId FROM ZnodePortalSearchProfile ZPS
			where  ZPS.SearchProfileId = @SearchProfileId )
			)

			BEGIN
					
			SELECT @SearchProfileId AS ID,CAST(0 AS BIT) AS Status;   
			
			Select Id PortalId from @UserPortalList
			Where Id not in (
			SELECT ZPS.PortalId FROM ZnodePortalSearchProfile ZPS
			where ZPS.SearchProfileId = @SearchProfileId )

			END
		 
			ELSE
			BEGIN
			SELECT @SearchProfileId AS ID,CAST(1 AS BIT) AS Status;   
			END
		 			
			 COMMIT TRAN A;
         END TRY
         BEGIN CATCH
            select ERROR_MESSAGE()
		
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			 ROLLBACK TRAN A;
    
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_InsertUpdateSearchProfile]...';


GO
CREATE  PROCEDURE [dbo].[Znode_InsertUpdateSearchProfile]
(   @SearchProfileId       int,
    @ProfileName           nvarchar(200),
	@SearchQueryTypeId     int,
	@SearchSubQueryTypeId  int,
    @SearchProfileFetureList SearchProfileFetureList readonly ,
    @SearchProfileAttributeList SearchProfileAttributeList readonly ,
    @UserId                INT,
	@PublishCatalogId      int,
	@Operator			   nvarchar(20),	
	@IsDefault             bit=0      )
AS 
   /* 
    Summary: This Procedure is used to save and edit the quote line item      
    Unit Testing   
    Exec Znode_InsertUpdateQuoteLineItem 
	Unit Testing

	 GO 
	declare @p7 dbo.SearchProfileFetureList
	insert into @p7 values(N'0',1)

	declare @p8 dbo.SearchProfileAttributeList
	insert into @p8 values(N'ProductSpecification',0,0,1)
	insert into @p8 values(N'ShortDescription',0,0,3)
	insert into @p8 values(N'ProductName',0,0,2)
	insert into @p8 values(N'FeatureDescription',0,0,4)
	insert into @p8 values(N'SKU',0,0,5)

	exec sp_executesql N'Znode_InsertUpdateSearchProfile  @SearchProfileId,@ProfileName,@SearchQueryTypeId,@SearchSubQueryTypeId,@SearchProfileFetureList,@SearchProfileAttributeList,@UserId,@PublishCatalogId,@Operator,@IsDefault',N'@SearchProfileId int,@Prof
ileName nvarchar(17),@SearchQueryTypeId int,@SearchSubQueryTypeId int,@SearchProfileFetureList [dbo].[SearchProfileFetureList] READONLY,@SearchProfileAttributeList [dbo].[SearchProfileAttributeList] READONLY,@UserId int,@PublishCatalogId int,@Operator nva
rchar(2),@IsDefault bit',@SearchProfileId=0,@ProfileName=N'FineFoodsProfile1',@SearchQueryTypeId=2,@SearchSubQueryTypeId=0,@SearchProfileFetureList=@p7,@SearchProfileAttributeList=@p8,@UserId=0,@PublishCatalogId=3,@Operator=N'OR',@IsDefault=0
   
	*/
	DECLARE @GetDate DATETIME = dbo.Fn_GetDate(),@PublishCatalogSearchProfileId int 
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY

		  If Isnull(@SearchProfileId,0)=0
		  Begin
		   INSERT INTO [dbo].[ZnodeSearchProfile]
           ([ProfileName],[SearchQueryTypeId],[SearchSubQueryTypeId],[Operator],[CreatedBy],[CreatedDate]
			,[ModifiedBy],[ModifiedDate])
		   Select @ProfileName,@SearchQueryTypeId,@SearchSubQueryTypeId,@Operator,@UserId,@GetDate,@UserId,@GetDate
            Set @SearchProfileId=SCOPE_IDENTITY()
		  End
		  else 
		  Begin
		    Update a
			Set a.[ProfileName]=@ProfileName,
			a.SearchQueryTypeId=@SearchQueryTypeId,
			a.SearchSubQueryTypeId=@SearchSubQueryTypeId,
			a.Operator = @Operator,
			a.ModifiedBy=@UserId,
			a.ModifiedDate=@GetDate
			from [dbo].[ZnodeSearchProfile] a
			Where SearchProfileId=@SearchProfileId
		    
		  End 

		  delete f
		  from ZnodeSearchProfileAttributeMapping f
		  Where SearchProfileId=@SearchProfileId
		  and not exists(Select 1 from @SearchProfileAttributeList d
		  where f.AttributeCode=d.AttributeCode )

		  INSERT INTO [dbo].ZnodeSearchProfileAttributeMapping
          ([SearchProfileId],[AttributeCode],[IsFacets],[IsUseInSearch]
			,[BoostValue],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
		  Select @SearchProfileId,[AttributeCode],[IsFacets],[IsUseInSearch]
			,[BoostValue],@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
		   from @SearchProfileAttributeList d
		  where  not exists(Select 1 from ZnodeSearchProfileAttributeMapping f
		  where f.AttributeCode=d.AttributeCode 
		  and f.SearchProfileId=@SearchProfileId)

		  Update f
		  Set f.[IsFacets]=d.[IsFacets],f.[IsUseInSearch]=d.[IsUseInSearch],
		  f.[BoostValue]=d.[BoostValue]
		  From [dbo].ZnodeSearchProfileAttributeMapping f
		  inner join @SearchProfileAttributeList d
		  on f.AttributeCode=d.AttributeCode
		   and f.SearchProfileId=@SearchProfileId

		   delete f
		  from [ZnodeSearchProfileFeatureMapping] f
		  Where SearchProfileId=@SearchProfileId
		  and not exists(Select 1 from @SearchProfileFetureList d
		  where f.SearchFeatureId=d.SearchProfileFetureId )

		  INSERT INTO [dbo].[ZnodeSearchProfileFeatureMapping]
          ([SearchProfileId],SearchFeatureId,[SearchFeatureValue]
		  ,[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
		  Select @SearchProfileId,d.SearchProfileFetureId,[SearchFeatureValue]
		  ,@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
		   from @SearchProfileFetureList d
		  where  not exists(Select 1 from [ZnodeSearchProfileFeatureMapping] f
		  where f.SearchFeatureId=d.SearchProfileFetureId 
		  and f.SearchProfileId=@SearchProfileId)

		  Update f
		  Set f.[SearchFeatureValue]=d.SearchFeatureValue,
		  f.ModifiedBy=@UserId,
		  f.ModifiedDate=@GetDate
		  From [dbo].[ZnodeSearchProfileFeatureMapping] f
		  inner join @SearchProfileFetureList d
		  on f.SearchFeatureId=d.SearchProfileFetureId  and f.SearchProfileId=@SearchProfileId
          
		   Select @PublishCatalogSearchProfileId=PublishCatalogSearchProfileId
		   From  [dbo].[ZnodePublishCatalogSearchProfile]
		   Where [PublishCatalogId]=@PublishCatalogId and  SearchProfileId = @SearchProfileId 


		   If @IsDefault=1
		      update [ZnodePublishCatalogSearchProfile]
			  set [IsDefault]=@IsDefault,
			  ModifiedBy=@UserId,
		      ModifiedDate=@GetDate
			  From  [ZnodePublishCatalogSearchProfile]
			  Where PublishCatalogSearchProfileId!=@PublishCatalogSearchProfileId
			  and [PublishCatalogId]=@PublishCatalogId

		   If Isnull(@PublishCatalogSearchProfileId,0)>0
		   Begin
		      update [ZnodePublishCatalogSearchProfile]
			  set [IsDefault]=@IsDefault,
			  ModifiedBy=@UserId,
		      ModifiedDate=@GetDate
			  From  [ZnodePublishCatalogSearchProfile]
			  Where PublishCatalogSearchProfileId=@PublishCatalogSearchProfileId
		   End
		   Else
		   INSERT INTO [dbo].[ZnodePublishCatalogSearchProfile]
           ([PublishCatalogId],[SearchProfileId],[IsDefault],
		   [CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
		   Select @PublishCatalogId,@SearchProfileId,@IsDefault,@UserId,@GetDate,@UserId,@GetDate

		  SELECT @SearchProfileId AS ID,CAST(1 AS BIT) AS Status;   			
			 COMMIT TRAN A;
         END TRY
         BEGIN CATCH
        
		    -- SET @Status = 0;
		  ----   DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 ----@ErrorCall NVARCHAR(MAX)= 'EXEC Znode_InsertUpdateQuoteLineItem @CartLineItemXML = '+CAST(@CartLineItemXML AS VARCHAR(max))+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			 ROLLBACK TRAN A;
    --         EXEC Znode_InsertProcedureErrorLog
				--@ProcedureName = 'Znode_InsertUpdateQuoteLineItem',
				--@ErrorInProcedure = @Error_procedure,
				--@ErrorMessage = @ErrorMessage,
				--@ErrorLine = @ErrorLine,
				--@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_InsertUpdateSearchProfileTrigger]...';


GO
CREATE  PROCEDURE [dbo].[Znode_InsertUpdateSearchProfileTrigger]
(   @SearchProfileId       int,
    @KeywordList SelectColumnList readonly ,
    @UserProfileList TransferId readonly ,
    @UserId                INT  ,
	@IsConfirmation  bit=0)
AS 
   /* 	*/
	DECLARE @GetDate DATETIME = dbo.Fn_GetDate(),@PublishCatalogSearchProfileId int ,@Status bit =0
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY

		 If exists (Select 1 from @KeywordList ) 
		 and  exists (Select 1 from @UserProfileList )  
		 Begin

		  if exists (Select 1 from @KeywordList KL   
							cross join @UserProfileList UPL
							inner join  ZnodeSearchProfileTrigger ss
							on KL.[StringColumn]=ss.Keyword  and UPL.Id=ss.UserProfileId )
		  and @IsConfirmation=0
		  Begin
					Set @Status=0
		  End
			Else 
			Begin
					Set @Status=1
			End  
		  If @Status=1
		   Begin
		  INSERT INTO [dbo].ZnodeSearchProfileTrigger
          ([SearchProfileId],Keyword,UserProfileId,[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
			Select @SearchProfileId,KL.[StringColumn] ,UPL.Id,@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
			from @KeywordList KL   
			cross join @UserProfileList UPL
			where not exists(Select 1 from ZnodeSearchProfileTrigger ss
			 Where KL.[StringColumn]=ss.Keyword  and UPL.Id=ss.UserProfileId )


			 Update ss
				Set SS.SearchProfileId=@SearchProfileId,ss.ModifiedBy=@UserId,ss.ModifiedDate=@GetDate
				from  @KeywordList KL   
			    cross join @UserProfileList UPL 
				inner join ZnodeSearchProfileTrigger ss on  KL.[StringColumn]=ss.Keyword and UPL.Id=ss.UserProfileId 


			 ENd
		 End
		 Else 
		   If exists (Select 1 from @KeywordList ) 
		 and  not exists (Select 1 from @UserProfileList )  
		 Begin
		  if exists (Select 1 from @KeywordList KL   
							inner join  ZnodeSearchProfileTrigger ss
							on KL.[StringColumn]=ss.Keyword  and ss.UserProfileId is null)
		    and @IsConfirmation=0
		  Begin
					Set @Status=0
		  End
			Else 
			Begin
					Set @Status=1
			End 
           If @Status=1
		   Begin
						INSERT INTO [dbo].ZnodeSearchProfileTrigger
						([SearchProfileId],Keyword,[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
						Select @SearchProfileId,KL.[StringColumn] ,@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
						from @KeywordList KL  
						where  
						not exists(Select 1 from ZnodeSearchProfileTrigger ss
						Where KL.[StringColumn]=ss.Keyword and ss.UserProfileId is null  )

				Update ss
				Set SS.SearchProfileId=@SearchProfileId,ss.ModifiedBy=@UserId,ss.ModifiedDate=@GetDate
				from  @KeywordList KL 
				inner join ZnodeSearchProfileTrigger ss on  KL.[StringColumn]=ss.Keyword and ss.UserProfileId is null 

			 End
		 End
		  Else 
		If not exists (Select 1 from @KeywordList ) 
		and   exists (Select 1 from @UserProfileList )  
		 Begin
				if exists (Select 1 from @UserProfileList UPL
								inner join  ZnodeSearchProfileTrigger ss
								on ss.Keyword is null and UPL.Id=ss.UserProfileId )
				  and @IsConfirmation=0
		        Begin
						Set @Status=0
				End
				Else 
				Begin
				        Set @Status=1
				End 

				If @Status=1
				Begin
				INSERT INTO [dbo].ZnodeSearchProfileTrigger
				([SearchProfileId],UserProfileId,[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate])
				Select @SearchProfileId,UPL.Id,@UserId [CreatedBy],@GetDate[CreatedDate],@UserId [ModifiedBy],@GetDate [ModifiedDate]
				from  @UserProfileList UPL
				where  
				not exists(Select 1 from ZnodeSearchProfileTrigger ss
				Where  ss.Keyword is null and UPL.Id=ss.UserProfileId )


				Update ss
				Set SS.SearchProfileId=@SearchProfileId,ss.ModifiedBy=@UserId,ss.ModifiedDate=@GetDate
				from  @UserProfileList UPL
				inner join ZnodeSearchProfileTrigger ss on ss.Keyword is null and UPL.Id=ss.UserProfileId 

				ENd


		  End

		  SELECT @SearchProfileId AS ID,CAST(@Status AS BIT) AS Status;   			
			 COMMIT TRAN A;
         END TRY
         BEGIN CATCH
        
		    -- SET @Status = 0;
		  ----   DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 ----@ErrorCall NVARCHAR(MAX)= 'EXEC Znode_InsertUpdateQuoteLineItem @CartLineItemXML = '+CAST(@CartLineItemXML AS VARCHAR(max))+',@UserId = '+CAST(@UserId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
			 ROLLBACK TRAN A;
    --         EXEC Znode_InsertProcedureErrorLog
				--@ProcedureName = 'Znode_InsertUpdateQuoteLineItem',
				--@ErrorInProcedure = @Error_procedure,
				--@ErrorMessage = @ErrorMessage,
				--@ErrorLine = @ErrorLine,
				--@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_UnassignGlobalAttributeFromGroup]...';


GO
-- EXEC [Znode_UnassignGlobalAttributeFromGroup] 329,0


CREATE PROCEDURE [dbo].[Znode_UnassignGlobalAttributeFromGroup](
       @GlobalAttributeId      VARCHAR(1000) ,
       @GlobalAttributeGroupId INT           = 0 )
AS
/*
Summary: This Procedure is used to Unassign Product Attribute from group
Unit Testing:
EXEC Znode_UnassignGlobalAttributeFromGroup

*/
     BEGIN
         BEGIN TRAN;
         BEGIN TRY
		 SET NOCOUNT ON
             DECLARE @TBL_GlobalAttributeId TABLE (
                                               GlobalAttributeId INT
                                               );
             DECLARE @TBL_DeletedIds TABLE (
                                           GlobalAttributeId INT
                                           );
           
             BEGIN
				INSERT INTO @TBL_GlobalAttributeId
				SELECT Item
				FROM dbo.split ( @GlobalAttributeId , ',') AS sp
				where dbo.[Fn_CheckGlobalAttributeTransactionUsed]('GlobalAttribute',sp.Item)=0
				  
				 Delete From ZnodeGlobalAttributeGroupMapper    
				 Where  GlobalAttributeGroupId=@GlobalAttributeGroupId
				 and exists (select 1 from @TBL_GlobalAttributeId ga
				 where ga.GlobalAttributeId=ZnodeGlobalAttributeGroupMapper.GlobalAttributeId)

			 IF ( SELECT COUNT(1)
                  FROM @TBL_GlobalAttributeId
                ) = ( SELECT COUNT(1)
                      FROM dbo.split ( @GlobalAttributeId , ','
                                     ) AS a
                    )
                 BEGIN
                     SELECT 1 AS ID , CAST(1 AS BIT) AS Status;
                 END;
             ELSE
                 BEGIN
                     SELECT 0 AS ID , CAST(0 AS BIT) AS Status;
                 END;
             
			 End
			 COMMIT TRAN;
         END TRY
         BEGIN CATCH
               DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_UnassignGlobalAttributeFromGroup @GlobalAttributeId = '+@GlobalAttributeId+',@GlobalAttributeGroupId='+CAST(@GlobalAttributeGroupId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		     ROLLBACK TRAN
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_UnassignGlobalAttributeFromGroup',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_UnassociateFormBuilderGroupAttribute]...';


GO
-- EXEC Znode_UnassociateFormBuilderGroupAttribute 329,0


CREATE PROCEDURE [dbo].[Znode_UnassociateFormBuilderGroupAttribute](
       @GlobalAttributeId      VARCHAR(1000) =null,
       @GlobalAttributeGroupId INT           = 0,
	   @FormBuilderId int )
AS
/*
Summary: This Procedure is used to Unassign Product Attribute from group
Unit Testing:
EXEC Znode_UnassignGlobalAttributeFromGroup

*/
     BEGIN
         BEGIN TRAN;
         BEGIN TRY
		 SET NOCOUNT ON
             DECLARE @TBL_GlobalAttributeId TABLE (
                                               GlobalAttributeId INT
                                               );
             DECLARE @TBL_DeletedIds TABLE (
                                           GlobalAttributeId INT
                                           )
              Declare @Status bit =0
           
             BEGIN

			 if Isnull(@GlobalAttributeGroupId,0) =0
			 BEGIN

				INSERT INTO @TBL_GlobalAttributeId
				SELECT Item
				FROM dbo.split ( @GlobalAttributeId , ',') AS sp
				where not exists (Select 1 from ZnodeFormBuilderSubmit dd
				inner join ZnodeFormBuilderGlobalAttributeValue ss on ss.FormBuilderSubmitId=dd.FormBuilderSubmitId
				Where dd.FormBuilderId=@FormBuilderId
				and ss.GlobalAttributeId=sp.Item)
				  
				 Delete From ZnodeFormBuilderAttributeMapper    
				 Where  FormBuilderId=@FormBuilderId
				 and exists (select 1 from @TBL_GlobalAttributeId ga
				 where ga.GlobalAttributeId=ZnodeFormBuilderAttributeMapper.GlobalAttributeId)

				  IF ( SELECT COUNT(1)
                  FROM @TBL_GlobalAttributeId
                ) = ( SELECT COUNT(1)
                      FROM dbo.split ( @GlobalAttributeId , ','
                                     ) AS a
                    )
                 BEGIN
				 Set @Status =1
				 ENd 
			END

			 if Isnull(@GlobalAttributeGroupId,0) <>0
			 BEGIN

				if not exists (
				SELECT 1
				FROM ZnodeGlobalAttributeGroupMapper AS sp
				where  SP.GlobalAttributeGroupId=@GlobalAttributeGroupId AND
				 exists (Select 1 from ZnodeFormBuilderSubmit dd
				inner join ZnodeFormBuilderGlobalAttributeValue ss on ss.FormBuilderSubmitId=dd.FormBuilderSubmitId
				Where dd.FormBuilderId=@FormBuilderId
				and ss.GlobalAttributeId=sp.GlobalAttributeId))
				Begin
				  
				 Delete From ZnodeFormBuilderAttributeMapper    
				 Where  FormBuilderId=@FormBuilderId
				 and GlobalAttributeGroupId=@GlobalAttributeGroupId

				 Set @Status=1
				END
				 
			END
                SELECT 1 AS ID , CAST(@Status AS BIT) AS Status
			 End
			 COMMIT TRAN;
         END TRY
         BEGIN CATCH
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_UnassociateFormBuilderGroupAttribute @GlobalAttributeId = '+@GlobalAttributeId+',@GlobalAttributeGroupId='+CAST(@GlobalAttributeGroupId AS VARCHAR(50))+',@FormBuilderId='+CAST(@FormBuilderId AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		     ROLLBACK TRAN
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_UnassociateFormBuilderGroupAttribute',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_UnassociateGroupEntity]...';


GO

CREATE PROCEDURE [dbo].[Znode_UnassociateGroupEntity](
       @GlobalAttributeGroupId  VARCHAR(2000) ,
       @GlobalEntityId INT  )
AS 
    /*
    Summary:  Check and unassociate the group from family if attribute of group is present in pim values then dont
    		  unassociate the group from family
 
   */
     BEGIN
         BEGIN TRAN B;
         BEGIN TRY
             SET NOCOUNT ON; 
			 Declare @TableName nvarchar(200) ,@SQL nvarchar(max) 
             ---- Declare the table to store the comma seperated data into record format ------------
             DECLARE @TBL_Group TABLE (
                                      ID                  INT ,
                                      GlobalAttributeGroupId INT
									  );
			DECLARE @TBL_NotToDeleteGroup TABLE (GlobalAttributeGroupId INT
									  );

			Select @TableName=TableName
			from ZnodeGlobalEntity
			Where GlobalEntityId =@GlobalEntityId

			if @TableName is not null
			Begin
		    	Set @SQL =' Select GlobalAttributeGroupId 
						from [dbo].['+@TableName+'] a
						inner join ZnodeGlobalAttributeGroupMapper b on a.GlobalAttributeId=b.GlobalAttributeId
						inner join dbo.Split('''+@GlobalAttributeGroupId+''','','') c on c.item =b.GlobalAttributeGroupId
						group by GlobalAttributeGroupId '
				   Begin Try
					  insert into @TBL_NotToDeleteGroup
					   EXEC SP_EXECUTESQl  @SQL
				   End Try
					Begin Catch
					End  Catch;
			end 


             INSERT INTO @TBL_Group
                    SELECT ID , item 
                    FROM ZnodeGlobalAttributeGroup  ZGAG 
					INNER JOIN dbo.split ( @GlobalAttributeGroupId , ',' ) SP ON (SP.Item = ZGAG.GlobalAttributeGroupId) --- store the comma separeted category id into variable table 
					Where not exists (Select 1 
					from @TBL_NotToDeleteGroup d
					Where d.GlobalAttributeGroupId=sp.Item )
					
					 

                BEGIN
                     DELETE FROM ZnodeGlobalGroupEntityMapper
                     WHERE EXISTS ( SELECT TOP 1 1
                                    FROM @TBL_Group AS gwa
                                    WHERE gwa.GlobalAttributeGroupId = ZnodeGlobalGroupEntityMapper.GlobalAttributeGroupId									
                                  )
					 AND ZnodeGlobalGroupEntityMapper.GlobalEntityId =@GlobalEntityId;
                    

					  IF( SELECT COUNT(1) FROM @TBL_Group ) =
					 ( SELECT COUNT(1) FROM Split(@GlobalAttributeGroupId, ',') )   
						 BEGIN
								SELECT 1 AS ID,CAST(1 AS BIT) AS [Status];
						 END;
					 ELSE
						 BEGIN
							  SELECT 1 AS ID,CAST(0 AS BIT) AS [Status];
						 END;

                 END;
             COMMIT TRAN B;
         END TRY
         BEGIN CATCH
               DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			   @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_UnassociateGroupEntity @GlobalAttributeGroupId = '+@GlobalAttributeGroupId+',@GlobalEntityId='+CAST(@GlobalEntityId AS VARCHAR(200));
             SELECT 0 AS ID,
                    CAST(0 AS BIT) AS Status;
			 ROLLBACK TRAN B;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_UnassociateGroupEntity',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetCatalogCategoryProducts]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetCatalogCategoryProducts]
( @WhereClause      XML,
  @Rows             INT           = 100,
  @PageNo           INT           = 1,
  @Order_BY         VARCHAR(1000) = '',
  @RowsCount        INT OUT,
  @LocaleId         INT           = 1,
  @PimCategoryId    INT,
  @PimCatalogId     INT           = 0,
  @IsAssociated     BIT           = 0,
  @ProfileCatalogId INT           = 0
  ,@AttributeCode   VARCHAR(max) = ''
  )
AS
   
/*
	   Summary:  Get product List  Catalog / category / respective product list   		   
	   Unit Testing   
	   begin tran
	   declare @p7 int = 0  
	   EXEC Znode_GetCatalogCategoryProducts @WhereClause=N'',@Rows=10,@PageNo=1,@Order_By=N'',
	   @RowsCount=@p7 output,@PimCategoryId=11,@PimCatalogId = 1 ,@LocaleId=1 ,@ProfileCatalogId = 1 
	   rollback tran
	  
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId(), @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId(), @OrderId INT= 0;
             DECLARE @SQL VARCHAR(MAX), 
					 @PimProductId TransferId,--VARCHAR(MAX)= '', 
					 @PimAttributeId VARCHAR(MAX),
					 @OutPimProductIds VARCHAR(max);
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

			 DECLARE @TBL_ProfileCatalogCategory TABLE
             (ProfileCatalogId     INT,
              PimProductId         INT,
              PimCategoryId        INT,
              PimCatalogCategoryId INT
             );
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             IF @Order_By LIKE ''
                 BEGIN
                     SET @OrderId = 1;
                 END;
             IF @ProfileCatalogId > 0
                 BEGIN
                     INSERT INTO @TBL_ProfileCatalogCategory (ProfileCatalogId,PimProductId,PimCategoryId,PimCatalogCategoryId)
                     SELECT ZPC.ProfileCatalogId,PimProductId,PimCategoryId,ZCC.PimCatalogCategoryId
                     FROM ZnodePimCatalogCategory AS ZCC
                     INNER JOIN ZnodeProfileCatalog AS ZPC ON(ZPC.PimCatalogId = ZCC.PimCatalogId)
                     WHERE ZPC.ProfileCatalogId = @ProfileCatalogId
                     AND NOT EXISTS
                         (
                            SELECT TOP 1 1
                            FROM ZnodeProfileCatalogCategory AS ZPCC
                            WHERE ZPCC.PimCatalogCategoryId = ZCC.PimCatalogCategoryId
                         );
                 END;
             IF @PimCatalogId = 0
                 BEGIN
					INSERT INTO @TransferPimProductId 
                    SELECT PimProductId 
                    FROM ZnodePimCategoryProduct AS ZCP
                    WHERE ZCP.PimCategoryId = @PimCategoryId
					AND PimProductId IS NOT NULL 
                                                   
                 END;
             ELSE
                 BEGIN
                     IF @IsAssociated = 0
                        AND @ProfileCatalogId > 0
                         BEGIN
				INSERT INTO @TransferPimProductId 
                SELECT PimProductId 
                FROM ZnodePimCatalogCategory AS ZCP
                WHERE ZCP.PimCatalogId = @PimCatalogId
                AND ZCP.PimCategoryId = @PimCategoryId
                AND NOT EXISTS
                (
                    SELECT TOP 1 1
                    FROM ZnodeProfileCatalogCategory AS TBPCC
                    WHERE TBPCC.PimCatalogCategoryId = ZCP.PimCatalogCategoryId
                        AND TBPCC.ProfileCatalogId = @ProfileCatalogId
                )
               	AND PimProductId IS NOT NULL                                         
                        END;
                     ELSE
                         BEGIN
                             IF @IsAssociated = 1
                                AND @ProfileCatalogId > 0
                                 BEGIN
						INSERT INTO @TransferPimProductId 
                        SELECT PimProductId
                        FROM ZnodePimCatalogCategory AS ZCP
                        WHERE ZCP.PimCatalogId = @PimCatalogId
                            AND ZCP.PimCategoryId = @PimCategoryId
                            AND EXISTS
                        (
                            SELECT TOP 1 1
                            FROM ZnodeProfileCatalogCategory AS TBPCC
                            WHERE TBPCC.PimCatalogCategoryId = ZCP.PimCatalogCategoryId
                                AND TBPCC.ProfileCatalogId = @ProfileCatalogId
                        )
                       AND PimProductId IS NOT NULL                                             
                                     SET @IsAssociated = 0;
                                 END;
                             ELSE
                                 BEGIN
					INSERT INTO @TransferPimProductId 
                    SELECT PimProductId 
                    FROM ZnodePimCatalogCategory AS ZCP
                    WHERE ZCP.PimCatalogId = @PimCatalogId
                    AND ZCP.PimCategoryId = @PimCategoryId
				    AND PimProductId IS NOT NULL    
                    ORDER BY CASE
                                WHEN @OrderId = 0
                                THEN 1
                                ELSE ZCP.PimCatalogCategoryId
                            END DESC
                                   
                                 END;
                         END;
                 END;
				 
				 IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId)
				 BEGIN 
                  INSERT INTO @TransferPimProductId
				  SELECT '0'

				 END 


             DECLARE @ProductIdTable TABLE
             ([PimProductId] INT,
              [CountId]      INT,
              PimCategoryId  INT,
              RowId          INT IDENTITY(1,1)
             );
            DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 --	IF @PimProductId <> ''  OR   @IsCallForAttribute=1
		--BEGIN 
	 SET @IsAssociated = CASE WHEN @IsAssociated = 0 THEN 1  
					 WHEN @IsAssociated = 1 THEN 0 END 
		--END 
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  @IsAssociated,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	       
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT id 
			 FROM @TBL_MainList 
            
			 UPDATE @ProductIdTable
               SET
                   PimCategoryId = @PimCategoryId;
             --SET @PimProductId = SUBSTRING(
             --                             (
             --                                 SELECT ','+CAST(PimProductId AS VARCHAR(100))
             --                                 FROM @ProductIdTable
             --                                 FOR XML PATH('')
             --                             ), 2, 4000);

			 INSERT INTO @PimProductId  ( Id )
			 SELECT PimProductId FROM @ProductIdTable

             SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetGridPimAttributes]() FOR XML PATH('')), 2, 4000);
             INSERT INTO @TBL_AttributeDefaultValue (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder )
            
			 EXEC Znode_GetAttributeDefaultValueLocale @PimAttributeId,@LocaleId;
            
			 INSERT INTO @TBL_AttributeDetails (PimProductId,AttributeValue,AttributeCode,PimAttributeId)

             EXEC Znode_GetProductsAttributeValue @PimProductId,@PimAttributeId,@localeId;
             SET @PimAttributeId = [dbo].[Fn_GetCategoryNameAttributeId]();

             INSERT INTO @TBL_AttributeValue (PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)

             EXEC [dbo].[Znode_GetCategoryAttributeValue] @PimCategoryId,@PimAttributeId,@LocaleId;
          
		    ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;

		  
		     --WITH Cte_UpdateDefaultAttributeValue
             --     AS (SELECT PimProductId,
             --                AttributeCode,
             --                AttributeValue,
             --                SUBSTRING(
             --                         (
             --                             SELECT ','+TBADV.AttributeDefaultValue
             --                             FROM @TBL_AttributeDefaultValue AS TBADV
             --                             INNER JOIN ZnodePimAttribute AS TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
             --                             WHERE TBAC.AttributeCode = TBAD.AttributeCode
             --                                   AND EXISTS
             --                             (
             --                                 SELECT TOP 1 1
             --                                 FROM dbo.split(TBAD.AttributeValue, ',') AS SP
             --                                 WHERE Sp.item = TBADV.AttributeDefaultValueCode
             --                             )
             --                             FOR XML PATH('')
             --                         ), 2, 4000) AS AttributeDefaultValue
             --         FROM @TBL_AttributeDetails AS TBAD)
             --UPDATE TBAD
             --SET
             --   AttributeValue = CTUDAV.AttributeDefaultValue
             --FROM @TBL_AttributeDetails TBAD
             --INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
             --                                                     AND CTUDAV.AttributeCode = TBAD.AttributeCode)
             --WHERE AttributeDefaultValue IS NOT NULL;
             INSERT INTO @FamilyDetails (PimAttributeFamilyId,PimProductId)
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId] @PimProductId,1;
             UPDATE a
             SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
             INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                  AND LocaleId = @LocaleId);
             UPDATE a
             SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
             INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                  AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
             SELECT zpp.PimProductid AS ProductId,zpp.PimProductId,@PimCatalogId AS PimCatalogId,zpp.PimCategoryId,[ProductName],ProductType,ISNULL(zf.FamilyName, '') AS AttributeFamily,[SKU],[Price],[Quantity],
                    CASE
                        WHEN Piv.[IsActive] IS NULL
                        THEN CAST(0 AS BIT)
                        ELSE CAST(Piv.[IsActive] AS BIT)
                    END AS [IsActive],
                    piv.[ProductImage] ImagePath,
                    [Assortment],
                    TBAV.CategoryValue AS [CategoryName],
                    @LocaleId AS LocaleId,
                    ZCC.[DisplayOrder],
                    ZPCC.ProfileCatalogCategoryId,
                    RowId
             FROM @ProductIdTable AS zpp
                  LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
                  INNER JOIN
             (
                 SELECT PimProductId,
                        AttributeValue,
                        AttributeCode
                 FROM @TBL_AttributeDetails
             ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
                                                                 [SKU],
                                                                 [Price],
                                                                 [Quantity],
                                                                 [IsActive],
                                                                 [ProductType],
                                                                 [ProductImage],
                                                                 [Assortment],
                                                                 [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
                  LEFT JOIN @TBL_AttributeValue AS TBAV ON(TBAV.PimCategoryId = ZPP.PimCategoryId)
                  LEFT JOIN ZnodePimCategoryProduct AS ZPCP ON(ZPCP.PimProductId = Zpp.PimProductId
                                                               AND ZPCP.PimCategoryId = Zpp.PimCategoryId)
                  LEFT JOIN ZnodePimCatalogCategory AS ZCC ON(ZCC.PimProductId = Zpp.PimProductId
                                                              AND ZCC.PimCategoryId = Zpp.PimCategoryId
                                                              AND ZCC.PimCatalogId = @PimCatalogId)
                  LEFT JOIN ZnodeProfileCatalogCategory AS ZPCC ON(ZPCC.PimCatalogCategoryId = ZCC.PimCatalogCategoryId
                                                                   AND ZPCC.ProfileCatalogId = @ProfileCatalogId)
                  --LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
             ORDER BY CASE
                          WHEN @OrderId = 0
                          THEN 1
                          ELSE ZCC.PimCatalogCategoryId
                      END DESC,
                      zpp.RowId;

					  
     IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT @RowsCount = (SELECT COUNT(1) FROM @TAb) 
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT @RowsCount =(SELECT COUNT(1) FROM @ProductListIdRTR)   
	 END 


         END TRY
         BEGIN CATCH
		    SELECT ERROR_message()
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCatalogCategoryProducts @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimCategoryId='+CAST(@PimCategoryId AS VARCHAR(50))+',@PimCatalogId='+CAST(@PimCatalogId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@ProfileCatalogId='+CAST(@ProfileCatalogId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCatalogCategoryProducts',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetDynamicReport]...';


GO


ALTER PROCEDURE [dbo].[Znode_GetDynamicReport]
( @WhereClause nvarchar(max),
  @Columns varchar(max),
  @ReportType varchar(600), 
  @LocaleId int,
  @CatalogId    int = 0,
  @PriceListId  int = 0,
  @WarehouseId  int = 0,
  @CategoreyId  nvarchar(max) = '',
  @Isdebug bit = 0 , 
  @IscallforTest BIT =0 
  )

AS 
/*
	 Summary:-  This Procedure is Used to get the dynamic report data of product
	 Unit Testing
	 begin tran
	 EXEC Znode_GetDynamicReport '','SKU','Product',1,@CatalogId =1 
	 
	 EXEC Znode_GetDynamicReport '','ProductType,ProductName,SKU,ProductCode,ShortDescription,LongDescription,Assortment,Brand,Vendor,Highlights,Tags,FeatureDescription,ProductSpecification,File,IsActive,UOM,MinimumQuantity,MaximumQuantity,NewProduct,OutOfStockOptions,IsFeatured,CallForPricing,VideoURL,Calories,SpecialFeatures,PriceRange,Family,Specials,Sharp,Mild,GrapeColor,Season,Shelled,Salted,Color,testAttribute,testAttributeMultiSelect,Size,FreeShipping,ShippingCostRules,Weight,Height,Width,Length,ShippingInformation,testNumber,testCode,xbv,ShipSeparately','Product',1,@CatalogId =1 

	 EXEC Znode_GetDynamicReport '','CategoryName,ShortDescription,LongDescription,CategoryTitle,DisplayOrderCategory,AdditionalDescription,CategoryBanner,CategoryImage,ImageAltText','Category',1

      EXEC Znode_GetDynamicReport '', 'OmsOrderDetailsId,OmsOrderId,PortalId,UserId,OrderDate,OmsOrderStateId,ShippingId,PaymentTypeId,BillingFirstName
      ,BillingLastName,BillingCompanyName,BillingStreet1,BillingStreet2,BillingCity,BillingStateCode,BillingPostalCode,BillingCountry,BillingPhoneNumber
      ,BillingEmailId,TaxCost,ShippingCost,Total,subTotal,DiscountAmount,CurrencyCode,OverDueAmount,ShippingNumber,TrackingNumber,CouponCode,PromoDescription
      ,ReferralUserId,PurchaseOrderNumber,OmsPaymentStateId,WebServiceDownloadDate,PaymentSettingId,PaymentTransactionToken,ShipDate,ReturnDate,AddressId
      ,PoDocument,IsActive,ExternalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate','Orders',1
	 
	  EXEC Znode_GetDynamicReport '','UserId,AccountId,AspNetUserId,FirstName,LastName,MiddleName,CustomerPaymentGUID,BudgetAmount,Email
	  ,PhoneNumber,EmailOptIn,ReferralStatus,ReferralCommission,ReferralCommissionTypeId,IsActive,ExternalId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate','User',1
 
	 rollback tran
	 
*/
BEGIN
	BEGIN TRY
		SET NOCOUNT ON;
		DECLARE @SQL NVARCHAR(max),
				@PimProductId TransferId,
				@OutPimProductIds VARCHAR(max),
				@RowsCount INT  = 0 ,
				@SubTotalString nvarchar(100),
				@PimProductIds VARCHAR(max),
				@IsProductNotIn bit

		DECLARE @DefaultLocaleId INT = dbo.FN_GetDefaultLocaleId() 
		DECLARE @TransferPimProductId TransferId 
		DECLARE @TBL_CatalogDetails TABLE (PimCatalogId INT,CatalogName NVARCHAR(max) )	
		DECLARE @CategoryNameAttributeId INT = dbo.Fn_GetCategoryNameAttributeId()
		DECLARE @TBL_CategoryDetails TABLE (PimCategoryId INT,CategoryName NVARCHAR(max) )

		INSERT INTO @TBL_CatalogDetails (PimCatalogId,CatalogName)
		SELECT PimCatalogId , CatalogName
		FROM ZnodePimCatalog  ZPC
		WHERE (ZPC.PimCatalogId = Isnull(@CatalogId ,0) OR Isnull(@CatalogId,0)  =0 )
	
	    
		INSERT INTO @TBL_CategoryDetails (PimCategoryId,CategoryName)
		SELECT PimCategoryId , CategoryValue 
		FROM ZnodePimCategoryAttributeValue ZPCAV 
		INNER JOIN ZnodePimCategoryAttributeValueLocale ZPCAVL ON (ZPCAVL.PimCategoryAttributeValueId = ZPCAV.PimCategoryAttributeValueId AND ZPCAVL.LocaleId = @DefaultLocaleId)
		INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPCAV.PimAttributeId AND IsCategory = 1 AND ZPA.PimAttributeId = @CategoryNameAttributeId)
		WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.split(@CategoreyId,',') SP WHERE SP.Item= ZPCAV.PimCategoryId) OR @CategoreyId ='')

		DECLARE @TBL_DetailTable TABLE
		( 
			Id int, 
			CountId int, 
			RowId int 
		);

	   DECLARE @TBL_AttributeValue TABLE
        (	    PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  varchar(300),
              PimAttributeId INT,
		    DisplayOrder Bigint
        );
		DECLARE @TBL_AttributeCode TABLE(AttributeCode varchar(300),DisplayOrder Bigint )
		
		DECLARE @ProductData TABLE 
		(AttributeValue Nvarchar(Max), AttributeCode varchar(300), PimProductId  Bigint)

		IF @ReportType = 'Product'
		BEGIN
		      
			 IF Isnull(@CatalogId,0) <> 0 
			 BEGIN 
				Insert into @TransferPimProductId 
				    SELECT  Distinct PimProductId  
				    FROM ZnodePimCatalogCategory ZPCC
				    WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_CatalogDetails TBCD WHERE TBCD.PimCatalogId = ZPCC.PimCatalogId ) OR Isnull(@CatalogId,0) =0 ) and PimProductId Is not null 
					AND (PimProductId =  @IscallforTest OR @IscallforTest = 0) 
			
				SET @IsProductNotIn  = 0 
			 END 
			 ELSE 
			 BEGIN 
			  Insert into @TransferPimProductId 
			  SELECT 1 
			  WHERE @IscallforTest = 1
			   
			  SET @PimProductIds = CASE WHEN @IscallforTest = 1 THEN 1 ELSE  '' END 
			  SET @IsProductNotIn  = 0 
			 END 
			 
			 EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = 10000000,
                  @PageNo = 1,
                  @Order_BY = '',
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = '',
                  @PimProductId = @TransferPimProductId ,
                  @IsProductNotIn = @IsProductNotIn  ,
			   @OutProductId = @OutPimProductIds OUT;
			
	
			 INSERT INTO @TBL_DetailTable (Id ,RowId,CountId)             
			 SELECT item,Id,@RowsCount
			 FROM  dbo.split(@OutPimProductIds,',') SP 
			
			 --SET @SQL = SUBSTRING((SELECT ','+CAST(Id AS VARCHAR(50)) FROM  @TBL_DetailTable FOR XML PATH('') ),2,4000)
			 INSERT INTO @PimProductId ( Id )
			 SELECT Id FROM  @TBL_DetailTable
		
			 INSERT INTO @TBL_AttributeValue (PimProductId,AttributeValue,AttributeCode,PimAttributeId)
			 EXEC [dbo].[Znode_GetProductsAttributeValue] @PimProductId,@Columns,@LocaleId
		
			 UPDATE A SET A.AttributeValue 
					= SUBSTRING ((SELECT ','+CAST([FileName] AS VARCHAR(50)) FROM ZnodeMedia ZM WHERE EXISTS
					(SELECT TOP 1 1 FROM dbo.split(A.AttributeValue ,',') SP WHERE ltrim(rtrim(sp.Item)) = ZM.MediaId) FOR XML PATH ('') ) ,2,4000)   
					FROM @TBL_AttributeValue   A   where A.AttributeCode in ('ProductImage','GalleryImages','SwatchImage') 

			
			 INSERT INTO @TBL_AttributeCode (AttributeCode ,DisplayOrder )
			 select ltrim(rtrim(SPL.item)),SPL.Id
			 from DBO.Split(@Columns,',') SPL
			 where NOT EXISTS (SELECT TOP 1  1 FROM @TBL_AttributeValue TBAV WHERE TBAV.AttributeCode = SPL.item)
	           
			 SET @Columns = 'CatalogName,CategoryName,' + @Columns 
	           ;With CTE_ProductData AS 
			 (
				SELECT tblAv.AttributeValue, tblAv.AttributeCode, tblAv.PimProductId  
				FROM @TBL_AttributeValue  tblAv 
				UNION All 
				select NULL  AttributeValue, SPL.AttributeCode , AV.PimProductId   
				from @TBL_AttributeCode SPL
				CROSS APPLY @TBL_AttributeValue AV 
				--inner join ZnodePimCatalogCategory x on AV.PimProductId = x.PimProductId
				-- SPL.item Not in (Select Distinct AttributeCode from @TBL_AttributeValue) 
				UNION ALL 
				SELECT Distinct  TBCD.CatalogName,'CatalogName' AttributeCode ,  ZPCC.PimProductId 
				FROM ZnodePimCatalogCategory ZPCC
				INNER JOIN @TBL_CatalogDetails TBCD ON TBCD.PimCatalogId = ZPCC.PimCatalogId 
				WHERE ZPCC.PimProductId IS NOT NULL 
				AND EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeValue TBL WHERE TBL.PimProductId = ZPCC.PimProductId )
				GROUP BY  ZPCC.PimProductId ,TBCD.CatalogName
				UNION ALL 
				SELECT SUBSTRING(( SELECT DISTINCT ','+TBCD.CategoryName FROM @TBL_CategoryDetails TBCD INNER JOIN ZnodePimCatalogCategory ZPCCI ON (ZPCCI.PimCategoryId = TBCD.PimCategoryId )
				     WHERE  ZPCC.PimCatalogId = ZPCCI.PimCatalogId AND ZPCC.PimProductId = ZPCCI.PimProductId  FOR XML PATH('')),2,8000)   ,'CategoryName' AttributeCode ,  ZPCC.PimProductId 
				FROM ZnodePimCatalogCategory ZPCC
				WHERE ZPCC.PimProductId IS NOT NULL  
				AND (PimCatalogId in (Select PimCatalogId FROM @TBL_CatalogDetails) OR Isnull(@CatalogId,0)  =0)
				AND EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeValue TBL WHERE TBL.PimProductId = ZPCC.PimProductId )
				GROUP BY ZPCC.PimProductId ,ZPCC.PimCatalogId 
			 )
			 	Select  AttributeValue, AttributeCode, PimProductId  AS Id
				from CTE_ProductData INNER JOIN DBO.Split(@Columns,',') SPLORD  ON CTE_ProductData.AttributeCode = SPLORD.Item 
				--WHERE AttributeValue IS NOT NULL  
				order by PimProductId,SPLORD.id
		END;
		ELSE IF @ReportType = 'Category'
			 BEGIN

			  IF Isnull(@CatalogId,0) <> 0  
			 BEGIN 

			 SET @PimProductIds = SUBSTRING ((SELECT  ','+CAST(PimCategoryId AS VARCHAr(50)) 
												FROM ZnodePimCatalogCategory ZPCC
												WHERE (EXISTS (SELECT TOP 1 1 FROM @TBL_CatalogDetails TBCD WHERE TBCD.PimCatalogId = ZPCC.PimCatalogId ) OR Isnull(@CatalogId,0) =0 )
												--AND (EXISTS (SELECT TOP 1 1 FROM @TBL_CategoryDetails TBCD WHERE TBCD.PimCategoryId = ZPCC.PimCategoryId ) OR @CategoreyId ='')
												FOR XML PATH('')
											),2,4000)
			
			 END 
			 ELSE 
			 BEGIN 
			  SET @PimProductIds = ''
			 END 

				INSERT INTO @TBL_DetailTable( Id, CountId, RowId )
				EXEC Znode_GetCategoryIdForPaging 
				@WhereClauseXML = @WhereClause, 
				@Rows = 10000000, 
				@PageNo = 1, 
				@Order_BY = '', 
				@RowsCount = 0, 
				@LocaleId = @LocaleId, 
				@AttributeCode = '', 
				@PimCategoryId = @PimProductIds,
				@IsAssociated = 1;
				
				Insert into @TBL_AttributeValue (AttributeValue,AttributeCode,PimProductId)
				SELECT CategoryValue AS AttributeValue, AttributeCode, PimCategoryId AS Id
				FROM View_PimCategoryAttributeValue AS VICAV
				WHERE EXISTS
				(
					SELECT TOP 1 1
					FROM @TBL_DetailTable AS TBP
					WHERE VICAV.PimCategoryId = TBP.Id
				) AND 
					  EXISTS
				(
					SELECT TOP 1 1
					FROM dbo.split( @Columns, ',' ) AS SP
					WHERE SP.Item = VICAV.AttributeCode
				) AND  LocaleId = @LocaleId;

						
				Insert into @TBL_AttributeValue (AttributeValue,AttributeCode,PimProductId)
				SELECT CategoryValue AS AttributeValue, AttributeCode, PimCategoryId AS Id
				FROM View_PimCategoryAttributeValue AS VICAV
				WHERE EXISTS
				(
					SELECT TOP 1 1
					FROM @TBL_DetailTable AS TBP
					WHERE VICAV.PimCategoryId = TBP.Id
				) AND 
					  EXISTS
				(
					SELECT TOP 1 1
					FROM dbo.split( @Columns, ',' ) AS SP
					WHERE SP.Item = VICAV.AttributeCode
				) AND  LocaleId = @DefaultLocaleId
				AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_AttributeValue RTRR WHERE VICAV.PimCategoryId = RTRR.PimProductId AND VICAV.AttributeCode = RTRR.AttributeCode)
				;


					
				UPDATE A SET A.AttributeValue 
				= SUBSTRING ((SELECT ','+CAST([FileName] AS VARCHAR(50)) FROM ZnodeMedia ZM WHERE EXISTS
				(SELECT TOP 1 1 FROM dbo.split(A.AttributeValue ,',') SP WHERE ltrim(rtrim(sp.Item)) = ZM.MediaId) FOR XML PATH ('') ) ,2,4000)   
				FROM @TBL_AttributeValue   A   where A.AttributeCode in ('CategoryImage') 

			
				;With CTE_CategoryData AS 
				(
				    select AttributeValue  ,AttributeCode,PimProductId  from @TBL_AttributeValue
				    UNION All 
				    select  NULL  AttributeValue, SPL.item , AV.PimProductId  from DBO.Split(@Columns,',') SPL
				    CROSS JOIN @TBL_AttributeValue AV
				    where SPL.item Not in (Select Distinct AttributeCode from @TBL_AttributeValue)
				    UNION ALL
				    SELECT DISTINCT TBCD.CatalogName,'CatalogName' AttributeCode ,  ZPCC.PimCategoryId 
				    FROM ZnodePimCategoryHierarchy ZPCC
				    INNER JOIN @TBL_CatalogDetails TBCD ON TBCD.PimCatalogId = ZPCC.PimCatalogId 
				)
				Select  AttributeValue, AttributeCode, PimProductId  AS Id  from CTE_CategoryData LEft Outer JOIN DBO.Split(@Columns,',') SPLORD  
				ON CTE_CategoryData.AttributeCode = SPLORD.Item 
				Order by CTE_CategoryData.PimProductId, SPLORD.Id



	    END
	    ELSE IF @ReportType = 'Inventory' 
	    BEGIN 
		SET @Columns = Replace (@Columns, 'Quantity','dbo.Fn_GetDefaultInventoryRoundOff(Quantity) Quantity')   
		SET @Columns = Replace (@Columns, 'ReOrderLevel','dbo.Fn_GetDefaultInventoryRoundOff(ReOrderLevel) ReOrderLevel')   
		SET @SQL = 
		'
					;With Cte_Inventory AS (
					SELECT '+@Columns+' FROM ZnodeInventory ZI Inner join ZnodeWarehouse ZW on ZI.WarehouseId  = ZW.WarehouseId  
					WHERE 1=1 '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)  
					+' AND ( ZI.WarehouseId =  ' + CONVERT(Varchar(300), Isnull(@WarehouseId,0)) + ' OR ' + CONVERT(Varchar(300), Isnull( @WarehouseId,0) ) + '  = 0 ))

					SELECT * FROM Cte_Inventory '
		EXEC (@SQL)
		END 
		ELSE IF @ReportType = 'Orders' 
		BEGIN 
		    if (Charindex('SubTotal',@Columns) > 0 )
				SET @Columns = Replace (@Columns, 'SubTotal','[SBT]')  

		    SET @Columns = Replace (@Columns, 'TaxCost','dbo.Fn_GetDefaultPriceRoundOff(TaxCost) TaxCost')   
		    SET @Columns = Replace (@Columns, 'ShippingCost','dbo.Fn_GetDefaultPriceRoundOff(ShippingCost) ShippingCost')
		    SET @Columns = Replace (@Columns, 'Total','dbo.Fn_GetDefaultPriceRoundOff(Total) Total')   
		    SET @Columns = Replace (@Columns, 'DiscountAmount','dbo.Fn_GetDefaultPriceRoundOff(DiscountAmount) DiscountAmount')   
		    SET @Columns = Replace (@Columns, 'OverDueAmount','dbo.Fn_GetDefaultPriceRoundOff(OverDueAmount) OverDueAmount')   
		    SET @Columns = Replace (@Columns, '[SBT]','dbo.Fn_GetDefaultPriceRoundOff(SubTotal) SubTotal')   
		   	    
		    SET @SQL = '
					    ;With Cte_Orders AS (
					    SELECT '+@Columns+'
					    FROM ZnodeOmsOrderDetails
					    WHERE 1=1
					    '+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+'
						) 
					    SELECT * 
					    FROM Cte_Orders '
		    EXEC (@SQL)
		END 
		ELSE IF @ReportType = 'User' 
		BEGIN 
		SET @Columns = Replace (@Columns, 'BudgetAmount','dbo.Fn_GetDefaultPriceRoundOff(BudgetAmount) BudgetAmount')   
		SET @SQL = '
					;With Cte_User AS (
					SELECT '+@Columns+'
					FROM ZnodeUser 
					WHERE 1=1
					'+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+'
					 ) 
					SELECT * 
					FROM Cte_User '
		EXEC (@SQL)
		END 
		ELSE IF @ReportType = 'Pricing' 
		BEGIN 

			 SET @Columns = Replace (@Columns, 'SalesPrice','dbo.Fn_GetDefaultPriceRoundOff(SalesPrice) SalesPrice')   
			 SET @Columns = Replace (@Columns, 'RetailPrice','dbo.Fn_GetDefaultPriceRoundOff(RetailPrice) RetailPrice')
			 SET @Columns = Replace (@Columns, 'ActivationDate','ZP.ActivationDate ActivationDate')
			 SET @Columns = Replace (@Columns, 'ExpirationDate','ZP.ExpirationDate ExpirationDate')
			 SET @Columns = Replace (@Columns, 'PriceListCode','ZPL.ListCode PriceListCode')   

		

		SET @SQL = '
					;With Cte_Pricing AS (
					SELECT '+@Columns+'
					FROM ZnodePrice ZP Inner join ZnodePriceList ZPL ON ZP.PriceListId = ZPL.PriceListId
					WHERE 1=1
					'+[dbo].[Fn_GetFilterWhereClause](@WhereClause)+' AND (ZP.PriceListId =  ' + CONVERT(Varchar(300), Isnull(@PriceListId ,0) ) + ' OR ' + CONVERT(Varchar(300), Isnull( @PriceListId,0) ) + '  = 0 ) 
					 ) 
					SELECT * 
					FROM Cte_Pricing '
		EXEC (@SQL)
		--print @SQL
		END 

	END TRY
	BEGIN CATCH
		  DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
			 @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetDynamicReport @WhereClause = '+@WhereClause+',@Columns='+@Columns+',@ReportType='+@ReportType+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@CatalogId='+CAST(isnull(@CatalogId,0) AS VARCHAR(50)) +',@PriceListId='+@PriceListId+',@WarehouseId='+@WarehouseId+',@CategoreyId='+@CategoreyId+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		    
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetDynamicReport',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Altering [dbo].[Znode_GetPimCategoryProductList]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPimCategoryProductList]
(   @WhereClause   XML,
    @Rows          INT           = 100,
    @PageNo        INT           = 1,
    @Order_BY      VARCHAR(1000) = '',
    @RowsCount     INT OUT,
    @LocaleId      INT           = 1,
    @PimCategoryId INT,
    @IsAssociated  BIT           = 0
	,@AttributeCode VARCHAR(max) = ''
	)
AS 
/*
     Summary :- This Procedure is used to get the product list for category products 
				The result is fetched order by DisplayOrder or status as per requirement in both asc and desc
				
     Unit Testing 
	 begin tran
     EXEC Znode_GetPimCategoryProductList '',@RowsCount = 0, @PimCategoryId = 22,@Order_BY ='DisplayOrder asc'
	 rollback tran
	*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX),
			  DisplayOrder INT
             );
			 DECLARE @TransferPimProductId TransferId 
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @TBL_FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @OrderByDisplay INT= 0;
             DECLARE @DefaultAttributeFamilyId INT= dbo.Fn_GetDefaultPimProductFamilyId(), @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             
			 DECLARE @TBL_ProductIdTable TABLE
             ([PimProductId] INT,
              [CountId]      INT,
              PimCategoryId  INT,
              RowId          INT
             );

             DECLARE @PimProductId TransferId ,--VARCHAR(MAX)= '', 
					 @PimAttributeId VARCHAR(MAX),
					 @OutPimProductIds VARCHAR(MAX);

			 DECLARE @PimProductIds TransferId

             IF @Order_BY LIKE '%DisplayOrder%'
                 BEGIN
                     SET @OrderByDisplay = 1;
                 END;
             ELSE
             IF @Order_BY LIKE '%Status%'
                 BEGIN
                     SET @OrderByDisplay = 2;
                 END;
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

            INSERT INTO @TransferPimProductId
			SELECT PimProductId 
			FROM ZnodePimCategoryProduct ZCP
            WHERE ZCP.PimCategoryId = @PimCategoryId 
			ORDER BY CASE WHEN @Order_By LIKE '% DESC%'
            THEN 
			CASE WHEN @OrderByDisplay = 1 
					THEN ZCP.DisplayOrder 
				WHEN @OrderByDisplay = 2 
					THEN ZCP.Status
				 ELSE 1 END 
				 ELSE 1 END DESC,
            CASE WHEN @Order_By LIKE '% ASC%' 
				THEN
					CASE WHEN @OrderByDisplay = 1 
					THEN ZCP.DisplayOrder 
						WHEN @OrderByDisplay = 2
							THEN ZCP.Status
							 ELSE 1 END
							  ELSE 1 END 
	         IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId  )
			 BEGIN 
			   INSERT INTO @TransferPimProductId
			   SELECT '0'
			   SET @IsAssociated = 0 
             END 
		
		 
   DECLARE @SQL NVARcHAR(max)= ''
		 DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 --	IF   @IsCallForAttribute=1
		--BEGIN 
	 SET @IsAssociated = CASE WHEN @IsAssociated = 0 THEN 1  
					 WHEN @IsAssociated = 1 THEN 0 END 
		--END 
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  @IsAssociated,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	       
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 
			 INSERT INTO @TBL_ProductIdTable(PimProductId,RowId) 
			 SELECT ID ,RowId FROM @TBL_MainList SP 

			 INSERT INTO @PimProductIds ( Id )
			 SELECT Id FROM @TBL_MainList SP

             UPDATE @TBL_ProductIdTable SET PimCategoryId = @PimCategoryId;
             SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetGridPimAttributes]() FOR XML PATH('')), 2, 4000);
            
			 --INSERT INTO @TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder)
    --         EXEC Znode_GetAttributeDefaultValueLocale @PimAttributeId,@LocaleId;

             INSERT INTO @TBL_AttributeDetails(PimProductId, AttributeValue,AttributeCode,PimAttributeId)
			 EXEC Znode_GetProductsAttributeValue @PimProductIds,@PimAttributeId,@LocaleId;
             --EXEC Znode_GetProductsAttributeValue @OutPimProductIds,@PimAttributeId,@LocaleId;

             --- find the specific attributes and values ---- 
    --         WITH Cte_UpdateDefaultAttributeValue 
			 --AS (SELECT PimProductId,AttributeCode,AttributeValue,SUBSTRING((SELECT ','+TBADV.AttributeDefaultValue 
			 --FROM @TBL_AttributeDefaultValue AS TBADV
    --         INNER JOIN ZnodePimAttribute AS TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId) 
			 --WHERE TBAC.AttributeCode = TBAD.AttributeCode
    --         AND EXISTS(SELECT TOP 1 1 FROM dbo.split(TBAD.AttributeValue, ',') AS SP WHERE Sp.item = TBADV.AttributeDefaultValueCode)
    --         FOR XML PATH('')), 2, 4000) AS AttributeDefaultValue 
			 
			 --FROM @TBL_AttributeDetails AS TBAD)
	
    --         UPDATE TBAD SET AttributeValue = CTUDAV.AttributeDefaultValue 
			 --FROM @TBL_AttributeDetails TBAD 
			 --INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV 
			 --ON(CTUDAV.PimProductId = TBAD.PimProductId AND CTUDAV.AttributeCode = TBAD.AttributeCode) WHERE AttributeDefaultValue IS NOT NULL;

			   ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue , SUBSTRING( ( SELECT ','+AttributeValue
			   FROM  @TBL_AttributeDetails AS TBAI
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) MediaIds  
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;
				


			 INSERT INTO @TBL_FamilyDetails(PimAttributeFamilyId,PimProductId)
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId] @PimProductId,1;

             UPDATE TFD SET FamilyName = ZPFL.AttributeFamilyName FROM @TBL_FamilyDetails TFD INNER JOIN ZnodePimFamilyLocale ZPFL 
			 ON(TFD.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId AND LocaleId = @LocaleId);

             UPDATE TFD SET FamilyName = ZPFL.AttributeFamilyName FROM @TBL_FamilyDetails TFD INNER JOIN ZnodePimFamilyLocale ZPFL
			 ON(TFD.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId AND LocaleId = @DefaultLocaleId) WHERE TFD.FamilyName IS NULL OR TFD.FamilyName = '';




             SELECT zpp.[PimProductId] AS [Productid],zpp.[PimProductId],ZPCP.[PimCategoryId],TBFD.FamilyName,[ProductName],[SKU],[ProductType],[Assortment],
             CASE WHEN ZPCP.Status IS NULL THEN CAST(0 AS BIT) ELSE CAST(ZPCP.Status AS BIT) END AS [Status],
			 piv.[ProductImage] [ImagePath],ZPCP.DisplayOrder 
			 
			 FROM @TBL_ProductIdTable AS zpp
			 LEFT JOIN ZnodePimCategoryProduct ZPCP ON(ZPCP.PimProductId = Zpp.PimProductId AND ZPCP.PimCategoryId = Zpp.PimCategoryId)
             INNER JOIN (SELECT PimProductId,AttributeValue,AttributeCode FROM @TBL_AttributeDetails) TB
			  PIVOT(MAX([AttributeValue]) 
			 FOR [AttributeCode] IN([ProductName],[IsActive],[ProductImage],[SKU],[ProductType],[Assortment])) AS Piv ON(Piv.[PimProductId] = zpp.[PimProductId])
             LEFT JOIN @TBL_FamilyDetails TBFD ON(TBFD.PimProductId = zpp.[PimProductId])
             ORDER BY CASE WHEN @Order_By LIKE '% DESC%' THEN CASE WHEN @OrderByDisplay = 1 THEN ZPCP.DisplayOrder 
			 WHEN @OrderByDisplay = 2 THEN ZPCP.Status ELSE 1 END ELSE 1 END DESC,
             CASE WHEN @Order_By LIKE '% ASC%' THEN CASE WHEN @OrderByDisplay = 1 THEN ZPCP.DisplayOrder
             WHEN @OrderByDisplay = 2 THEN ZPCP.Status ELSE 1 END ELSE 1 END,zpp.RowId;
			   IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT @RowsCount = (SELECT COUNT(1) FROM @TAb)   
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT @RowsCount=(SELECT COUNT(1) FROM @ProductListIdRTR)
	 END 


         END TRY
         BEGIN CATCH
		  SELECT ERROR_MESSAGE()
            DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimCategoryProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimCategoryId='+CAST(@PimCategoryId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPimCategoryProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageProductList]...';


GO

ALTER PROCEDURE [dbo].[Znode_ManageProductList]
(   @WhereClause		 XML,
	@Rows				 INT           = 10,
	@PageNo			     INT           = 1,
	@Order_BY			 VARCHAR(1000) = '',
	@RowsCount			 INT OUT,
	@LocaleId			 INT           = 1,
	@PimProductId		 VARCHAR(2000) = 0,
	@IsProductNotIn	     BIT           = 0,
	@IsCallForAttribute  BIT	       = 0,
	@AttributeCode       VARCHAR(max)  = ''
	)
AS
    
/*
 Summary:-  This Procedure is used for getting product List  
			Procedure will pivot verticle table(ZnodePimattributeValues) into horizontal table with columns 
			ProductId,ProductName,ProductType,AttributeFamily,SKU,Price,Quantity,IsActive,ImagePath,Assortment,LocaleId,DisplayOrder        
 Unit Testing
		  DECLARE @D INT= 1 
		  EXEC  [dbo].[Znode_ManageProductList]   @WhereClause = N'' , @Rows = 100 , @PageNo = 1 ,@Order_BY = '',@LocaleId= 1,@PimProductId = '',@IsProductNotIn = 1 , @RowsCount = @D OUT SELECT @D
    
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds TransferId, --VARCHAR(MAX), 
					 @PimAttributeId VARCHAR(MAX), 
					 @FirstWhereClause VARCHAR(MAX)= '', 
					 @SQL NVARCHAR(MAX)= '' ,
					 @OutPimProductIds VARCHAR(max);

             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

			 DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
             SET @FirstWhereClause =
             (SELECT WhereClause FROM dbo.Fn_GetWhereClauseXML(@WhereClause) WHERE id = 1);

             IF (@FirstWhereClause LIKE '%Brand%'
                OR @FirstWhereClause LIKE '%Vendor%'
                OR @FirstWhereClause LIKE '%ShippingCostRules%'
                OR @FirstWhereClause LIKE '%Highlights%') and @IsCallForAttribute=1
                 BEGIN

				 SET @SQL = ' DECLARE @TBL_ProductIds TABLE (PimProductId INT,ModifiedDate DATETIME  )
				            ;WIth Cte_DefaultValue AS (
						    SELECT AttributeDefaultValueCode , ZPDF.PimAttributeId ,FNPA.AttributeCode FROM ZnodePImAttributeDefaultValue ZPDF
						    INNER JOIN [dbo].[Fn_GetProductDefaultFilterAttributes] () FNPA ON ( FNPA.PimAttributeId = ZPDF.PimAttributeId))
							
							, Cte_productIds AS 
							(SELECT a.PimProductId, c.AttributeCode , CTDV.AttributeDefaultValueCode AttributeValue,b.ModifiedDate 
							FROM  ZnodePimAttributeValue a
							LEFT JOIN ZnodePimAttribute c ON(c.PimAttributeId = a.PimAttributeId)
							LEFT JOIN ZnodePimAttributeValueLocale b ON(b.PimAttributeValueId = a.PimAttributeValueId)  
							INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode AND EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,'','') SP WHERE SP.Item = CTDV.AttributeDefaultValueCode) )
 
						    )
							INSERT INTO @TBL_ProductIds (PimProductId ,ModifiedDate)
							SELECT PimProductId ,ModifiedDate
							FROM Cte_productIds WHERE   '+@FirstWhereClause+' GROUP BY PimProductId,ModifiedDate Order By ModifiedDate DESC 
										
							SELECT PimProductId FROM @TBL_ProductIds GROUP BY PimProductId,ModifiedDate ORDER BY ModifiedDate DESC';
					 
					 Print @sql
                     INSERT INTO @ProductIdTable(PimProductId)
                     EXEC (@SQL);

                     INSERT INTO @TransferPimProductId
					 SELECT PimProductId
                     FROM @ProductIdTable
                     UNION ALL 
					 SELECT 0
					 
					                                    
                     DELETE FROM @ProductIdTable;

                     SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(MAX)), '<WhereClauseModel><WhereClause>'+@FirstWhereClause+'</WhereClause></WhereClauseModel>', '') AS XML);
                 END
				 ELSE IF @PimProductId <> ''
			    BEGIN 
				 INSERT INTO @TransferPimProductId(id)
				 SELECT Item 
				 FROM dbo.split(@PimProductId,',')
			    END 
					                    
             EXEC Znode_GetProductIdForPaging @whereClauseXML = @WhereClause,@Rows = @Rows,@PageNo = @PageNo,@Order_BY = @Order_BY,@RowsCount = @RowsCount OUT,
             @LocaleId = @LocaleId,@AttributeCode = @AttributeCode,@PimProductId = @TransferPimProductId, @IsProductNotIn = @IsProductNotIn,@OutProductId = @OutPimProductIds OUT;
			
			 INSERT INTO @ProductIdTable (PimProductId)              
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 
				 
				            
             --SET @PimProductIds = SUBSTRING((SELECT ','+CAST(PimProductId AS VARCHAR(100)) FROM @ProductIdTable FOR XML PATH('')), 2, 4000);
			 INSERT INTO @PimProductIds ( Id )
			 SELECT PimProductId FROM @ProductIdTable

             SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetGridPimAttributes]() FOR XML PATH('')), 2, 4000);;
            
			 INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeId,
                  @LocaleId;

             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC [Znode_GetProductsAttributeValue]
                  @PimProductIds,
                  @PimAttributeId,
                  @localeId;
     
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
            
			;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+ dbo.Fn_GetMediaThumbnailMediaPath(zm.PATH) 
			   FROM ZnodeMedia AS ZM
               INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;


			
			 SELECT zpp.PimProductid AS ProductId,
                    [ProductName],
                    ProductType,
                    ISNULL(zf.FamilyName, '') AS AttributeFamily,
                    [SKU],
                    [Price],
                    [Quantity],
                    CASE
                        WHEN [IsActive] IS NULL
                        THEN CAST(0 AS BIT)
                        ELSE CAST([IsActive] AS BIT)
                    END AS [IsActive],
                   piv.[ProductImage] AS ImagePath,
                    [Assortment],
                    @LocaleId AS LocaleId,
                    [DisplayOrder]
             FROM @ProductIdTable AS zpp
                  LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
                  INNER JOIN
             (
                 SELECT PimProductId,
                        AttributeValue,
                        AttributeCode
                 FROM @TBL_AttributeDetails
             ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
                                                                 [SKU],
                                                                 [Price],
                                                                 [Quantity],
                                                                 [IsActive],
                                                                 [ProductType],
                                                                 [ProductImage],
                                                                 [Assortment],
                                                                 [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
                --  LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
             ORDER BY zpp.RowId;
         
         END TRY
         BEGIN CATCH
               DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimProductId='+@PimProductId+',@IsProductNotIn='+CAST(@IsProductNotIn AS VARCHAR(50))+',@IsCallForAttribute='+CAST(@IsCallForAttribute AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageProductList_XML]...';


GO
ALTER  PROCEDURE [dbo].[Znode_ManageProductList_XML]
(   @WhereClause						 XML,
    @Rows								 INT           = 100,
    @PageNo								 INT           = 1,
    @Order_BY			 VARCHAR(1000) = '',
    @LocaleId			 INT           = 1,
    @PimProductId		 VARCHAR(2000) = 0,
    @IsProductNotIn	 BIT           = 0,
	@IsCallForAttribute BIT		   = 0,
	@AttributeCode      VARCHAR(max ) = '' ,
	@IsDebug            Bit		   = 0 )
AS
    
/*
		  Summary:-   This Procedure is used for get product List  
				    Procedure will pivot verticle table(ZnodePimattributeValues) into horizontal table with columns 
				    ProductId,ProductName,ProductType,AttributeFamily,SKU,Price,Quantity,IsActive,ImagePath,Assortment,LocaleId,DisplayOrder
        
		  Unit Testing
		  
exec Znode_ManageProductList_XML @WhereClause=N'',@Rows=50,@PageNo=1,@Order_By=N'',@LocaleId=1,@PimProductId=N'',@IsProductNotIn=1,@IsCallForAttribute=0,@AttributeCode=''
          select * from ZnodeAttributeType  WHERE AttributeValue LIKE '%&%'
		  UPDATE VieW_lOADMANAGEpRODUCT SET  AttributeValue = 'A & B'  WHERE AttributeValue LIKE '% and %' AND PimProductId = 158
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds TransferId, --VARCHAR(MAX), 
					 @FirstWhereClause NVARCHAR(MAX)= '', 
					 @SQL NVARCHAR(MAX)= '' ,
					 @OutPimProductIds VARCHAR(max),
					 @ProductXML NVARCHAR(max) ;

             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId()
					 ,@RowsCount INT =0 ;
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
			  ,PimAttributedefaultValueId INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
			   DECLARE @TBL_AttributeDetailsLocale AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
			 DECLARE @TBL_MultiSelectAttribute TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			
			 DECLARE @TBL_MediaAttribute TABLE (Id INT ,PimAttributeId INT ,AttributeCode VARCHAR(600) )

			 DECLARE @TBL_ProductIds TABLE 
			 (
			  PimProductId INT,
			  ModifiedDate DATETIME  
			 )

			 DECLARE @FamilyDetails TABLE
             (
			  PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(Max)
             );
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
          		
             IF EXISTS ( SELECT TOP 1 1 FROM @WhereClause.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
			 WHERE dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Brand'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  = 'Vendor'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'ShippingCostRules'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Highlights') and @IsCallForAttribute=1
                 BEGIN
                DECLARE @AttributeCodeValue TABLE (AttributeValue NVARCHAr(max),AttributeCode NVARCHAR(max))

				INSERT INTO @AttributeCodeValue(AttributeValue,AttributeCode)
				SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
						 ,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeCode
				FROM @WhereClause.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
				WHERE dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Brand'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  = 'Vendor'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'ShippingCostRules'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Highlights'
				
				SET @SQL =   
				           ';WIth Cte_DefaultValue AS (
										  SELECT AttributeDefaultValueCode , ZPDF.PimAttributeId ,FNPA.AttributeCode
										  FROM ZnodePImAttributeDefaultValue ZPDF
										  INNER JOIN [dbo].[Fn_GetProductDefaultFilterAttributes] () FNPA ON ( FNPA.PimAttributeId = ZPDF.PimAttributeId) 
										)
										, Cte_productIds AS 
										(
										  SELECT a.PimProductId, c.AttributeCode , CTDV.AttributeDefaultValueCode AttributeValue,b.ModifiedDate 
										  FROM  ZnodePimAttributeValue a
										  LEFT JOIN ZnodePimAttribute c ON(c.PimAttributeId = a.PimAttributeId)
										  LEFT JOIN ZnodePimAttributeValueLocale b ON(b.PimAttributeValueId = a.PimAttributeValueId)  
										  INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode 
										  AND EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,'','') SP WHERE SP.Item = CTDV.AttributeDefaultValueCode) )
										  Union all 
										  
											SELECT a.PimProductId,c.AttributeCode,ZPADV.AttributeDefaultValueCode AttributeValue ,a.ModifiedDate 
											FROM ZnodePimProductAttributeDefaultValue ZPPADV
											INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
											LEFT JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
											LEFT JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )
											INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode )
										)										
										SELECT PimProductId ,ModifiedDate
										FROM Cte_productIds WHERE  AttributeCode '+(SELECT TOP 1 AttributeCode  FROM @AttributeCodeValue )+' AND 
										AttributeValue '+(SELECT TOP 1 AttributeValue  FROM @AttributeCodeValue )+' GROUP BY PimProductId,ModifiedDate Order By ModifiedDate DESC ';

					 SET @Order_BY = CASE WHEN @Order_BY = '' THEN 'ModifiedDate DESC' ELSE @Order_BY END 
					 	
					 SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(max)),'<WhereClauseModel><attributecode>'+(SELECT TOP 1 AttributeCode  FROM @AttributeCodeValue )+'</attributecode><attributevalue>'+(SELECT TOP 1 AttributeValue   FROM @AttributeCodeValue )+'</attributevalue></WhereClauseModel>','') AS XML )
					
				     INSERT INTO @TBL_ProductIds ( PimProductId, ModifiedDate )
					 EXEC (@SQL);

                     INSERT INTO @ProductIdTable( PimProductId )
                     SELECT PimProductId 
					 FROM @TBL_ProductIds

                     INSERT INTO @TransferPimProductId
					 SELECT PimProductId
                     FROM @ProductIdTable
                   
				   			  -- SELECT * FROM @TransferPimProductId
     DELETE FROM @ProductIdTable;
   --  SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(MAX)), @FirstWhereClause, ' 1 = 1') AS XML);
                 END
	            ELSE IF @PimProductId <> ''
			    BEGIN 
		
				 INSERT INTO @TransferPimProductId(id)
				 SELECT Item 
				 FROM dbo.split(@PimProductId,',')
			    END 


	 DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 	IF @PimProductId <> ''  OR   @IsCallForAttribute=1
		BEGIN 
	 SET @IsProductNotIn = CASE WHEN @IsProductNotIn = 0 THEN 1  
					 WHEN @IsProductNotIn = 1 THEN 0 END 
		END 
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  @IsProductNotIn,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	       
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 
              
  			 INSERT INTO @PimProductIds ( Id  )
			 SELECT id FROM @TBL_MainList

			 DECLARE @TBL_PimProductIds transferId 
			 INSERT INTO @TBL_PimProductIds
			 SELECT id 
             FROM @PimProductIds
			 			 	
			 DECLARE @PimAttributeIds TransferId  
			 INSERT INTO @PimAttributeIds
			 SELECT PimAttributeId  
			 FROM [dbo].[Fn_GetProductGridAttributes]()
			 
			 INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue_newTesting
                  @TBL_PimProductIds,
                  @PimAttributeIds,
                  @localeId;
			
			UPDATE @TBL_AttributeDetails
			SET AttributeValue = ISNULL(AttributeValue,'')
			WHERE AttributeValue IS NULL 
			 INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             
		 UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
           	
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
			
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT a.ID PimProductId ,CASE WHEN IsProductPublish = 1 THEN   'Published' WHEN IsProductPublish = 0 THEN 'Draft'  ELSE 'Not Published' END, 'PublishStatus',NULL
			FROM @PimProductIds a 
			INNER JOIN ZnodePimProduct b ON (b.PimProductId = a.ID)

	  INSERT INTO @TBL_AttributeDetailsLocale (PimProductId ,PimAttributeId,AttributeCode )
			SELECT  TBLAD.PimProductId ,TBLAD.PimAttributeId,TBLAD.AttributeCode 
			FROM @TBL_AttributeDetails TBLAD 
			GROUP BY  TBLAD.PimProductId ,TBLAD.PimAttributeId,TBLAD.AttributeCode 

					
	    UPDATE TBLPP 
		SET AttributeValue = CTDD.AttributeValue 
		FROM  @TBL_AttributeDetails CTDD 
		INNER JOIN @TBL_AttributeDetailsLocale TBLPP ON (TBLPP.PimProductId = CTDD.PimProductId AND TBLPP.AttributeCode  = CTDD.AttributeCode)
		WHERE TBLPP.AttributeValue IS NULL 

    	SET @ProductXML =  '<MainProduct>'+ STUFF( (  SELECT '<Product>'+'<PimProductId>'+CAST(TBAD.PimProductId AS VARCHAR(50))+'</PimProductId>'+ STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetailsLocale TBADI      
															 WHERE TBADI.PimProductId = TBAD.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

		FROM @TBL_AttributeDetailsLocale TBAD
		INNER JOIN @TBL_MainList TBPI ON (TBAD.PimProductid = TBPI.id )
		LEFT JOIN @TBL_ProductIds TPT ON TBAD.PimProductId = TPT.PimProductId
		GROUP BY TBAD.pimProductid, TPT.ModifiedDate,TBPI.RowId
		ORDER BY TBPI.RowId 
		FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'

     IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT (SELECT COUNT(1) FROM @TAb) AS RowsCount   
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT (SELECT COUNT(1) FROM @ProductListIdRTR) AS RowsCount   
	 END 
		;

             -- find the all locale values 
         END TRY
         BEGIN CATCH
		    SELECT ERROR_MESSAGE()
                DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductList_XML @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimProductId='+@PimProductId+',@IsProductNotIn='+CAST(@IsProductNotIn AS VARCHAR(50))+',@IsCallForAttribute='+CAST(@IsCallForAttribute AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductList_XML',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

         END CATCH;

     END;
GO
PRINT N'Altering [dbo].[Znode_ManageProductListByAttributes]...';


GO

ALTER PROCEDURE [dbo].[Znode_ManageProductListByAttributes]
(   @WhereClause      XML,
	@PimAttributeIds  VARCHAR(3000) = NULL,
	@Rows             INT           = 100,
	@PageNo           INT           = 0,
	@Order_BY         VARCHAR(1000) = '',
	@LocaleId         INT,
	@PimProductId     VARCHAR(max) = NULL,
	@IsProductNotIn   BIT           = 0,
	@RelatedProductId INT           = 0, 
	@IsDebug		    BIT = 0 
	)
AS
   /*  Summary:-  This Procedure is used for get product List with extra column attribute supllied to the procedure 
     Unit Testing 
     DECLARE @EDE INT = 0 
	 exec Znode_ManageProductListByAttributes @WhereClause='',@PimAttributeIds = '35,81',@Rows = 10,@PageNo=1,@Order_BY = '',@RelatedProductId = 53442,@PimProductId = '',@IsProductNotIn= 0 ,@LocaleId=1 --SELECT @EDE 
	
	*/
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
		  --  SELECT '123112'
             DECLARE @SQL NVARCHAR(MAX), @AttributeCode_filter NVARCHAR(2000), @WhereClauseChanges NVARCHAR(MAX)= '',@OutPimProductIds varchar(max) ;
             SET @WhereClauseChanges = CONVERT(NVARCHAR(MAX), @WhereClause);
             DECLARE @PimAttributeFamilyId INT= Dbo.Fn_GetDefaultValue('PimFamily'), @RowsCount INT, @DefaultLocaleId INT= Dbo.Fn_GetDefaultlocaleId();
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()					 
			
	
			 DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT identity(1,1)
             );
             DECLARE @TBL_PimAttributeId TABLE
             (PimAttributeId INT,
              AttributeCode  VARCHAR(600)
             );
             INSERT INTO @TBL_PimAttributeId
             (PimAttributeId,
              AttributeCode
             )
                    SELECT PimAttributeId,
                           AttributeCode
                    FROM ZnodePimAttribute ZPA
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM dbo.Split(@PimAttributeIds, ',') SP
                        WHERE SP.Item = ZPA.PimAttributeId
                    );
					
             SET @AttributeCode_filter = ISNULL(CAST((
                                                      SELECT CAST('<WhereClauseModel><attributecode>'+ '  = '+''''+TBPA.AttributeCode+''''+'</attributecode></WhereClauseModel>' AS XML )
                                                      FROM @TBL_PimAttributeId TBPA
                                                      FOR XML PATH(''),TYPE
                                                  ) AS NVARCHAR(max)),'');
          
		     SET @WhereClauseChanges = [dbo].[Fn_GetXmlWhereClauseForAttribute](@WhereClauseChanges,@AttributeCode_filter, @LocaleId);
             SET @WhereClause = CONVERT(XML, @WhereClauseChanges);	
	    
		  INSERT INTO @TransferPimProductId
		  SELECT ITEM
		  FROM DBO.SPLIT(@PIMPRODUCTID,',')
		  UNION ALL 
		  SELECT PimProductId 
		  FROM ZnodePimProductTypeAssociation  
		  WHERE PimParentProductId=  @RelatedProductId
		  AND @PIMPRODUCTID = '0'
		
		   DECLARE @AttributeCode NVARCHAR(max)
		   SET @AttributeCode = SUBSTRING ((SELECT ','+AttributeCode FROM [dbo].[Fn_GetProductGridAttributes]() qt WHERE (EXISTS (SELECT TOP 1 1 
				FROM dbo.split(@PimAttributeIds,',') TR WHERE tr.Item = qt.PimAttributeId)  OR AttributeCode = 'ProductType')
		   FOR XML PATH('')  ),2,4000)
		   
		   --EXEC Znode_GetProductIdForPaging
     --             @whereClauseXML = @WhereClause,
     --             @Rows = @Rows,
     --             @PageNo = @PageNo,
     --             @Order_BY = @Order_BY,
     --             @RowsCount = @RowsCount OUT,
     --             @LocaleId = @LocaleId,
     --             @AttributeCode = @AttributeCode,
     --             @PimProductId = @TransferPimProductId,
     --             @IsProductNotIn = @IsProductNotIn,
				 -- @OutProductId = @OutPimProductIds OUT
				 -- ;

 SET @IsProductNotIn = CASE WHEN @IsProductNotIn = 1 THEN 0 
	 WHEN @IsProductNotIn = 0 THEN 1  END
     DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE(Id INT , RowId INT )
	
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList @IsProductNotIn ,@TransferPimProductId

	

	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	  
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))
	  --INSERT INTO @TAB 
	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb )OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 SET @AttributeCode = dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC',''))
	 INSERT INTO @TBL_MainList
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	
	 END 
	 ELSE 
	 BEGIN
	 SET @AttributeCode = dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC',''))
	 INSERT INTO @TBL_MainList
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 

			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 
			 
		
             SET @AttributeCode_filter = SUBSTRING(
                                                  (
                                                      SELECT ','+TBPA.AttributeCode
                                                      FROM @TBL_PimAttributeId TBPA
                                                      FOR XML PATH('')
                                                  ), 1, 4000);
             --DECLARE @PimProductIds VARCHAR(MAX)= SUBSTRING(
             --                                              (
             --                                                  SELECT ','+CAST(PimProductId AS VARCHAR(100))
             --                                                  FROM @ProductIdTable
             --                                                  FOR XML PATH('')
             --                                              ), 2, 4000);

			 DECLARE @PimProductIds TransferId

			 INSERT INTO @PimProductIds ( Id )
			 SELECT id FROM @TBL_MainList

			 --DECLARE @TBL_PimProductIds transferId 
			 --INSERT INTO @TBL_PimProductIds
			 --SELECT id 
    --         FROM @PimProductIds
			 			 	

														      		
             DECLARE @DefaultAttributeCode VARCHAR(MAX)= dbo.Fn_GetDefaultValue('AttributeCode');
             
			 INSERT INTO @TBL_PimAttributeId
             (PimAttributeId,
              AttributeCode
             )
                    SELECT PimAttributeId,
                           AttributeCode
                    FROM ZnodePimAttribute ZPA
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM dbo.Split(@DefaultAttributeCode, ',') SP
                        WHERE SP.Item = ZPA.AttributeCode
                    );
			
			INSERT INTO @TBL_PimAttributeId
             (PimAttributeId,
              AttributeCode
             )
                    SELECT PimAttributeId,
                           'OR_'+AttributeCode
                    FROM ZnodePimAttribute ZPA
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM dbo.Split(@PimAttributeIds, ',') SP
                        WHERE SP.Item = ZPA.PimAttributeId
                    );
             
	
             SET @DefaultAttributeCode = @DefaultAttributeCode + @AttributeCode_filter;
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId                INT,
              AttributeValue              NVARCHAR(MAX),
              AttributeCode               VARCHAR(600),
              PimAttributeId              INT,
              PimProductTypeAssociationId INT,
              DisplayOrder                INT,
              IsNonEditableRow            BIT DEFAULT 0
             );
             DECLARE @TBL_AttributeCode TABLE
             (PimAttributeId INT,
              AttributeCode  VARCHAR(300)
             );
             INSERT INTO @TBL_AttributeCode
             (PimAttributeId,
              AttributeCode
             )
                    SELECT PimAttributeId,
                           AttributeCode
                    FROM ZnodePimAttribute ZPA
                    WHERE EXISTS
                    (
                        SELECT TOP 1 1
                        FROM dbo.split(@DefaultAttributeCode, ',') SP
                        WHERE Sp.Item = ZPA.AttributeCode
                    );
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT
             );
			  
             DECLARE @PimAttributeId VARCHAR(MAX);
             SET @PimAttributeId = SUBSTRING(
                                            (
                                                SELECT ','+CAST(TBAC.PimAttributeId AS VARCHAR(50))
                                                FROM @TBL_AttributeCode TBAC
                                                     INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON(ZPADV.PimAttributeId = TBAC.PimAttributeId)
                                                FOR XML PATH('')
                                            ), 2, 4000);

													
             INSERT INTO @TBL_AttributeDefaultValue
             (
			  PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue
			  ,DisplayOrder
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeId,
                  @LocaleId;


             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue
                  @PimProductIds,
                  @DefaultAttributeCode,
                  @localeId;

			  INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )

			 SELECT ZPAV.PimProductId ,ZPPAVD.PimAttributeDefaultValueId,'OR_'+ZPA.AttributeCode,ZPA.PimAttributeId
             FROM ZnodePimAttributeValue ZPAV 
			 INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId) 
			 INNER JOIN @ProductIdTable TBL ON (TBL.PimProductId = ZPAV.PimProductId )
			INNER JOIN ZnodePimProductAttributeDefaultValue ZPPAVD ON (ZPPAVD.PimAttributeValueId = ZPAV.PimAttributeValueId  )
			WHERE ZPPAVD.LocaleId = @DefaultLocaleId 
			AND EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimAttributeIds,',') SP WHERE Sp.Item = ZPA.PimAttributeId )
             --;WITH Cte_UpdateDefaultAttributeValue
             --     AS (SELECT PimProductId,
             --                AttributeCode,
             --                AttributeValue,
             --                SUBSTRING(
             --                         (
             --                             SELECT ','+TBADV.AttributeDefaultValue
             --                             FROM @TBL_AttributeDefaultValue TBADV
             --                                  INNER JOIN @TBL_AttributeCode TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
             --                             WHERE TBAC.AttributeCode = TBAD.AttributeCode
             --                                   AND EXISTS
             --                             (
             --                                 SELECT TOP 1 1
             --                                 FROM dbo.split(TBAD.AttributeValue, ',') SP
             --                                 WHERE Sp.item = TBADV.AttributeDefaultValueCode
             --                             )
             --                             FOR XML PATH('')
             --                         ), 2, 4000) AttributeDefaultValue
             --         FROM @TBL_AttributeDetails TBAD)
                  --UPDATE TBAD
                  --  SET
                  --      AttributeValue = CTUDAV.AttributeDefaultValue
                  --FROM @TBL_AttributeDetails TBAD
                  --     INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
                  --                                                          AND CTUDAV.AttributeCode = TBAD.AttributeCode)
                  --WHERE AttributeDefaultValue IS NOT NULL;

             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );

             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
			
             --- Update the  product families name locale wise   


			 	;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+dbo.Fn_GetMediaThumbnailMediaPath (zm.PATH) 
			   FROM ZnodeMedia AS ZM
              
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;

		


             UPDATE TBAD
               SET
                   PimProductTypeAssociationId = ZPTA.PimProductTypeAssociationId,
                   DisplayOrder = ZPTA.DisplayOrder
             FROM @TBL_AttributeDetails TBAD
                  INNER JOIN ZnodePimproductTypeAssociation ZPTA ON(ZPTA.PimProductId = TBAD.PimProductId)
             WHERE ZPTA.PimParentProductId = @RelatedProductId;
            
			-- DECLARE @AttributeCode NVARCHAR(4000);
             SET @AttributeCode = SUBSTRING(
                                           (
                                               SELECT DISTINCT
                                                      ','+QUOTENAME(AttributeCode)
                                               FROM @TBL_PimAttributeId
                                               FOR XML PATH('')
                                           ), 2, 4000);
             DECLARE @AttributeCode_Duplicate NVARCHAR(4000)= SUBSTRING(
                                                                       (
                                                                           SELECT 
                                                                                  ', Piv.'+QUOTENAME(AttributeCode)
                                                                           FROM ZnodePimAttribute ZPA
                                                                           WHERE EXISTS
                                                                           (
                                                                               SELECT TOP 1 1
                                                                               FROM dbo.Split(@PimAttributeIds, ',') SP
                                                                               WHERE SP.Item = ZPA.PimAttributeId
                                                                               ORDER BY AttributeCode
                                                                           )
																		   GROUP BY ZPA.AttributeCode,ZPA.DisplayOrder
																		   ORDER BY ZPA.DisplayOrder  DESC
                                                                           FOR XML PATH('')
                                                                       ), 1, 4000);
             DECLARE @AttributeCode_Duplicate_Data NVARCHAR(4000);
			 	 
			

			  SET  @AttributeCode_Duplicate_Data= SUBSTRING(
                                                                       (
                                                                           SELECT 
                                                                                  'AND Piv.'+QUOTENAME('OR_'+AttributeCode) +'= Isa.'+QUOTENAME(AttributeCode)+' '
                                                                           FROM ZnodePimAttribute ZPA
                                                                           WHERE EXISTS
                                                                           (
                                                                               SELECT TOP 1 1
                                                                               FROM dbo.Split(@PimAttributeIds, ',') SP
                                                                               WHERE SP.Item = ZPA.PimAttributeId
                                                                               ORDER BY AttributeCode
                                                                           )
																		   GROUP BY ZPA.AttributeCode,ZPA.DisplayOrder
																		   ORDER BY ZPA.DisplayOrder  DESC
                                                                           FOR XML PATH('')
                                                                       ), 4, 4000) +' '

            -- SET @AttributeCode_Duplicate_Data = REPLACE(SUBSTRING(@AttributeCode_Duplicate, 2, 4000), ',', '+'',''+');
             SELECT PimProductId,
                    AttributeValue,
                    AttributeCode,
                    PimProductTypeAssociationId,
                    DisplayOrder
             INTO #Temp_attribute
             FROM @Tbl_AttributeDetails
             ORDER BY DisplayOrder;
             SELECT *
             INTO #temp_Family
             FROM @FamilyDetails;
             
			 DECLARE @IsSelectedAttributeValue TABLE
             (ProductId      INT,
              AttributeValue NVARCHAR(500),
              AttributeCode  NVARCHAR(500),
              PimAttributeId INT,PimAttributeDefaultValueId INT 
             );

			  
		   DECLARE @IsSelectedAttributeValueLocale TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode NVARCHAR(600),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(max),
			  DisplayOrder   INT 
             );
          

		  -- select @PimProductId ,@AttributeCode ,@LocaleId 
		  ;With Cte_AttributeVAkuestest AS 
		  (
		    SELECT PimAttributeId , ZPPAD.PimAttributeDefaultValueId ,ZPAV.PimProductId
			FROM ZnodePimAttributeVAlue ZPAV 
			INNER JOIN ZnodePimProductAttributeDefaultValue ZPPAD ON (ZPPAD.PimAttributeValueId = ZPAV.PimAttributeValueId)
			WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split(@PimAttributeIds,',') SP WHERE SP.Item = ZPAV.PimAttributeId )
			AND EXISTS (SELECT TOP 1 1 FROM dbo.split(@PimProductId,',') SP WHERE SP.Item = ZPAV.PimProductId )
		) ,Cte_PimAttributeDefaultValueLocale AS 
		(
		  SELECT  AttributeDefaultValue ,PimAttributeId,PimProductId,CTA.PimAttributeDefaultValueId
		  FROM ZnodePimAttributeDefaultValueLocale CTA  
		  INNER JOIN Cte_AttributeVAkuestest CTB ON (CTB.PimAttributeDefaultValueId = CTA.PimAttributeDefaultValueId)		
		  WHERE LocaleId = @DefaultLocaleId 
		  UNION 
		  SELECT  AttributeDefaultValue ,PimAttributeId,PimProductId,CTA.PimAttributeDefaultValueId
		  FROM ZnodePimAttributeDefaultValueLocale CTA 
		  INNER JOIN Cte_AttributeVAkuestest CTB ON (CTB.PimAttributeDefaultValueId = CTA.PimAttributeDefaultValueId)		
		  WHERE LocaleId = @DefaultLocaleId 	
		)
		,Cte_AttributeValueForCode 
		As
		(
		  SELECT AttributeDefaultValue AtributeValue , AttributeCode ,PimProductId ,a.PimAttributeDefaultValueId
		  FROM Cte_PimAttributeDefaultValueLocale a
		  INNER JOIN ZnodePimAttribute b ON (b.PimAttributeId = a.PimAttributeId )
		)
			 INSERT INTO @IsSelectedAttributeValue (ProductId,AttributeCode,AttributeValue,PimAttributeDefaultValueId)
             SELECT PimProductId,AttributeCode,AtributeValue,PimAttributeDefaultValueId
			 FROM Cte_AttributeValueForCode
             
			 --INSERT INTO @IsSelectedAttributeValueLocale
    --         EXEC Znode_GetAttributeDefaultValueLocale
    --              @PimAttributeIds,
    --              @LocaleId;
             
			 --UPDATE izav
    --           SET
    --               izav.AttributeValue = isval.AttributeDefaultValue
    --         FROM @IsSelectedAttributeValue izav
    --              INNER JOIN @IsSelectedAttributeValueLocale isval ON izav.AttributeValue = isval.AttributeDefaultValueCode AND izav.PimAttributeId = isval.PimAttributeId ;
             

			 SELECT * 
			 --SUBSTRING(
    --                         (
    --                             SELECT ','+isav.AttributeValue
    --                             FROM @IsSelectedAttributeValue isav
				--				 INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ISAV.PimAttributeID )
    --                             WHERE isa.ProductId = isav.ProductId
    --                             ORDER BY ZPA.DisplayOrder DESC
    --                             FOR XML PATH('')
    --                         ), 2, 4000) AttributeValue,
							

             INTO #IsSelectedAttribute
             FROM @IsSelectedAttributeValue isa
			; 
				 
			 IF @IsDebug = 1 
			 BEGIN 
			 SELECT * FROM @IsSelectedAttributeValue izav

			 SELECT * FROM #IsSelectedAttribute

			 END 
             --select * from @IsSelectedAttributeValue
             --select @AttributeCode_Duplicate,@AttributeCode_Duplicate_data
             --select * from #IsSelectedAttribute
			 
             SET @AttributeCode = REPLACE(@AttributeCode, ',[DisplayOrder]', '');
             SET @SQL = '
			     
				 ;with Cte_Getvalue AS (
				 SELECT ProductId , '+SUBSTRING(@AttributeCode_Duplicate, 2, 4000)+'
				 FROM ( SELECT ProductId,AttributeCode,PimAttributeDefaultValueId FROM #IsSelectedAttribute gt ) dd 
				 PIVOT ( MAX (PimAttributeDefaultValueId) FOR AttributeCode IN ('+REPLACE(SUBSTRING(@AttributeCode_Duplicate, 2, 4000),'Piv.','')+')  ) PIV 
				 )

				SELECT DISTINCT  piv.PimProductTypeAssociationId, zpp.PimProductid ProductId, [ProductName],ProductType ,ISNULL(zf.FamilyName,'''')  AttributeFamily , [SKU]
						  , CASE WHEN [IsActive] IS NULL THEN ''false'' ELSE   [IsActive]  END  [Status],  piv.[ProductImage] ImagePath,[Assortment],DisplayOrder  ,'+CAST(@LocaleId AS VARCHAR(50))+' LocaleId
						  ,DENSE_RANK()Over(Order By'+SUBSTRING(@AttributeCode_Duplicate, 2, 4000)+') CombinationId '+@AttributeCode_Duplicate+'
					, CASE When isa.ProductId Is Null then 0 ELSE 1 END IsNonEditableRow,'+ CAST(@RelatedProductId AS VARCHAR(50))+' RelatedProductId
				FROM ZNodePimProduct zpp 
				LEFT JOIN  #temp_Family zf ON (zf.PimProductId = zpp.PimProductId)
				INNER JOIN #Temp_attribute 
				PIVOT 
				(
				Max(AttributeValue) FOR AttributeCode  IN ( '+@AttributeCode+')
				)Piv  
				ON (Piv.PimProductId = zpp.PimProductid) 
				--LEFT JOIN ZnodeMedia zm ON (zm.MediaId = piv.[ProductImage])
				LEFT OUTER JOIN Cte_Getvalue isa ON ('+@AttributeCode_Duplicate_Data+')
				    '+' Order BY '+ISNULL(CASE
                                                  WHEN @Order_BY = ''
                                                  THEN 'DisplayOrder'
                                                  ELSE @Order_BY
                                              END, 'DisplayOrder');
		
	
             -- SELECT '''+SUBSTRINg(REPLACE(@AttributeCode_Duplicate,'Piv.',''),2,4000)+''' Ids
			 
             SELECT AttributeCode
             FROM ZnodePimAttribute ZPA
             WHERE EXISTS
             (
                 SELECT TOP 1 1
                 FROM dbo.Split(@PimAttributeIds, ',') SP
                 WHERE SP.Item = ZPA.PimAttributeId
             );
             
			PRINT @SQL
             EXEC SP_executesql
                  @SQL;
        
     IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT (SELECT COUNT(1) FROM @TAb) AS RowsCount   
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT (SELECT COUNT(1) FROM @ProductListIdRTR) AS RowsCount   
	 END 
		;
             DROP TABLE #Temp_attribute;
             DROP TABLE #temp_Family;
   
             -- find the all locale values 
         END TRY
         BEGIN CATCH
		  SELECT ERROR_MESSAGE()
                DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductListByAttributes @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@PimAttributeIds='+@PimAttributeIds+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimProductId='+@PimProductId+',@IsProductNotIn='+CAST(@IsProductNotIn AS VARCHAR(50))+',@RelatedProductId='+CAST(@RelatedProductId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductListByAttributes',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetSkuListForInventoryAndPrice]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetSkuListForInventoryAndPrice](
       @WhereClause VARCHAR(MAX) ,
       @Rows        INT           = 100 ,
       @PageNo      INT           = 1 ,
       @Order_BY    VARCHAR(1000) = '' ,
       @RowsCount   INT = 0  OUT ,
       @LocaleId    INT           = 1 ,
       @PriceListId INT           = 0)
AS 
   /* 
    Summary : this procedure is used to Get the inventory list by sku 
    Unit Testing 
     EXEC Znode_GetSkuListForInventoryAndPrice  '',@Order_BY = '',@RowsCount= 1 ,@Rows = 100,@PageNo= 1,@PriceListId = 26,@LocaleId =1 
     SELECT * FROM ZnodePublishProduct WHERE PimProductid  = 4
   */
     BEGIN
         BEGIN TRY
		     DECLARE @PimProductIds TransferId, --NVARCHAR(max)= '', 
					@OutPimProductIds NVARCHAR(max)= '',
					@PimAttributeId NVARCHAR(max)=''
			 DECLARE @pimSkuAttributeId VARCHAR(50) = [dbo].[Fn_GetProductSKUAttributeId] ()
			 DECLARE @PimProductNameAttributeId VARCHAR(50) = [dbo].[Fn_GetProductNameAttributeId]()
			 DECLARE @PimProductTypeAttributeId VARCHAR(50) = [dbo].[Fn_GetProductTypeAttributeId]()
			 DECLARE @PimIsDownlodableAttributeId VARCHAR(50) = [dbo].[Fn_GetIsDownloadableAttributeId]()
			 
			 DECLARE @DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleId()
			 DECLARE @TransferPimProductId TransferId 
			 DECLARE @IsProductNotIn BIT = 1 
			 DECLARE @IMamgePAth NVARCHAR(max) = [dbo].[Fn_GetServerThumbnailMediaPath]()

			 DECLARE @ProductIdTable TABLE
             (
				PimProductId INT,
				CountId      INT,
				RowId        INT IDENTITY(1,1)
             );

			 DECLARE @TBL_AttributeDetails AS TABLE
             (
				PimProductId   INT,
				AttributeValue NVARCHAR(MAX),
				AttributeCode  VARCHAR(600),
				PimAttributeId INT
             );

             IF @PriceListId > 0
             BEGIN
				INSERT INTO @TransferPimProductId 
				SELECT PimProductId 
				FROM  [dbo].[View_PimProductAttributeValueLocale] VIMP
				INNER JOIN ZnodePrice  ZP ON (Zp.SKU = VIMP.AttributeValue )
				WHERE VIMP.PimAttributeid = @pimSkuAttributeId
				AND VIMP.LocaleId = @LocaleId
				AND ZP.PriceListId = @PriceListId
					
               SET @IsProductNotIn = 1 --CASE WHEN @PimProductIds IS NULL OR @PimProductIds = '' then 1 else 0 end 

			   IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId )
			   BEGIN 
					INSERT INTO @TransferPimProductId
					SELECT '-1'
			   END 
			 --  set @PimProductIds = CASE WHEN @PimProductIds IS NULL OR @PimProductIds = '' then  else @PimProductIds end 
		     END;
			-- SELECT * FROM ZnodePrice WHERE PriceListId = 21
			DECLARE @AttributeCode NVARCHAR(max)= '',@SQL NVARCHAR(max)=''
 DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 --	IF @PimProductId <> ''  OR   @IsCallForAttribute=1
		--BEGIN 
	 --SET @IsProductNotIn = CASE WHEN @IsProductNotIn = 0 THEN 1  
		--			 WHEN @IsProductNotIn = 1 THEN 0 END 
		--END 
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  0,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	       
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 
			 INSERT INTO @ProductIdTable (PimProductId)              
			 SELECT Id 
			 FROM @TBL_MainList SP 
				  	           
             --SET @PimProductIds = SUBSTRING((SELECT ','+CAST(PimProductId AS VARCHAR(100)) FROM @ProductIdTable FOR XML PATH('')), 2, 4000);
			 INSERT INTO @PimProductIds ( Id )
			 SELECT PimProductId FROM @ProductIdTable

             SET @PimAttributeId = @pimSkuAttributeId  + ',' + @PimProductNameAttributeId + ',' +@PimProductTypeAttributeId + ',' + @PimIsDownlodableAttributeId ;
			 
			  DECLARE @FamilyDetails TABLE
             (
				PimProductId         INT,
				PimAttributeFamilyId INT,
				FamilyName           NVARCHAR(3000)
             );	


			 INSERT INTO @FamilyDetails ( PimAttributeFamilyId, PimProductId )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId] @PimProductIds, 1;

             UPDATE a
             SET  FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
             INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId AND LocaleId = @LocaleId);

             UPDATE a
             SET FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a 
			 INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL OR a.FamilyName = '';


             INSERT INTO @TBL_AttributeDetails ( PimProductId, AttributeValue, AttributeCode, PimAttributeId )
             EXEC Znode_GetProductsAttributeValue @PimProductIds, @PimAttributeId, @localeId;

			 INSERT INTO @TBL_AttributeDetails ( PimProductId, AttributeValue, AttributeCode )
			 SELECT PimProductId,FamilyName ,'AttributeFamily'
			 FROM @FamilyDetails

		    ;With Cte_pimProductDetails AS
			(
			  SELECT PimProductId,AttributeValue,AttributeCode FROM @TBL_AttributeDetails
			)
			SELECT PimProductId,ProductName,SKU,Convert ( BIT, CASE when ISNULL(IsDownloadable,0)= 'true' then 1 else 0 END )IsDownloadable,@IMamgePAth+ZM.[Path] ProductImage, AttributeFamily,[ProductType]
			FROM Cte_pimProductDetails CTEPD
			PIVOT
			(
				Max(AttributeValue) FOR AttributeCode IN ([ProductName],[SKU],[IsDownloadable],[ProductImage],[AttributeFamily],[ProductType])
			) PIV
			LEFT JOIN ZnodeMedia ZM ON (ZM.MediaId = Piv.[ProductImage])
			 
			
				  IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT @RowsCount= (SELECT COUNT(1) FROM @TAb)   
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT  @RowsCount= (SELECT COUNT(1) FROM @ProductListIdRTR) 
	 END 
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), 
			 @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetSkuListForInventoryAndPrice @WhereClause = '+
			 CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+
			 @Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PriceListId='+CAST(@PriceListId AS VARCHAR(50))+',@RowsCount='+
			 CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetSkuListForInventoryAndPrice',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageLinkProductList]...';


GO

ALTER PROCEDURE [dbo].[Znode_ManageLinkProductList]
(   @WhereClause      XML,
    @Rows             INT          = 100,
    @PageNo           INT          = 1,
    @Order_BY         VARCHAR(100) = '',
    @RowsCount        INT OUT,
    @LocaleId         INT          = 1,
    @RelatedProductId INT          = 0,
    @PimAttributeId   INT          = 0)
AS
   /*  Summary :- This Procedure is used to find the link product Detail 
     Unit Testing 
     EXEC Znode_ManageLinkProductList '' , @RowsCount = 0 ,@RelatedProductId=128
   */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds TransferId, --VARCHAR(MAX), 
					 @PimAttributeIds VARCHAR(MAX),
					 @OutPimProductIds VARCHAR(max);
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

		     DECLARE @TBL_LinkProductDetail TABLE
             (PimProductId           INT,
              PimLinkProductDetailId INT,
              RelatedProductId       INT,
              PimAttributeId         INT
             );
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @DefaultAttributeFamily INT=
             (
                 SELECT PimAttributeFamilyId
                 FROM ZnodePimAttributeFamily
                 WHERE IsCategory = 0
                       AND IsDefaultFamily = 1
             );
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
             INSERT INTO @TBL_LinkProductDetail
             (PimProductId,
              PimLinkProductDetailId,
              RelatedProductId,
              PimAttributeId
             )
                    SELECT PimProductId,
                           PimLinkProductDetailId,
                           PimParentProductId,
                           PimAttributeId
                    FROM ZnodePimLinkProductDetail
                    WHERE PimParentProductId = @RelatedProductId
                          AND PimAttributeId = @PimAttributeId;
                
				INSERT INTO @TransferPimProductId 
                SELECT PimProductId 
                FROM @TBL_LinkProductDetail
             
			 IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId) 
			 BEGIN 
			  INSERT INTO @TransferPimProductId 
			  SELECT '-1'
			                                  
             END 
			 DECLARE @AttributeCode NVARCHAR(max)
			 SET @AttributeCode = SUBSTRING ((SELECT ','+AttributeCode FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH('') ),2,4000)

			 EXEC Znode_GetProductIdForPaging
                  @whereClauseXML = @WhereClause,
                  @Rows = @Rows,
                  @PageNo = @PageNo,
                  @Order_BY = @Order_BY,
                  @RowsCount = @RowsCount OUT,
                  @LocaleId = @LocaleId,
                  @AttributeCode = @AttributeCode,
                  @PimProductId = @TransferPimProductId,
                  @IsProductNotIn = 0,
				  @OutProductId = @OutPimProductIds OUT;

			
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT item 
			 FROM dbo.split(@OutPimProductIds,',') SP 
			 
			 --SET @PimProductIds = SUBSTRING(
    --                                       (
    --                                           SELECT ','+CAST(PimProductId AS VARCHAR(100))
    --                                           FROM @ProductIdTable
    --                                           FOR XML PATH('')
    --                                       ), 2, 4000);
			
			INSERT INTO @PimProductIds ( Id )
			SELECT item 
			FROM dbo.split(@OutPimProductIds,',') SP

             SET @PimAttributeIds = SUBSTRING( (SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetProductGridAttributes]() FOR XML PATH ('') ),2,4000);
            
			 INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder 
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeIds,
                  @LocaleId;
             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC [Znode_GetProductsAttributeValue]
                  @PimProductIds,
                  @PimAttributeIds,
                  @localeId;
             WITH Cte_UpdateDefaultAttributeValue
                  AS (SELECT PimProductId,
                             AttributeCode,
                             AttributeValue,
                             SUBSTRING(
                                      (
                                          SELECT ','+TBADV.AttributeDefaultValue
                                          FROM @TBL_AttributeDefaultValue TBADV
                                               INNER JOIN ZnodePimAttribute TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
                                          WHERE TBAC.AttributeCode = TBAD.AttributeCode
                                                AND EXISTS
                                          (
                                              SELECT TOP 1 1
                                              FROM dbo.split(TBAD.AttributeValue, ',') SP
                                              WHERE Sp.item = TBADV.AttributeDefaultValueCode
                                          )
                                          FOR XML PATH('')
                                      ), 2, 4000) AttributeDefaultValue
                      FROM @TBL_AttributeDetails TBAD)
                  UPDATE TBAD
                    SET AttributeValue = CTUDAV.AttributeDefaultValue
                  FROM @TBL_AttributeDetails TBAD
                       INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
                                                                            AND CTUDAV.AttributeCode = TBAD.AttributeCode)
                  WHERE AttributeDefaultValue IS NOT NULL;
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
            
			 ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;


				
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
				
				-- LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
             --- Update the  product families name locale wise   
        UPDATE  @TBL_AttributeDetails SET PimAttributeId = 0 WHERE PimAttributeId IS nULL 
	     DECLARE @ProductXML XML 

		--SELECT * FROM @TBL_AttributeDetails

	   	 SET @ProductXML =   '<MainProduct>'+ STUFF( (  SELECT '<Product>'
		                                                    +'<PimLinkProductDetailId>'+CAST(ISNULL(TBLPD.PimLinkProductDetailId,'') AS VARCHAR(50))+'</PimLinkProductDetailId>'
															+'<PimProductId>'+CAST(zpp.PimProductId AS VARCHAR(50))+'</PimProductId>'
															+'<RelatedProductId>'+CAST(ISNULL(TBLPD.RelatedProductId,'') AS VARCHAR(50))+'</RelatedProductId>'
		
		 + STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetails TBADI      
															 WHERE TBADI.PimProductId = zpp.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

			 FROM @ProductIdTable AS zpp
             LEFT JOIN @TBL_LinkProductDetail AS TBLPD ON(TBLPD.PimProductId = ZPP.PimProductId)
             ORDER BY zpp.RowId
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'


			SELECT @RowsCount AS RowsCount;

			
			
			
			
			
			
			
			
			
			
			
			
			 --SELECT zpp.PimProductid AS ProductId,
    --                [ProductName],
    --                ProductType,
    --                ISNULL(zf.FamilyName, '') AS AttributeFamily,
    --                [SKU],
    --                [Price],
    --                [Quantity],
    --                CASE
    --                    WHEN [IsActive] IS NULL
    --                    THEN CAST(0 AS BIT)
    --                    ELSE CAST([IsActive] AS BIT)
    --                END AS [IsActive],
    --                PimLinkProductDetailId,
    --                RelatedProductId,
    --                TBLPD.PimAttributeId,
    --                [dbo].FN_GetMediaThumbnailMediaPath(zm.Path) AS ImagePath,
    --                [Assortment],
    --                @LocaleId AS LocaleId,
    --                [DisplayOrder]
    --         FROM @ProductIdTable AS zpp
    --              INNER JOIN @TBL_LinkProductDetail AS TBLPD ON(TBLPD.PimProductId = ZPP.PimProductId)
    --              LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
    --              INNER JOIN
    --         (
    --             SELECT PimProductId,
    --                    AttributeValue,
    --                    AttributeCode
    --             FROM @TBL_AttributeDetails
    --         ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
    --                                                             [SKU],
    --                                                             [Price],
    --                                                             [Quantity],
    --                                                             [IsActive],
    --                                                             [ProductType],
    --                                                             [ProductImage],
    --                                                             [Assortment],
    --                                                             [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
    --              LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
    --         ORDER BY zpp.RowId;
         END TRY
         BEGIN CATCH
		     
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageLinkProductList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@RelatedProductId='+CAST(@RelatedProductId AS VARCHAR(50))+',@PimAttributeId='+CAST(@PimAttributeId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageLinkProductList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;   


         --
GO
PRINT N'Altering [dbo].[Znode_ManageProductAddonList]...';


GO


ALTER PROCEDURE [dbo].[Znode_ManageProductAddonList]
(    @PimProductId INT,
     @LocaleId     INT = 1)
AS  
   /*  Summary :- This Procedure is used to addon details of the product  
     Unit Testing
     EXEC Znode_ManageProductAddonList 61,1
    */
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @TBL_FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @TBL_AddOnGroupDetail TABLE
             (PimAddOnProductId INT,
              PimProductId      INT,
              PimAddonGroupId   INT,
              AddonGroupName    NVARCHAR(MAX),
              RequiredType      VARCHAR(50),
              DisplayType       NVARCHAR(400),
              DisplayOrder      INT
             );
             
			 DECLARE @PimProductIds TransferId, --VARCHAR(MAX), 
				     @PimAttributeId VARCHAR(MAX);

             DECLARE @TBL_AddOnGroupRelatedProductIds TABLE
             (RelatedProductId        INT,
              PimAddonGroupId         INT,
              PimProductId            INT,
              PimAddOnProductDetailId INT,
			  AddOnDisplayOrder INT,
			  IsDefault BIT
             );


             WITH Cte_AddonGroupListBothLocale
                  AS (SELECT ZPAOP.PimAddOnProductId,
                             PimProductId,
                             ZPAOP.PimAddonGroupId,
                             ZPAGL.AddonGroupName,
                             ZPAOP.RequiredType,
                             ZPAG.DisplayType,
                             ZPAOP.DisplayOrder,
                             ZPAGL.LocaleId
                      FROM ZnodePimAddOnProduct ZPAOP
                           LEFT JOIN ZnodePimAddonGroup ZPAG ON(ZPAG.PimAddonGroupId = ZPAOp.PimAddonGroupId)
                           LEFT JOIN ZnodePimAddonGroupLocale ZPAGL ON(ZPAGL.PimAddonGroupId = ZPAG.PimAddonGroupId)
                      WHERE PimProductId = @PimProductId
                            AND ZPAGL.LocaleId IN(@DefaultLocaleId, @LocaleId)),
                  Cte_AddOnGroupListFirstLocale
                  AS (SELECT PimAddOnProductId,
                             PimProductId,
                             PimAddonGroupId,
                             AddonGroupName,
                             RequiredType,
                             DisplayType,
                             DisplayOrder
                      FROM Cte_AddonGroupListBothLocale CTAGLBL
                      WHERE CTAGLBL.LocaleId = @LocaleId),
                  Cte_AddonGroupListDefaultLocale
                  AS (
                  SELECT PimAddOnProductId,
                         PimProductId,
                         PimAddonGroupId,
                         AddonGroupName,
                         RequiredType,
                         DisplayType,
                         DisplayOrder
                  FROM Cte_AddOnGroupListFirstLocale
                  UNION ALL
                  SELECT PimAddOnProductId,
                         PimProductId,
                         PimAddonGroupId,
                         AddonGroupName,
                         RequiredType,
                         DisplayType,
                         DisplayOrder
                  FROM Cte_AddonGroupListBothLocale CTAGLBL
                  WHERE CTAGLBL.LocaleId = @DefaultLocaleId
                        AND NOT EXISTS
                  (
                      SELECT TOP 1 1
                      FROM Cte_AddOnGroupListFirstLocale CTAOGLFL
                      WHERE CTAOGLFL.PimAddonGroupId = CTAGLBL.PimAddonGroupId
                  ))
                  INSERT INTO @TBL_AddOnGroupDetail
                  (PimAddOnProductId,
                   PimProductId,
                   PimAddonGroupId,
                   AddonGroupName,
                   RequiredType,
                   DisplayType,
                   DisplayOrder
                  )
                         SELECT PimAddOnProductId,
                                PimProductId,
                                PimAddonGroupId,
                                AddonGroupName,
                                RequiredType,
                                DisplayType,
                                DisplayOrder
                         FROM Cte_AddonGroupListDefaultLocale;
             INSERT INTO @TBL_AddOnGroupRelatedProductIds
             (RelatedProductId,
              PimAddonGroupId,
              PimProductId,
              PimAddOnProductDetailId,
			  AddOnDisplayOrder,
			  IsDefault
             )
                    SELECT ZPAP.PimProductId RelatedProductId,
                           ZPAP.PimAddonGroupId,
                           PimChildProductId PimProductId,
                           PimAddOnProductDetailId,
						   ZPAPD.DisplayOrder AddOnDisplayOrder, 
						  ZPAPD.IsDefault
                    FROM  ZnodePimAddOnProduct ZPAP  
                         INNER JOIN ZnodePimAddOnProductDetail ZPAPD ON(ZPAP.PimAddOnProductId = ZPAPD.PimAddOnProductId)
                    WHERE ZPAP.PimProductId = @PimProductId;
             --SET @PimProductIds = SUBSTRING(
             --                              (
             --                                  SELECT ','+CAST(PimProductId AS VARCHAR(100))
             --                                  FROM @TBL_AddOnGroupRelatedProductIds
             --                                  FOR XML PATH('')
             --                              ), 2, 4000);

			 INSERT INTO @PimProductIds ( Id )
			 SELECT PimProductId FROM @TBL_AddOnGroupRelatedProductIds

             SET @PimAttributeId = [dbo].[Fn_GetProductGridDefaultAttributeId]();
             INSERT INTO @TBL_AttributeDefaultValue
             (PimAttributeId,
              AttributeDefaultValueCode,
              IsEditable,
              AttributeDefaultValue,
			  DisplayOrder
             )
             EXEC Znode_GetAttributeDefaultValueLocale
                  @PimAttributeId,
                  @LocaleId;
             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC [Znode_GetProductsAttributeValue]
                  @PimProductIds,
                  @PimAttributeId,
                  @LocaleId;
             WITH Cte_UpdateDefaultAttributeValue
                  AS (SELECT PimProductId,
                             AttributeCode,
                             AttributeValue,
                             SUBSTRING(
                                      (
                                          SELECT ','+TBADV.AttributeDefaultValue
                                          FROM @TBL_AttributeDefaultValue AS TBADV
                                               INNER JOIN ZnodePimAttribute AS TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
                                          WHERE TBAC.AttributeCode = TBAD.AttributeCode
                                                AND EXISTS
                                          (
                                              SELECT TOP 1 1
                                              FROM dbo.split(TBAD.AttributeValue, ',') AS SP
                                              WHERE Sp.item = TBADV.AttributeDefaultValueCode
                                          )
                                          FOR XML PATH('')
                                      ), 2, 4000) AS AttributeDefaultValue
                      FROM @TBL_AttributeDetails AS TBAD)
                  UPDATE TBAD
                    SET
                        AttributeValue = CTUDAV.AttributeDefaultValue
                  FROM @TBL_AttributeDetails TBAD
                       INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
                                                                            AND CTUDAV.AttributeCode = TBAD.AttributeCode)
                  WHERE AttributeDefaultValue IS NOT NULL;
             INSERT INTO @TBL_FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             UPDATE TBFD
               SET
                   FamilyName = ZPFL.AttributeFamilyName
             FROM @TBL_FamilyDetails TBFD
                  INNER JOIN ZnodePimFamilyLocale ZPFL ON(TBFD.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId
                                                          AND LocaleId = @LocaleId);
             UPDATE TBFD
               SET
                   FamilyName = ZPFL.AttributeFamilyName
             FROM @TBL_FamilyDetails TBFD
                  INNER JOIN ZnodePimFamilyLocale ZPFL ON(TBFD.PimAttributeFamilyId = ZPFL.PimAttributeFamilyId
                                                          AND LocaleId = @DefaultLocaleId)
             WHERE TBFD.FamilyName IS NULL
                   OR TBFD.FamilyName = '';
             SELECT TBAGRP.PimProductId ProductId,
                    [ProductName],
                    ProductType,
                    ISNULL(TBFD.FamilyName, '') AttributeFamily,
                    [SKU],
                    [Price],
                    [Quantity],
                    [IsActive],
                    RelatedProductId,
                    Assortment,
                    TBAGD.PimAddonGroupId,
                    AddonGroupName,
                    DisplayOrder,
                    DisplayType,
                    RequiredType,
                    PimAddOnProductId,
                    PimAddOnProductDetailId,
					AddOnDisplayOrder,
					IsDefault
             FROM @TBL_AddOnGroupDetail TBAGD
                  LEFT JOIN @TBL_AddOnGroupRelatedProductIds TBAGRP ON(TBAGRP.PimAddonGroupId = TBAGD.PimAddonGroupId
                                                                       AND TBAGRP.RelatedProductId = TBAGD.PimProductId)
                  LEFT JOIN @TBL_FamilyDetails TBFD ON(TBFD.PimProductId = TBAGRP.PimProductId)
                  LEFT JOIN
             (
                 SELECT PimProductId,
                        AttributeValue,
                        AttributeCode
                 FROM @TBL_AttributeDetails
             ) TBAD PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
                                                                   [SKU],
                                                                   [Price],
                                                                   [Quantity],
                                                                   [IsActive],
                                                                   [ProductType],
                                                                   [ProductImage],
                                                                   [Assortment])) PIV ON(PIV.PimProductId = TBAGRP.PimProductId)
		    ORDER BY AddOnDisplayOrder ASC
			;
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductAddonList @PimProductId = '+CAST(@PimProductId AS VARCHAR(max))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductAddonList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_ManageProductTypeAssociationList]...';


GO
ALTER PROCEDURE [dbo].[Znode_ManageProductTypeAssociationList]
(   @WhereClause      NVARCHAR(MAX) = '',
    @Rows             INT           = 10,
    @PageNo           INT           = 1,
    @Order_BY         VARCHAR(1000) = '',
    @RelatedProductId INT           = 0,
    @IsAssociated     BIT           = 0,
    @RowsCount        INT OUT,
    @LocaleId         INT           = 1)
AS
/*
Summary: This Procedure is used to manage Product association
Unit Testing :
 EXEC [Znode_ManageProductTypeAssociationList] '', @RowsCount = 0,@RelatedProductId = 44
*/
     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @SQL NVARCHAR(MAX), @AlternetOrderBy NVARCHAR(2000),@OutPimProductIds VARCHAR(max);
             DECLARE @DefaultLocaleId INT= Dbo.Fn_GetDefaultValue('Locale');
             DECLARE @DefaultAttributeFamily INT= Dbo.Fn_GetDefaultValue('PimFamily');
			 DECLARE @ProductIdTable TABLE (  PimProductId int, CountId int, RowId int IDENTITY(1,1));
			 DECLARE @ProductAttributeDetials TABLE ( PimProductId int, AttributeCode nvarchar(600), AttributeValue nvarchar(max), LocaleId int);
			 DECLARE @OrderByDisplay INT= 0;
			 DECLARE @ProductFinalDetails TABLE( PimProductId int, ProductName nvarchar(max), SKU nvarchar(max));             
			 DECLARE @PimProductId VARCHAR(MAX)= '';
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

			 IF @Order_BY LIKE '%DisplayOrder%'
             BEGIN
                SET @OrderByDisplay = 1;
             END;

            INSERT INTO @TransferPimProductId  
			SELECT PimProductId
			FROM ZnodePimProductTypeAssociation 
			WHERE PimParentProductId = @RelatedProductId
            ORDER BY CASE WHEN @Order_By LIKE '% DESC%' THEN CASE WHEN @OrderByDisplay = 1 THEN DisplayOrder ELSE 1 END ELSE 1 END DESC,
                    CASE WHEN @Order_By LIKE '% ASC%'  THEN CASE WHEN @OrderByDisplay = 1 THEN DisplayOrder ELSE 1 END ELSE 1 END
					
	SET @IsAssociated = CASE WHEN @IsAssociated = 1 THEN 0 
	 WHEN @IsAssociated = 0 THEN 1  END


     DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE(id INT , RowId INT )
	
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList @IsAssociated ,@TransferPimProductId

	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	  
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))
	  
	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 
	 DECLARE @AttributeCode varchar(600)
	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	
	 SET @AttributeCode = dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC',''))

	 INSERT INTO @TBL_MainList
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	
	 END 
	 ELSE 
	 BEGIN
	  SET @AttributeCode = dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC',''))
	 INSERT INTO @TBL_MainList
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 	
	
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			SELECT id FROM @TBL_MainList           
       
			 DECLARE @PimProductIds TransferId

			 INSERT INTO @PimProductIds ( Id ) 
			 SELECT PimProductId FROM @ProductIdTable

			 DECLARE @DefaultAttributeCode  TRANSFERID
			  INSERT INTO @DefaultAttributeCode
			  SELECT  PimAttributeId FROM [dbo].[Fn_GetProductGridAttributes]() 
            
             
			 DECLARE @TBL_AttributeDetails AS TABLE (PimProductId int, AttributeValue nvarchar(max), AttributeCode varchar(600), PimAttributeId int);

			 
             DECLARE @TBL_AttributeDefaultValue TABLE (PimAttributeId INT, AttributeDefaultValueCode VARCHAR(100), IsEditable BIT,AttributeDefaultValue NVARCHAR(MAX),DisplayOrder INT);
            
			 INSERT INTO @TBL_AttributeDetails( PimProductId, AttributeValue, AttributeCode, PimAttributeId )
			 EXEC Znode_GetProductsAttributeValue_newTesting @PimProductIds, @DefaultAttributeCode, @LocaleId;  
			 
			 INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT a.PimProductId ,CASE WHEN IsProductPublish = 1 THEN   'Published' WHEN IsProductPublish = 0 THEN 'Draft'  ELSE 'Not Published' END, 'PublishStatus',NULL
			FROM @ProductIdTable a 
			INNER JOIN ZnodePimProduct b ON (b.PimProductId = a.PimProductId)


             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1; 
             -- find the product families  
			 --;WITH Cte_ProductMedia
    --           AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			 --  , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			 --  FROM ZnodeMedia AS ZM
    --           INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			 --  INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			 --  INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			 --  INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			 --  WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			 --  FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			 --  FROM @TBL_AttributeDetails AS TBA 
			 --  INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		  --    UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			 -- FROM @TBL_AttributeDetails TBAV 
			 -- INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			 -- AND CTPM.PimAttributeId = TBAV.PimAttributeId;

			  

             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
			
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
				
		
             --- Update the  product families name locale wise   
        UPDATE  @TBL_AttributeDetails SET PimAttributeId = 0 WHERE PimAttributeId IS nULL 
	     DECLARE @ProductXML XML 



	   	 SET @ProductXML =   '<MainProduct>'+ STUFF( (  SELECT '<Product>'
		                                                    +'<PimProductTypeAssociationId>'+CAST(ISNULL(ZPTA.PimProductTypeAssociationId,'') AS VARCHAR(50))+'</PimProductTypeAssociationId>'
															+'<PimProductId>'+CAST(zpp.PimProductId AS VARCHAR(50))+'</PimProductId>'
															+'<RelatedProductId>'+CAST(ISNULL(ZPTA.PimParentProductId,'') AS VARCHAR(50))+'</RelatedProductId>'
															+'<DisplayOrder>'+CAST(ZPTA.[DisplayOrder] AS VARCHAR(50))+'</DisplayOrder>'

		 + STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetails TBADI      
															 WHERE TBADI.PimProductId = zpp.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

			 FROM @ProductIdTable AS zpp
             LEFT JOIN ZnodePimProductTypeAssociation ZPTA ON(ZPTA.PimProductId = Zpp.PimProductId
                                                                    AND ZPTA.PimParentProductId = @RelatedProductId)
             ORDER BY CASE
                          WHEN @Order_By LIKE '% DESC%'
                          THEN CASE
                                   WHEN @OrderByDisplay = 1
                                   THEN ZPTA.DisplayOrder
								   ELSE 1
                               END
                          ELSE 1
                      END DESC,
                      CASE
                          WHEN @Order_By LIKE '% ASC%'
                          THEN CASE
                                   WHEN @OrderByDisplay = 1
                                   THEN ZPTA.DisplayOrder
                                   ELSE 1
                               END
                          ELSE 1
                      END,RowId
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
	
			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'


			   IF EXISTS (SELECT Top 1 1 FROM @TAb )
				BEGIN 

					SELECT (SELECT COUNT(1) FROM @TAb) AS RowsCount   
				END 
				ELSE 
				BEGIN
	 					SELECT (SELECT COUNT(1) FROM @ProductListIdRTR) AS RowsCount   
				END 

         END TRY
         BEGIN CATCH
               DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductTypeAssociationList @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RelatedProductId='+CAST(@RelatedProductId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductTypeAssociationList',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetTaxlClassDetail]...';


GO
ALTER PROCEDURE [dbo].[Znode_GetTaxlClassDetail]
(   @WhereClause NVARCHAR(MAX),
    @Rows        INT           = 100,
    @PageNo      INT           = 1,
    @Order_BY    VARCHAR(1000) = '',
    @RowsCount   INT OUT,
    @LocaleId    INT           = 1,
    @TaxClassId  INT		   = 0  ,
    @IsDebug bit = 0 )
AS 
   /* 
     Summary : get tax with product name and other details 
     Sequence For Delete Data 
	 SELECT * FROM ZnodeTaxClassSKU
     EXEC Znode_GetTaxlClassDetail  '' , @RowsCount = 1  ,@TaxClassId = -1 

   */
     BEGIN
         BEGIN TRY
           SET NOCOUNT ON;
           
		    DECLARE @PimProductIds TransferId,--NVARCHAR(max)= '', 
					@OutPimProductIds NVARCHAR(max)= '',
					@PimAttributeId NVARCHAR(max)=''
			 DECLARE @pimSkuAttributeId VARCHAR(50) = [dbo].[Fn_GetProductSKUAttributeId] ()
			 DECLARE @PimProductNameAttributeId VARCHAR(50) = [dbo].[Fn_GetProductNameAttributeId]()
			 DECLARE @DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleId()
			 ,@IsProductNotIn INT = 0 
			 DECLARE @TransferPimProductId TransferId 
			 DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
			  DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
               IF @TaxClassId <> 0
                 BEGIN
				insert into @TransferPimProductId 
				  SELECT DISTINCT PimProductId 
					 FROM  [dbo].[View_PimProductAttributeValueLocale] VIMP
					 INNER JOIN ZnodeTaxClassSKU  ZP ON (dbo.FN_trim(Zp.SKU) = dbo.FN_Trim(VIMP.AttributeValue) )
					 WHERE VIMP.PimAttributeid = @pimSkuAttributeId
					 AND VIMP.LocaleId = @DefaultLocaleId
					 AND (ZP.TaxClassId = @TaxClassId OR @TaxClassId = -1 )
				UNION ALL 
				SELECT -1 
					--If @IsDebug =1 
					--Begin
					--   select * from @TransferPimProductId
					--END 
      --          SET @PimProductIds = SUBSTRING(( SELECT DISTINCT ','+CAST(PimProductId AS VARCHAR(50))
					 --FROM  [dbo].[View_PimProductAttributeValueLocale] VIMP
					 --INNER JOIN ZnodeTaxClassSKU  ZP ON (dbo.FN_trim(Zp.SKU) = dbo.FN_Trim(VIMP.AttributeValue) )
					 --WHERE VIMP.PimAttributeid = @pimSkuAttributeId
					 --AND VIMP.LocaleId = @DefaultLocaleId
					 --AND (ZP.TaxClassId = @TaxClassId OR @TaxClassId = -1 )
					 --FOR XML PATH('')),2,8000)
					
				SET @Rows = CASE WHEN @TaxClassId = -1  THEN  214748368  ELSE @Rows END 
                  
			  END;
          DECLARE @AttributeCode NVARCHAR(1000), @SQL NVARCHAR(max)=''
		 DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 --	IF @PimProductId <> ''  OR   @IsCallForAttribute=1
		--BEGIN 
	 --SET @IsProductNotIn = CASE WHEN @IsProductNotIn = 0 THEN 1  
		--			 WHEN @IsProductNotIn = 1 THEN 0 END 
		--END 
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  1,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
		 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
		 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
		 INSERT INTO @TBL_MainList(id,RowId)
		 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	    -- SELECT @order_by,@AttributeCode
		 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
		 
		 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
		 INSERT INTO @TBL_MainList(id,RowId)
		 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 

			 INSERT INTO @ProductIdTable (PimProductId)              
			 SELECT Id  
			 FROM @TBL_MainList
				  	           
             --SET @PimProductIds = SUBSTRING((SELECT ','+CAST(PimProductId AS VARCHAR(100)) FROM @ProductIdTable FOR XML PATH('')), 2, 4000);
			 INSERT INTO @PimProductIds ( Id )
			 SELECT PimProductId FROM @ProductIdTable

             SET @PimAttributeId = @pimSkuAttributeId +','+@PimProductNameAttributeId;
				

             INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue
                  @PimProductIds,
                  @PimAttributeId,
                  @localeId;

		    ;With Cte_pimProductDetails AS
			(
			  SELECT PimProductId,
              AttributeValue,
              AttributeCode
			  FROM @TBL_AttributeDetails
			)

			SELECT PIV.PimProductId,ProductName,PIV.SKU ,TaxClassId,TaxClassSKUId
			FROM Cte_pimProductDetails CTEPD
			PIVOT
			(
			
			Max(AttributeValue) FOR AttributeCode IN ([ProductName],[SKU])
			
			) PIV
		    LEFT JOIN ZnodeTaxClassSKU  ZP ON (dbo.FN_TRIM(Zp.SKU) = dbo.FN_TRIM(PIV.SKU))
		 	INNER JOIN @ProductIdTable XP ON (XP.PimProductId = PIV.PimProductId)
			WHERE (ZP.TaxClassId = @TaxClassId	  OR   @TaxClassId =  -1 ) 
		    ORDER BY RowId 
		  IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT @RowsCount= (SELECT COUNT(1) FROM @TAb)   
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT  @RowsCount= (SELECT COUNT(1) FROM @ProductListIdRTR) 
	 END 
         END TRY
         BEGIN CATCH
		    SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(),
			 @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			  @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetTaxlClassDetail @WhereClause = '
			  +CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))
			  +',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))
			  +',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetTaxlClassDetail',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Altering [dbo].[Znode_GetPublishProductbulk]...';


GO
--EXEC Znode_GetPublishProductbulk_r @PublishCatalogId=18,@VersionId=0,@PimProductId='',@userid=2

ALTER PROCEDURE [dbo].[Znode_GetPublishProductbulk]
(
@PublishCatalogId INT = 0 
,@VersionId       VARCHAR(50) = 0 
,@PimProductId    VARCHAR(2000) = 0 
,@UserId		  INT = 0 

)
With RECOMPILE
AS
-- EXEC Znode_GetPublishProductbulk 3, 0 , '' , 2  
BEGIN 
  
 SET NOCOUNT ON 

EXEC Znode_InsertUpdatePimAttributeXML 1 
EXEC Znode_InsertUpdateCustomeFieldXML 1
EXEC Znode_InsertUpdateAttributeDefaultValue 1 

  --DECLARE @PimProductAttributeXML TABLE(PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )

   IF OBJECT_ID('tempdb..#PimProductAttributeXML') is not null
   BEGIN 
	 DELETE FROM #PimProductAttributeXML
   END

  CREATE TABLE #PimProductAttributeXML (PimAttributeXMLId INT  PRIMARY KEY ,PimAttributeId INT,LocaleId INT  )


  DECLARE @PimDefaultValueLocale  TABLE (PimAttributeDefaultXMLId INT  PRIMARY KEY ,PimAttributeDefaultValueId INT ,LocaleId INT ) 
  DECLARE @ProductNamePimAttributeId INT = dbo.Fn_GetProductNameAttributeId(),@DefaultLocaleId INT= Dbo.Fn_GetDefaultLocaleId(),@LocaleId INT = 0 
		,@SkuPimAttributeId  INT =  dbo.Fn_GetProductSKUAttributeId() , @IsActivePimAttributeId INT =  dbo.Fn_GetProductIsActiveAttributeId()
  DECLARE @GetDate DATETIME =dbo.Fn_GetDate()
  DECLARE @TBL_LocaleId  TABLE (RowId INT IDENTITY(1,1) PRIMARY KEY  , LocaleId INT )
			INSERT INTO @TBL_LocaleId (LocaleId)
			SELECT  LocaleId
			FROM ZnodeLocale 
			WHERE IsActive = 1
 DECLARE @Counter INT =1 ,@maxCountId INT = (SELECT max(RowId) FROM @TBL_LocaleId ) 
 
 --DECLARE #TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

 CREATE TABLE #TBL_PublishCatalogId (PublishCatalogId INT,PublishProductId INT,PimProductId  INT   , VersionId INT )

 CREATE INDEX idx_#TBL_PublishCatalogIdPimProductId on #TBL_PublishCatalogId(PimProductId)

  CREATE INDEX idx_#TBL_PublishCatalogIdPimPublishCatalogId on #TBL_PublishCatalogId(PublishCatalogId)

			 INSERT INTO #TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 INNER JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  AND  (@PublishCatalogId IS NULL OR @PublishCatalogId = 0 ))
			 OR  (ZPP.PublishCatalogId = @PublishCatalogId ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId
           
		     DECLARE   @TBL_ZnodeTempPublish TABLE (PimProductId INT , AttributeCode VARCHAR(300) ,AttributeValue NVARCHAR(max) ) 			
			 DECLARE @TBL_AttributeVAlueLocale TABLE(PimProductId INT,PimAttributeId INT,ZnodePimAttributeValueLocaleId INT,LocaleId INT 
			 )

WHILE @Counter <= @maxCountId
BEGIN
 
  SET @LocaleId = (SELECT TOP 1 LocaleId FROM @TBL_LocaleId WHERE RowId = @Counter)
 
  INSERT INTO #PimProductAttributeXML 
  SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
  FROM ZnodePimAttributeXML
  WHERE LocaleId = @LocaleId
  
  IF( @LocaleId <> @DefaultLocaleId )
  BEGIN
	INSERT INTO #PimProductAttributeXML 
	SELECT PimAttributeXMLId ,PimAttributeId,LocaleId
	FROM ZnodePimAttributeXML ZPAX
	WHERE ZPAX.LocaleId = @DefaultLocaleId  
	AND NOT EXISTS (SELECT TOP 1 1 FROM #PimProductAttributeXML ZPAXI WHERE ZPAXI.PimAttributeId = ZPAX.PimAttributeId )
  END

  INSERT INTO @PimDefaultValueLocale
  SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
  FROM ZnodePimAttributeDefaultXML
  WHERE localeId = @LocaleId

  IF( @LocaleId <> @DefaultLocaleId )
  BEGIN
	INSERT INTO @PimDefaultValueLocale 
	SELECT PimAttributeDefaultXMLId,PimAttributeDefaultValueId,LocaleId 
	FROM ZnodePimAttributeDefaultXML ZX
	WHERE localeId = @DefaultLocaleId
	AND NOT EXISTS (SELECT TOP 1 1 FROM @PimDefaultValueLocale TRTR WHERE TRTR.PimAttributeDefaultValueId = ZX.PimAttributeDefaultValueId)
  END
  
  DECLARE @TBL_CustomeFiled TABLE (PimCustomeFieldXMLId INT ,CustomCode VARCHAR(300),PimProductId INT ,LocaleId INT )

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,RTR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML RTR 
  INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = RTR.PimProductId)
  WHERE RTR.LocaleId = @LocaleId
 

  INSERT INTO @TBL_CustomeFiled (PimCustomeFieldXMLId,PimProductId ,LocaleId,CustomCode)
  SELECT  PimCustomeFieldXMLId,ITR.PimProductId ,LocaleId,CustomCode
  FROM ZnodePimCustomeFieldXML ITR
  INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ITR.PimProductId)
  WHERE ITR.LocaleId = @DefaultLocaleId
  AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CustomeFiled TBL  WHERE ITR.CustomCode = TBL.CustomCode AND ITR.PimProductId = TBL.PimProductId)
        
	 SELECT VIR.PimProductId,PimAttributeId,ZnodePimAttributeValueLocaleId,VIR.LocaleId , VIR.AttributeValue, VIR.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,PimAttributeId ORDER BY VIR.PimProductId,PimAttributeId  ) RowId
	 INTO #TBL_AttributeVAlue
	 FROM View_LoadManageProductInternal VIR
	 WHERE ( LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )
	  UNION ALL 
	 SELECT VIR.PimProductId,VIR.PimAttributeId,ZPDE.PimProductAttributeMediaId,ZPDE.LocaleId ,ZPDE.MediaPath AS AttributeValue, d.AttributeCode ,ROW_NUMBER() Over(Partition By VIR.PimProductId,VIR.PimAttributeId ORDER BY VIR.PimProductId,VIR.PimAttributeId  ) RowId
	 FROM ZnodePimAttributeValue  VIR
	 INNER JOIN ZnodePimProductAttributeMedia ZPDE ON (ZPDE.PimAttributeValueId = VIR.PimAttributeValueId )
	 INNER JOIN ZnodePimAttribute d ON ( d.PimAttributeId=VIR.PimAttributeId )
	 WHERE ( ZPDE.LocaleId = @DefaultLocaleId OR ZPDE.LocaleId = @LocaleId )
	 AND EXISTS (SELECT TOP 1 1 FROM #TBL_PublishCatalogId ZPP WHERE (ZPP.PimProductId = VIR.PimProductId) )

	 UPDATE #TBL_AttributeVAlue SET rowid = (SELECT MAX(rowid) from #TBL_AttributeVAlue b where a.PimProductId=b.PimProductId and a.PimAttributeId = b.PimAttributeId )
	 from #TBL_AttributeVAlue a

	 --select * from #TBL_AttributeVAlue
	 --return
  SET @versionId = (SELECT TOP 1 VersionId FROM #TBL_PublishCatalogId) 
  

 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END 

 create table #Cte_GetData (PimProductId int,AttributeCode varchar(600),AttributeValue nvarchar(max))

  create index idx_#Cte_GetDataPimProductId on #Cte_GetData(PimProductId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue)
SELECT  a.PimProductId,a.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(a.AttributeValue,'')+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue
FROM #TBL_AttributeVAlue a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
where a.LocaleId  = CASE WHEN a.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)
--INNER JOIN #TBL_AttributeVAlue CTE ON (Cte.PimAttributeId = a.PimAttributeId AND Cte.ZnodePimAttributeValueLocaleId = a.ZnodePimAttributeValueLocaleId AND CTE.LocaleId  = CASE WHEN cte.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue)
SELECT  a.PimProductId,c.AttributeCode , '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+''+'</AttributeValues> </AttributeEntity>  </Attributes>'  AttributeValue                 
FROM ZnodePimAttributeValue  a 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = a.PimAttributeId )
INNER JOIN ZnodePImAttribute ZPA  ON (ZPA.PimAttributeId = a.PimAttributeId)
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = a.PimProductId)
WHERE ZPA.IsPersonalizable = 1 
AND NOT EXISTS ( SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale q WHERE q.PimAttributeValueId = a.PimAttributeValueId) 
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue)
SELECT THB.PimProductId,'','<Attributes><AttributeEntity>'+CustomeFiledXML+'</AttributeEntity></Attributes>' 
FROM ZnodePimCustomeFieldXML THB 
INNER JOIN @TBL_CustomeFiled TRTE ON (TRTE.PimCustomeFieldXMLId = THB.PimCustomeFieldXMLId)
UNION ALL 
SELECT ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues></AttributeValues>'+'<SelectValues>'+
			   STUFF((
                    SELECT '  '+ DefaultValueXML  FROM ZnodePimAttributeDefaultXML AA 
				 INNER JOIN @PimDefaultValueLocale GH ON (GH.PimAttributeDefaultXMLId = AA.PimAttributeDefaultXMLId)
				 INNER JOIN ZnodePimProductAttributeDefaultValue ZPADV ON ( ZPADV.PimAttributeDefaultValueId = AA.PimAttributeDefaultValueId )
				 WHERE (ZPADV.PimAttributeValueId = ZPAV.PimAttributeValueId)
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</SelectValues> </AttributeEntity></Attributes>' AttributeValue 
FROM ZnodePimAttributeValue ZPAV  
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeDefaultValue ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue)
SELECT DISTINCT  ZPAV.PimProductId,c.AttributeCode,'<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+SUBSTRING((SELECT DISTINCT  ',' +ZPPG.MediaPath FROM ZnodePimProductAttributeMedia ZPPG
     INNER JOIN #TBL_AttributeVAlue FTRE ON (FTRE.PimProductId = ZPAV.PimProductId AND FTRE.PimAttributeId = ZPAV.PimAttributeId  AND FTRE.LocaleId  = CASE WHEN FTRE.RowId = 2 THEN  @LocaleId ELSE @DefaultLocaleId END )
	 WHERE ZPPG.PimProductAttributeMediaId = FTRE.ZnodePimAttributeValueLocaleId
	 FOR XML PATH ('')
 ),2,4000)+'</AttributeValues></AttributeEntity></Attributes>' AttributeValue 	 
FROM ZnodePimAttributeValue ZPAV 
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPAV.PimAttributeId )
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPAV.PimProductId)
WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeMedia ZPADVL WHERE ZPADVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
and exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)

insert into #Cte_GetData(PimProductId ,AttributeCode,AttributeValue)
SELECT ZPLP.PimParentProductId ,c.AttributeCode, '<Attributes><AttributeEntity>'+c.AttributeXML+'<AttributeValues>'+ISNULL(SUBSTRING((SELECT ','+CAST(PublishProductId AS VARCHAR(50)) 
							 FROM #TBL_PublishCatalogId ZPPI 
							 INNER JOIN ZnodePimLinkProductDetail ZPLPI ON (ZPLPI.PimProductId = ZPPI.PimProductId)
							 WHERE ZPLPI.PimParentProductId = ZPLP.PimParentProductId
							 AND ZPLPI.PimAttributeId   = ZPLP.PimAttributeId
							 FOR XML PATH ('') ),2,4000),'')+'</AttributeValues></AttributeEntity></Attributes>'   AttributeValue 
							
FROM ZnodePimLinkProductDetail ZPLP  
INNER JOIN #TBL_PublishCatalogId ZPP ON (ZPP.PimProductId = ZPLP.PimParentProductId)
INNER JOIN ZnodePimAttributeXML c   ON (c.PimAttributeId = ZPLP.PimAttributeId )
where exists (select * from #PimProductAttributeXML b where b.PimAttributeXMLId = c.PimAttributeXMLId)
GROUP BY ZPLP.PimParentProductId , ZPP.PublishProductId  ,ZPLP.PimAttributeId,c.AttributeCode,c.AttributeXML,ZPP.PublishCatalogId

--  --CREATE INDEX IND_ZnodePublishInline_0999 ON Cte_GetData(PimProductId ASC)

  DELETE FROM ZnodePublishedXml WHERE PublishCatalogLogId = @versionId AND IsProductXML = 1   AND LocaleId = @LocaleId 

--  --ALTER INDEX ALL ON ZnodePublishedXml  REBUILD WITH (FILLFACTOR = 80 ) 

  INSERT INTO ZnodePublishedXml (PublishCatalogLogId
,PublishedId
,PublishedXML
,IsProductXML
,LocaleId
,CreatedBy
,CreatedDate
,ModifiedBy
,ModifiedDate)
SELECT zpp.VersionId,zpp.PublishProductId,'<ProductEntity><VersionId>'+CAST(zpp.VersionId AS VARCHAR(50)) +'</VersionId><ZnodeProductId>'+CAST(zpp.PublishProductId AS VARCHAR(50))+'</ZnodeProductId><ZnodeCategoryIds>'+CAST(ISNULL(ZPC.PublishCategoryId,'')  AS VARCHAR(50))+'</ZnodeCategoryIds><Name>'+CAST(ISNULL((SELECT ''+ZPPDFG.ProductName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</Name>'+'<SKU>'+CAST(ISNULL((SELECT ''+ZPPDFG.SKU FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKU>'+'<SKULower>'+CAST(ISNULL((SELECT ''+LOWER(ZPPDFG.SKU) FOR XML PATH ('')),'') AS NVARCHAR(2000))+ '</SKULower>'+'<IsActive>'+CAST(ISNULL(ZPPDFG.IsActive ,'0') AS VARCHAR(50))+'</IsActive>' 
+'<ZnodeCatalogId>'+CAST(ZPP.PublishCatalogId  AS VARCHAR(50))+'</ZnodeCatalogId><IsParentProducts>'+CASE WHEN ZPCD.PublishCategoryId IS NULL THEN '0' ELSE '1' END  +'</IsParentProducts><CategoryName>'+CAST(ISNULL((SELECT ''+PublishCategoryName FOR XML PATH ('')),'') AS NVARCHAR(2000)) +'</CategoryName><CatalogName>'+CAST(ISNULL((SELECT ''+CatalogName FOR XML PATH ('')),'') AS NVARCHAR(2000))+'</CatalogName><LocaleId>'+CAST( @LocaleId AS VARCHAR(50))+'</LocaleId>'
+'<TempProfileIds>'+ISNULL(SUBSTRING( (SELECT ','+CAST(ProfileId AS VARCHAR(50)) 
					FROM ZnodeProfileCatalog ZPFC 
					INNER JOIN ZnodeProfileCatalogCategory ZPCCH  ON ( ZPCCH.ProfileCatalogId = ZPFC.ProfileCatalogId )
					WHERE ZPCCH.PimCatalogCategoryId = ZPCCF.PimCatalogCategoryId  FOR XML PATH('')),2,8000),'')+'</TempProfileIds><ProductIndex>'+CAST(ROW_NUMBER()Over(Partition BY zpp.PublishProductId Order BY ISNULL(ZPC.PublishCategoryId,'0') ) AS VARCHAr(100))+'</ProductIndex><IndexId>'+CAST( ISNULL(ZPCP.PublishCategoryProductId,'0') AS VARCHAr(100))+'</IndexId>'+
'<DisplayOrder>'+CAST(ISNULL(ZPCCF.DisplayOrder,'') AS VARCHAR(50))+'</DisplayOrder>'+
STUFF(( SELECT '  '+ AttributeValue  FROM #Cte_GetData TY WHERE TY.PimProductId = ZPP.PimProductId   
    FOR XML PATH, TYPE).value(N'.[1]', N'Nvarchar(max)'), 1, 1, '')+'</ProductEntity>' xmlvalue,1,@LocaleId,@UserId , @GetDate , @UserId,@GetDate
FROM  #TBL_PublishCatalogId zpp
INNER JOIN ZnodePublishCatalog ZPCV ON (ZPCV.PublishCatalogId = ZPP.PublishCatalogId)
INNER JOIN ZnodePublishProductDetail ZPPDFG ON (ZPPDFG.PublishProductId =  ZPP.PublishProductId)
LEFT JOIN ZnodePublishCategoryProduct ZPCP ON (ZPCP.PublishProductId = ZPP.PublishProductId AND ZPCP.PublishCatalogId = ZPP.PublishCatalogId)
LEFT JOIN ZnodePublishCategory ZPC ON (ZPP.PublishCatalogId = ZPC.PublishCatalogId AND   ZPC.PublishCategoryId = ZPCP.PublishCategoryId)
LEFT JOIN ZnodePimCatalogCategory ZPCCF ON (ZPCCF.PimCatalogId = ZPCV.PimCatalogId AND ZPCCF.PimCategoryId = ZPC.PimCategoryId  AND ZPCCF.PimProductId = ZPP.PimProductId )
LEFT JOIN ZnodePublishCategoryDetail ZPCD ON (ZPCD.PublishCategoryId = ZPCP.PublishCategoryId AND ZPCD.LocaleId = @LocaleId )
WHERE ZPPDFG.LocaleId = @LocaleId



--DELETE FROM @PimProductAttributeXML
DELETE FROM @TBL_CustomeFiled
DELETE FROM @PimDefaultValueLocale
 IF OBJECT_ID('tempdb..#PimProductAttributeXML') is not null
 BEGIN 
 DELETE FROM #PimProductAttributeXML
 END
 IF OBJECT_ID('tempdb..#Cte_GetData') is not null
 BEGIN 
 DROP TABLE #Cte_GetData
 END
  IF OBJECT_ID('tempdb..#TBL_AttributeVAlue') is not null
 BEGIN 
 DROP TABLE #TBL_AttributeVAlue
 END
SET @Counter = @counter + 1 
END 

END
GO
PRINT N'Altering [dbo].[Znode_ImportProcessData]...';


GO
--EXEC Znode_ImportProcessData 1
ALTER  PROCEDURE [dbo].[Znode_ImportProcessData] 
(

	@ImportHeadId INT , @TblGUID nvarchar(255),@TouchPointName nvarchar(200) 

)
AS 
BEGIN

	Declare @ERPTaskSchedulerId int 
	SET NOCOUNT ON;
	
	select @ERPTaskSchedulerId = ERPTaskSchedulerId from ZnodeERPTaskScheduler a
	inner join ZnodeERPConfigurator b on(a.ERPConfiguratorId = b.ERPConfiguratorId and TouchPointName = @TouchPointName)


	IF EXISTS ( SELECT ImportHeadId From ZnodeImportHead where ImportHeadId = @ImportHeadId AND Name = 'Product' )
	Begin
		EXEC [dbo].[Znode_ImportProcessProductData] @TblGUID=@TblGUID,@ERPTaskSchedulerId= @ERPTaskSchedulerId
	End
	Else If EXISTS ( SELECT ImportHeadId From ZnodeImportHead where ImportHeadId = @ImportHeadId AND Name = 'Pricing' )
	Begin
		EXEC [dbo].[Znode_ImportProcessPriceData] @TblGUID=@TblGUID,@ERPTaskSchedulerId= @ERPTaskSchedulerId
	End
	Else If EXISTS ( SELECT ImportHeadId From ZnodeImportHead where ImportHeadId = @ImportHeadId AND Name = 'Inventory' )
	Begin
		EXEC [dbo].[Znode_ImportProcessInventoryData] @TblGUID=@TblGUID,@ERPTaskSchedulerId= @ERPTaskSchedulerId
	End

	Else If EXISTS ( SELECT ImportHeadId From ZnodeImportHead where ImportHeadId = @ImportHeadId AND Name IN ( 'ProductAttribute' ))
	Begin
		EXEC [dbo].[Znode_ImportProcessAttributeData] @TblGUID=@TblGUID,@ERPTaskSchedulerId= @ERPTaskSchedulerId
	End
	Else If EXISTS ( SELECT ImportHeadId From ZnodeImportHead where ImportHeadId = @ImportHeadId AND Name in ('CustomerAddress', 'Customer' ))
	Begin
		EXEC [dbo].[Znode_ImportProcessCustomer] @TblGUID=@TblGUID,@ERPTaskSchedulerId= @ERPTaskSchedulerId
	End
	Else If EXISTS ( SELECT ImportHeadId From ZnodeImportHead where ImportHeadId = @ImportHeadId AND Name in ('Category' ))
	Begin
		EXEC [dbo].[Znode_ImportProcessCategoryData] @TblGUID=@TblGUID,@ERPTaskSchedulerId= @ERPTaskSchedulerId
	End


END
GO

IF EXISTS ( SELECT * FROM sys.procedures where name = 'Znode_UpdateProductAttributeValue')
begin
	drop procedure Znode_UpdateProductAttributeValue
end
GO


CREATE PROCEDURE [dbo].[Znode_UpdateProductAttributeValue]
(
	@SKU				 NVARCHAR(MAX),
	@LocaleId			 INT,
	@AttributeCodeValues XML,
	@UserId				 INT = 0,
	@Status				 BIT OUT,
	@IsUnAssociated		 BIT = 0
)
AS    
/* ---------------------------------------------------------------------------------------------------------------
    --Summary : Update AttributeValue for specific product 
    --          Input parameter : @LocaleId , @PimAttributeCode,  @ProductId,@AttributeValue,@UserId
    --Unit Testing : 

     BEGIN TRANSACTION 
    DECLARE @Status bit 
    EXEC [Znode_UpdateProductAttributeValue]
    @SKU        = 10637,
    @LocaleCode         = 'en-US',
    @AttributeCodeValues   = 'Tropicana',
    @UserId           =2,
    @Status           =@Status OUT
    SELECT @Status 
    --SELECT zpa.AttributeCode ,ZpAVL .AttributeValue  FROM ZnodePimAttributeValueLocale ZpAVL INNER JOIN ZnodePimAttributeValue zpav ON ZpAVL.PimAttributeValueId = zpav.PimAttributeValueId
    --INNER JOIN dbo.ZnodePimAttribute zpa ON zpav.PimAttributeId = zpa.PimAttributeId
    --WHERE zpav.PimProductId =12 AND ZpAVL.LocaleId = 1 AND zpa.AttributeCode = 'ProductName' 
    ROLLBACK Transaction 
    ---------------------------------------------------------------------------------------------------------------
	*/

     BEGIN
         BEGIN TRAN UpdateAttributeValue;
         BEGIN TRY
             DECLARE @GetDate DATETIME= dbo.Fn_GetDate();
             DECLARE @PimDefaultFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
			 DECLARE @ProductId INT
			 
             DECLARE @TBL_PimProductId TABLE
             ( RowId INT IDENTITY(1,1),
				PimProductId INT,
				PimAttributeId INT,
                AttributeCode VARCHAR(300),
                AttributeValue NVARCHAR(MAX),
                PimAttributeDefaultValueId INT
             ); -- table holds the PimProductId 

			  DECLARE @TBL_DefaultAttributeId TABLE 
			  ( 
				PimAttributeId INT PRIMARY KEY , 
				AttributeCode VARCHAR(600)
			  )
			 --SELECT TOP 1 @LocaleId  =  LocaleId  from ZnodeLocale where Code = @LocaleCode
			 --If @LocaleId is null 
			 --Begin
				--SET @Status = 0 
				-- Rollback TRAN UpdateAttributeValue;
				--Return 0
			 --End
		     INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  ZnodePimAttribute a 
			 INNER JOIN ZnodeAttributeType r ON (r.AttributeTypeId = a.AttributeTypeId)
			 WHERE AttributeTypeName IN ('Simple Select', 'Multi Select')
			 		 AND IsCategory = 0 

			  DECLARE @TBL_TextAreaAttributeId TABLE 
			  ( 
				PimAttributeId INT PRIMARY KEY , 
				AttributeCode VARCHAR(600)
			  )

		     INSERT INTO @TBL_TextAreaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  ZnodePimAttribute a 
			 INNER JOIN ZnodeAttributeType r ON (r.AttributeTypeId = a.AttributeTypeId)
			 WHERE AttributeTypeName IN ('Text Area')
			 AND IsCategory = 0 


             DECLARE @TBL_PimAttributeValueId TABLE
             (
				
				PimAttributeValueId INT,
				PimAttributeId      INT,
				PimProductId        INT,
				PimAttributeDefaultValueId int 
             );


			 SELECT @ProductId = PAV.PimProductId FROM ZnodePimAttributeValueLocale PAVL 
			 INNER JOIN ZnodePimAttributeValue PAV ON PAVL.PimAttributeValueId = PAV.PimAttributeValueId
			 INNER JOIN ZnodePimAttribute PA ON PA.PimAttributeId = PAV.PimAttributeId
			 WHERE PA.AttributeCode = 'SKU' AND PAVL.AttributeValue = @SKU

			 INSERT INTO @TBL_PimProductId ( PimProductId, AttributeCode, AttributeValue )
			 SELECT @ProductId, Tbl.Col.value( 'AttributeCode[1]', 'NVARCHAR(max)' ) AS AttributeCode, DV.Item
			 FROM @AttributeCodeValues.nodes( '//ArrayOfPIMAttributeCodeValueModel/PIMAttributeCodeValueModel' ) AS Tbl(Col)
			 CROSS APPLY dbo.split( Tbl.Col.value( 'AttributeValues[1]', 'NVARCHAR(max)' ),',') DV			

			 UPDATE @TBL_PimProductId
			 SET PimAttributeId = ZPA.PimAttributeId, PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId
			 FROM @TBL_PimProductId Tbl
			 inner JOIN ZnodePimAttribute AS ZPA ON( ZPA.AttributeCode = Tbl.AttributeCode )
			 LEFT JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPA.PimAttributeId = ZPADV.PimAttributeId and ZPADV.AttributeDefaultValueCode = Tbl.AttributeValue )
			 where ZPA.IsCategory <> 1

			
			 ;WITH Cte_DeleteDuplicate As
			 (
			   SELECT  Row_Number()over(Partition By PimProductId, PimAttributeId, PimAttributeDefaultValueId order by PimProductId, PimAttributeId, PimAttributeDefaultValueId, rowid )SRNO ,*
			   FROM @TBL_PimProductId 		 
			 ),
			 CTE_Last_Dataset as
			 (
				SELECT MAX(SRNO)SRNO, PimProductId, PimAttributeId, PimAttributeDefaultValueId from Cte_DeleteDuplicate
				GROUP BY PimProductId, PimAttributeId, PimAttributeDefaultValueId
			 )
			 DELETE A FROM Cte_DeleteDuplicate a
			 WHERE NOT EXISTS ( SELECT * FROM CTE_Last_Dataset b WHERE a.SRNO = b.SRNO and ISNULL(a.PimProductId,0) = ISNULL(B.PimProductId,0)  and ISNULL(a.PimAttributeId,0) = ISNULL(B.PimAttributeId,0) )
			 AND PimAttributeId IS NOT NULL

	
             IF @IsUnAssociated = 1
                 BEGIN
                     INSERT INTO @TBL_PimAttributeValueId ( PimAttributeValueId, PimAttributeId, PimProductId, PimAttributeDefaultValueId )
                     SELECT PimAttributeValueId, ZPAV.PimAttributeId, ZPAV.PimProductId, TBLP.PimAttributeDefaultValueId
                     FROM ZnodePimAttributeValue ZPAV
                     INNER JOIN @TBL_PimProductId TBLP ON(TBLP.PimProductId = ZPAV.PimProductId AND TBLP.PimAttributeId = ZPAV.PimAttributeId );

			
                     DELETE FROM ZnodePimProductAttributeDefaultValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimAttributeValueId TBLAP
                         WHERE TBLAP.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId
                               AND ZnodePimProductAttributeDefaultValue.PimAttributeDefaultValueId = TBLAP.PimAttributeDefaultValueId --@PimAttributeDefaultValueId
                     )
                     AND LocaleId = @LocaleId;
					 

                     DELETE FROM ZnodePimAttributeValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimAttributeValueId TBLAP
                         WHERE TBLAP.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId
                               AND ZnodePimAttributeValue.PimAttributeDefaultValueId =TBLAP.PimAttributeDefaultValueId -- @PimAttributeDefaultValueId
                     );
                     --AND LocaleId = @LocaleId 					

                 END;

             INSERT INTO ZnodePimAttributeValue ( PimProductId, PimAttributeId, PimAttributeDefaultValueId, AttributeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, PimAttributeFamilyId )
             OUTPUT INSERTED.PimAttributeValueId, INSERTED.PimAttributeId, INSERTED.PimProductId, INSERTED.PimAttributeDefaultValueId INTO @TBL_PimAttributeValueId
             SELECT DISTINCT TBPP.PimProductId, TBPP.PimAttributeId, NULL,NULL, @UserId, @GetDate, @UserId, @GetDate, @PimDefaultFamily
             FROM @TBL_PimProductId TBPP
             WHERE NOT EXISTS
             (
                SELECT TOP 1 1
                FROM ZnodePimAttributeValue ZAV
                WHERE ZAV.PimProductId = TBPP.PimProductId
                        AND ZAV.PimAttributeId = TBPP.PimAttributeId
             )
             AND @IsUnAssociated = 0 AND TBPP.PimProductId IS NOT NULL;
              
			 UPDATE ZnodePimAttributeValue 
			 SET  ModifiedBy = @UserId , 
				  ModifiedDate = @GetDate,
				  PimAttributeDefaultValueId = ZAV.PimAttributeDefaultValueId
			 OUTPUT INSERTED.PimAttributeValueId,
                    INSERTED.PimAttributeId,
                    INSERTED.PimProductId,
				    INSERTED.PimAttributeDefaultValueId
             INTO @TBL_PimAttributeValueId
			 FROM ZnodePimAttributeValue  
			 INNER JOIN @TBL_PimProductId ZAV ON ( ZAV.PimProductId = ZnodePimAttributeValue.PimProductId AND ZAV.PimAttributeId = ZnodePimAttributeValue.PimAttributeId) 
			 WHERE @IsUnAssociated = 0
			  
             UPDATE A
             SET PimAttributeDefaultValueId = C.PimAttributeDefaultValueId,
				 ModifiedBy = @UserId ,
			     ModifiedDate = @GetDate
             FROM ZnodePimProductAttributeDefaultValue A
             INNER JOIN ZnodePimAttributeValue B ON(B.PimAttributeValueId = A.PimAttributeValueId)
             INNER JOIN @TBL_PimProductId C ON(B.PimAttributeId = C.PimAttributeId AND B.PimProductId = C.PimProductId);
			
             UPDATE A
             SET AttributeValue = C.AttributeValue,
				 ModifiedBy = @UserId ,
			     ModifiedDate = @GetDate
             FROM ZnodePimAttributeValueLocale A
             INNER JOIN ZnodePimAttributeValue B ON(B.PimAttributeValueId = A.PimAttributeValueId)
             INNER JOIN @TBL_PimProductId C ON(B.PimAttributeId = C.PimAttributeId AND B.PimProductId = C.PimProductId)
			 WHERE LocaleId = @LocaleId;

             INSERT INTO ZnodePimProductAttributeDefaultValue ( PimAttributeValueId, LocaleId, PimAttributeDefaultValueId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
             SELECT TBPAV.PimAttributeValueId, @LocaleId, TBPP.PimAttributeDefaultValueId, @UserId, @GetDate, @UserId, @GetDate
             FROM @TBL_PimProductId TBPP 
			 INNER JOIN @TBL_PimAttributeValueId TBPAV ON(TBPAV.PimProductId = TBPP.PimProductId AND TBPAV.PimAttributeId = TBPP.PimAttributeId)
             WHERE @IsUnAssociated = 0
			 AND EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			 AND NOT EXISTS ( SELECT * FROM ZnodePimProductAttributeDefaultValue Z WHERE Z.PimAttributeValueId = TBPAV.PimAttributeValueId AND Z.PimAttributeDefaultValueId = TBPP.PimAttributeDefaultValueId ) ;
			 

			  UPDATE ZPAVL
			  SET AttributeValue = PP.AttributeValue			      
			  FROM ZnodePimAttributeValueLocale ZPAVL 
			  INNER JOIN @TBL_PimAttributeValueId TBPAV ON( TBPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId AND  ZPAVL.LocaleId = @localeId )  AND @IsUnAssociated = 0
			  INNER JOIN @TBL_PimProductId PP ON ( TBPAV.PimProductId = PP.PimProductId AND TBPAV.PimAttributeId = PP.PimAttributeId ) 
																	-- AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)

             
			 INSERT INTO ZnodePimAttributeValueLocale ( PimAttributeValueId, LocaleId, AttributeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
             SELECT DISTINCT TBPAV.PimAttributeValueId, @LocaleId, TBPP.AttributeValue, @UserId, @GetDate, @UserId, @GetDate
             FROM @TBL_PimProductId TBPP
             INNER JOIN @TBL_PimAttributeValueId TBPAV ON(TBPAV.PimProductId = TBPP.PimProductId AND TBPAV.PimAttributeId = TBPP.PimAttributeId)
             WHERE @IsUnAssociated = 0
			 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale TBH WHERE TBH.PimAttributeValueId = TBPAV.PimAttributeValueId AND TBH.LocaleId = @LocaleId )
			 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			
			  UPDATE ZPAVL
			  SET AttributeValue = PP.AttributeValue			      
			  FROM ZnodePimProductAttributeTextAreaValue ZPAVL 
			  INNER JOIN @TBL_PimAttributeValueId TBPAV ON( TBPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId AND  ZPAVL.LocaleId = @localeId )  AND @IsUnAssociated = 0
			  INNER JOIN @TBL_PimProductId PP ON ( TBPAV.PimProductId = PP.PimProductId AND TBPAV.PimAttributeId = PP.PimAttributeId ) 
																	-- AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
             
			 INSERT INTO ZnodePimProductAttributeTextAreaValue ( PimAttributeValueId, LocaleId, AttributeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
             SELECT DISTINCT TBPAV.PimAttributeValueId, @LocaleId, TBPP.AttributeValue, @UserId, @GetDate, @UserId, @GetDate
             FROM @TBL_PimProductId TBPP
             INNER JOIN @TBL_PimAttributeValueId TBPAV ON(TBPAV.PimProductId = TBPP.PimProductId AND TBPAV.PimAttributeId = TBPP.PimAttributeId)
             WHERE @IsUnAssociated = 0
			 AND  EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeTextAreaValue TBH WHERE TBH.PimAttributeValueId = TBPAV.PimAttributeValueId AND TBH.LocaleId = @LocaleId );

			 
			 SELECT @SKU SKU, AttributeCode, AttributeValue --PimProductId ,
			 FROM @TBL_PimProductId a
			 WHERE NOT EXISTS ( SELECT * FROM @TBL_PimAttributeValueId b WHERE isnull(a.PimProductId,0) = isnull(b.PimProductId,0) and a.PimAttributeId = b.PimAttributeId )--and a.PimAttributeDefaultValueId = b.PimAttributeDefaultValueId )

			 IF NOT EXISTS ( SELECT PimProductId , AttributeCode, AttributeValue
							 FROM @TBL_PimProductId a
							 WHERE NOT EXISTS ( SELECT * FROM @TBL_PimAttributeValueId b WHERE a.PimProductId = b.PimProductId and a.PimAttributeId = b.PimAttributeId ))--and a.PimAttributeDefaultValueId = b.PimAttributeDefaultValueId ) )
			 BEGIN
				SET @Status = 1;
				--SELECT 1 AS ID, CAST(1 AS BIT) AS [Status];
			 END
			 ELSE 
			 BEGIN
				SET @Status = 0;
				--SELECT 1 AS ID, CAST(0 AS BIT) AS [Status];
			 END

             --SELECT 1 AS ID, CAST(1 AS BIT) AS [Status];
			 --SELECT @Status

             COMMIT TRAN UpdateAttributeValue;
         END TRY
         BEGIN CATCH

			 SELECT @SKU SKU, AttributeCode, AttributeValue --PimProductId ,
			 FROM @TBL_PimProductId a
			 WHERE NOT EXISTS ( SELECT * FROM @TBL_PimAttributeValueId b WHERE a.PimProductId = b.PimProductId and a.PimAttributeId = b.PimAttributeId )

		  --SELECT ERROR_MESSAGE ()
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			         @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_UpdateProductAttributeValue @ProductId = '+ @ProductId+',@Status='+CAST(@Status AS VARCHAR(50))+
		             ',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@AttributeCodeValues='+CAST(@AttributeCodeValues AS NVARCHAR(MAX))+',@UserId='+CAST(@UserId AS NVARCHAR(50));
             SET @Status = 0;
             SELECT 1 AS ID,
                    CAST(0 AS BIT) AS [Status],
                    @ErrorMessage;
             ROLLBACK TRAN UpdateAttributeValue;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_UpdateProductAttributeValue',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;

GO

IF EXISTS ( SELECT * FROM sys.procedures where name = 'Znode_GetProductDataForWebStore')
begin
	drop procedure Znode_GetProductDataForWebStore
end
GO
/****** Object:  StoredProcedure [dbo].[Znode_GetProductDataForWebStore]    Script Date: 1/10/2018 4:52:15 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Znode_GetProductDataForWebStore]
(   @SKU              VARCHAR(MAX) = '' ,
	@PublishCatalogId int = 0 ,
    @PublishProductId VARCHAR(MAX),
    @PortalId         INT,
    @LocaleId         INT)
AS 
  /*  
    Summary: WebStore: SP for getting products data 
    		 Get average rating of products 
    		 Get Price / Inventory / SEO details .
    Unit Testing
	begin tran   
    EXEC [Znode_GetProductDataForWebStore] 'SKBCA1112,SKWI122,SKFVR123,FVZK0237,SKPMAR123,SKLS232',0,'96,92,98,103,94,97',@PortalId=2 ,@LocaleId=1
	EXEC [Znode_GetProductDataForWebStore] '',3,'',@PortalId=1 ,@LocaleId=0
	rollback tran
   */
     BEGIN
         BEGIN TRAN A;
         BEGIN TRY
             SET NOCOUNT ON;

             DECLARE @Tlb_SKU TABLE
             (SKU        VARCHAR(100),
              SequenceNo INT IDENTITY
             );
			If @SKU <> ''
				INSERT INTO @Tlb_SKU(SKU) SELECT Item FROM Dbo.split(@SKU, ',');
			Else if @PublishCatalogId > 0 
				INSERT INTO @Tlb_SKU(SKU) 
				select Distinct ZPPD.SKU  from ZnodePublishCategoryProduct ZPCP INNER JOIN ZnodePublishProductDetail ZPPD ON ZPCP.PublishProductId = ZPPD.PublishProductId 
				where  ZPCP.PublishCatalogId = @PublishCatalogId

             DECLARE @Tlb_PublishProduct TABLE
             (PublishProductId INT,
              SequenceNo       INT IDENTITY
             );

			 If @PublishProductId <> ''
			  INSERT INTO @Tlb_PublishProduct(PublishProductId)
             SELECT Item FROM Dbo.split(@PublishProductId, ',');	
			Else if @PublishCatalogId > 0 
				INSERT INTO @Tlb_PublishProduct(PublishProductId)
				select Distinct ZPCP.PublishProductId  from ZnodePublishCategoryProduct ZPCP where  ZPCP.PublishCatalogId = @PublishCatalogId

             --DECLARE @Tlb_ProductData TABLE
             --(PublishProductId INT,
             -- SKU              NVARCHAR(100),
             -- SEOTitle         NVARCHAR(200),
             -- SEODescription   NVARCHAR(MAX),
             -- SEOKeywords      NVARCHAR(MAX),
             -- SEOUrl           NVARCHAR(MAX),
             -- Rating           Numeric(28,6),
             -- TotalReviews     INT
             --);

			 CREATE TABLE #Tlb_ProductData 
             (PublishProductId INT,
              SKU              NVARCHAR(100),
              SEOTitle         NVARCHAR(200),
              SEODescription   NVARCHAR(MAX),
              SEOKeywords      NVARCHAR(MAX),
              SEOUrl           NVARCHAR(MAX),
              Rating           Numeric(28,6),
              TotalReviews     INT
             );

             INSERT INTO #Tlb_ProductData (PublishProductId,SKU)
             SELECT PP.PublishProductId,SK.SKU FROM @Tlb_PublishProduct AS PP INNER JOIN @Tlb_SKU AS SK ON PP.SequenceNo = SK.SequenceNo;

             DECLARE @Tlb_CustomerAverageRatings TABLE
             (PublishProductId INT,
              Rating           NUMERIC(28,6),
              TotalReviews     INT
             ); 
             -- Calculate Average rating 
             INSERT INTO @Tlb_CustomerAverageRatings(PublishProductId,Rating,TotalReviews)
             SELECT CCR.PublishProductId,SUM(CAST(CCR.Rating AS NUMERIC(28,6)) )/ COUNT(CCR.PublishProductId),COUNT(CCR.PublishProductId) 
			 FROM ZnodeCMSCustomerReview AS CCR
             INNER JOIN #Tlb_ProductData AS PD ON CCR.PublishProductId = PD.PublishProductId AND CCR.Status = 'A' 
			 AND  (CCR.PortalId  = @PortalId OR @PortalId = 0 )
			 GROUP BY CCR.PublishProductId    ;

             UPDATE PD SET PD.Rating = CAR.Rating,PD.TotalReviews = CAR.TotalReviews 
			 FROM @Tlb_CustomerAverageRatings CAR
             INNER JOIN #Tlb_ProductData PD ON CAR.PublishProductId = PD.PublishProductId;

             UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.PublishProductId = ZCSO.SEOId
             LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
             INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 WHERE ZCSO.PortalId = @PortalId
             
			 UPDATE PD SET PD.SEOTitle = ZCSDL.SEOTitle,PD.SEODescription = ZCSDL.SEODescription,PD.SEOKeywords = ZCSDL.SEOKeywords,PD.SEOUrl = ZCSO.SEOUrl 
			 FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSSEODetail ZCSO ON PD.PublishProductId = ZCSO.SEOId
             LEFT JOIN ZnodeCMSSEODetailLocale ZCSDL ON(ZCSDL.CMSSEODetailId = ZCSO.CMSSEODetailId AND ZCSDL.LocaleId = @LocaleId)
             INNER JOIN ZnodeCMSSEOType ZCOT ON ZCOT.CMSSEOTypeId = ZCSO.CMSSEOTypeId AND ZCOT.Name = 'Product'
			 WHERE ZCSO.PortalId = @PortalId

             UPDATE PD SET PD.SEOTitle = ZCPS.ProductTitle,PD.SEODescription = ZCPS.ProductDescription,PD.SEOKeywords = ZCPS.ProductKeyword FROM #Tlb_ProductData PD
             INNER JOIN ZnodeCMSPortalSEOSetting ZCPS ON ZCPS.PortalId = @PortalId WHERE PD.SEOTitle IS NULL AND PD.SEODescription IS NULL AND PD.SEOKeywords IS NULL AND PD.SEOUrl IS NULL
			  --AND ZCSO.PortalId = @PortalId
             SELECT PublishProductId,SKU,SEOTitle,SEODescription,SEOKeywords,SEOUrl,Rating,TotalReviews 
			 FROM #Tlb_ProductData;             
			 COMMIT TRAN A;
			
         END TRY
         BEGIN CATCH
              DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetProductDataForWebStore @SKU = '+@SKU+',@PublishProductId='+@PublishProductId+',@PortalId='+CAST(@PortalId AS VARCHAR(50))+',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetProductDataForWebStore',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;

GO
PRINT N'Creating [dbo].[Znode_GetGlobalEntityAttributeValue]...';


GO
CREATE   PROCEDURE [dbo].[Znode_GetGlobalEntityAttributeValue]
(
    @EntityName       nvarchar(200) = 0,
    @GlobalEntityValueId   INT = 0--,
 --   @LocaleId       INT = 0,
	--@GlobalEnt
)
AS
/*
	 Summary :- This procedure is used to get the Attribute and EntityValue attribute value as per filter pass 
	 Unit Testing 
	 BEGIN TRAN
	 EXEC [Znode_GetGlobalEntityAttributeValue] 'Store',1
	 ROLLBACK TRAN

*/	 
     BEGIN
         BEGIN TRY
 


		 IF @EntityName='Store'
			 Exec [dbo].[Znode_GetPortalGlobalAttributeValue] 
			 @EntityName=@EntityName,
			 @GlobalEntityValueId=@GlobalEntityValueId
		 Else IF @EntityName='User'
			 Exec [dbo].[Znode_GetUserGlobalAttributeValue] 
			 @EntityName=@EntityName,
			 @GlobalEntityValueId=@GlobalEntityValueId
		Else IF @EntityName='Account'
			 Exec [dbo].[Znode_GetAccountGlobalAttributeValue] 
			 @EntityName=@EntityName,
			 @GlobalEntityValueId=@GlobalEntityValueId
		--Else IF @EntityName='FormBuilder'
		--	 Exec [dbo].[Znode_GetFormBuilderGlobalAttributeValue] 
		--	 @EntityName=@EntityName,
		--	 @GlobalEntityValueId=@GlobalEntityValueId
    
		  END TRY
         BEGIN CATCH
		 SELECT ERROR_MESSAGE()
             DECLARE @Status BIT ;
		  SET @Status = 0;
		  DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(),
		   @ErrorLine VARCHAR(100)= ERROR_LINE(),
		    @ErrorCall NVARCHAR(MAX)= null       			 
          SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		 
          EXEC Znode_InsertProcedureErrorLog
            @ProcedureName = 'Znode_GetGlobalEntityValueAttributeValues',
            @ErrorInProcedure = @Error_procedure,
            @ErrorMessage = @ErrorMessage,
            @ErrorLine = @ErrorLine,
            @ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
PRINT N'Creating [dbo].[Znode_GetSearchProfileDetails]...';


GO

CREATE PROCEDURE [dbo].[Znode_GetSearchProfileDetails]
(
	@SearchProfileId int 
)
AS 
/*
	 Summary :- This Procedure is used to get the publish status of the catalog 
	 Unit Testig 
	 EXEC  Znode_GetCatalogList '',100,1,'',0
*/
   BEGIN 
		BEGIN TRY 
		SET NOCOUNT ON 

		   Declare @SearchQueryTypeId int 

				Select @SearchQueryTypeId=SearchQueryTypeId 
				from ZnodeSearchProfile
				Where  SearchProfileId=@SearchProfileId	

				Exec [dbo].[Znode_GetSearchQueryTypeWiseFeatureDetails] @SearchProfileId=@SearchProfileId,@SearchQueryTypeId=@SearchQueryTypeId
						

				Select b.SearchProfileId,b.AttributeCode,b.BoostValue,b.IsUseInSearch,b.IsFacets
				from ZnodeSearchProfileAttributeMapping b
				Where  b.SearchProfileId=@SearchProfileId AND IsUseInSearch=1

				Select b.SearchProfileId,b.AttributeCode,b.BoostValue,b.IsFacets,b.IsUseInSearch
				from ZnodeSearchProfileAttributeMapping b
				Where  b.SearchProfileId=@SearchProfileId AND IsFacets=1

				Select b.SearchQueryTypeId , b.SearchQueryTypeId ,b.ProfileName,b.Operator,
				c.QueryTypeName,c.QueryBuilderClassName,
				b.SearchSubQueryTypeId,d.QueryTypeName SubQueryTypeName,d.QueryBuilderClassName SubQueryBuilderClassName,
				pc.PublishCatalogId,pc.CatalogName
				from  ZnodeSearchProfile B 
				left join dbo.ZnodePublishCatalogSearchProfile cc on cc.SearchProfileId=b.SearchProfileId
				left join dbo.ZnodePublishCatalog pc on pc.PublishCatalogId=cc.PublishCatalogId
				inner join ZnodeSearchQueryType C on b.SearchQueryTypeId=C.SearchQueryTypeId 
				Left join ZnodeSearchQueryType d on  d.SearchQueryTypeId =b.SearchSubQueryTypeId
				Where  b.SearchProfileId=@SearchProfileId	 
		 END TRY 
		 BEGIN CATCH 
			DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), 
			@ErrorLine VARCHAR(100)= ERROR_LINE(), 
			@ErrorCall NVARCHAR(MAX)
	--		= 'EXEC Znode_GetCatalogList @WhereClause = '+@WhereClause+',@Rows='+CAST(@Rows AS
 --VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetZnodeSearchProfileList',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
		 END CATCH 
   END
GO
PRINT N'Creating [dbo].[Znode_GetWebStoreSearchProfileTrigger]...';


GO

Create PROCEDURE [dbo].[Znode_GetWebStoreSearchProfileTrigger]
(   @Keyword nvarchar(100) = '',
    @UserProfileId int = '',
	@PublishCatalogId int,
	@PortalId int 
)
AS 
/*
	 Summary :- This Procedure is used to get the publish status of the catalog 
	 Unit Testig 
	 EXEC  Znode_GetSearchProfileTriggerList 'Apple',1,1,1
*/
   BEGIN 
		BEGIN TRY 
		SET NOCOUNT ON 
				 Declare @SearchProfileId int 

				 Select @SearchProfileId=d.SearchProfileId 
				 from [ZnodeSearchProfileTrigger] d
				 inner join ZnodePublishCatalogSearchProfile c on c.SearchProfileId=d.SearchProfileId
				 Where d.Keyword=@Keyword
				 and d.UserProfileId=@UserProfileId
				 and c.PublishCatalogId=@PublishCatalogId

				 If isnull(@SearchProfileId,0)=0
				 Begin
					Select @SearchProfileId=d.SearchProfileId 
					from [ZnodeSearchProfileTrigger] d
					inner join ZnodePublishCatalogSearchProfile c on c.SearchProfileId=d.SearchProfileId
					Where d.Keyword=@Keyword
					and c.PublishCatalogId=@PublishCatalogId
					and d.UserProfileId is null
				 eND

				 If isnull(@SearchProfileId,0)=0
				 Begin
					Select @SearchProfileId=d.SearchProfileId 
					from [ZnodeSearchProfileTrigger] d
					inner join ZnodePublishCatalogSearchProfile c on c.SearchProfileId=d.SearchProfileId
					Where d.UserProfileId=@UserProfileId
					and c.PublishCatalogId=@PublishCatalogId
					and d.Keyword is null
				 eND

				 If isnull(@SearchProfileId,0)=0
				 Begin
					Select @SearchProfileId=a.SearchProfileId 
					from ZnodePortalSearchProfile a
					inner join ZnodePublishCatalogSearchProfile c on c.SearchProfileId=a.SearchProfileId
					Where a.PortalId =@PortalId 
					and a.IsDefault=1
					and c.PublishCatalogId=@PublishCatalogId
				End 

				--If isnull(@SearchProfileId,0)=0
				-- Begin
				--	Select @SearchProfileId=min(a.SearchProfileId)
				--	from ZnodePortalSearchProfile a
				--	inner join ZnodePublishCatalogSearchProfile c on c.SearchProfileId=a.SearchProfileId
				--	Where a.PortalId =@PortalId 
				--	and a.IsDefault=0
				--	and c.PublishCatalogId=@PublishCatalogId
				--End 

				If isnull(@SearchProfileId,0)=0
				 Begin
					Select @SearchProfileId=a.SearchProfileId
					from ZnodeSearchProfile a
					----inner join ZnodePublishCatalogSearchProfile c on c.SearchProfileId=a.SearchProfileId
					Where a.IsDefault=1
					--and c.PublishCatalogId=@PublishCatalogId
				End 

				If Isnull(@SearchProfileId,0)>0
				exec [dbo].[Znode_GetSearchProfileDetails] @SearchProfileId=@SearchProfileId
		 END TRY 
		 BEGIN CATCH 
			DECLARE @Status BIT ;
			SET @Status = 0;
			DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), 
			@ErrorLine VARCHAR(100)= ERROR_LINE(), 
			@ErrorCall NVARCHAR(MAX)
	--		= 'EXEC Znode_GetCatalogList @WhereClause = '+@WhereClause+',@Rows='+CAST(@Rows AS
 --VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
			SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
			EXEC Znode_InsertProcedureErrorLog
					@ProcedureName = 'Znode_GetZnodeSearchProfileList',
					@ErrorInProcedure = @Error_procedure,
					@ErrorMessage = @ErrorMessage,
					@ErrorLine = @ErrorLine,
					@ErrorCall = @ErrorCall;
		 END CATCH 
   END
GO
PRINT N'Altering [dbo].[Znode_GetPublishProducts]...';


GO

ALTER PROCEDURE [dbo].[Znode_GetPublishProducts](
	  @PublishCatalogId int= NULL
	  , @PublishCategoryId varchar(2000)= NULL
	  , @UserId int
	  , @NotReturnXML int= NULL
	  , @PimProductId varchar(2000)= ''
	  , @VersionId int= 0
	  , @IsDebug bit= 0
	  , @TokenId nvarchar(max)= ''
	  )
AS
    
/*
    Summary :	Publish Product on the basis of publish catalog
				Retrive all Product details with attributes and insert into following tables 
				1.	ZnodePublishedXml
				2.	ZnodePublishCategoryProduct
				3.	ZnodePublishProduct
				4.	ZnodePublishProductDetail

                Product details include all the type of products link, grouped, configure and bundel products (include addon) their associated products 
				collect their attributes and values into tables variables to process for publish.  
                
				Finally genrate XML for products with their attributes and inserted into ZnodePublishedXml Znode Admin process xml from sql server to mongodb
				one by one.

    Unit Testing
    
    SELECT * FROM ZnodePimCustomField WHERE CustomCode = 'Test'
    SELECT * FROM ZnodePimCatalogCategory WHERE pimCatalogId = 3 AND PimProductId = 181
    SELECT * FROM ZnodePimCustomFieldLocale WHERE PimCustomFieldId = 1
    SELECT * FROM ZnodePublishProduct WHERE PublishProductid = 213 = 30
    select * from znodepublishcatalog
    SELECT * FROM view_loadmanageProduct WHERE Attributecode = 'ProductNAme' AND AttributeValue LIKE '%Apple%'
    SELECT * FROM ZnodePimCategoryProduct WHERE  PimProductId = 181
    SELECT * FROM ZnodePimCatalogcategory WHERE pimcatalogId = 3 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = 0 ,@UserId= 2 ,@NotReturnXML= NULL,@PimProductId = 41,@IsDebug= 1 
    EXEC Znode_GetPublishProducts  @PublishCatalogId = null,@UserId= 2 ,@NotReturnXML= NULL,@IsDebug= 1  ,@PimProductId = 103
    EXEC Znode_GetPublishProducts  @PublishCatalogId =1,@UserId= 2 ,@RequiredXML= 1	
    SELECT * FROM 	ZnodePimCatalogCategory  WHERE pimcatalogId = 3  
    SELECT * FROM [dbo].[ZnodePimCategoryHierarchy]  WHERE pimcatalogId = 3 
 */

BEGIN
	
	BEGIN TRY
		SET NOCOUNT ON;
	
	           DECLARE @TBL_PublisshIds TABLE (PublishProductId INT , PimProductId INT , PublishCatalogId INT)
			   
	         IF  @PublishCatalogId IS NULL  OR @PublishCatalogId = 0 
			 BEGIN 

			 
			   INSERT INTO @TBL_PublisshIds 
			   EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId
			   
			   SET @PimProductId = SUBSTRING((SELECT DISTINCT ','+CAST(PimProductId AS VARCHAr(50)) FROM @TBL_PublisshIds FOR XML PATH ('')),2,8000 )

			   EXEC Znode_GetPublishSingleProduct @PublishCatalogId,@VersionId,@PimProductId,@userid

			  -- SELECT 	@PimProductId	
			 END 
			 ELSE 
			 BEGIN 
			  
			    EXEC [dbo].[Znode_InsertPublishProductIds] @PublishCatalogId,@userid,@PimProductId

				 EXEC Znode_GetPublishProductbulk @PublishCatalogId,@VersionId,@PimProductId,@userid
				 UPDATE ZnodePimProduct 
			     SET IsProductPublish = 1 
				 WHERE EXISTS (SELECT TOP 1 1 FROM ZnodePublishProduct ZPP WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId AND ZPP.PublishCatalogId = @PublishCatalogId)
			 END 
			
		  

			 DECLARE @TBL_PublishCatalogId TABLE(PublishCatalogId INT,PublishProductId INT,PimProductId  INT , VersionId INT );

			INSERT INTO @TBL_PublishCatalogId 
			 SELECT ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId,CASE WHEN @versionId = 0 OR @versionId IS NULL THEN  
										MAX(PublishCatalogLogId) ELSE @versionId END 
			 FROM ZnodePublishProduct ZPP 
			 LEFT JOIN ZnodePublishCatalogLog ZPCP ON (ZPCP.PublishCatalogId  = ZPP.PublishCatalogId)
			 WHERE (EXISTS (SELECT TOP 1 1 FROM dbo.Split(@PimProductId,',') SP WHERE SP.Item = ZPP.PimProductId  ))
			 GROUP BY ZPP.PublishCatalogId , ZPP.PublishProductId,PimProductId

			


			IF @PimProductId IS NOT NULL AND @PimProductId <> ''
			BEGIN
				SELECT PublishedXML ProductXml
				FROM ZnodePublishedXml ZPX
				WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId TBLP WHERE TBLP.VersionId = ZPX.PublishCatalogLogId AND TBLP.PublishProductId = ZPX.PublishedId  )
				AND IsProductXML = 1
				;

				SELECT PublishProductId AS ProductXml
				FROM @TBL_PublishCatalogId
				GROUP BY PublishProductId;
			END
			UPDATE ZnodePublishCatalogLog 
			SET IsProductPublished = 1 
			    ,PublishProductId = (SELECT DISTINCT COUNT(PublishProductId) FROM ZnodePublishProduct ZPP WHERE ZPP.PublishCatalogId = ZnodePublishCatalogLog.PublishCatalogId  ) 
		    WHERE PublishCatalogLogId = @VersionId AND  @VersionId <> 0

			DECLARE @PimAttributeIsPublish VARCHAR(50) =  [dbo].[Fn_GetAttributeIsPublish]() 
			
			--UPDATE ZnodePimattributeValueLocale SET AttributeValue = 'Published' 
			--FROM ZnodePimattributeValue PAV
			--INNER JOIN ZnodePimattributeValueLocale PAVL ON PAV.PimAttributeValueId = PAVL.PimAttributeValueId
			--WHERE PimAttributeId = @PimAttributeIsPublish
			--AND EXISTS ( SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE ZPP.PimProductId = PAV.PimProductId )

			UPDATE ZnodePimProduct 
			SET IsProductPublish = 1 
			WHERE EXISTS (SELECT TOP 1 1 FROM @TBL_PublishCatalogId ZPP WHERE ZPP.PimProductId = ZnodePimProduct.PimProductId)
			--END 
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE(), ERROR_PROCEDURE();
		UPDATE ZnodePublishCatalogLog 
	    SET IsCatalogPublished = 0 
		WHERE PublishCatalogLogId = @VersionId
		DECLARE @Status bit;
		SET @Status = 0;
		DECLARE @Error_procedure varchar(1000)= ERROR_PROCEDURE(), @ErrorMessage nvarchar(max)= ERROR_MESSAGE(), @ErrorLine varchar(100)= ERROR_LINE(), @ErrorCall nvarchar(max)= 'EXEC Znode_GetPublishProducts @PublishCatalogId = '+CAST(@PublishCatalogId AS varchar(max))+',@PublishCategoryId='+@PublishCategoryId+',@UserId='+CAST(@UserId AS Varchar(50))+',@NotReturnXML='+CAST(@NotReturnXML AS Varchar(50))+',@UserId = '+CAST(@UserId AS Varchar(50))+',@PimProductId='+CAST(@PimProductId AS Varchar(50))+',@VersionId='+CAST(@VersionId AS Varchar(50))+',@TokenId='+CAST(@TokenId AS varchar(max))+',@Status='+CAST(@Status AS varchar(10));
		SELECT 0 AS ID, CAST(0 AS bit) AS Status;
		ROLLBACK TRAN GetPublishProducts;
		EXEC Znode_InsertProcedureErrorLog @ProcedureName = 'Znode_GetPublishProducts', @ErrorInProcedure = @Error_procedure, @ErrorMessage = @ErrorMessage, @ErrorLine = @ErrorLine, @ErrorCall = @ErrorCall;
	END CATCH;
END;
GO
PRINT N'Refreshing [dbo].[ZnodeReport_GetAffiliateFiltered]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[ZnodeReport_GetAffiliateFiltered]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteAccount]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteAccount]';


GO
PRINT N'Refreshing [dbo].[Znode_DeletePortalAddress]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeletePortalAddress]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteVendor]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteVendor]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteWarehouse]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteWarehouse]';


GO
PRINT N'Refreshing [dbo].[Znode_ReapirAdminUser]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_ReapirAdminUser]';


GO
PRINT N'Refreshing [dbo].[Znode_CopyPortal]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_CopyPortal]';


GO
PRINT N'Refreshing [dbo].[Znode_DeleteProfileCatalogCategory]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_DeleteProfileCatalogCategory]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPublishAssociatedProducts]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPublishAssociatedProducts]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPublishAssociatedAddons]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPublishAssociatedAddons]';


GO
PRINT N'Refreshing [dbo].[Znode_ImportPimProductData]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_ImportPimProductData]';


GO
PRINT N'Refreshing [dbo].[Znode_InsertUpdatePimProduct]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_InsertUpdatePimProduct]';


GO
PRINT N'Refreshing [dbo].[Znode_GetPublishSingleProduct]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_GetPublishSingleProduct]';


GO
PRINT N'Refreshing [dbo].[Znode_ImportValidatePimProductData]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[Znode_ImportValidatePimProductData]';


GO
PRINT N'Checking existing data against newly created constraints';


ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeAccountGlobalAttributeValue_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeAccountGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue];

ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeAccountGlobalAttributeValueLocale_ZnodeAccountGlobalAttributeValue];

ALTER TABLE [dbo].[ZnodeAccountGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeAccountGlobalAttributeValueLocale_ZnodeMedia];

ALTER TABLE [dbo].[ZnodeCMSFormWidgetConfiguration] WITH CHECK CHECK CONSTRAINT [FK_ZnodeCMSFormWidgetConfiguration_ZnodeCMSWidgets];

ALTER TABLE [dbo].[ZnodeCMSFormWidgetConfiguration] WITH CHECK CHECK CONSTRAINT [FK_ZnodeCMSFormWidgetConfiguration_ZnodeFormBuilder];

ALTER TABLE [dbo].[ZnodeFormBuilderAttributeMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderAttributeMapper_ZnodeFormBuilder];

ALTER TABLE [dbo].[ZnodeFormBuilderAttributeMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderAttributeMapper_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeFormBuilderAttributeMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderAttributeMapper_ZnodeGlobalAttributeGroup];

ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeFormBuilderSubmit];

ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue];

ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValueLocale_ZnodeFormBuilderGlobalAttributeValue];

ALTER TABLE [dbo].[ZnodeFormBuilderGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderGlobalAttributeValueLocale_ZnodeMedia];

ALTER TABLE [dbo].[ZnodeFormBuilderSubmit] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderSubmit_ZnodeFormBuilder];

ALTER TABLE [dbo].[ZnodeFormBuilderSubmit] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderSubmit_ZnodePortal];

ALTER TABLE [dbo].[ZnodeFormBuilderSubmit] WITH CHECK CHECK CONSTRAINT [FK_ZnodeFormBuilderSubmit_ZnodeUser];

ALTER TABLE [dbo].[ZnodeGlobalAttribute] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttribute_ZnodeAttributeType];

ALTER TABLE [dbo].[ZnodeGlobalAttributeDefaultValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeDefaultValue_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeGlobalAttributeDefaultValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeDefaultValueLocale_ZNodeGlobalDefaultAttributeValue];

ALTER TABLE [dbo].[ZnodeGlobalAttributeGroupLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeGroupLocale_ZnodeGlobalAttributeGroup];

ALTER TABLE [dbo].[ZnodeGlobalAttributeGroupMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeGroupMapper_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeGlobalAttributeGroupMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeGroupMapper_ZnodeGlobalAttributeGroup];

ALTER TABLE [dbo].[ZnodeGlobalAttributeLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeLocale_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeGlobalAttributeMedia] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeMedia_ZnodeGlobalAttributeValueId];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValidation] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValidation_ZnodeAttributeInputValidation];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValidation] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValidation_ZnodeAttributeInputValidationRule];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValidation] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValidation_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValue_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValue_ZnodeGlobalEntity];

ALTER TABLE [dbo].[ZnodeGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalAttributeValueLocale_ZnodeGlobalAttributeValue];

ALTER TABLE [dbo].[ZnodeGlobalEntityTextAreaValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalEntityTextAreaValue_ZnodeGlobalAttributeValueId];

ALTER TABLE [dbo].[ZnodeGlobalGroupEntityMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalGroupEntityMapper_ZnodeGlobalAttributeGroup];

ALTER TABLE [dbo].[ZnodeGlobalGroupEntityMapper] WITH CHECK CHECK CONSTRAINT [FK_ZnodeGlobalGroupEntityMapper_ZnodeGlobalEntity];

ALTER TABLE [dbo].[ZnodeOmsDownloadableProductKey] WITH CHECK CHECK CONSTRAINT [FK_ZnodeOmsDownloadableProductKey_ZnodeOmsOrderLineItems];

ALTER TABLE [dbo].[ZnodeOmsDownloadableProductKey] WITH CHECK CHECK CONSTRAINT [FK_ZnodeOmsDownloadableProductKey_ZnodePimDownloadableProductKey];

ALTER TABLE [dbo].[ZnodePimDownloadableProductKey] WITH CHECK CHECK CONSTRAINT [FK_ZnodePimDownloadableProductKey_ZnodePimDownloadableProduct];

ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalGlobalAttributeValue_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue];

ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalGlobalAttributeValueLocale_ZnodeMedia];

ALTER TABLE [dbo].[ZnodePortalGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalGlobalAttributeValueLocale_ZnodePortalGlobalAttributeValue];

ALTER TABLE [dbo].[ZnodePortalSearchProfile] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalSearchProfile_ZnodePortal];

ALTER TABLE [dbo].[ZnodePortalSearchProfile] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalSearchProfile_ZnodePublishCatalog];

ALTER TABLE [dbo].[ZnodePortalSearchProfile] WITH CHECK CHECK CONSTRAINT [FK_ZnodePortalSearchProfile_ZnodeSearchProfile];

ALTER TABLE [dbo].[ZnodePublishCatalogSearchProfile] WITH CHECK CHECK CONSTRAINT [FK_ZnodePublishCatalogSearchProfile_ZnodePublishCatalog];

ALTER TABLE [dbo].[ZnodePublishCatalogSearchProfile] WITH CHECK CHECK CONSTRAINT [FK_ZnodePublishCatalogSearchProfile_ZnodeSearchProfile];

ALTER TABLE [dbo].[ZnodeSearchFeature] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchFeature_ZnodeSearchFeature];

ALTER TABLE [dbo].[ZnodeSearchProfile] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearc hProfile_ZnodeSearchQueryType];

ALTER TABLE [dbo].[ZnodeSearchProfileAttributeMapping] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchProfileAttributeMapping_ZnodeSearchProfile];

ALTER TABLE [dbo].[ZnodeSearchProfileFeatureMapping] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchProfileFeatureMapping_ZnodeSearchFeature];

ALTER TABLE [dbo].[ZnodeSearchProfileFeatureMapping] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchProfileFeatureMapping_ZnodeSearchProfile];

ALTER TABLE [dbo].[ZnodeSearchProfileProductMapping] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchProfileProductMapping_ZnodeSearchProfile];

ALTER TABLE [dbo].[ZnodeSearchProfileTrigger] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchProfileTrigger_ZnodeSearchProfile];

ALTER TABLE [dbo].[ZnodeSearchProfileTrigger] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchProfileTrigger_ZnodeUserProfile];

ALTER TABLE [dbo].[ZnodeSearchQueryTypeFeature] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchQueryTypeFeature_ZnodeSearchFeature];

ALTER TABLE [dbo].[ZnodeSearchQueryTypeFeature] WITH CHECK CHECK CONSTRAINT [FK_ZnodeSearchQueryTypeFeature_ZnodeSearchQueryType];

ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeUserGlobalAttributeValue_ZnodeGlobalAttribute];

ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValue] WITH CHECK CHECK CONSTRAINT [FK_ZnodeUserGlobalAttributeValue_ZnodeGlobalAttributeDefaultValue];

ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeUserGlobalAttributeValueLocale_ZnodeMedia];

ALTER TABLE [dbo].[ZnodeUserGlobalAttributeValueLocale] WITH CHECK CHECK CONSTRAINT [FK_ZnodeUserGlobalAttributeValueLocale_ZnodeUserGlobalAttributeValue];


GO
PRINT N'Update complete.';


GO

--------------------------------------------------------------------------------------------
 
  
 IF EXISTS (SELECT TOP 1 1 FROM SYS.TABLES WHERE Name IN ( '_TempZnodeActionMenu','_TempZnodeActions','_TempZnodeMenu','_TempZnodeMenuActionsPermission','_TempZnodeCMSMessage','_TempZnodeCMSMessageKey', 
               '_TempZnodeEmailTemplate','_TempZnodePimAttribute','_TempZnodePimAttributeDefaultValue','_TempZnodePimAttributeDefaultValueLocale', 
               '_TempZnodePimAttributeGroup','_TempZnodePimAttributeGroupLocale','_TempZnodePimAttributeGroupMapper','_TempZnodePimAttributeLocale', 
               '_TempZnodePimFamilyGroupMapper','_TempZnodePortalPixelTracking','_TempZnodePriceList','_TempZnodePromotionType','_TempZnodeTaxRuleTypes', 
               '_TempZnodeApplicationSetting','_TempZnodeApplicationCache', '_TempZnodeCMSTheme','_TempZnodeCMSThemeCSS','_TempZnodeGlobalEntity','_TempZnodePimFrontEndProperties', 
               '_TempZnodeSearchFeature','_TempZnodeSearchQueryType','_TempZnodeSearchQueryTypeFeature','_TempZnodeImportAttributeValidation','_TempZnodeImportTemplateMapping', 
               '_TempZnodeSearchProfile' , '_TempZnodeSearchProfileAttributeMapping', '_TempZnodeCMSPortalMessage', 
               '_TempZnodeCMSContentPageGroup','_TempZnodePortal','_TempZnodeCMSPortalMessageKeyTag','_TempZnodePortalCatalog', 
               '_TempZnodePortalCountry','_TempZnodePortalFeatureMapper','_TempZnodePortalLocale','_TempznodePortalProfile', 
               '_TempZnodePortalsmtpSetting','_TempZnodeEmailTemplateAreas','_TempZnodeEmailTemplateLocale','_TempZnodeEmailTemplateMapper' )) 
 BEGIN  
 DROP TABLE _TempZnodeActionMenu  
 DROP TABLE _TempZnodeActions  
 DROP TABLE _TempZnodeMenu  
 DROP TABLE _TempZnodeMenuActionsPermission 
 DROP TABLE _TempZnodeCMSMessage  
 DROP TABLE _TempZnodeCMSMessageKey 
 DROP TABLE _TempZnodeEmailTemplate 
 DROP TABLE _TempZnodePimAttribute 
 DROP TABLE _TempZnodePimAttributeDefaultValue 
 DROP TABLE _TempZnodePimAttributeDefaultValueLocale 
 --DROP TABLE _TempZnodePimAttributeGroup 
 --DROP TABLE _TempZnodePimAttributeGroupLocale 
 DROP TABLE _TempZnodePimAttributeGroupMapper 
 DROP TABLE _TempZnodePimAttributeLocale 
 DROP TABLE _TempZnodePimFamilyGroupMapper 
 DROP TABLE _TempZnodePortalPixelTracking 
 DROP TABLE _TempZnodePriceList 
 DROP TABLE _TempZnodePromotionType 
 DROP TABLE _TempZnodeTaxRuleTypes 
 DROP TABLE _TempZnodeApplicationSetting 
 DROP TABLE _TempZnodeApplicationCache 
 --DROP TABLE _TempZnodeCMSTheme 
 --DROP TABLE _TempZnodeCMSThemeCSS 
 DROP TABLE _TempZnodeGlobalEntity 
 DROP TABLE _TempZnodePimFrontEndProperties 
 DROP TABLE _TempZnodeSearchFeature 
 DROP TABLE _TempZnodeSearchQueryType 
 DROP TABLE _TempZnodeSearchQueryTypeFeature 
 DROP TABLE _TempZnodeImportAttributeValidation 
 DROP TABLE _TempZnodeImportTemplateMapping 
 DROP TABLE _TempZnodeSearchProfile 
 DROP TABLE _TempZnodeSearchProfileAttributeMapping 
 DROP TABLE _TempZnodeCMSPortalMessage    
 DROP TABLE _TempZnodeCMSPortalMessageKeyTag 
 DROP TABLE _TempZnodeEmailTemplateAreas 
 DROP TABLE _TempZnodeEmailTemplateLocale 
 DROP TABLE _TempZnodeEmailTemplateMapper 
 END  
 CREATE TABLE [dbo].[_TempZnodeActionMenu]( 
 [ActionMenuId] [int] NOT NULL, 
 [ControllerName] [varchar](100) NOT NULL, 
 [ActionName] [varchar](100) NOT NULL, 
 [MenuName] [varchar](100) NULL, 
 [ParentMenuName] [varchar](100) NULL 
 )  
 GO 
 CREATE TABLE [dbo].[_TempZnodeActions] ( 
 [ActionId] [int]  NOT NULL, 
 [AreaName] [varchar](100) NULL, 
 [ControllerName] [varchar](100) NOT NULL, 
 [ActionName] [varchar](100) NOT NULL, 
 [IsGlobalAccess] [bit] NOT NULL, 
 [CreatedBy] [int] NOT NULL, 
 [CreatedDate] [datetime] NOT NULL, 
 [ModifiedBy] [int] NOT NULL, 
 [ModifiedDate] [datetime] NOT NULL 
 )  
 GO  
 CREATE TABLE [dbo].[_TempZnodeMenu]( 
 [MenuId] [int] NOT NULL, 
 [ParentMenuId] [int] NULL, 
 [MenuName] [varchar](100) NULL, 
 [MenuSequence] [int] NULL, 
 [AreaName] [nvarchar](500) NULL, 
 [ControllerName] [varchar](200) NULL, 
 [ActionName] [varchar](200) NULL, 
 [CSSClassName] [varchar](300) NULL, 
 [IsActive] [bit] NULL, 
 [CreatedBy] [int] NOT NULL, 
 [CreatedDate] [datetime] NOT NULL, 
 [ModifiedBy] [int] NOT NULL, 
 [ModifiedDate] [datetime] NOT NULL, 
 [ParentMenuName] [varchar](100) NULL 
 )  
 GO 
 CREATE TABLE [dbo].[_TempZnodeMenuActionsPermission]( 
 [MenuActionsPermissionId] [int]  NOT NULL, 
 [ControllerName] [varchar](100) NOT NULL, 
 [ActionName] [varchar](100) NOT NULL, 
 [MenuName] [varchar](100) NULL, 
 ParentMenuName [varchar](100) NULL, 
 [PermissionsName] [varchar](100) NULL 
 )  
 GO  
 CREATE TABLE [dbo].[_TempZnodeCMSMessage]( 
 [CMSMessageId] [int] NOT NULL, 
 [LocaleId] [varchar](100) NOT NULL, 
 [Message] [nvarchar](max) NOT NULL, 
 [CreatedBy] [int] NOT NULL, 
 [CreatedDate] [datetime] NOT NULL, 
 [ModifiedBy] [int] NOT NULL, 
 [ModifiedDate] [datetime] NOT NULL 
 )  
 GO 
 CREATE TABLE [dbo].[_TempZnodeCMSMessageKey]( 
 [CMSMessageKeyId] [int] NOT NULL, 
 [MessageKey] [nvarchar](100) NOT NULL, 
 [MessageTag] [nvarchar](2000)  NULL, 
 [CreatedBy] [int] NOT NULL, 
 [CreatedDate] [datetime] NOT NULL, 
 [ModifiedBy] [int] NOT NULL, 
 [ModifiedDate] [datetime] NOT NULL 
 ) 
 GO  
 CREATE TABLE [dbo].[_TempZnodeEmailTemplate]( 
 [EmailTemplateId] [int] NOT NULL,  
 [TemplateName] varchar(300) null, 
 [CreatedBy] [int] NOT NULL, 
 [CreatedDate] [datetime] NOT NULL, 
 [ModifiedBy] [int] NOT NULL, 
 [ModifiedDate] [datetime] NOT NULL  
 )  
  CREATE TABLE [dbo].[_TempZnodePimAttribute]( 
  [PimAttributeId] int not null, 
 [AttributeCode] [nvarchar] (600)  NULL,  
 [DisplayOrder] int null, 
 [HelpDescription] [nvarchar] (max)  NULL, 
 [IsCategory] [bit] NOT NULL, 
 [IsConfigurable] [bit] NOT NULL, 
 [IsFilterable] [bit] NOT NULL, 
 [IsHidden] [bit] null, 
 [IsLocalizable] [bit] NOT NULL, 
 [IsPersonalizable] [bit] NOT NULL, 
 [IsRequired] [bit] NOT NULL, 
 [IsShowOnGrid] [bit]  NULL, 
 [IsSwatch] [bit]  NULL, 
 [IsSystemDefined] [bit] NOT NULL, 
 [AttributeTypeName] [varchar] (300) null 
 )  
 CREATE TABLE [dbo].[_TempZnodePimAttributeDefaultValue]( 
 PimAttributeDefaultValueId INT NOT NULL, 
AttributeDefaultValueCode  [varchar] (100) NULL, 
IsEditable [BIT] NULL, 
DisplayOrder INT NULL, 
IsDefault BIT NULL, 
SwatchText [VARCHAR] (100) NULL, 
MediaId INT NULL, 
AttributeCode NVARCHAR (600) NULL 
 ) 
  CREATE TABLE [dbo].[_TempZnodePimAttributeDefaultValueLocale]( 
 PimAttributeDefaultValueLocaleId INT NOT NULL, 
LocaleId  INT NULL, 
PimAttributeDefaultValueId INT NULL, 
AttributeDefaultValue NVARCHAR (MAX) NULL, 
Description VARCHAR (300) NULL, 
AttributeDefaultValueCode [VARCHAR] (100) NULL 
 ) 

 CREATE TABLE [dbo].[_TempZnodePimAttributeGroupMapper]( 
 [PimAttributeGroupMapperId] [int]  NOT NULL, 
 [AttributeDisplayOrder] int NULL, 
 [IsSystemDefined] bit NOT NULL, 
 [GroupCode] [varchar](200) NULL, 
 AttributeCode [nvarchar](600) NULL 
 )  
 CREATE TABLE [dbo].[_TempZnodePimAttributeLocale]( 
 PimAttributeLocaleId INT NOT NULL, 
LocaleId  int NULL, 
AttributeName nvarchar (600)  NULL, 
[Description] varchar (300) NULL, 
AttributeCode nvarchar (600)  NULL 
 ) 
  CREATE TABLE [dbo].[_TempZnodePimFamilyGroupMapper]( 
 [PimFamilyGroupMapperId] [int]  NOT NULL, 
 [GroupDisplayOrder] numeric(28,6)  NULL, 
 [IsSystemDefined] bit NOT NULL, 
 [GroupCode] [varchar](200) NULL, 
 AttributeCode [nvarchar](600) NULL, 
 FamilyCode varchar (200) NULL 
 )  

 
 CREATE TABLE [dbo].[_TempZnodePortalPixelTracking]( 
 [PortalPixelTrackingId] [int] NOT NULL, 
 [PixelId1] [nvarchar](100) NULL, 
 [CodePixel1] [nvarchar](100) NULL, 
 [DisplayName1] [nvarchar](200) NULL, 
 [HelpTextPixel1] [nvarchar](200) NULL, 
 [PixelId2] [nvarchar](100) NULL, 
 [CodePixel2] [nvarchar](100) NULL, 
 [DisplayName2] [nvarchar](200) NULL, 
 [HelpTextPixel2] [nvarchar](200) NULL, 
 [PixelId3] [nvarchar](100) NULL, 
 [CodePixel3] [nvarchar](100) NULL, 
 [DisplayName3] [nvarchar](200) NULL, 
 [HelpTextPixel3] [nvarchar](200) NULL, 
 [PixelId4] [nvarchar](100) NULL, 
 [CodePixel4] [nvarchar](100) NULL, 
 [DisplayName4] [nvarchar](200) NULL, 
 [HelpTextPixel4] [nvarchar](200) NULL, 
 [PixelId5] [nvarchar](100) NULL, 
 [CodePixel5] [nvarchar](100) NULL, 
 [DisplayName5] [nvarchar](200) NULL, 
 [HelpTextPixel5] [nvarchar](200) NULL, 
 [StoreName] [nvarchar](max) NOT NULL 
) 
CREATE TABLE [dbo].[_TempZnodePriceList]( 
 [PriceListId] [int] NOT NULL, 
 [ListCode] [varchar](200) NOT NULL, 
 [ListName] [varchar](600) NULL, 
 [ActivationDate] [datetime] NULL, 
 [ExpirationDate] [datetime] NULL, 
 [CurrencyCode] [varchar](100) NULL 
) 
 CREATE TABLE [dbo].[_TempZnodePromotionType]( 
 [PromotionTypeId] [int]  NOT NULL, 
 [ClassType] [nvarchar](100) NULL, 
 [ClassName] [nvarchar](100) NULL, 
 [Name] [varchar](max) NULL, 
 [Description] [nvarchar](max) NULL, 
 [IsActive] [bit] NOT NULL 
) 
CREATE TABLE [dbo].[_TempZnodeTaxRuleTypes]( 
 [TaxRuleTypeId] [int] NOT NULL, 
 [PortalId] [int] NULL, 
 [ClassName] [nvarchar](100) NULL, 
 [Name] [nvarchar](max) NULL, 
 [Description] [nvarchar](max) NULL, 
 [IsActive] [bit] NOT NULL, 
 [StoreName] [nvarchar](max) NULL 
)  
CREATE TABLE [dbo].[_TempZnodeApplicationSetting]( 
 [ApplicationSettingId] [int]  NOT NULL, 
 [GroupName] [varchar](100) NULL, 
 [ItemName] [varchar](100) NULL, 
 [Setting] [nvarchar](max) NULL, 
 [ViewOptions] [nvarchar](max) NULL, 
 [FrontPageName] [nvarchar](400) NULL, 
 [FrontObjectName] [nvarchar](400) NULL, 
 [IsCompressed] [bit] NOT NULL, 
 [OrderByFields] [nvarchar](2000) NULL, 
 [ItemNameWithoutCurrency] [nvarchar](200) NULL, 
 [CreatedByName] [nvarchar](200) NULL, 
 [ModifiedByName] [nvarchar](200) NULL 
) 
CREATE TABLE [dbo].[_TempZnodeApplicationCache]( 
 [ApplicationCacheId] [int]  NOT NULL, 
 [ApplicationType] [nvarchar](100) NOT NULL, 
 [IsActive] [bit] NOT NULL, 
 [StartDate] [datetime] NULL, 
 [Duration] [int] NULL 
) 
 
CREATE TABLE [dbo].[_TempZnodeGlobalEntity]( 
 [GlobalEntityId] [int]  NOT NULL, 
 [EntityName] [nvarchar](600) NULL, 
 [IsActive] [bit] NOT NULL, 
 [TableName] [nvarchar](100) NULL 
)  
CREATE TABLE [dbo].[_TempZnodePimFrontEndProperties]( 
 [ZnodePimFrontendPropertiesId] [int] NOT NULL, 
 [IsComparable] [bit] NOT NULL, 
 [IsUseInSearch] [bit] NOT NULL, 
 [IsHtmlTags] [bit] NOT NULL, 
 [IsFacets] [bit] NOT NULL, 
 [AttributeCode] [nvarchar](600) NULL 
) 
CREATE TABLE [dbo].[_TempZnodeSearchFeature]( 
 [SearchFeatureId] [int] NOT NULL, 
 [ParentSearchFeatureId] [int] NULL, 
 [FeatureCode] [nvarchar](200) NULL, 
 [FeatureName] [nvarchar](400) NULL, 
 [IsAdvanceFeature] [bit] NOT NULL, 
 [ControlType] [nvarchar](200) NULL, 
 [HelpDescription] [nvarchar](2000) NULL, 
 [ParentFeatureName] [nvarchar](400) NULL 
) 
CREATE TABLE [dbo].[_TempZnodeSearchQueryType]( 
 [SearchQueryTypeId] [int] NOT NULL, 
 [ParentSearchQueryTypeId] [int] NULL, 
 [QueryTypeName] [nvarchar](400) NOT NULL, 
 [QueryBuilderClassName] [nvarchar](400) NULL, 
 [HelpDescription] [nvarchar](2000) NULL, 
 [ParentQueryTypeName] [nvarchar](400) NULL 
)  
 
CREATE TABLE [dbo].[_TempZnodeSearchQueryTypeFeature]( 
 [SearchQueryTypeFeatureId] [int] NOT NULL, 
 [FeatureName] [nvarchar](400) NULL, 
 [QueryTypeName] [nvarchar](400) NOT NULL 
) 
CREATE TABLE [dbo].[_TempZnodeImportAttributeValidation]( 
 [ImportAttributeValidationId] [int] NOT NULL, 
 [AttributeTypeName] [varchar](300) NULL, 
 [AttributeCode] [varchar](300) NULL, 
 [IsRequired] [bit] NULL, 
 [ControlName] [varchar](300) NULL, 
 [ValidationName] [varchar](100) NULL, 
 [SubValidationName] [varchar](300) NULL, 
 [ValidationValue] [varchar](300) NULL, 
 [RegExp] [varchar](300) NULL, 
 [DisplayOrder] [int] NULL, 
 SequenceNumber int null, 
 [Name] [nvarchar](100) NOT NULL 
) 
CREATE TABLE [dbo].[_TempZnodeImportTemplateMapping]( 
 [ImportTemplateMappingId] [int] NOT NULL, 
 [SourceColumnName] [nvarchar](600) NOT NULL, 
 [TargetColumnName] [nvarchar](600) NOT NULL, 
 [DisplayOrder] [int] NOT NULL, 
 [IsActive] [bit] NOT NULL, 
 [IsAllowNull] [bit] NOT NULL, 
 [TemplateName] [nvarchar](600) NULL 
) 
CREATE TABLE [dbo].[_TempZnodeSearchProfile]( 
 [SearchProfileId] [int] NOT NULL, 
 [ProfileName] [nvarchar](400) NULL, 
 [SearchSubQueryTypeId] [int] NULL, 
 [Operator] [varchar](20) NOT NULL, 
 [IsDefault] [bit] NOT NULL, 
 [QueryTypeName] [nvarchar](400) NOT NULL 
) 
CREATE TABLE [dbo].[_TempZnodeSearchProfileAttributeMapping]( 
 [SearchProfileAttributeMappingId] [int] NOT NULL, 
 [AttributeCode] [nvarchar](600) NOT NULL, 
 [IsFacets] [bit] NOT NULL, 
 [IsUseInSearch] [bit] NOT NULL, 
 [BoostValue] [int] NULL, 
 [ProfileName] [nvarchar](400) NULL 
) 
CREATE TABLE [dbo].[_TempZnodeCMSPortalMessage]( 
 [CMSPortalMessageId] [int] NOT NULL, 
 [StoreName] [nvarchar](max) NOT NULL, 
 [MessageKey] [nvarchar](100) NOT NULL, 
 [Message] [nvarchar](max) NOT NULL 
) 

 
 
CREATE TABLE [dbo].[_TempZnodeCMSPortalMessageKeyTag]( 
 [CMSPortalMessageKeyTagId] [int] NOT NULL, 
 [PortalId] INT NULL, 
 [CMSMessageKeyId] int  NULL, 
 [TagXML] nvarchar(max) null, 
 [CreatedBy] [int] NOT NULL, 
 [CreatedDate] [datetime] NOT NULL, 
 [ModifiedBy] [int] NOT NULL, 
 [ModifiedDate] [datetime] NOT NULL, 
 [MessageKey] [nvarchar](100)  NULL, 
 [StoreName] [nvarchar](max)  NULL 
 )   
 
CREATE TABLE [dbo].[_TempZnodeEmailTemplateAreas]( 
 [EmailTemplateAreasId] [int] NOT NULL, 
 [Name] [varchar](500) NOT NULL, 
 [Code] [varchar](100) NOT NULL 
) 
CREATE TABLE [dbo].[_TempZnodeEmailTemplateLocale]( 
 [EmailTemplateLocaleId] [int] NOT NULL, 
 [Subject] [nvarchar](1200) NULL, 
 [Descriptions] [nvarchar](1200) NULL, 
 [Content] [nvarchar](max) NULL, 
 [TemplateName] [varchar](300) NULL, 
 [Code] [nvarchar](100) NULL 
) 
CREATE TABLE [dbo].[_TempZnodeEmailTemplateMapper]( 
 [EmailTemplateMapperId] [int] NOT NULL, 
 [IsActive] [bit] NOT NULL, 
 [StoreName] [nvarchar](max) NOT NULL, 
 [TemplateName] [varchar](300) NULL, 
 [Name] [varchar](500) NOT NULL 
) 

 insert into _TempZnodeMenu ( [MenuId],[ParentMenuId],[MenuName],[MenuSequence],[AreaName],[ControllerName],[ActionName],[CSSClassName],[IsActive],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate],ParentMenuName ) 
values
  (  88, 39,'Blogs & News' , 7,null,'BlogNews' ,'BlogNewsList' ,'z-blog-and-news' ,'1' , 2,'Jul 20 2017  6:47PM' , 2,'Aug  7 2017  4:23PM' ,'CMS'  ),
  (  91, 53,'Global Attributes' , 14,null,'GlobalAttribute' ,'List' ,'z-global-attributes' ,'1' , 2,'Nov 15 2017  3:45PM' , 2,'Nov 15 2017  3:45PM' ,'Admin'  ),
  (  92, 91,'Attributes' , 1,null,'GlobalAttribute' ,'List' ,'z-attribute' ,'1' , 2,'Nov 24 2017 11:56AM' , 2,'Nov 24 2017 12:05PM' ,'Global Attributes'  ),
  (  93, 91,'Attribute Groups' , 2,null,'GlobalAttributeGroup' ,'List' ,'z-attribute-group' ,'1' , 2,'Nov 24 2017 11:57AM' , 2,'Nov 24 2017 12:05PM' ,'Global Attributes'  ),
  (  94, 91,'Entity Attributes' , 3,null,'GlobalAttribute' ,'AssociateGroupEntity' ,'z-entity-attributes' ,'1' , 2,'Nov 24 2017 11:58AM' , 2,'Dec  1 2017  6:06PM' ,'Global Attributes'  )
insert into _TempZnodeActions ( [ActionId],[AreaName],[ControllerName],[ActionName],[IsGlobalAccess],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate] ) 
values
(  289,null,'Order' ,'CreateOrder' ,'1' , 2,'Dec 16 2016 11:28AM' , 2,'Dec 16 2016 11:28AM'  ) ,
(  1869,null,'User' ,'CustomerDelete' ,'1' , 2,'Dec 16 2016 11:28AM' , 2,'Dec 16 2016 11:28AM'  ) ,
(  1883,null,'Order' ,'GetOrderStateValueById' ,'1' , 2,'May 19 2017 12:05PM' , 2,'May 19 2017 12:05PM'  ) ,
(  2930,null,'GeneralSetting' ,'GetCacheManagementData' ,'0' , 2,'Nov  8 2017  2:38PM' , 2,'Nov  8 2017  2:38PM'  ) ,
(  2935,null,'Dashboard' ,'GlobalSearch' ,'0' , 2,'Dec 16 2016 12:00AM' , 2,'Dec 16 2016 12:00AM'  ) ,
(  2936,null,'GlobalAttribute' ,'Create' ,'0' , 2,'Nov  5 2017 12:10PM' , 2,'Jan  5 2017 12:10PM'  ) ,
(  2937,null,'GlobalAttribute' ,'Edit' ,'0' , 2,'Nov  5 2017 12:10PM' , 2,'Jan  5 2017 12:10PM'  ) ,
(  2938,null,'GlobalAttributeGroup' ,'Create' ,'0' , 2,'Nov 25 2017 12:10PM' , 2,'Nov 25 2017 12:10PM'  ) ,
(  2939,null,'GlobalAttributeGroup' ,'Edit' ,'0' , 2,'Nov 25 2017 12:10PM' , 2,'Nov 25 2017 12:10PM'  ) ,
(  2940,null,'GlobalAttributeGroup' ,'GetTabStructure' ,'0' , 2,'Nov 28 2017  6:48PM' , 2,'Nov 28 2017  6:48PM'  ) ,
(  2941,null,'GlobalAttributeGroup' ,'AssociateAttributes' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2942,null,'GlobalAttributeGroup' ,'CreateAttributeGroupLocale' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2943,null,'GlobalAttributeGroup' ,'Delete' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2944,null,'GlobalAttributeGroup' ,'GetAssignedAttribute' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2945,null,'GlobalAttributeGroup' ,'IsGroupCodeExist' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2946,null,'GlobalAttributeGroup' ,'List' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2947,null,'GlobalAttributeGroup' ,'RemoveAssociatedAttribute' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2948,null,'GlobalAttributeGroup' ,'GetUnAssignedAttribute' ,'0' , 2,'Nov 29 2017 11:44AM' , 2,'Nov 29 2017 11:44AM'  ) ,
(  2949,null,'GlobalAttribute' ,'Attribute' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2950,null,'GlobalAttribute' ,'DefaultValues' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2951,null,'GlobalAttribute' ,'Delete' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2952,null,'GlobalAttribute' ,'DeleteDefaultValues' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2953,null,'GlobalAttribute' ,'IsGroupCodeExist' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2954,null,'GlobalAttribute' ,'List' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2955,null,'GlobalAttribute' ,'IsAttributeDefaultValueCodeExist' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2956,null,'GlobalAttribute' ,'Locale' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2957,null,'GlobalAttribute' ,'SaveDefaultValues' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2958,null,'GlobalAttribute' ,'ValidationRule' ,'0' , 2,'Nov 29 2017 12:01PM' , 2,'Nov 29 2017 12:01PM'  ) ,
(  2959,null,'GlobalAttribute' ,'GetEntityAttributeDetails' ,'0' , 2,'Dec  4 2017  2:55PM' , 2,'Dec  4 2017  2:55PM'  ) ,
(  2960,'PIM' ,'ProductAttributeFamily' ,'GetUnAssignedAttributes' ,'0' , 2,'Dec  6 2017  2:56PM' , 2,'Dec  6 2017  2:56PM'  ) ,
(  2961,'PIM' ,'ProductAttributeFamily' ,'AssignAttributes' ,'0' , 2,'Dec  6 2017  3:07PM' , 2,'Dec  6 2017  3:07PM'  ) ,
(  2962,'PIM' ,'ProductAttributeFamily' ,'UnAssignAttributes' ,'0' , 2,'Dec  6 2017  3:59PM' , 2,'Dec  6 2017  3:59PM'  ) ,
(  2963,'PIM' ,'CategoryAttributeFamily' ,'GetUnAssignedAttributes' ,'0' , 2,'Dec  6 2017  4:11PM' , 2,'Dec  6 2017  4:11PM'  ) ,
(  2964,'PIM' ,'CategoryAttributeFamily' ,'AssignAttributes' ,'0' , 2,'Dec  6 2017  4:12PM' , 2,'Dec  6 2017  4:12PM'  ) ,
(  2965,'PIM' ,'CategoryAttributeFamily' ,'UnAssignAttributes' ,'0' , 2,'Dec  6 2017  4:13PM' , 2,'Dec  6 2017  4:13PM'  ) ,
(  2966,null,'GlobalAttribute' ,'IsAttributeCodeExist' ,'0' , 2,'Dec  6 2017  4:39PM' , 2,'Dec  6 2017  4:39PM'  ) ,
(  2967,null,'GlobalAttribute' ,'SwatchType' ,'0' , 2,'Dec  6 2017  4:43PM' , 2,'Dec  6 2017  4:43PM'  ) ,
(  2968,null,'GlobalAttribute' ,'AssociateGroupEntity' ,'0' , 2,'Dec  6 2017  4:51PM' , 2,'Dec  6 2017  4:51PM'  ) ,
(  2969,null,'GlobalAttribute' ,'AssignedEntityAttributeGroupList' ,'0' , 2,'Dec  6 2017  5:00PM' , 2,'Dec  6 2017  5:00PM'  ) ,
(  2970,null,'GlobalAttribute' ,'GetUnAssignedAttributeEntityGroups' ,'0' , 2,'Dec  6 2017  5:00PM' , 2,'Dec  6 2017  5:00PM'  ) ,
(  2971,null,'GlobalAttribute' ,'AssignAttributeEntityToGroups' ,'0' , 2,'Dec  6 2017  5:04PM' , 2,'Dec  6 2017  5:04PM'  ) ,
(  2972,null,'GlobalAttribute' ,'UnAssignAttributeGroups' ,'0' , 2,'Dec  6 2017  5:05PM' , 2,'Dec  6 2017  5:05PM'  ) ,
(  2973,null,'GlobalAttribute' ,'UpdateAttributeGroupDisplayOrder' ,'0' , 2,'Dec  6 2017  5:09PM' , 2,'Dec  6 2017  5:09PM'  ) ,
(  2975,null,'GlobalAttribute' ,'AssignedGlobalAttributes' ,'0' , 2,'Dec  6 2017  5:16PM' , 2,'Dec  6 2017  5:16PM'  ) ,
(  2976,null,'GlobalAttribute' ,'SaveEntityDetails' ,'0' , 2,'Dec  6 2017  5:17PM' , 2,'Dec  6 2017  5:17PM'  ) ,
(  2977,null,'GlobalAttribute' ,'GetTabStructure' ,'0' , 2,'Dec  6 2017  5:34PM' , 2,'Dec  6 2017  5:34PM'  ) ,
(  2978,null,'GlobalAttributeGroup' ,'UpdateAttributeDisplayOrder' ,'0' , 2,'Dec  6 2017  5:43PM' , 2,'Dec  6 2017  5:43PM'  ) ,
(  2979,null,'BlogNews' ,'BlogNewsList' ,'0' , 2,'Dec  6 2017  5:51PM' , 2,'Dec  6 2017  5:51PM'  ) ,
(  2980,null,'BlogNews' ,'DeleteBlogNews' ,'0' , 2,'Dec  6 2017  5:52PM' , 2,'Dec  6 2017  5:52PM'  ) ,
(  2981,null,'BlogNews' ,'ActiveDeactiveBlogNews' ,'0' , 2,'Dec  6 2017  5:53PM' , 2,'Dec  6 2017  5:53PM'  ) ,
(  2982,null,'BlogNews' ,'GetPortalList' ,'0' , 2,'Dec  6 2017  5:53PM' , 2,'Dec  6 2017  5:53PM'  ) ,
(  2983,null,'BlogNews' ,'GetContentPageList' ,'0' , 2,'Dec  6 2017  5:54PM' , 2,'Dec  6 2017  5:54PM'  ) ,
(  2984,null,'BlogNews' ,'EditBlogNewsComment' ,'0' , 2,'Dec  6 2017  5:56PM' , 2,'Dec  6 2017  5:56PM'  ) ,
(  2985,null,'BlogNews' ,'DeleteBlogNewsComment' ,'0' , 2,'Dec  6 2017  5:57PM' , 2,'Dec  6 2017  5:57PM'  ) ,
(  2986,null,'BlogNews' ,'ApproveDisapproveBlogNewsComment' ,'0' , 2,'Dec  6 2017  5:59PM' , 2,'Dec  6 2017  5:59PM'  ) ,
(  2987,null,'SearchConfiguration' ,'CreateSearchSynonyms' ,'0' , 2,'Dec  6 2017  6:15PM' , 2,'Dec  6 2017  6:15PM'  ) ,
(  2988,null,'SearchConfiguration' ,'EditSearchSynonyms' ,'0' , 2,'Dec  6 2017  6:16PM' , 2,'Dec  6 2017  6:16PM'  ) ,
(  2989,null,'SearchConfiguration' ,'GetSearchSynonymsList' ,'0' , 2,'Dec  6 2017  6:17PM' , 2,'Dec  6 2017  6:17PM'  ) ,
(  2990,null,'SearchConfiguration' ,'DeleteSearchSynonyms' ,'0' , 2,'Dec  6 2017  6:19PM' , 2,'Dec  6 2017  6:19PM'  ) ,
(  2991,null,'SearchConfiguration' ,'WriteSearchFile' ,'0' , 2,'Dec  6 2017  6:38PM' , 2,'Dec  6 2017  6:38PM'  ) ,
(  2992,null,'SearchConfiguration' ,'GetCatalogKeywordsList' ,'0' , 2,'Dec  6 2017  6:39PM' , 2,'Dec  6 2017  6:39PM'  ) ,
(  2993,null,'SearchConfiguration' ,'CreateSearchKeywordsRedirect' ,'0' , 2,'Dec  6 2017  6:40PM' , 2,'Dec  6 2017  6:40PM'  ) ,
(  2994,null,'SearchConfiguration' ,'EditSearchKeywordsRedirect' ,'0' , 2,'Dec  6 2017  6:45PM' , 2,'Dec  6 2017  6:45PM'  ) ,
(  2995,null,'SearchConfiguration' ,'DeleteSearchKeywordsRedirect' ,'0' , 2,'Dec  6 2017  6:46PM' , 2,'Dec  6 2017  6:46PM'  ) ,
(  2996,null,'Account' ,'GetCatalogList' ,'0' , 2,'Dec  6 2017  6:51PM' , 2,'Dec  6 2017  6:51PM'  ) ,
(  2997,null,'Store' ,'GenerateImages' ,'0' , 2,'Dec  6 2017  7:09PM' , 2,'Dec  6 2017  7:09PM'  ) ,
(  2998,null,'Store' ,'TestAvalaraConnection' ,'0' , 2,'Dec  6 2017  7:14PM' , 2,'Dec  6 2017  7:14PM'  ) ,
(  2999,null,'ProductFeed' ,'List' ,'0' , 2,'Dec  6 2017  7:18PM' , 2,'Dec  6 2017  7:18PM'  ) ,
(  3000,null,'ProductFeed' ,'Delete' ,'0' , 2,'Dec  6 2017  7:21PM' , 2,'Dec  6 2017  7:21PM'  ) ,
(  3001,null,'ProductFeed' ,'GenerateProductFeedLink' ,'0' , 2,'Dec  6 2017  7:25PM' , 2,'Dec  6 2017  7:25PM'  ) ,
(  3002,null,'Payment' ,'IsPaymentNameExist' ,'0' , 2,'Dec  6 2017  7:31PM' , 2,'Dec  6 2017  7:31PM'  ) ,
(  3003,null,'WebSite' ,'GetUnAssociatedBrandList' ,'0' , 2,'Dec  6 2017  7:45PM' , 2,'Dec  6 2017  7:45PM'  ) ,
(  3004,null,'Account' ,'GetCatalog' ,'0' , 2,'Dec  6 2017  8:13PM' , 2,'Dec  6 2017  8:13PM'  ) ,
(  3006,null,'Account' ,'SetDefaultProfile' ,'0' , 2,'Dec  7 2017 11:14AM' , 2,'Dec  7 2017 11:14AM'  ) ,
(  3007,'PIM' ,'Products' ,'AddDownloadableProductKeys' ,'0' , 2,'Dec  7 2017 11:14AM' , 2,'Dec  7 2017 11:14AM'  ) ,
(  3009,'PIM' ,'Products' ,'DeleteDownloadableProductKeys' ,'0' , 2,'Dec  7 2017 11:14AM' , 2,'Dec  7 2017 11:14AM'  ) ,
(  3010,'PIM' ,'Products' ,'UpdateDownloadableProductKey' ,'0' , 2,'Dec  7 2017 11:14AM' , 2,'Dec  7 2017 11:14AM'  ) ,
(  3018,null,'Account' ,'IsAccountNameExists' ,'0' , 2,'Dec  8 2017  6:42PM' , 2,'Dec  8 2017  6:42PM'  ) ,
(  3019,null,'ArtifiOrder' ,'AddEditArtifiDesign' ,'1' , 2,'Dec  8 2017  5:29PM' , 2,'Dec  8 2017  5:29PM'  ) ,
(  3020,null,'ArtifiOrder' ,'GetArtifiCredentials' ,'1' , 2,'Dec  8 2017  6:37PM' , 2,'Dec  8 2017  6:37PM'  ) ,
(  3021,null,'ArtifiPortal' ,'CreateEditCustomizationSetting' ,'0' , 2,'Dec  8 2017  4:02PM' , 2,'Dec  8 2017  4:02PM'  ) ,
(  3022,null,'ArtifiPortal' ,'GetProductCustomizationSetting' ,'0' , 2,'Dec  8 2017  4:01PM' , 2,'Dec  8 2017  4:01PM'  ) ,
(  3023,null,'Brand' ,'IsBrandSEOFriendlyPageNameExist' ,'0' , 2,'Dec  8 2017  4:16PM' , 2,'Dec  8 2017  4:16PM'  ) ,
(  3024,null,'Store' ,'SaveAnalytics' ,'0' , 2,'Dec  8 2017  4:07PM' , 2,'Dec  8 2017  4:07PM'  ) ,
(  3025,null,'Store' ,'SaveRobotsTxt' ,'0' , 2,'Dec  8 2017  4:09PM' , 2,'Dec  8 2017  4:09PM'  ) ,
(  3026,null,'User' ,'IsUserNameExists' ,'0' , 2,'Dec  8 2017  6:47PM' , 2,'Dec  8 2017  6:47PM'  ) ,
(  3027,null,'WebSite' ,'AssociateBrands' ,'0' , 2,'Dec  8 2017  4:21PM' , 2,'Dec  8 2017  4:21PM'  ) ,
(  3028,null,'Store' ,'SetPoratlDefaultTax' ,'0' , 2,'Dec 13 2017  4:24PM' , 2,'Dec 13 2017  4:24PM'  ) ,
(  3029,null,'Order' ,'PrintPackagingSlip' ,'0' , 2,'Dec 13 2017  5:02PM' , 2,'Dec 13 2017  5:02PM'  ) ,
(  3030,null,'RoleAndAccessRight' ,'ManagePermission' ,'0' , 2,'Dec 13 2017  6:56PM' , 2,'Dec 13 2017  6:56PM'  ) ,
(  3031,null,'Order' ,'ResendOrderLineItemConfirmMail' ,'0' , 2,'Dec 14 2017  2:09PM' , 2,'Dec 14 2017  2:09PM'  ) ,
(  3032,null,'Order' ,'GetPaymentById' ,'0' , 2,'Dec 14 2017  2:18PM' , 2,'Dec 14 2017  2:18PM'  ) ,
(  3034,null,'Order' ,'GetEncryptedAmount' ,'0' , 2,'Dec 14 2017  2:52PM' , 2,'Dec 14 2017  2:52PM'  ) ,
(  3035,null,'Order' ,'SubmitEditOrderpayment' ,'0' , 2,'Dec 14 2017  2:55PM' , 2,'Dec 14 2017  2:55PM'  ) ,
(  3036,null,'Order' ,'CalculateShippingInManage' ,'0' , 2,'Dec 14 2017  3:30PM' , 2,'Dec 14 2017  3:30PM'  ) ,
(  3037,null,'Promotion' ,'AssociateBrandToPromotion' ,'0' , 2,'Dec 15 2017 11:46AM' , 2,'Dec 15 2017 11:46AM'  ) ,
(  3038,null,'GlobalAttribute' ,'IsGlobalAttributeValueUnique' ,'0' , 2,'Dec 15 2017  6:26PM' , 2,'Dec 15 2017  6:26PM'  ) ,
(  3039,null,'GeneralSetting' ,'UpdateCacheStatus' ,'0' , 2,'Dec 18 2017 12:00AM' , 2,'Dec 18 2017 12:00AM'  ) ,
(  3040,'Search' ,'Search' ,'CreateSearchProfile' ,'0' , 2,'Dec 18 2017  7:21PM' , 2,'Dec 18 2017  7:21PM'  ) ,
(  3041,'Search' ,'Search' ,'GetTabStructureForProfile' ,'0' , 2,'Dec 18 2017  7:22PM' , 2,'Dec 18 2017  7:22PM'  ) ,
(  3042,'Search' ,'Search' ,'GetSearchProfiles' ,'0' , 2,'Dec 22 2017  3:03PM' , 2,'Dec 22 2017  3:03PM'  ) ,
(  3059,'Search' ,'Search' ,'GetFeaturesByQueryId' ,'0' , 2,'Dec 27 2017  4:47PM' , 2,'Dec 27 2017  4:47PM'  ) ,
(  3060,'Search' ,'Search' ,'GetCatalogList' ,'0' , 2,'Dec 27 2017  4:48PM' , 2,'Dec 27 2017  4:48PM'  ) ,
(  3061,'Search' ,'Search' ,'SetDefaultSearchProfile' ,'0' , 2,'Dec 27 2017  4:48PM' , 2,'Dec 27 2017  4:48PM'  ) ,
(  3062,'Search' ,'Search' ,'GetCatalogBasedAttributes' ,'0' , 2,'Dec 27 2017  4:48PM' , 2,'Dec 27 2017  4:48PM'  ) ,
(  3063,'Search' ,'Search' ,'GetAssociatedUnAssociatedCatalogAttributes' ,'0' , 2,'Dec 27 2017  4:49PM' , 2,'Dec 27 2017  4:49PM'  ) ,
(  3064,'Search' ,'Search' ,'AssociateAttributesToProfile' ,'0' , 2,'Dec 27 2017  4:49PM' , 2,'Dec 27 2017  4:49PM'  ) ,
(  3065,'Search' ,'Search' ,'UnAssociateAttributesFromProfile' ,'0' , 2,'Dec 27 2017  4:49PM' , 2,'Dec 27 2017  4:49PM'  ) ,
(  3066,'Search' ,'Search' ,'GetSearchProfilesTriggers' ,'0' , 2,'Dec 27 2017  4:49PM' , 2,'Dec 27 2017  4:49PM'  ) ,
(  3067,'Search' ,'Search' ,'CreateSearchProfileTriggers' ,'0' , 2,'Dec 27 2017  4:50PM' , 2,'Dec 27 2017  4:50PM'  ) ,
(  3068,'Search' ,'Search' ,'EditSearchProfileTrigger' ,'0' , 2,'Dec 27 2017  4:50PM' , 2,'Dec 27 2017  4:50PM'  ) ,
(  3069,'Search' ,'Search' ,'GetSearchProfilePortalList' ,'0' , 2,'Dec 27 2017  4:50PM' , 2,'Dec 27 2017  4:50PM'  ) ,
(  3070,'Search' ,'Search' ,'AssociatePortalToSearchProfile' ,'0' , 2,'Dec 27 2017  4:51PM' , 2,'Dec 27 2017  4:51PM'  ) ,
(  3071,'Search' ,'Search' ,'UnAssociatePortalToSearchProfile' ,'0' , 2,'Dec 27 2017  4:51PM' , 2,'Dec 27 2017  4:51PM'  ) ,
(  3072,'Search' ,'Search' ,'GetUnAssociatedPortalList' ,'0' , 2,'Dec 27 2017  4:51PM' , 2,'Dec 27 2017  4:51PM'  ) ,
(  3073,'Search' ,'Search' ,'DeleteSearchTriggers' ,'0' , 2,'Dec 27 2017  4:51PM' , 2,'Dec 27 2017  4:51PM'  ) ,
(  3074,'Search' ,'Search' ,'Delete' ,'0' , 2,'Dec 27 2017  4:52PM' , 2,'Dec 27 2017  4:52PM'  ) ,
(  3075,'Search' ,'Search' ,'GetSearchProduct' ,'0' , 2,'Dec 27 2017  4:52PM' , 2,'Dec 27 2017  4:52PM'  ) ,
(  3078,'Search' ,'Search' ,'Edit' ,'0' , 2,'Dec 27 2017  6:10PM' , 2,'Dec 27 2017  6:10PM'  ) ,
(  3079,null,'Store' ,'SetPortalDefaultTax' ,'0' , 2,'Dec 29 2017  3:53PM' , 2,'Dec 29 2017  3:53PM'  ) ,
(  3081,null,'Inventory' ,'AddDownloadableProductKeys' ,'0' , 2,'Jan  2 2018 11:12AM' , 2,'Jan  2 2018 11:12AM'  ) ,
(  3082,null,'Inventory' ,'GetDownloadableProductKeys' ,'0' , 2,'Jan  2 2018 11:13AM' , 2,'Jan  2 2018 11:13AM'  ) ,
(  3083,null,'Inventory' ,'DeleteDownloadableProductKeys' ,'0' , 2,'Jan  2 2018 11:13AM' , 2,'Jan  2 2018 11:13AM'  ) ,
(  3084,null,'Inventory' ,'UpdateDownloadableProductKey' ,'0' , 2,'Jan  2 2018 11:13AM' , 2,'Jan  2 2018 11:13AM'  ) ,
(  3085,null,'Dashboard' ,'GetDashboardSalesDetails' ,'0' , 2,'Jan  2 2018 11:51AM' , 2,'Jan  2 2018 11:51AM'  ) ,
(  3093,null,'GeneralSetting' ,'GetWebstoreDomains' ,'0' , 2,'Jan  3 2018 12:00AM' , 2,'Jan  3 2018 12:00AM'  ) ,
(  3094,null,'SearchConfiguration' ,'DeleteIndex' ,'0' , 2,'Jan  3 2018 12:00AM' , 2,'Jan  3 2018 12:00AM'  ) ,
(  3095,null,'GeneralSetting' ,'RefreshCache' ,'0' , 2,'Dec 27 2017  5:24PM' , 2,'Dec 27 2017  5:24PM'  ) ,
(  3096,'PIM' ,'Catalog' ,'EditScheduler' ,'0' , 2,'Jan 10 2018 11:30AM' , 2,'Jan 10 2018 11:30AM'  ) 
 insert into _TempZnodeActionMenu ( [ControllerName],[ActionName],[MenuName],ParentMenuName,[ActionMenuId]) 
 values 
 ( 'CategoryAttributeFamily' ,'AssignedPIMAttributes' ,'Attribute Families' ,'Category Attributes' , 3521 ),
 ( 'User' ,'CustomerDelete' ,'Admin Users' ,'Admin' , 3568 ),
 ( 'User' ,'CustomerDelete' ,'Admin Users' ,'Admin' , 3579 ),
 ( 'SearchConfiguration' ,'GetPortalList' ,'Site Search' ,'Marketing' , 3546 ),
 ( 'SearchConfiguration' ,'GetCatalogList' ,'Site Search' ,'Marketing' , 3547 ),
 ( 'GeneralSetting' ,'GetCacheManagementData' ,'Global Settings' ,'Admin' , 3488 ),
 ( 'Dashboard' ,'GlobalSearch' ,'Dashboard' ,null, 3566 ),
 ( 'GlobalAttribute' ,'Create' ,'Attributes' ,'Global Attributes' , 3489 ),
 ( 'GlobalAttribute' ,'Edit' ,'Attributes' ,'Global Attributes' , 3490 ),
 ( 'GlobalAttributeGroup' ,'Create' ,'Attribute Groups' ,'Global Attributes' , 3491 ),
 ( 'GlobalAttributeGroup' ,'Edit' ,'Attribute Groups' ,'Global Attributes' , 3492 ),
 ( 'GlobalAttributeGroup' ,'GetTabStructure' ,'Attribute Groups' ,'Global Attributes' , 3494 ),
 ( 'GlobalAttributeGroup' ,'AssociateAttributes' ,'Attribute Groups' ,'Global Attributes' , 3495 ),
 ( 'GlobalAttributeGroup' ,'CreateAttributeGroupLocale' ,'Attribute Groups' ,'Global Attributes' , 3496 ),
 ( 'GlobalAttributeGroup' ,'Delete' ,'Attribute Groups' ,'Global Attributes' , 3497 ),
 ( 'GlobalAttributeGroup' ,'GetAssignedAttribute' ,'Attribute Groups' ,'Global Attributes' , 3498 ),
 ( 'GlobalAttributeGroup' ,'IsGroupCodeExist' ,'Attribute Groups' ,'Global Attributes' , 3499 ),
 ( 'GlobalAttributeGroup' ,'List' ,'Attribute Groups' ,'Global Attributes' , 3500 ),
 ( 'GlobalAttributeGroup' ,'RemoveAssociatedAttribute' ,'Attribute Groups' ,'Global Attributes' , 3501 ),
 ( 'GlobalAttributeGroup' ,'GetUnAssignedAttribute' ,'Attribute Groups' ,'Global Attributes' , 3502 ),
 ( 'GlobalAttribute' ,'Attribute' ,'Attributes' ,'Global Attributes' , 3503 ),
 ( 'GlobalAttribute' ,'DefaultValues' ,'Attributes' ,'Global Attributes' , 3504 ),
 ( 'GlobalAttribute' ,'Delete' ,'Attributes' ,'Global Attributes' , 3505 ),
 ( 'GlobalAttribute' ,'DeleteDefaultValues' ,'Attributes' ,'Global Attributes' , 3506 ),
 ( 'GlobalAttribute' ,'IsGroupCodeExist' ,'Attributes' ,'Global Attributes' , 3507 ),
 ( 'GlobalAttribute' ,'List' ,'Attributes' ,'Global Attributes' , 3508 ),
 ( 'GlobalAttribute' ,'IsAttributeDefaultValueCodeExist' ,'Attributes' ,'Global Attributes' , 3509 ),
 ( 'GlobalAttribute' ,'Locale' ,'Attributes' ,'Global Attributes' , 3510 ),
 ( 'GlobalAttribute' ,'SaveDefaultValues' ,'Attributes' ,'Global Attributes' , 3511 ),
 ( 'GlobalAttribute' ,'ValidationRule' ,'Attributes' ,'Global Attributes' , 3512 ),
 ( 'GlobalAttribute' ,'GetEntityAttributeDetails' ,'Stores' ,'Stores & Reps' , 3513 ),
 ( 'ProductAttributeFamily' ,'GetUnAssignedAttributes' ,'Product Attributes' ,'PIM' , 3516 ),
 ( 'ProductAttributeFamily' ,'GetUnAssignedAttributes' ,'Attribute Families' ,'Product Attributes' , 3517 ),
 ( 'ProductAttributeFamily' ,'AssignAttributes' ,'Product Attributes' ,'PIM' , 3518 ),
 ( 'ProductAttributeFamily' ,'AssignAttributes' ,'Attribute Families' ,'Product Attributes' , 3519 ),
 ( 'ProductAttributeFamily' ,'UnAssignAttributes' ,'Attribute Families' ,'Product Attributes' , 3520 ),
 ( 'CategoryAttributeFamily' ,'GetUnAssignedAttributes' ,'Attribute Families' ,'Category Attributes' , 3522 ),
 ( 'CategoryAttributeFamily' ,'AssignAttributes' ,'Attribute Families' ,'Category Attributes' , 3523 ),
 ( 'CategoryAttributeFamily' ,'UnAssignAttributes' ,'Attribute Families' ,'Category Attributes' , 3524 ),
 ( 'GlobalAttribute' ,'IsAttributeCodeExist' ,'Attributes' ,'Global Attributes' , 3525 ),
 ( 'GlobalAttribute' ,'SwatchType' ,'Attributes' ,'Global Attributes' , 3526 ),
 ( 'GlobalAttribute' ,'AssociateGroupEntity' ,'Entity Attributes' ,'Global Attributes' , 3527 ),
 ( 'GlobalAttribute' ,'AssignedEntityAttributeGroupList' ,'Entity Attributes' ,'Global Attributes' , 3528 ),
 ( 'GlobalAttribute' ,'GetUnAssignedAttributeEntityGroups' ,'Entity Attributes' ,'Global Attributes' , 3529 ),
 ( 'GlobalAttribute' ,'AssignAttributeEntityToGroups' ,'Entity Attributes' ,'Global Attributes' , 3530 ),
 ( 'GlobalAttribute' ,'UnAssignAttributeGroups' ,'Entity Attributes' ,'Global Attributes' , 3531 ),
 ( 'GlobalAttribute' ,'UpdateAttributeGroupDisplayOrder' ,'Entity Attributes' ,'Global Attributes' , 3532 ),
 ( 'GlobalAttribute' ,'AssignedGlobalAttributes' ,'Entity Attributes' ,'Global Attributes' , 3534 ),
 ( 'GlobalAttribute' ,'SaveEntityDetails' ,'Entity Attributes' ,'Global Attributes' , 3535 ),
 ( 'GlobalAttribute' ,'GetTabStructure' ,'Entity Attributes' ,'Global Attributes' , 3536 ),
 ( 'GlobalAttributeGroup' ,'UpdateAttributeDisplayOrder' ,'Attribute Groups' ,'Global Attributes' , 3537 ),
 ( 'BlogNews' ,'BlogNewsList' ,'Blogs & News' ,'CMS' , 3538 ),
 ( 'BlogNews' ,'DeleteBlogNews' ,'Blogs & News' ,'CMS' , 3539 ),
 ( 'BlogNews' ,'ActiveDeactiveBlogNews' ,'Blogs & News' ,'CMS' , 3540 ),
 ( 'BlogNews' ,'GetPortalList' ,'Blogs & News' ,'CMS' , 3541 ),
 ( 'BlogNews' ,'GetContentPageList' ,'Blogs & News' ,'CMS' , 3542 ),
 ( 'BlogNews' ,'EditBlogNewsComment' ,'Blogs & News' ,'CMS' , 3543 ),
 ( 'BlogNews' ,'DeleteBlogNewsComment' ,'Blogs & News' ,'CMS' , 3544 ),
 ( 'BlogNews' ,'ApproveDisapproveBlogNewsComment' ,'Blogs & News' ,'CMS' , 3545 ),
 ( 'SearchConfiguration' ,'CreateSearchSynonyms' ,'Site Search' ,'Marketing' , 3548 ),
 ( 'SearchConfiguration' ,'EditSearchSynonyms' ,'Site Search' ,'Marketing' , 3549 ),
 ( 'SearchConfiguration' ,'GetSearchSynonymsList' ,'Site Search' ,'Marketing' , 3550 ),
 ( 'SearchConfiguration' ,'DeleteSearchSynonyms' ,'Site Search' ,'Marketing' , 3551 ),
 ( 'SearchConfiguration' ,'WriteSearchFile' ,'Site Search' ,'Marketing' , 3552 ),
 ( 'SearchConfiguration' ,'GetCatalogKeywordsList' ,'Site Search' ,'Marketing' , 3553 ),
 ( 'SearchConfiguration' ,'CreateSearchKeywordsRedirect' ,'Site Search' ,'Marketing' , 3554 ),
 ( 'SearchConfiguration' ,'EditSearchKeywordsRedirect' ,'Site Search' ,'Marketing' , 3555 ),
 ( 'SearchConfiguration' ,'DeleteSearchKeywordsRedirect' ,'Site Search' ,'Marketing' , 3556 ),
 ( 'Account' ,'GetCatalogList' ,'Accounts' ,'Customers' , 3557 ),
 ( 'Store' ,'GenerateImages' ,'Stores' ,'Stores & Reps' , 3558 ),
 ( 'Store' ,'TestAvalaraConnection' ,'Stores' ,'Stores & Reps' , 3559 ),
 ( 'ProductFeed' ,'List' ,'Product Feeds' ,'Admin' , 3560 ),
 ( 'ProductFeed' ,'Delete' ,'Product Feeds' ,'Admin' , 3561 ),
 ( 'ProductFeed' ,'GenerateProductFeedLink' ,'Product Feeds' ,'Admin' , 3562 ),
 ( 'Payment' ,'IsPaymentNameExist' ,'Payment Methods' ,'Admin' , 3563 ),
 ( 'WebSite' ,'GetUnAssociatedBrandList' ,'Stores' ,'Stores & Reps' , 3564 ),
 ( 'Account' ,'GetCatalog' ,'Accounts' ,'Customers' , 3565 ),
 ( 'Account' ,'SetDefaultProfile' ,'Accounts' ,'Customers' , 3567 ),
 ( 'Products' ,'DeleteDownloadableProductKeys' ,'Products' ,'PIM' , 3593 ),
 ( 'Account' ,'IsAccountNameExists' ,'Accounts' ,'Customers' , 3577 ),
 ( 'ArtifiOrder' ,'AddEditArtifiDesign' ,'OMS' ,null, 3575 ),
 ( 'ArtifiOrder' ,'GetArtifiCredentials' ,'OMS' ,null, 3576 ),
 ( 'ArtifiPortal' ,'CreateEditCustomizationSetting' ,'Stores' ,'Stores & Reps' , 3570 ),
 ( 'ArtifiPortal' ,'GetProductCustomizationSetting' ,'Stores' ,'Stores & Reps' , 3569 ),
 ( 'Brand' ,'IsBrandSEOFriendlyPageNameExist' ,'Brands' ,'PIM' , 3573 ),
 ( 'Store' ,'SaveAnalytics' ,'Stores' ,'Stores & Reps' , 3571 ),
 ( 'Store' ,'SaveRobotsTxt' ,'Stores' ,'Stores & Reps' , 3572 ),
 ( 'User' ,'IsUserNameExists' ,'Accounts' ,'Customers' , 3578 ),
 ( 'WebSite' ,'AssociateBrands' ,'Stores' ,'Stores & Reps' , 3574 ),
 ( 'Store' ,'SetPoratlDefaultTax' ,'Stores & Reps' ,null, 3580 ),
 ( 'Order' ,'PrintPackagingSlip' ,'Orders' ,'OMS' , 3581 ),
 ( 'RoleAndAccessRight' ,'ManagePermission' ,'Menu List' ,'Admin' , 3582 ),
 ( 'Order' ,'ResendOrderLineItemConfirmMail' ,'Orders' ,'OMS' , 3583 ),
 ( 'Order' ,'GetPaymentById' ,'Orders' ,'OMS' , 3584 ),
 ( 'Order' ,'GetEncryptedAmount' ,'Orders' ,'OMS' , 3586 ),
 ( 'Order' ,'SubmitEditOrderpayment' ,'Orders' ,'OMS' , 3587 ),
 ( 'Order' ,'CalculateShippingInManage' ,'Orders' ,'OMS' , 3588 ),
 ( 'Promotion' ,'AssociateBrandToPromotion' ,'Promotions and Coupons' ,'Marketing' , 3589 ),
 ( 'GlobalAttribute' ,'IsGlobalAttributeValueUnique' ,'Attributes' ,'Global Attributes' , 3590 ),
 ( 'Search' ,'CreateSearchProfile' ,'Site Search' ,'Marketing' , 3591 ),
 ( 'Search' ,'GetTabStructureForProfile' ,'Site Search' ,'Marketing' , 3592 ),
 ( 'Search' ,'GetSearchProfiles' ,'Site Search' ,'Marketing' , 3594 ),
 ( 'Search' ,'GetFeaturesByQueryId' ,'Site Search' ,'Marketing' , 3610 ),
 ( 'Search' ,'GetCatalogList' ,'Site Search' ,'Marketing' , 3611 ),
 ( 'Search' ,'SetDefaultSearchProfile' ,'Site Search' ,'Marketing' , 3612 ),
 ( 'Search' ,'GetCatalogBasedAttributes' ,'Site Search' ,'Marketing' , 3613 ),
 ( 'Search' ,'GetAssociatedUnAssociatedCatalogAttributes' ,'Site Search' ,'Marketing' , 3614 ),
 ( 'Search' ,'AssociateAttributesToProfile' ,'Site Search' ,'Marketing' , 3615 ),
 ( 'Search' ,'UnAssociateAttributesFromProfile' ,'Site Search' ,'Marketing' , 3616 ),
 ( 'Search' ,'GetSearchProfilesTriggers' ,'Site Search' ,'Marketing' , 3617 ),
 ( 'Search' ,'CreateSearchProfileTriggers' ,'Site Search' ,'Marketing' , 3618 ),
 ( 'Search' ,'EditSearchProfileTrigger' ,'Site Search' ,'Marketing' , 3619 ),
 ( 'Search' ,'GetSearchProfilePortalList' ,'Site Search' ,'Marketing' , 3620 ),
 ( 'Search' ,'AssociatePortalToSearchProfile' ,'Site Search' ,'Marketing' , 3621 ),
 ( 'Search' ,'UnAssociatePortalToSearchProfile' ,'Site Search' ,'Marketing' , 3622 ),
 ( 'Search' ,'GetUnAssociatedPortalList' ,'Site Search' ,'Marketing' , 3623 ),
 ( 'Search' ,'DeleteSearchTriggers' ,'Site Search' ,'Marketing' , 3624 ),
 ( 'Search' ,'Delete' ,'Site Search' ,'Marketing' , 3625 ),
 ( 'Search' ,'GetSearchProduct' ,'Site Search' ,'Marketing' , 3626 ),
 ( 'Search' ,'Edit' ,'Site Search' ,'Marketing' , 3628 ),
 ( 'Store' ,'SetPortalDefaultTax' ,'Stores' ,'Stores & Reps' , 3629 ),
 ( 'Inventory' ,'AddDownloadableProductKeys' ,'Inventory' ,'OMS' , 3643 ),
 ( 'Inventory' ,'DeleteDownloadableProductKeys' ,'Inventory' ,'OMS' , 3636 ),
 ( 'Inventory' ,'UpdateDownloadableProductKey' ,'Inventory' ,'OMS' , 3637 ),
 ( 'Dashboard' ,'GetDashboardSalesDetails' ,'Dashboard' ,null, 3631 ),
 ( 'GeneralSetting' ,'GetWebstoreDomains' ,'Global Settings' ,'Admin' , 3639 ),
 ( 'GeneralSetting' ,'RefreshCache' ,'Extension Engine' ,'Admin' , 3642 ),
 ( 'Catalog' ,'EditScheduler' ,'Catalogs' ,'PIM' , 3644 ),
( 'Products' ,'GetProductListBySKU' ,'Inventory' ,'OMS' , 3645 )
 insert into _TempZnodeMenuActionsPermission      ( [ControllerName],[ActionName],[MenuName],ParentMenuName,[PermissionsName],[MenuActionsPermissionId] ) 
 values
  ( 'GeneralSetting' ,'List' ,'Admin' ,null,'Read Only' , 8638 )  , 
  ( 'GeneralSetting' ,'Update' ,'Admin' ,null,'Edit' , 8639 )  , 
  ( 'Inventory' ,'EditSKUInventory' ,'Inventory' ,'OMS' ,'Edit' , 8784 )  , 
  ( 'Inventory' ,'ExportInventoryData' ,'Inventory' ,'OMS' ,'Write' , 8785 )  , 
  ( 'Inventory' ,'GetProductSKUList' ,'Inventory' ,'OMS' ,'Read Only' , 8786 )  , 
  ( 'Inventory' ,'InventoryBySKU' ,'Inventory' ,'OMS' ,'Read Only' , 8787 )  , 
  ( 'MediaConfiguration' ,'GetMediaSetting' ,'Media Settings' ,'DAM' ,'Edit' , 8672 )  , 
  ( 'MediaConfiguration' ,'SaveMediaSettings' ,'Media Settings' ,'DAM' ,'Write' , 8673 )  , 
  ( 'ProductAttribute' ,'Attribute' ,'Product Attributes' ,'PIM' ,'Read Only' , 8430 )  , 
  ( 'ProductAttribute' ,'AttributeGroup' ,'Product Attributes' ,'PIM' ,'Read Only' , 8431 )  , 
  ( 'ProductAttribute' ,'Create' ,'Product Attributes' ,'PIM' ,'Read Only' , 8432 )  , 
  ( 'ProductAttribute' ,'DefaultValues' ,'Product Attributes' ,'PIM' ,'Read Only' , 8433 )  , 
  ( 'ProductAttribute' ,'Delete' ,'Product Attributes' ,'PIM' ,'Read Only' , 8434 )  , 
  ( 'ProductAttribute' ,'DeleteDefaultValues' ,'Product Attributes' ,'PIM' ,'Read Only' , 8435 )  , 
  ( 'ProductAttribute' ,'Edit' ,'Product Attributes' ,'PIM' ,'Read Only' , 8436 )  , 
  ( 'ProductAttribute' ,'FrontEndProperties' ,'Product Attributes' ,'PIM' ,'Read Only' , 8437 )  , 
  ( 'ProductAttribute' ,'IsAttributeCodeExist' ,'Product Attributes' ,'PIM' ,'Read Only' , 8438 )  , 
  ( 'ProductAttribute' ,'IsAttributeDefaultValueCodeExist' ,'Product Attributes' ,'PIM' ,'Read Only' , 8439 )  , 
  ( 'ProductAttribute' ,'IsAttributeValueUnique' ,'Product Attributes' ,'PIM' ,'Read Only' , 8440 )  , 
  ( 'ProductAttribute' ,'List' ,'Product Attributes' ,'PIM' ,'Read Only' , 8441 )  , 
  ( 'ProductAttribute' ,'Locale' ,'Product Attributes' ,'PIM' ,'Read Only' , 8442 )  , 
  ( 'ProductAttribute' ,'SaveDefaultValues' ,'Product Attributes' ,'PIM' ,'Read Only' , 8443 )  , 
  ( 'ProductAttribute' ,'ValidationRule' ,'Product Attributes' ,'PIM' ,'Read Only' , 8444 )  , 
  ( 'ProductAttributeFamily' ,'AssignAttributeGroups' ,'Attribute Families' ,'Product Attributes' ,'Write' , 8400 )  , 
  ( 'ProductAttributeFamily' ,'AssignedPIMAttributeGroupList' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8401 )  , 
  ( 'ProductAttributeFamily' ,'AssignedPIMAttributes' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8402 )  , 
  ( 'ProductAttributeFamily' ,'Create' ,'Attribute Families' ,'Product Attributes' ,'Write' , 8403 )  , 
  ( 'ProductAttributeFamily' ,'Delete' ,'Attribute Families' ,'Product Attributes' ,'Delete' , 8404 )  , 
  ( 'ProductAttributeFamily' ,'Edit' ,'Attribute Families' ,'Product Attributes' ,'Edit' , 8405 )  , 
  ( 'ProductAttributeFamily' ,'GetExistingFamilies' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8406 )  , 
  ( 'ProductAttributeFamily' ,'GetTabStructure' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8407 )  , 
  ( 'ProductAttributeFamily' ,'GetUnAssignedAttributeGroups' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8408 )  , 
  ( 'ProductAttributeFamily' ,'IsFamilyCodeExist' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8409 )  , 
  ( 'ProductAttributeFamily' ,'List' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8410 )  , 
  ( 'ProductAttributeFamily' ,'Locale' ,'Attribute Families' ,'Product Attributes' ,'Read Only' , 8411 )  , 
  ( 'ProductAttributeFamily' ,'UnAssignAttributeGroups' ,'Attribute Families' ,'Product Attributes' ,'Delete' , 8412 )  , 
  ( 'Products' ,'AddCustomField' ,'PIM' ,null,'Write' , 8544 )  , 
  ( 'Products' ,'AddCustomField' ,'Products' ,'PIM' ,'Write' , 8591 )  , 
  ( 'Products' ,'AssignedLinkProducts' ,'PIM' ,null,'Read Only' , 8545 )  , 
  ( 'Products' ,'AssignedLinkProducts' ,'Products' ,'PIM' ,'Read Only' , 8592 )  , 
  ( 'Products' ,'AssignLinkProduct' ,'PIM' ,null,'Write' , 8546 )  , 
  ( 'Products' ,'AssignLinkProduct' ,'Products' ,'PIM' ,'Write' , 8593 )  , 
  ( 'Products' ,'AssignPersonalizedAttributes' ,'PIM' ,null,'Write' , 8547 )  , 
  ( 'Products' ,'AssignPersonalizedAttributes' ,'Products' ,'PIM' ,'Write' , 8594 )  , 
  ( 'Products' ,'AssociateAddonGroup' ,'PIM' ,null,'Write' , 8548 )  , 
  ( 'Products' ,'AssociateAddonGroup' ,'Products' ,'PIM' ,'Write' , 8595 )  , 
  ( 'Products' ,'AssociatedAddonProduct' ,'PIM' ,null,'Write' , 8549 )  , 
  ( 'Products' ,'AssociatedAddonProduct' ,'Products' ,'PIM' ,'Write' , 8596 )  , 
  ( 'Products' ,'AssociateProducts' ,'PIM' ,null,'Write' , 8550 )  , 
  ( 'Products' ,'AssociateProducts' ,'Products' ,'PIM' ,'Write' , 8597 )  , 
  ( 'Products' ,'Copy' ,'PIM' ,null,'Write' , 8551 )  , 
  ( 'Products' ,'Copy' ,'Products' ,'PIM' ,'Write' , 8598 )  , 
  ( 'Products' ,'Create' ,'PIM' ,null,'Write' , 8552 )  , 
  ( 'Products' ,'Create' ,'Products' ,'PIM' ,'Write' , 8599 )  , 
  ( 'Products' ,'CustomFields' ,'PIM' ,null,'Read Only' , 8553 )  , 
  ( 'Products' ,'CustomFields' ,'Products' ,'PIM' ,'Read Only' , 8600 )  , 
  ( 'Products' ,'Delete' ,'PIM' ,null,'Delete' , 8554 )  , 
  ( 'Products' ,'Delete' ,'Products' ,'PIM' ,'Delete' , 8601 )  , 
  ( 'Products' ,'DeleteAddonProduct' ,'PIM' ,null,'Delete' , 8555 )  , 
  ( 'Products' ,'DeleteAddonProduct' ,'Products' ,'PIM' ,'Delete' , 8602 )  , 
  ( 'Products' ,'DeleteCustomField' ,'PIM' ,null,'Delete' , 8556 )  , 
  ( 'Products' ,'DeleteCustomField' ,'Products' ,'PIM' ,'Delete' , 8603 )  , 
  ( 'Products' ,'Edit' ,'PIM' ,null,'Edit' , 8557 )  , 
  ( 'Products' ,'Edit' ,'Products' ,'PIM' ,'Edit' , 8604 )  , 
  ( 'Products' ,'EditAssociatedProducts' ,'PIM' ,null,'Edit' , 8558 )  , 
  ( 'Products' ,'EditAssociatedProducts' ,'Products' ,'PIM' ,'Edit' , 8605 )  , 
  ( 'Products' ,'EditCustomField' ,'PIM' ,null,'Edit' , 8559 )  , 
  ( 'Products' ,'EditCustomField' ,'Products' ,'PIM' ,'Edit' , 8606 )  , 
  ( 'Products' ,'GetAssignedPersonalizedAttributes' ,'PIM' ,null,'Read Only' , 8560 )  , 
  ( 'Products' ,'GetAssignedPersonalizedAttributes' ,'Products' ,'PIM' ,'Read Only' , 8607 )  , 
  ( 'Products' ,'GetAssociatedAddonGroups' ,'PIM' ,null,'Read Only' , 8561 )  , 
  ( 'Products' ,'GetAssociatedAddonGroups' ,'Products' ,'PIM' ,'Read Only' , 8608 )  , 
  ( 'Products' ,'GetAssociatedConfigureProducts' ,'PIM' ,null,'Read Only' , 8562 )  , 
  ( 'Products' ,'GetAssociatedConfigureProducts' ,'Products' ,'PIM' ,'Read Only' , 8609 )  , 
  ( 'Products' ,'GetAssociatedProducts' ,'PIM' ,null,'Read Only' , 8563 )  , 
  ( 'Products' ,'GetAssociatedProducts' ,'Products' ,'PIM' ,'Read Only' , 8610 )  , 
  ( 'Products' ,'GetAttributes' ,'PIM' ,null,'Read Only' , 8564 )  , 
  ( 'Products' ,'GetAttributes' ,'Products' ,'PIM' ,'Read Only' , 8611 )  , 
  ( 'Products' ,'GetConfigureAttributeList' ,'PIM' ,null,'Read Only' , 8565 )  , 
  ( 'Products' ,'GetConfigureAttributeList' ,'Products' ,'PIM' ,'Read Only' , 8612 )  , 
  ( 'Products' ,'GetConfigureProductsToBeAssociated' ,'PIM' ,null,'Read Only' , 8566 )  , 
  ( 'Products' ,'GetConfigureProductsToBeAssociated' ,'Products' ,'PIM' ,'Read Only' , 8613 )  , 
  ( 'Products' ,'GetProductListBySKU' ,'PIM' ,null,'Read Only' , 8567 )  , 
  ( 'Products' ,'GetProductListBySKU' ,'Products' ,'PIM' ,'Read Only' , 8614 )  , 
  ( 'Products' ,'GetProductsToBeAssociated' ,'PIM' ,null,'Read Only' , 8568 )  , 
  ( 'Products' ,'GetProductsToBeAssociated' ,'Products' ,'PIM' ,'Read Only' , 8615 )  , 
  ( 'Products' ,'GetSimilarCombination' ,'PIM' ,null,'Read Only' , 8569 )  , 
  ( 'Products' ,'GetSimilarCombination' ,'Products' ,'PIM' ,'Read Only' , 8616 )  , 
  ( 'Products' ,'GetUnAssignedPersonalizedAttributes' ,'PIM' ,null,'Read Only' , 8570 )  , 
  ( 'Products' ,'GetUnAssignedPersonalizedAttributes' ,'Products' ,'PIM' ,'Read Only' , 8617 )  , 
  ( 'Products' ,'GetUnassociatedAddonGroups' ,'PIM' ,null,'Read Only' , 8571 )  , 
  ( 'Products' ,'GetUnassociatedAddonGroups' ,'Products' ,'PIM' ,'Read Only' , 8618 )  , 
  ( 'Products' ,'GetUnassociatedConfigureProducts' ,'PIM' ,null,'Read Only' , 8572 )  , 
  ( 'Products' ,'GetUnassociatedConfigureProducts' ,'Products' ,'PIM' ,'Read Only' , 8619 )  , 
  ( 'Products' ,'GetUnassociatedProducts' ,'PIM' ,null,'Read Only' , 8573 )  , 
  ( 'Products' ,'GetUnassociatedProducts' ,'Products' ,'PIM' ,'Read Only' , 8620 )  , 
  ( 'Products' ,'Index' ,'PIM' ,null,'Read Only' , 8574 )  , 
  ( 'Products' ,'Index' ,'Products' ,'PIM' ,'Read Only' , 8621 )  , 
  ( 'Products' ,'List' ,'PIM' ,null,'Read Only' , 8575 )  , 
  ( 'Products' ,'List' ,'Products' ,'PIM' ,'Read Only' , 8622 )  , 
  ( 'Products' ,'ProductList' ,'PIM' ,null,'Read Only' , 8576 )  , 
  ( 'Products' ,'ProductList' ,'Products' ,'PIM' ,'Read Only' , 8623 )  , 
  ( 'Products' ,'Publish' ,'PIM' ,null,'Write' , 8577 )  , 
  ( 'Products' ,'Publish' ,'Products' ,'PIM' ,'Write' , 8624 )  , 
  ( 'Products' ,'UnAssignLinkProducts' ,'PIM' ,null,'Delete' , 8578 )  , 
  ( 'Products' ,'UnAssignLinkProducts' ,'Products' ,'PIM' ,'Delete' , 8625 )  , 
  ( 'Products' ,'UnassociateAddonProducts' ,'PIM' ,null,'Delete' , 8579 )  , 
  ( 'Products' ,'UnassociateAddonProducts' ,'Products' ,'PIM' ,'Delete' , 8626 )  , 
  ( 'Products' ,'UnassociateProducts' ,'PIM' ,null,'Delete' , 8580 )  , 
  ( 'Products' ,'UnassociateProducts' ,'Products' ,'PIM' ,'Delete' , 8627 )  , 
  ( 'Products' ,'UpdateAssociatedProducts' ,'PIM' ,null,'Edit' , 8581 )  , 
  ( 'Products' ,'UpdateAssociatedProducts' ,'Products' ,'PIM' ,'Edit' , 8628 )  , 
  ( 'Products' ,'UpdateProductAddonAssociation' ,'PIM' ,null,'Edit' , 8582 )  , 
  ( 'Products' ,'UpdateProductAddonAssociation' ,'Products' ,'PIM' ,'Edit' , 8629 )  , 
  ( 'Promotion' ,'AssociateCategoryToPromotion' ,'Promotions and Coupons' ,'Marketing' ,'Write' , 8839 )  , 
  ( 'Promotion' ,'AssociateCatelogToPromotion' ,'Promotions and Coupons' ,'Marketing' ,'Write' , 8840 )  , 
  ( 'Promotion' ,'AssociateProductToPromotion' ,'Promotions and Coupons' ,'Marketing' ,'Write' , 8841 )  , 
  ( 'Promotion' ,'BindCategoryList' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8842 )  , 
  ( 'Promotion' ,'CatalogListByStoreId' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8843 )  , 
  ( 'Promotion' ,'CategoryListByStoreId' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8844 )  , 
  ( 'Promotion' ,'Create' ,'Promotions and Coupons' ,'Marketing' ,'Write' , 8845 )  , 
  ( 'Promotion' ,'Delete' ,'Promotions and Coupons' ,'Marketing' ,'Delete' , 8846 )  , 
  ( 'Promotion' ,'Edit' ,'Promotions and Coupons' ,'Marketing' ,'Edit' , 8847 )  , 
  ( 'Promotion' ,'GetAssociatedCategory' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8848 )  , 
  ( 'Promotion' ,'GetAssociatedCatelog' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8849 )  , 
  ( 'Promotion' ,'GetAssociatedProduct' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8850 )  , 
  ( 'Promotion' ,'GetPromotionDiscountAttribute' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8851 )  , 
  ( 'Promotion' ,'GetPublishedCategories' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8852 )  , 
  ( 'Promotion' ,'GetPublishedCatelogs' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8853 )  , 
  ( 'Promotion' ,'GetPublishedProducts' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8854 )  , 
  ( 'Promotion' ,'IsPromotionNameExist' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8855 )  , 
  ( 'Promotion' ,'List' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8856 )  , 
  ( 'Promotion' ,'ProfileListByStoreId' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8857 )  , 
  ( 'Promotion' ,'UnAssociateCatalogs' ,'Promotions and Coupons' ,'Marketing' ,'Delete' , 8858 )  , 
  ( 'Promotion' ,'UnAssociateCategorys' ,'Promotions and Coupons' ,'Marketing' ,'Delete' , 8859 )  , 
  ( 'MediaConfiguration' ,'MediaConfiguration' ,'Media Settings' ,'DAM' ,'Write' , 8674 )  , 
  ( 'Quote' ,'CheckoutReceipt' ,'Quotes' ,'OMS' ,'Write' , 8527 )  , 
  ( 'MediaConfiguration' ,'GetLocalServerURL' ,'Media Settings' ,'DAM' ,'Edit' , 8675 )  , 
  ( 'Promotion' ,'CheckCouponCodeExist' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8861 )  , 
  ( 'Website' ,'GetAssociatedBrandList' ,'Stores' ,'Stores & Reps' ,'Write' , 8513 )  , 
  ( 'User' ,'CustomerDelete' ,'Admin Users' ,'Admin' ,'Delete' , 8520 )  , 
  ( 'User' ,'CustomerDelete' ,'Admin Users' ,'Admin' ,'Delete' , 8532 )  , 
  ( 'Products' ,'SaveAffiliateData' ,'PIM' ,null,'Read Only' , 8583 )  , 
  ( 'Products' ,'SaveAffiliateData' ,'Products' ,'PIM' ,'Read Only' , 8630 )  , 
  ( 'Promotion' ,'GetPortalList' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8862 )  , 
  ( 'ProductAttributeFamily' ,'UpdateAttributeGroupDisplayOrder' ,'Attribute Families' ,'Product Attributes' ,'Write' , 8413 )  , 
  ( 'Promotion' ,'GetPromotionBrands' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8863 )  , 
  ( 'Promotion' ,'GetAssociatedBrands' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8864 )  , 
  ( 'Products' ,'ActiveDeactiveProducts' ,'PIM' ,null,'Read Only' , 8584 )  , 
  ( 'Products' ,'ActiveDeactiveProducts' ,'Products' ,'PIM' ,'Read Only' , 8631 )  , 
  ( 'Products' ,'PublishProduct' ,'PIM' ,null,'Read Only' , 8585 )  , 
  ( 'Products' ,'PublishProduct' ,'Products' ,'PIM' ,'Read Only' , 8632 )  , 
  ( 'Products' ,'UpdateAndPublishProduct' ,'PIM' ,null,'Read Only' , 8586 )  , 
  ( 'Products' ,'UpdateAndPublishProduct' ,'Products' ,'PIM' ,'Write' , 8633 )  , 
  ( 'BlogNews' ,'AddBlogNews' ,'Blogs & News' ,'CMS' ,'Write' , 8486 )  , 
  ( 'BlogNews' ,'EditBlogNews' ,'Blogs & News' ,'CMS' ,'Write' , 8487 )  , 
  ( 'BlogNews' ,'BlogNewsCommentList' ,'Blogs & News' ,'CMS' ,'Write' , 8493 )  , 
  ( 'Store' ,'GetAnalytics' ,'Stores' ,'Stores & Reps' ,'Write' , 8519 )  , 
  ( 'Store' ,'GetRobotsTxt' ,'Stores' ,'Stores & Reps' ,'Write' , 8518 )  , 
  ( 'GeneralSetting' ,'GetCacheManagementData' ,'Admin' ,null,'Read Only' , 8640 )  , 
  ( 'Dashboard' ,'GlobalSearch' ,'Dashboard' ,null,'Write' , 8516 )  , 
  ( 'GlobalAttribute' ,'Create' ,'Attributes' ,'Global Attributes' ,'Write' , 8452 )  , 
  ( 'GlobalAttribute' ,'Edit' ,'Attributes' ,'Global Attributes' ,'Write' , 8453 )  , 
  ( 'GlobalAttributeGroup' ,'Create' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8475 )  , 
  ( 'GlobalAttributeGroup' ,'Edit' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8476 )  , 
  ( 'GlobalAttributeGroup' ,'GetTabStructure' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8477 )  , 
  ( 'GlobalAttributeGroup' ,'AssociateAttributes' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8483 )  , 
  ( 'GlobalAttributeGroup' ,'CreateAttributeGroupLocale' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8478 )  , 
  ( 'GlobalAttributeGroup' ,'Delete' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8480 )  , 
  ( 'GlobalAttributeGroup' ,'GetAssignedAttribute' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8481 )  , 
  ( 'GlobalAttributeGroup' ,'IsGroupCodeExist' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8479 )  , 
  ( 'GlobalAttributeGroup' ,'List' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8474 )  , 
  ( 'GlobalAttributeGroup' ,'RemoveAssociatedAttribute' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8484 )  , 
  ( 'GlobalAttributeGroup' ,'GetUnAssignedAttribute' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8482 )  , 
  ( 'GlobalAttribute' ,'Attribute' ,'Attributes' ,'Global Attributes' ,'Write' , 8455 )  , 
  ( 'GlobalAttribute' ,'DefaultValues' ,'Attributes' ,'Global Attributes' ,'Write' , 8457 )  , 
  ( 'GlobalAttribute' ,'Delete' ,'Attributes' ,'Global Attributes' ,'Write' , 8454 )  , 
  ( 'GlobalAttribute' ,'DeleteDefaultValues' ,'Attributes' ,'Global Attributes' ,'Write' , 8462 )  , 
  ( 'GlobalAttribute' ,'IsGroupCodeExist' ,'Attributes' ,'Global Attributes' ,'Write' , 8642 )  , 
  ( 'GlobalAttribute' ,'List' ,'Attributes' ,'Global Attributes' ,'Write' , 8451 )  , 
  ( 'GlobalAttribute' ,'IsAttributeDefaultValueCodeExist' ,'Attributes' ,'Global Attributes' ,'Write' , 8461 )  , 
  ( 'GlobalAttribute' ,'Locale' ,'Attributes' ,'Global Attributes' ,'Write' , 8456 )  , 
  ( 'GlobalAttribute' ,'SaveDefaultValues' ,'Attributes' ,'Global Attributes' ,'Write' , 8460 )  , 
  ( 'GlobalAttribute' ,'ValidationRule' ,'Attributes' ,'Global Attributes' ,'Write' , 8458 )  , 
  ( 'GlobalAttribute' ,'GetEntityAttributeDetails' ,'Attributes' ,'Global Attributes' ,'Write' , 8470 )  , 
  ( 'ProductAttributeFamily' ,'GetUnAssignedAttributes' ,'Attribute Families' ,'Product Attributes' ,'Write' , 8414 )  , 
  ( 'ProductAttributeFamily' ,'AssignAttributes' ,'Attribute Families' ,'Product Attributes' ,'Write' , 8445 )  , 
  ( 'ProductAttributeFamily' ,'AssignAttributes' ,'Product Attributes' ,'PIM' ,'Write' , 8446 )  , 
  ( 'ProductAttributeFamily' ,'UnAssignAttributes' ,'Attribute Families' ,'Product Attributes' ,'Write' , 8447 )  , 
  ( 'CategoryAttributeFamily' ,'GetUnAssignedAttributes' ,'Attribute Families' ,'Category Attributes' ,'Write' , 8448 )  , 
  ( 'CategoryAttributeFamily' ,'AssignAttributes' ,'Attribute Families' ,'Category Attributes' ,'Write' , 8449 )  , 
  ( 'CategoryAttributeFamily' ,'UnAssignAttributes' ,'Attribute Families' ,'Category Attributes' ,'Write' , 8450 )  , 
  ( 'GlobalAttribute' ,'IsAttributeCodeExist' ,'Attributes' ,'Global Attributes' ,'Write' , 8459 )  , 
  ( 'GlobalAttribute' ,'SwatchType' ,'Attributes' ,'Global Attributes' ,'Write' , 8463 )  , 
  ( 'GlobalAttribute' ,'AssociateGroupEntity' ,'Attributes' ,'Global Attributes' ,'Write' , 8464 )  , 
  ( 'GlobalAttribute' ,'AssignedEntityAttributeGroupList' ,'Attributes' ,'Global Attributes' ,'Write' , 8465 )  , 
  ( 'GlobalAttribute' ,'GetUnAssignedAttributeEntityGroups' ,'Attributes' ,'Global Attributes' ,'Write' , 8466 )  , 
  ( 'GlobalAttribute' ,'AssignAttributeEntityToGroups' ,'Attributes' ,'Global Attributes' ,'Write' , 8467 )  , 
  ( 'GlobalAttribute' ,'UnAssignAttributeGroups' ,'Attributes' ,'Global Attributes' ,'Write' , 8468 )  , 
  ( 'GlobalAttribute' ,'UpdateAttributeGroupDisplayOrder' ,'Attributes' ,'Global Attributes' ,'Write' , 8469 )  , 
  ( 'GlobalAttribute' ,'AssignedGlobalAttributes' ,'Attributes' ,'Global Attributes' ,'Write' , 8471 )  , 
  ( 'GlobalAttribute' ,'SaveEntityDetails' ,'Attributes' ,'Global Attributes' ,'Write' , 8472 )  , 
  ( 'GlobalAttribute' ,'GetTabStructure' ,'Attributes' ,'Global Attributes' ,'Write' , 8473 )  , 
  ( 'GlobalAttributeGroup' ,'UpdateAttributeDisplayOrder' ,'Attribute Groups' ,'Global Attributes' ,'Write' , 8485 )  , 
  ( 'BlogNews' ,'BlogNewsList' ,'Blogs & News' ,'CMS' ,'Write' , 8488 )  , 
  ( 'BlogNews' ,'DeleteBlogNews' ,'Blogs & News' ,'CMS' ,'Write' , 8489 )  , 
  ( 'BlogNews' ,'ActiveDeactiveBlogNews' ,'Blogs & News' ,'CMS' ,'Write' , 8490 )  , 
  ( 'BlogNews' ,'GetPortalList' ,'Blogs & News' ,'CMS' ,'Write' , 8491 )  , 
  ( 'BlogNews' ,'GetContentPageList' ,'Blogs & News' ,'CMS' ,'Write' , 8492 )  , 
  ( 'BlogNews' ,'EditBlogNewsComment' ,'Blogs & News' ,'CMS' ,'Write' , 8494 )  , 
  ( 'BlogNews' ,'DeleteBlogNewsComment' ,'Blogs & News' ,'CMS' ,'Write' , 8495 )  , 
  ( 'BlogNews' ,'ApproveDisapproveBlogNewsComment' ,'Blogs & News' ,'CMS' ,'Write' , 8496 )  , 
  ( 'SearchConfiguration' ,'CreateSearchSynonyms' ,'Site Search' ,'Marketing' ,'Write' , 8497 )  , 
  ( 'SearchConfiguration' ,'EditSearchSynonyms' ,'Site Search' ,'Marketing' ,'Write' , 8498 )  , 
  ( 'SearchConfiguration' ,'GetSearchSynonymsList' ,'Site Search' ,'Marketing' ,'Write' , 8499 )  , 
  ( 'SearchConfiguration' ,'DeleteSearchSynonyms' ,'Site Search' ,'Marketing' ,'Write' , 8500 )  , 
  ( 'SearchConfiguration' ,'WriteSearchFile' ,'Site Search' ,'Marketing' ,'Write' , 8501 )  , 
  ( 'SearchConfiguration' ,'GetCatalogKeywordsList' ,'Site Search' ,'Marketing' ,'Write' , 8502 )  , 
  ( 'SearchConfiguration' ,'CreateSearchKeywordsRedirect' ,'Site Search' ,'Marketing' ,'Write' , 8503 )  , 
  ( 'SearchConfiguration' ,'EditSearchKeywordsRedirect' ,'Site Search' ,'Marketing' ,'Write' , 8504 )  , 
  ( 'SearchConfiguration' ,'DeleteSearchKeywordsRedirect' ,'Site Search' ,'Marketing' ,'Write' , 8505 )  , 
  ( 'Account' ,'GetCatalogList' ,'Accounts' ,'Customers' ,'Write' , 8506 )  , 
  ( 'Store' ,'GenerateImages' ,'Stores' ,'Stores & Reps' ,'Write' , 8507 )  , 
  ( 'Store' ,'TestAvalaraConnection' ,'Stores' ,'Stores & Reps' ,'Write' , 8508 )  , 
  ( 'ProductFeed' ,'List' ,'Product Feeds' ,'Admin' ,'Write' , 8509 )  , 
  ( 'ProductFeed' ,'Delete' ,'Product Feeds' ,'Admin' ,'Write' , 8510 )  , 
  ( 'ProductFeed' ,'GenerateProductFeedLink' ,'Product Feeds' ,'Admin' ,'Write' , 8511 )  , 
  ( 'Payment' ,'IsPaymentNameExist' ,'Payment Methods' ,'Admin' ,'Write' , 8512 )  , 
  ( 'WebSite' ,'GetUnAssociatedBrandList' ,'Stores' ,'Stores & Reps' ,'Write' , 8514 )  , 
  ( 'Account' ,'GetCatalog' ,'Accounts' ,'Customers' ,'Write' , 8515 )  , 
  ( 'Account' ,'SetDefaultProfile' ,'Accounts' ,'Customers' ,'Write' , 8517 )  , 
  ( 'Products' ,'AddDownloadableProductKeys' ,'PIM' ,null,'Write' , 8587 )  , 
  ( 'Products' ,'AddDownloadableProductKeys' ,'Products' ,'PIM' ,'Write' , 8634 )  , 
  ( 'Products' ,'DeleteDownloadableProductKeys' ,'PIM' ,null,'Delete' , 8589 )  , 
  ( 'Products' ,'DeleteDownloadableProductKeys' ,'Products' ,'PIM' ,'Delete' , 8636 )  , 
  ( 'Products' ,'UpdateDownloadableProductKey' ,'PIM' ,null,'Edit' , 8590 )  , 
  ( 'Products' ,'UpdateDownloadableProductKey' ,'Products' ,'PIM' ,'Edit' , 8637 )  , 
  ( 'Account' ,'IsAccountNameExists' ,'Accounts' ,'Customers' ,'Write' , 8530 )  , 
  ( 'ArtifiOrder' ,'AddEditArtifiDesign' ,'OMS' ,null,'Write' , 8528 )  , 
  ( 'ArtifiOrder' ,'GetArtifiCredentials' ,'OMS' ,null,'Write' , 8529 )  , 
  ( 'ArtifiPortal' ,'CreateEditCustomizationSetting' ,'Stores' ,'Stores & Reps' ,'Write' , 8522 )  , 
  ( 'ArtifiPortal' ,'GetProductCustomizationSetting' ,'Stores' ,'Stores & Reps' ,'Write' , 8521 )  , 
  ( 'Brand' ,'IsBrandSEOFriendlyPageNameExist' ,'Brands' ,'PIM' ,'Write' , 8525 )  , 
  ( 'Store' ,'SaveAnalytics' ,'Stores' ,'Stores & Reps' ,'Write' , 8523 )  , 
  ( 'Store' ,'SaveRobotsTxt' ,'Stores' ,'Stores & Reps' ,'Write' , 8524 )  , 
  ( 'User' ,'IsUserNameExists' ,'Accounts' ,'Customers' ,'Write' , 8531 )  , 
  ( 'WebSite' ,'AssociateBrands' ,'Stores' ,'Stores & Reps' ,'Write' , 8526 )  , 
  ( 'Store' ,'SetPoratlDefaultTax' ,'Stores & Reps' ,null,'Write' , 8533 )  , 
  ( 'Order' ,'PrintPackagingSlip' ,'Orders' ,'OMS' ,'Write' , 8534 )  , 
  ( 'RoleAndAccessRight' ,'ManagePermission' ,'Menu List' ,'Admin' ,'Write' , 8535 )  , 
  ( 'Order' ,'ResendOrderLineItemConfirmMail' ,'Orders' ,'OMS' ,'Write' , 8536 )  , 
  ( 'Order' ,'GetPaymentById' ,'Orders' ,'OMS' ,'Write' , 8537 )  , 
  ( 'Order' ,'GetEncryptedAmount' ,'Orders' ,'OMS' ,'Write' , 8539 )  , 
  ( 'Order' ,'SubmitEditOrderpayment' ,'Orders' ,'OMS' ,'Write' , 8540 )  , 
  ( 'Order' ,'CalculateShippingInManage' ,'Orders' ,'OMS' ,'Write' , 8541 )  , 
  ( 'Promotion' ,'AssociateBrandToPromotion' ,'Promotions and Coupons' ,'Marketing' ,'Read Only' , 8860 )  , 
  ( 'GlobalAttribute' ,'IsGlobalAttributeValueUnique' ,'Attributes' ,'Global Attributes' ,'Write' , 8543 )  , 
  ( 'GeneralSetting' ,'UpdateCacheStatus' ,'Admin' ,null,'Edit' , 8641 )  , 
  ( 'Search' ,'CreateSearchProfile' ,'Site Search' ,'Marketing' ,'Write' , 8752 )  , 
  ( 'Search' ,'GetTabStructureForProfile' ,'Site Search' ,'Marketing' ,'Read Only' , 8753 )  , 
  ( 'Search' ,'GetSearchProfiles' ,'Site Search' ,'Marketing' ,'Read Only' , 8754 )  , 
  ( 'Search' ,'GetFeaturesByQueryId' ,'Site Search' ,'Marketing' ,'Read Only' , 8755 )  , 
  ( 'Search' ,'GetCatalogList' ,'Site Search' ,'Marketing' ,'Read Only' , 8756 )  , 
  ( 'Search' ,'SetDefaultSearchProfile' ,'Site Search' ,'Marketing' ,'Write' , 8757 )  , 
  ( 'Search' ,'GetCatalogBasedAttributes' ,'Site Search' ,'Marketing' ,'Read Only' , 8758 )  , 
  ( 'Search' ,'GetAssociatedUnAssociatedCatalogAttributes' ,'Site Search' ,'Marketing' ,'Read Only' , 8759 )  , 
  ( 'Search' ,'AssociateAttributesToProfile' ,'Site Search' ,'Marketing' ,'Read Only' , 8760 )  , 
  ( 'Search' ,'UnAssociateAttributesFromProfile' ,'Site Search' ,'Marketing' ,'Delete' , 8761 )  , 
  ( 'Search' ,'GetSearchProfilesTriggers' ,'Site Search' ,'Marketing' ,'Read Only' , 8762 )  , 
  ( 'Search' ,'CreateSearchProfileTriggers' ,'Site Search' ,'Marketing' ,'Write' , 8763 )  , 
  ( 'Search' ,'EditSearchProfileTrigger' ,'Site Search' ,'Marketing' ,'Edit' , 8764 )  , 
  ( 'Search' ,'GetSearchProfilePortalList' ,'Site Search' ,'Marketing' ,'Read Only' , 8765 )  , 
  ( 'Search' ,'AssociatePortalToSearchProfile' ,'Site Search' ,'Marketing' ,'Write' , 8766 )  , 
  ( 'Search' ,'UnAssociatePortalToSearchProfile' ,'Site Search' ,'Marketing' ,'Delete' , 8767 )  , 
  ( 'Search' ,'GetUnAssociatedPortalList' ,'Site Search' ,'Marketing' ,'Read Only' , 8768 )  , 
  ( 'Search' ,'DeleteSearchTriggers' ,'Site Search' ,'Marketing' ,'Delete' , 8769 )  , 
  ( 'Search' ,'Delete' ,'Site Search' ,'Marketing' ,'Delete' , 8770 )  , 
  ( 'Search' ,'GetSearchProduct' ,'Site Search' ,'Marketing' ,'Read Only' , 8771 )  , 
  ( 'Search' ,'Edit' ,'Site Search' ,'Marketing' ,'Write' , 8773 )  , 
  ( 'Store' ,'SetPortalDefaultTax' ,'Stores' ,'Stores & Reps' ,'Write' , 8774 )  , 
  ( 'Inventory' ,'AddDownloadableProductKeys' ,'Inventory' ,'OMS' ,'Write' , 8792 )  , 
  ( 'Inventory' ,'GetDownloadableProductKeys' ,'Inventory' ,'OMS' ,'Read Only' , 8793 )  , 
  ( 'Inventory' ,'DeleteDownloadableProductKeys' ,'Inventory' ,'OMS' ,'Delete' , 8794 )  , 
  ( 'Inventory' ,'UpdateDownloadableProductKey' ,'Inventory' ,'OMS' ,'Edit' , 8795 )  , 
  ( 'Dashboard' ,'GetDashboardSalesDetails' ,'Dashboard' ,null,'Write' , 8796 )  , 
  ( 'GeneralSetting' ,'GetWebstoreDomains' ,'Global Settings' ,'Admin' ,'Read Only' , 8833 )  , 
  ( 'SearchConfiguration' ,'DeleteIndex' ,'Site Search' ,'Marketing' ,'Delete' , 8834 )  , 
  ( 'GeneralSetting' ,'RefreshCache' ,'Extension Engine' ,'Admin' ,'Read Only' , 8837 )  , 
  ( 'Catalog' ,'EditScheduler' ,'Catalogs' ,'PIM' ,'Read Only' , 8838 )  , 
  ( 'Products' ,'GetProductListBySKU' ,'Inventory' ,'OMS' ,'Read Only' , 8865 ) 
insert into _TempZnodeCMSMessage ( [CMSMessageId] , [LocaleId], [Message] , [CreatedBy] , [CreatedDate] , [ModifiedBy] , [ModifiedDate]  ) 
values
(  7, 1,'<p>Copyright &copy; 2018 Maxwell''s Inc. All Rights Reserved.</p>' , 2,'Jan 12 2017  2:40PM' , 2,'Feb 10 2017  9:27AM'  ), 
(  17, 1,'<p>You don''t need to create account to order.</p>' , 2,'Jan 10 2018 11:30AM' , 2,'Jan 10 2018 11:30AM'  ), 
(  20, 1,'<p>Copyright &copy; 2018 Maxwell''s Inc. All Rights Reserved.</p>' , 2,'Jan  3 2018 10:26AM' , 2,'Jan  3 2018 10:26AM'  ) 

insert into _TempZnodeCMSMessageKey ( [CMSMessageKeyId] , [MessageKey], [MessageTag] , [CreatedBy] , [CreatedDate] , [ModifiedBy] , [ModifiedDate]  ) 
values
 (  17,'CheckoutAsAGuestMessage' ,null, 2,'Jan 10 2018 11:30AM' , 2,'Jan 10 2018 11:30AM'  )  
insert into _TempZnodeEmailTemplate ( [EmailTemplateId],[TemplateName],[CreatedBy],[CreatedDate],[ModifiedBy],[ModifiedDate] ) 
values
 (  28,'NewUserAccountWebstore' , 2,'Dec  8 2017  9:26PM' , 2,'Dec  8 2017  9:26PM'  ) ,
 (  29,'CancelledOrderReceipt' , 2,'Feb 23 2016 11:30AM' , 2,'Feb 23 2016 11:30AM'  ) ,
 (  30,'ProductKeyOrderReceipt' , 2,'Dec 12 2017  6:16PM' , 2,'Dec 15 2017 11:57AM'  ) ,
 (  31,'OrderLineItemReceipt' , 2,'Jan 10 2018 11:30AM' , 2,'Jan 10 2018 11:30AM'  ) 
insert into _TempZnodePimAttribute ( [PimAttributeId], [AttributeCode],  [DisplayOrder], [HelpDescription], [IsCategory], [IsConfigurable] , [IsFilterable] , [IsHidden] , [IsLocalizable] ,                 [IsPersonalizable] , [IsRequired], [IsShowOnGrid] , [IsSwatch] , [IsSystemDefined] , [AttributeTypeName] ) 
values
 (  1,'ShortDescription' , 3,'Short Description :' ,'1' ,'0' ,'1' ,'0' ,'0' ,'0' ,'0' ,null,null,'1' ,'Text Area'  )   ,
 (  11,'ProductName' , 1,'' ,'0' ,'0' ,'1' ,'0' ,'1' ,'0' ,'1' ,'1' ,null,'1' ,'Text'  )   ,
 (  12,'SKU' , 2,'The SKU or stock keeping unit is the code assigned to your product inventory.' ,'0' ,'0' ,'1' ,'0' ,'0' ,'0' ,'1' ,'1' ,null,'1' ,'Text'  )   ,
 (  14,'ShortDescription' , 3,'Short Description :' ,'0' ,'0' ,'1' ,'0' ,'0' ,'0' ,'0' ,null,null,'1' ,'Text Area'  )   ,
 (  15,'LongDescription' , 2,'Long Description' ,'0' ,'0' ,'1' ,'0' ,'1' ,'0' ,'0' ,null,null,'1' ,'Text Area'  )   ,
 (  31,'OutOfStockOptions' , 5,'For Downloadable Product, You can not change the condition.' ,'0' ,'0' ,'1' ,'0' ,'1' ,'0' ,'1' ,null,null,'1' ,'Simple Select'  )   ,
 (  33,'FeatureDescription' , 5,'Enter a list of product features to display. Leave blank to disable this tab.' ,'0' ,'0' ,'1' ,'0' ,'1' ,'0' ,'0' ,null,null,'0' ,'Text Area'  )   ,
 (  34,'ProductSpecification' , 4,'Enter additional product specifications and characteristics. Leave blank to disable this tab.' ,'0' ,'0' ,'1' ,'0' ,'1' ,'0' ,'0' ,null,null,'0' ,'Text Area'  )   ,
 (  112,'PackagingType' , 999,'FedEx Packaging Type' ,'0' ,'0' ,'0' ,'0' ,'1' ,'0' ,'0' ,'0' ,'0' ,'1' ,'Simple Select'  )   ,
 (  113,'IsDownloadable' , 999,'This is only for Simple Product' ,'0' ,'0' ,'1' ,'0' ,'1' ,'0' ,'0' ,'0' ,'0' ,'1' ,'Yes/No'  )  
insert into _TempZnodePimAttributeDefaultValue ( [PimAttributeDefaultValueId],[AttributeDefaultValueCode],IsEditable,DisplayOrder,IsDefault,SwatchText,MediaId,AttributeCode ) 
values
 (  101,'BAG' ,'0' , 1,'0' ,null, null,'PackagingType'  )   ,
 (  102,'BARREL' ,'0' , 2,'0' ,null, null,'PackagingType'  )   ,
 (  103,'BASKET' ,'0' , 3,'0' ,null, null,'PackagingType'  )   ,
 (  104,'BOX' ,'0' , 4,'0' ,null, null,'PackagingType'  )   ,
 (  105,'BUCKET' ,'0' , 5,'0' ,null, null,'PackagingType'  )   ,
 (  106,'BUNDLE' ,'0' , 6,'0' ,null, null,'PackagingType'  )   ,
 (  107,'CARTON' ,'0' , 7,'0' ,null, null,'PackagingType'  )   ,
 (  108,'CASE' ,'0' , 8,'0' ,null, null,'PackagingType'  )   ,
 (  109,'CONTAINER' ,'0' , 9,'0' ,null, null,'PackagingType'  )   ,
 (  110,'CRATE' ,'0' , 10,'0' ,null, null,'PackagingType'  )   ,
 (  111,'CYLINDER' ,'0' , 11,'0' ,null, null,'PackagingType'  )   ,
 (  112,'DRUM' ,'0' , 12,'0' ,null, null,'PackagingType'  )   ,
 (  113,'ENVELOPE' ,'0' , 13,'0' ,null, null,'PackagingType'  )   ,
 (  114,'HAMPER' ,'0' , 14,'0' ,null, null,'PackagingType'  )   ,
 (  115,'OTHER' ,'0' , 15,'0' ,null, null,'PackagingType'  )   ,
 (  116,'PAIL' ,'0' , 16,'0' ,null, null,'PackagingType'  )   ,
 (  117,'PALLET' ,'0' , 17,'0' ,null, null,'PackagingType'  )   ,
 (  118,'PIECE' ,'0' , 18,'0' ,null, null,'PackagingType'  )   ,
 (  119,'REEL' ,'0' , 19,'0' ,null, null,'PackagingType'  )   ,
 (  120,'ROLL' ,'0' , 20,'0' ,null, null,'PackagingType'  )   ,
 (  121,'SKID' ,'0' , 21,'0' ,null, null,'PackagingType'  )   ,
 (  122,'TANK' ,'0' , 22,'0' ,null, null,'PackagingType'  )   ,
 (  123,'TUBE' ,'0' , 23,'0' ,null, null,'PackagingType'  )  
insert into _TempZnodePimAttributeDefaultValueLocale ( PimAttributeDefaultValueLocaleId,LocaleId,PimAttributeDefaultValueId,AttributeDefaultValue,[Description],AttributeDefaultValueCode ) 
values
  (  139, 1, 101,'BAG' ,'BAG' ,'BAG'  )  ,
  (  140, 1, 102,'BARREL' ,'BARREL' ,'BARREL'  )  ,
  (  141, 1, 103,'BASKET' ,'BASKET' ,'BASKET'  )  ,
  (  142, 1, 104,'BOX' ,'BOX' ,'BOX'  )  ,
  (  143, 1, 105,'BUCKET' ,'BUCKET' ,'BUCKET'  )  ,
  (  144, 1, 106,'BUNDLE' ,'BUNDLE' ,'BUNDLE'  )  ,
  (  145, 1, 107,'CARTON' ,'CARTON' ,'CARTON'  )  ,
  (  146, 1, 108,'CASE' ,'CASE' ,'CASE'  )  ,
  (  147, 1, 109,'CONTAINER' ,'CONTAINER' ,'CONTAINER'  )  ,
  (  148, 1, 110,'CRATE' ,'CRATE' ,'CRATE'  )  ,
  (  149, 1, 111,'CYLINDER' ,'CYLINDER' ,'CYLINDER'  )  ,
  (  150, 1, 112,'DRUM' ,'DRUM' ,'DRUM'  )  ,
  (  151, 1, 113,'ENVELOPE' ,'ENVELOPE' ,'ENVELOPE'  )  ,
  (  152, 1, 114,'HAMPER' ,'HAMPER' ,'HAMPER'  )  ,
  (  153, 1, 115,'OTHER' ,'OTHER' ,'OTHER'  )  ,
  (  154, 1, 116,'PAIL' ,'PAIL' ,'PAIL'  )  ,
  (  155, 1, 117,'PALLET' ,'PALLET' ,'PALLET'  )  ,
  (  156, 1, 118,'PIECE' ,'PIECE' ,'PIECE'  )  ,
  (  157, 1, 119,'REEL' ,'REEL' ,'REEL'  )  ,
  (  158, 1, 120,'ROLL' ,'ROLL' ,'ROLL'  )  ,
  (  159, 1, 121,'SKID' ,'SKID' ,'SKID'  )  ,
  (  160, 1, 122,'TANK' ,'TANK' ,'TANK'  )  ,
  (  161, 1, 123,'TUBE' ,'TUBE' ,'TUBE'  )  
insert into _TempZnodePimAttributeGroupMapper ( PimAttributeGroupMapperId,AttributeDisplayOrder,IsSystemDefined,GroupCode,AttributeCode ) 
values
 (  138, 10,'1' ,'ProductInfo' ,'IsDownloadable'  )  ,
 (  139, 10,'1' ,'ShippingSettings' ,'PackagingType'  )  
insert into _TempZnodePimAttributeLocale ( PimAttributeLocaleId,LocaleId,AttributeName,[Description],AttributeCode) 
values
 (  359, 1,'Ship Separately' ,null,'ShipSeparately'  )  ,
 (  540, 1,'Allowed Territories' ,null,'AllowedTerritories'  )  ,
 (  543, 1,'Packaging Type' ,'' ,'PackagingType'  )  ,
 (  544, 1,'Is Downloadable' ,'' ,'IsDownloadable'  )  
insert into _TempZnodePimFamilyGroupMapper ( PimFamilyGroupMapperId,GroupDisplayOrder,IsSystemDefined,GroupCode,FamilyCode,AttributeCode ) 
values
 (  866,'10.000000' ,'1' ,'ShippingSettings' ,'Default' ,'PackagingType'  )  ,
 (  867,'10.000000' ,'1' ,'ShippingSettings' ,'FineFood' ,'PackagingType'  )  ,
 (  868,'10.000000' ,'1' ,'ShippingSettings' ,'Wine' ,'PackagingType'  )  ,
 (  869,'10.000000' ,'1' ,'ShippingSettings' ,'Nuts' ,'PackagingType'  )  ,
 (  870,'5.000000' ,'1' ,'ProductInfo' ,'Default' ,'IsDownloadable'  )  ,
 (  871,'5.000000' ,'1' ,'ProductInfo' ,'FineFood' ,'IsDownloadable'  )  ,
 (  872,'5.000000' ,'1' ,'ProductInfo' ,'Wine' ,'IsDownloadable'  )  ,
 (  873,'5.000000' ,'1' ,'ProductInfo' ,'Nuts' ,'IsDownloadable'  )  
insert into _TempZnodePortalPixelTracking ( PortalPixelTrackingId,PixelId1,CodePixel1,DisplayName1,HelpTextPixel1,PixelId2,CodePixel2,DisplayName2,HelpTextPixel2,PixelId3,CodePixel3       ,DisplayName3,HelpTextPixel3,PixelId4,CodePixel4,DisplayName4,HelpTextPixel4,PixelId5,CodePixel5,DisplayName5,HelpTextPixel5,StoreName ) 
values
 (  1,'aaaf012d-40e4-4e61-8d1d-14e332bda917,100' ,'ovative' ,'Ovative' ,'Comma separated ovative parameters.First one is cid' ,'1500829,345661' ,'CJ' ,'Comission Junction' ,'Comma separated commission junction parameters.First one is cid and another is action id.' ,'www.upsellit.com/active/encoresoftware_pixel.jsp' ,'Upsellit' ,'Upsellit' ,'Src value for Upsellit.' ,'8NJP6A14' ,'YesMail' ,'Yes Mail' ,'YesMail Pid' ,null,null,null,null,'Fine Foods'  ) ,
 (  2,'aaaf012d-40e4-4e61-8d1d-14e332bda917,100' ,'ovative' ,'Ovative' ,'Comma separated ovative parameters.First one is cid' ,'1500829,345661' ,'CJ' ,'Comission Junction' ,'Comma separated commission junction parameters.First one is cid and another is action id.' ,'www.upsellit.com/active/encoresoftware_pixel.jsp' ,'Upsellit' ,'Upsellit' ,'Src value for Upsellit.' ,'8NJP6A14' ,'YesMail' ,'Yes Mail' ,'YesMail Pid' ,null,null,null,null,'Wine & Cheese'  ) ,
 (  3,'aaaf012d-40e4-4e61-8d1d-14e332bda917,100' ,'ovative' ,'Ovative' ,'Comma separated ovative parameters.First one is cid' ,'1500829,345661' ,'CJ' ,'Comission Junction' ,'Comma separated commission junction parameters.First one is cid and another is action id.' ,'www.upsellit.com/active/encoresoftware_pixel.jsp' ,'Upsellit' ,'Upsellit' ,'Src value for Upsellit.' ,'8NJP6A14' ,'YesMail' ,'Yes Mail' ,'YesMail Pid' ,null,null,null,null,'Nut Wholesaler'  ) 
insert into _TempZnodePriceList ( PriceListId,ListCode,ListName,ActivationDate,ExpirationDate,CurrencyCode ) 
values
 (  2,'NutWholesalerPriceList' ,'Nut Wholesaler Price List' ,'Jan  1 2017 12:00AM' ,'Jul 30 2028 11:59PM' ,'en-US'  )  ,
 (  3,'WineCheesePriceList' ,'Wine & Cheese Price List' ,'Jan  1 2017 12:00AM' ,'Jul 30 2028 11:59PM' ,'en-US'  )  
insert into _TempZnodePromotionType ( PromotionTypeId,ClassType,ClassName,Name,[Description],IsActive) 
values
 (  19,'CART' ,'ZnodeCartPromotionPercentOffShippingWithCarrier' ,'Percent Off Shipping with carrier' ,'Applies a percent off shipping with carrier for an order; affects the shopping cart.' ,'1'  )  ,
 (  20,'CART' ,'ZnodeCartPromotionAmountOffShippingWithCarrier' ,'Amount Off Shipping with carrier' ,'Applies an amount off shipping with carrier for an order; affects the shopping cart.' ,'1'  )  
insert into _TempZnodeTaxRuleTypes ( TaxRuleTypeId,PortalId,ClassName,Name,[Description],IsActive,StoreName) 
values
 (  4, null,'VertexTax' ,'Vertex Tax' ,'Vertex tax connector.' ,'1' ,null )  
insert into _TempZnodeApplicationSetting ( ApplicationSettingId,GroupName,ItemName,Setting,ViewOptions,FrontPageName,FrontObjectName,IsCompressed,OrderByFields,ItemNameWithoutCurrency,CreatedByName,ModifiedByName) 
values
 (  14,'Table' ,'ZnodeCustomerAccount' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>UserId</name>      <headertext>Checkbox</headertext>      <width>40</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>UserId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>UserId</name>      <headertext>Customer ID</headertext>      <width>40</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/Customer/CustomerEdit</islinkactionurl>      <islinkparamfield>UserId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>UserName</name>      <headertext>Username</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/Customer/CustomerEdit</islinkactionurl>      <islinkparamfield>UserId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>FullName</name>      <headertext>Full Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Full Name</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Email</name>      <headertext>Email ID</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Email Id</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>PhoneNumber</name>      <headertext>Phone Number</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Phone Number</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Accountname</name>      <headertext>Account</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Account</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>RoleName</name>      <headertext>Role Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>StoreName</name>      <headertext>Store Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>DepartmentName</name>      <headertext>Department Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Manage|Disable|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Manage|Disable|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Customer/CustomerEdit|/User/CustomerEnableDisableAccount|/User/CustomerDelete</manageactionurl>      <manageparamfield>UserId|UserId,IsLock|UserId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>grid-action</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>      <column>      <id>12</id>      <name>LastName</name>      <headertext>Last Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Last Name</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>13</id>      <name>IsLock</name>      <headertext>Is Lock</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>AccountId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Is Lock</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>14</id>      <name>IsGuestUser</name>      <headertext>Guest User</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>y</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>AccountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Guest User</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>Guest</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeCustomerAccount' ,'ZnodeCustomerAccount' ,'ZnodeCustomerAccount' ,'0' ,null,null,null,null )  ,
 (  31,'Table' ,'ZnodeEmailTemplate' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>EmailTemplateId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>EmailTemplateId</islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>TemplateName</name>      <headertext>Template Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/EmailTemplate/Edit</islinkactionurl>      <islinkparamfield>EmailTemplateId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Descriptions</name>      <headertext>Description</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Subject</name>      <headertext>Subject</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>CreatedDate</name>      <headertext>Created Date</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Preview|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>EmailTemplateId|EmailTemplateId|EmailTemplateId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Preview|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/EmailTemplate/Edit|/EmailTemplate/Preview|/EmailTemplate/Delete</manageactionurl>      <manageparamfield>EmailTemplateId|EmailTemplateId|EmailTemplateId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeEmailTemplate' ,'ZnodeEmailTemplate' ,'ZnodeEmailTemplate' ,'0' ,null,null,null,null )  ,
 (  35,'Table' ,'ZnodePimAssignedAttributes' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimAttributeId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimAttributeGroupId</name>      <headertext>PimAttributeGroupId</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeCode</name>      <headertext>Attribute Code</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>AttributeName</name>      <headertext>Attribute Label</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>AttributeType</name>      <headertext>Attribute Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>IsRequired</name>      <headertext>Is Required</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsSystemDefined</name>      <headertext>Is System Defined</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>IsLocalizable</name>      <headertext>Is Localizable</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>DisplayOrder</name>      <headertext>Display Order</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>3</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/ProductAttributeGroup/UpdateAttributeDisplayOrder|/PIM/ProductAttributeGroup/RemoveAssociatedAttribute</manageactionurl>      <manageparamfield>PimAttributeId|PimAttributeId,PimAttributeGroupId,IsSystemDefined</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>grid-action</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'PimGroupAttribute' ,'PimGroupAttribute' ,'PimGroupAttribute' ,'0' ,null,null,null,null )  ,
 (  36,'View' ,'View_ManageProductList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PimProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/PIM/Products/Edit</islinkactionurl>      <islinkparamfield>PimProductId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>PublishStatus</name>      <headertext>Publish Status</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>IsActive</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Copy|Delete|Publish</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Copy|Delete|Publish</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Products/Edit|/PIM/Products/Copy|/PIM/Products/Delete|/PIM/Products/PublishProduct</manageactionurl>      <manageparamfield>PimProductId|PimProductId|PimProductId|PimProductId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'View_ManageProductList' ,'View_ManageProductList' ,'View_ManageProductList' ,'0' ,null,null,null,null )  ,
 (  51,'Table' ,'ZnodeInventory' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>InventoryId</name>      <headertext>Checkbox</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>WarehouseCode</name>      <headertext>Warehouse Code</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>WarehouseName</name>      <headertext>Warehouse</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>DropDown</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Quantity</name>      <headertext>Quantity On Hand</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>Decimal</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>15</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ReOrderLevel</name>      <headertext>Re-Order Level</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>Decimal</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>7</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>CreatedDate</name>      <headertext>Created Date</headertext>      <width>30</width>      <datatype>Date</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>ModifiedDate</name>      <headertext>Modified Date</headertext>      <width>30</width>      <datatype>Date</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Manage|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Manage|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Inventory/EditSKUInventory|/Inventory/DeleteSKUInventory</manageactionurl>      <manageparamfield>inventoryId,SKU|inventoryId,inventoryListId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeInventory' ,'ZnodeInventory' ,'ZnodeInventory' ,'0' ,null,null,null,null )  ,
 (  82,'View' ,'View_GetAccountListWithAddress' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>AccountId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>AccountId</name>      <headertext>Account ID</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/Account/EditSubAccount</islinkactionurl>      <islinkparamfield>accountId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>edit-account</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ExternalId</name>      <headertext>External ID</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Name</name>      <headertext>Account Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>AccountAddress</name>      <headertext>Address</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Account/EditSubAccount|/Account/Delete</manageactionurl>      <manageparamfield>accountId|accountId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSubAccount' ,'ZnodeSubAccount' ,'ZnodeSubAccount' ,'0' ,null,null,null,null )  ,
 (  98,'View' ,'View_GetCMSSliderBannerPath' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>CMSSliderBannerId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>CMSSliderId</name>      <headertext>CMSSliderId</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Image</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>MediaPath,Title</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>MediaId</name>      <headertext>Media Id</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>FileName</name>      <headertext>Media File Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Title</name>      <headertext>Banner Title</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/WebSite/EditBanner</islinkactionurl>      <islinkparamfield>CMSSliderBannerId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ButtonLink</name>      <headertext>Button Link</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>BannerSequence</name>      <headertext>Banner Sequence</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>ActivationDate</name>      <headertext>Activation Date</headertext>      <width>0</width>      <datatype>Date</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>ExpirationDate</name>      <headertext>Expiration Date</headertext>      <width>0</width>      <datatype>Date</datatype>      <columntype>DateTime</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/WebSite/EditBanner|/WebSite/DeleteBanner</manageactionurl>      <manageparamfield>CMSSliderBannerId|CMSSliderBannerId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'View_GetCMSSliderBannerPath' ,'View_GetCMSSliderBannerPath' ,'View_GetCMSSliderBannerPath' ,'0' ,null,null,null,null )  ,
 (  103,'Table' ,'AccountAddressList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>AccountAddressId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>AddressId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>IsDefaultBilling</name>      <headertext>Is Default Billing</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>IsDefaultShipping</name>      <headertext>Is Default Shipping</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>DisplayAddress</name>      <headertext>Address</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>AccountId</name>      <headertext>AccountId</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Account/EditAddress|/Account/DeleteAddress</manageactionurl>      <manageparamfield>AccountAddressId,PortalId|AccountAddressId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'AccountAddressList' ,'AccountAddressList' ,'AccountAddressList' ,'0' ,null,null,null,null )  ,
 (  128,'Table' ,'ZnodeOrder' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>OmsOrderId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>OrderNumber</name>      <headertext>Order No</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/Order/Manage</islinkactionurl>      <islinkparamfield>OmsOrderId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>UserName</name>      <headertext>Customer Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Email</name>      <headertext>Email</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>PhoneNumber</name>      <headertext>Phone Number</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>StoreName</name>      <headertext>Store Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>OrderState</name>      <headertext>Order Status</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>orderState</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>PaymentStatus</name>      <headertext>Payment Status</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>paymentStatus</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>PaymentDisplayName</name>      <headertext>Payment Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>paymentType</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>OrderTotalWithCurrency</name>      <headertext>Total</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>SubTotalAmount</name>      <headertext>SubTotal</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>12</id>      <name>Tax</name>      <headertext>Tax</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>13</id>      <name>Shipping</name>      <headertext>Shipping</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>14</id>      <name>BillingPostalCode</name>      <headertext>Billing Zip Code</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>15</id>      <name>ShippingPostalCode</name>      <headertext>Shipping Zip Code</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>16</id>      <name>OrderDateWithTime</name>      <headertext>Order Date</headertext>      <width>0</width>      <datatype>DateTime</datatype>      <columntype>DateTime</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>17</id>      <name>CreatedByName</name>      <headertext>Created By</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>18</id>      <name>ModifiedByName</name>      <headertext>Modified By</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>19</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>View|void-payment</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>View</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Order/Manage</manageactionurl>      <manageparamfield>OmsOrderId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeOMS' ,'ZnodeOMS' ,'ZnodeOMS' ,'0' ,null,null,null,null )  ,
 (  129,'View' ,'ZnodeOrderProductList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PublishProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PublishProductId,Quantity,SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Image</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Single</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ImageSmallThumbnailPath,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>sku</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>Name</name>      <headertext>Product Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>productname</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>SalesPriceWithCurrency</name>      <headertext>Sales Price</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>RetailPriceWithCurrency</name>      <headertext>Retail Price</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit</format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/SEO/SEODetails</manageactionurl>      <manageparamfield>ItemName,ItemId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'OrderProductList' ,'OrderProductList' ,'OrderProductList' ,'0' ,null,null,null,null )  ,
 (  140,'Table' ,'UnAssociatedCategoriesToCatalog' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>   <column>    <id>1</id>    <name>PimCategoryId</name>    <headertext>Checkbox</headertext>    <width>30</width>    <datatype>Int32</datatype>    <columntype>Int32</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>y</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>2</id>    <name>PimCategoryId</name>    <headertext>ID</headertext>    <width>40</width>    <datatype>Int32</datatype>    <columntype>Int32</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>n</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>3</id>    <name>Image</name>    <headertext>Image</headertext>    <width>0</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>false</allowsorting>    <allowpaging>false</allowpaging>    <format>Edit</format>    <isvisible>y</isvisible>    <mustshow>n</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield>PimCategoryId</checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext>Edit</displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield>CategoryImage,CategoryName</imageparamfield>    <manageactionurl>/Pim/Category/Edit</manageactionurl>    <manageparamfield>PimCategoryId</manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class>imageicon</Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>4</id>    <name>CategoryName</name>    <headertext>Category</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>y</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>5</id>    <name>CategoryTitle</name>    <headertext>Title</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>false</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>6</id>    <name>AttributeFamily</name>    <headertext>Attribute Family</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>7</id>    <name>Manage</name>    <headertext>Action</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>false</allowsorting>    <allowpaging>true</allowpaging>    <format>Edit|Delete</format>    <isvisible>n</isvisible>    <mustshow>n</mustshow>    <musthide>y</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext>Edit|Delete</displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl>/PIM/Category/Edit|/PIM/Category/Delete</manageactionurl>    <manageparamfield>pimCategoryId|pimCategoryId</manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>  </columns>' ,'UnAssociatedCategoriesToCatalog' ,'UnAssociatedCategoriesToCatalog' ,'UnAssociatedCategoriesToCatalog' ,'0' ,null,null,null,null )  ,
 (  150,'Table' ,'SKUList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>IsDownloadable</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Product Image</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>skucolumn</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsDownloadable</name>      <headertext>Is Downloadable</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>IsDownloadable</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>isDownloadable</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'SKUList' ,'SKUList' ,'SKUList' ,'0' ,null,null,null,null )  ,
 (  155,'Table' ,'PublishedProductList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PublishProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PublishProductId</name>      <headertext>Publish Product ID</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Name</name>      <headertext>Product Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>productnameclass</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>        </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>CatalogName</name>      <headertext>Catalog Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsActive</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'PublishedProductList' ,'PublishedProductList' ,'PublishedProductList' ,'0' ,null,null,null,null )  ,
 (  157,'View' ,'TouchPointSchedulerHistory' ,'<?xml version="1.0" encoding="utf-16"?><columns><column><id>1</id><name>SchedulerName</name><headertext>Scheduler Name</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>2</id><name>SchedulerType</name><headertext>Scheduler Type</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>n</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>3</id><name>TouchPointName</name><headertext>Touch Point Name</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>4</id><name>ProcessStartedDate</name><headertext>Process Started Date</headertext><width>0</width><datatype>DateTime</datatype><columntype>DateTime</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>5</id><name>ProcessCompletedDate</name><headertext>Process Completed Date</headertext><width>0</width><datatype>DateTime</datatype><columntype>DateTime</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>6</id><name>ImportStatus</name><headertext>Status</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>7</id><name>SuccessRecordCount</name><headertext>Success Record Count</headertext><width>0</width><datatype>Int</datatype><columntype>Int</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>8</id><name>FailedRecordcount</name><headertext>Failed Record Count</headertext><width>0</width><datatype>Int</datatype><columntype>Int</columntype><allowsorting>true</allowsorting><allowpaging>false</allowpaging><format></format><isvisible>y</isvisible><mustshow>y</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>y</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext></displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl></manageactionurl><manageparamfield></manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column><column><id>9</id><name>Manage</name><headertext>Action</headertext><width>0</width><datatype>String</datatype><columntype>String</columntype><allowsorting>false</allowsorting><allowpaging>false</allowpaging><format>View</format><isvisible>y</isvisible><mustshow>n</mustshow><musthide>n</musthide><maxlength>0</maxlength><isallowsearch>n</isallowsearch><isconditional>n</isconditional><isallowlink>n</isallowlink><islinkactionurl></islinkactionurl><islinkparamfield></islinkparamfield><ischeckbox>n</ischeckbox><checkboxparamfield></checkboxparamfield><iscontrol>n</iscontrol><controltype></controltype><controlparamfield></controlparamfield><displaytext>Log Details</displaytext><editactionurl></editactionurl><editparamfield></editparamfield><deleteactionurl></deleteactionurl><deleteparamfield></deleteparamfield><viewactionurl></viewactionurl><viewparamfield></viewparamfield><imageactionurl></imageactionurl><imageparamfield></imageparamfield><manageactionurl>/Import/ShowLogDetails</manageactionurl><manageparamfield>ImportProcessLogId</manageparamfield><copyactionurl></copyactionurl><copyparamfield></copyparamfield><xaxis>n</xaxis><yaxis>n</yaxis><isadvancesearch>y</isadvancesearch><Class></Class><SearchControlType>--Select--</SearchControlType><SearchControlParameters></SearchControlParameters><DbParamField></DbParamField><useMode>DataBase</useMode><IsGraph>n</IsGraph><allowdetailview>n</allowdetailview></column></columns>' ,'TouchPointSchedulerHistory' ,'TouchPointSchedulerHistory' ,'TouchPointSchedulerHistory' ,'0' ,null,null,null,null )  ,
 (  178,'Table' ,'ZnodeImportProcessLog' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>ImportProcessLogId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>ImportProcessLogId</islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>ImportProcessLogId</name>      <headertext>ID</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ImportName</name>      <headertext>Import Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ImportTemplateId</name>      <headertext>Template ID</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>TemplateName</name>      <headertext>Template Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Status</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ProcessStartedDate</name>      <headertext>Start Date</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>ProcessCompletedDate</name>      <headertext>End Date</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>View|Delete</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>View|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Import/ShowLogDetails|/Import/Deletelogs</manageactionurl>      <manageparamfield>ImportProcessLogId|ImportProcessLogId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeImportProcessLog' ,'ZnodeImportProcessLog' ,'ZnodeImportProcessLog' ,'0' ,null,null,null,null )  ,
 (  271,'Table' ,'ZnodeBlogNewsList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>BlogNewsId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>BlogNewstitle</name>      <headertext>Title</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/BlogNews/EditBlogNews</islinkactionurl>      <islinkparamfield>blogNewsId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>BlogNewsType</name>      <headertext>Type</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>CountComments</name>      <headertext>Comments</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/BlogNews/BlogNewsCommentList</islinkactionurl>      <islinkparamfield>blogNewsId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Button</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>btn-grid</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>StoreName</name>      <headertext>Store Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>ActivationDate</name>      <headertext>Activation Date </headertext>      <width>60</width>      <datatype>DateTime</datatype>      <columntype>DateTime</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>ExpirationDate</name>      <headertext>Expiration Date </headertext>      <width>60</width>      <datatype>DateTime</datatype>      <columntype>DateTime</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>CreatedDate</name>      <headertext>Created Date </headertext>      <width>60</width>      <datatype>DateTime</datatype>      <columntype>DateTime</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>IsBlogNewsActive</name>      <headertext>Is Active</headertext>      <width>60</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>        <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>IsAllowGuestComment</name>      <headertext>Is Allow Comments</headertext>      <width>60</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>11</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/BlogNews/EditBlogNews|/BlogNews/DeleteBlogNews</manageactionurl>      <manageparamfield>blogNewsId|blogNewsId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeBlogNewsList' ,'ZnodeBlogNewsList' ,'ZnodeBlogNewsList' ,'0' ,null,null,null,null )  ,
 (  274,'Table' ,'ZnodeBlogNewsCommentList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>BlogNewsCommentId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>BlogNewsTitle</name>      <headertext>Title</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>BlogNewsType</name>      <headertext>Type</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>StoreName</name>      <headertext>Store Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Customer</name>      <headertext>Customer</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>        <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>LocaleName</name>      <headertext>Locale</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>BlogNewsComment</name>      <headertext>Comment</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>IsApproved</name>      <headertext>Is Approved</headertext>      <width>60</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>DropDown</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>CreatedDate</name>      <headertext>Created Date </headertext>      <width>60</width>      <datatype>DateTime</datatype>      <columntype>DateTime</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>10</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/BlogNews/EditBlogNewsComment|/BlogNews/DeleteBlogNewsComment</manageactionurl>      <manageparamfield>blogNewsCommentId|blogNewsCommentId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeBlogNewsCommentList' ,'ZnodeBlogNewsCommentList' ,'ZnodeBlogNewsCommentList' ,'0' ,null,null,null,null )  ,
 (  275,'Table' ,'ZnodeSearchSynonymsList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>SearchSynonymsId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>SearchSynonymsId</name>      <headertext>ID</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/SearchConfiguration/EditSearchSynonyms</islinkactionurl>      <islinkparamfield>searchSynonymsId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>OriginalTerm</name>      <headertext>Original Term</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ReplacedBy</name>      <headertext>Replaced By</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsBidirectional</name>      <headertext>Is Bidirectional</headertext>      <width>60</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/SearchConfiguration/EditSearchSynonyms|/SearchConfiguration/DeleteSearchSynonyms</manageactionurl>      <manageparamfield>searchSynonymsId|searchSynonymsId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearchSynonymsList' ,'ZnodeSearchSynonymsList' ,'ZnodeSearchSynonymsList' ,'0' ,null,null,null,null )  ,
 (  276,'Table' ,'ZnodeSearchKeywordsRedirectList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>SearchKeywordsRedirectId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>SearchKeywordsRedirectId</name>      <headertext>ID</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/SearchConfiguration/EditSearchKeywords</islinkactionurl>      <islinkparamfield>SearchKeywordsRedirectId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Keywords</name>      <headertext>Keywords</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>URL</name>      <headertext>URL</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/SearchConfiguration/EditSearchKeywordsRedirect|/SearchConfiguration/DeleteSearchKeywordsRedirect</manageactionurl>      <manageparamfield>SearchKeywordsRedirectId|SearchKeywordsRedirectId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearchKeywordsRedirectList' ,'ZnodeSearchKeywordsRedirectList' ,'ZnodeSearchKeywordsRedirectList' ,'0' ,null,null,null,null )  ,
 (  277,'Table' ,'ZnodeGlobalAttribute' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>GlobalAttributeId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>AttributeCode</name>      <headertext>Attribute Code</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/GlobalAttribute/Edit</islinkactionurl>      <islinkparamfield>GlobalAttributeId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeName</name>      <headertext>Attribute Label</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/Attributes/Attributes/Edit</islinkactionurl>      <islinkparamfield>MediaAttributeId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>y</allowdetailview>    </column>    <column>      <id>4</id>      <name>AttributeTypeName</name>      <headertext>Attribute Type</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>/GlobalAttribute/Edit</islinkactionurl>      <islinkparamfield>GlobalAttributeId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>y</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsRequired</name>      <headertext>Is Required</headertext>      <width>10</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>IsLocalizable</name>      <headertext>Is Localizable</headertext>      <width>10</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>        <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/GlobalAttribute/Edit|/GlobalAttribute/Delete</manageactionurl>      <manageparamfield>GlobalAttributeId|GlobalAttributeId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeGlobalAttribute' ,'ZnodeGlobalAttribute' ,'ZnodeGlobalAttribute' ,'0' ,null,null,null,null )  ,
 (  278,'Table' ,'ZnodeGlobalAttributeGroupList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>   <column>    <id>1</id>    <name>GlobalAttributeGroupId</name>    <headertext>Checkbox</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>Int32</columntype>    <allowsorting>false</allowsorting>    <allowpaging>false</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>y</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>2</id>    <name>GroupCode</name>    <headertext>Group Code</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>false</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>y</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>y</isallowlink>    <islinkactionurl>/GlobalAttributeGroup/Edit</islinkactionurl>    <islinkparamfield>globalAttributeGroupId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>3</id>    <name>AttributeGroupName</name>    <headertext>Group Label</headertext>    <width>50</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>y</isallowsearch>    <isconditional>y</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl>/AttributeGroup/EditAttributeGroup</islinkactionurl>    <islinkparamfield>MediaAttributeGroupId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield>Id</checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>y</allowdetailview>   </column>   <column>    <id>4</id>    <name>CreatedDate</name>    <headertext>Created Date</headertext>    <width>0</width>    <datatype>String</datatype>    <columntype>DateTime</columntype>    <allowsorting>false</allowsorting>    <allowpaging>false</allowpaging>    <format></format>    <isvisible>n</isvisible>    <mustshow>n</mustshow>    <musthide>y</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>n</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>5</id>    <name>ModifiedDate</name>    <headertext>Modified Date</headertext>    <width>0</width>    <datatype>String</datatype>    <columntype>DateTime</columntype>    <allowsorting>false</allowsorting>    <allowpaging>false</allowpaging>    <format></format>    <isvisible>n</isvisible>    <mustshow>n</mustshow>    <musthide>y</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>n</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>6</id>    <name>Manage</name>    <headertext>Action</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>false</allowsorting>    <allowpaging>false</allowpaging>    <format>Edit|Delete</format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext>Edit|Delete</displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl>/GlobalAttributeGroup/Edit|/GlobalAttributeGroup/Delete</manageactionurl>    <manageparamfield>globalAttributeGroupId|globalAttributeGroupId</manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>n</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>  </columns>' ,'ZnodeGlobalAttributeGroupList' ,'ZnodeGlobalAttributeGroupList' ,'ZnodeGlobalAttributeGroupList' ,'0' ,null,null,null,null )  ,
 (  279,'Table' ,'ZnodeGlobalAssignedAttributes' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>GlobalAttributeId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>GlobalAttributeGroupId</name>      <headertext>GlobalAttributeGroupId</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeCode</name>      <headertext>Attribute Code</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>AttributeName</name>      <headertext>Attribute Label</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>AttributeType</name>      <headertext>Attribute Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>IsRequired</name>      <headertext>Is Required</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsLocalizable</name>      <headertext>Is Localizable</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>DisplayOrder</name>      <headertext>Display Order</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>3</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/GlobalAttributeGroup/UpdateAttributeDisplayOrder|/GlobalAttributeGroup/RemoveAssociatedAttribute</manageactionurl>      <manageparamfield>GlobalAttributeId|GlobalAttributeId,GlobalAttributeGroupId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>grid-action</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'GlobalGroupAttribute' ,'GlobalGroupAttribute' ,'GlobalGroupAttribute' ,'0' ,null,null,null,null )  ,
 (  280,'Table' ,'ZnodePimDownloadableProductKey' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>   <column>    <id>1</id>    <name>PimDownloadableProductKeyId</name>    <headertext>Checkbox</headertext>    <width>40</width>    <datatype>String</datatype>    <columntype>Int32</columntype>    <allowsorting>false</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield></islinkparamfield>    <ischeckbox>y</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext>ID</displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>2</id>    <name>SKU</name>    <headertext>SKU</headertext>    <width>50</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>n</isvisible>    <mustshow>n</mustshow>    <musthide>y</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield>ProductId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield>ProductId</checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext>Code</displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>3</id>    <name>DownloadableProductKey</name>    <headertext>Product Key</headertext>    <width>50</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>150</maxlength>    <isallowsearch>y</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield>ProductId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield>ProductId</checkboxparamfield>    <iscontrol>y</iscontrol>    <controltype>Text</controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>4</id>    <name>DownloadableProductURL</name>    <headertext>Download URL</headertext>    <width>50</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>150</maxlength>    <isallowsearch>y</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield>ProductId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield>ProductId</checkboxparamfield>    <iscontrol>y</iscontrol>    <controltype>Text</controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>5</id>    <name>IsUsed</name>    <headertext>Is Used</headertext>    <width>40</width>    <datatype>Boolean</datatype>    <columntype>Boolean</columntype>    <allowsorting>true</allowsorting>    <allowpaging>true</allowpaging>    <format></format>    <isvisible>y</isvisible>    <mustshow>n</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>y</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield>LocaleId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield></checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext></displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl></manageactionurl>    <manageparamfield></manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>n</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>   <column>    <id>6</id>    <name>Manage</name>    <headertext>Action</headertext>    <width>50</width>    <datatype>String</datatype>    <columntype>String</columntype>    <allowsorting>false</allowsorting>    <allowpaging>true</allowpaging>    <format>Edit|Delete</format>    <isvisible>y</isvisible>    <mustshow>y</mustshow>    <musthide>n</musthide>    <maxlength>0</maxlength>    <isallowsearch>n</isallowsearch>    <isconditional>n</isconditional>    <isallowlink>n</isallowlink>    <islinkactionurl></islinkactionurl>    <islinkparamfield>productId</islinkparamfield>    <ischeckbox>n</ischeckbox>    <checkboxparamfield>Id</checkboxparamfield>    <iscontrol>n</iscontrol>    <controltype></controltype>    <controlparamfield></controlparamfield>    <displaytext>Edit|Delete</displaytext>    <editactionurl></editactionurl>    <editparamfield></editparamfield>    <deleteactionurl></deleteactionurl>    <deleteparamfield></deleteparamfield>    <viewactionurl></viewactionurl>    <viewparamfield></viewparamfield>    <imageactionurl></imageactionurl>    <imageparamfield></imageparamfield>    <manageactionurl>/PIM/Products/UpdateDownloadableProductKey|/PIM/Products/DeleteDownloadableProductKeys</manageactionurl>    <manageparamfield>PimDownloadableProductKeyId|PimDownloadableProductKeyId</manageparamfield>    <copyactionurl></copyactionurl>    <copyparamfield></copyparamfield>    <xaxis>n</xaxis>    <yaxis>n</yaxis>    <isadvancesearch>y</isadvancesearch>    <Class></Class>    <SearchControlType>--Select--</SearchControlType>    <SearchControlParameters></SearchControlParameters>    <DbParamField></DbParamField>    <useMode>DataBase</useMode>    <IsGraph>n</IsGraph>    <allowdetailview>n</allowdetailview>   </column>  </columns>' ,'ZnodePimDownloadableProductKey' ,'ZnodePimDownloadableProductKey' ,'ZnodePimDownloadableProductKey' ,'0' ,null,null,null,null )  ,
 (  281,'Table' ,'ZnodeDomainList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>DomainId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>DomainId</name>      <headertext>Domain ID</headertext>      <width>10</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>DomainName</name>      <headertext>Domain Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>100</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ApiKey</name>      <headertext>API Key</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeDomainList' ,'ZnodeDomainList' ,'ZnodeDomainList' ,'0' ,null,null,null,null )  ,
 (  282,'Table' ,'ZnodeSearchProfile' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>SearchProfileId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>ProfileName</name>      <headertext>Search Profile Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PortalId</name>      <headertext>Store ID</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>        <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>PortalName</name>      <headertext>Store Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsDefault</name>      <headertext>Is Default</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Search/Search/GetTabStructureForProfile|/Search/Search/Delete</manageactionurl>      <manageparamfield>searchProfileId|searchProfileId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'SearchProfile' ,'SearchProfile' ,'SearchProfile' ,'0' ,null,null,null,null )  ,
 (  283,'Table' ,'SKUListForPrice' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>IsDownloadable</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Product Image</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>skucolumn</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsDownloadable</name>      <headertext>Is Downloadable</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>IsDownloadable</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>isDownloadable</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'SKUListForPrice' ,'SKUListForPrice' ,'SKUListForPrice' ,'0' ,null,null,null,null )  ,
 (  284,'Table' ,'ZnodeSearchAttributes' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>SearchProfileAttributeMappingId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>AttributeCode</name>      <headertext>Attribute Code</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>AttributeName</name>      <headertext>Attribute Name</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>IsFacets</name>      <headertext>IsFacets</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsUseInSearch</name>      <headertext>Is Use In Search</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>BoostValue</name>      <headertext>Boost Value</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SearchProfileId</name>      <headertext>Search Profile Id</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Search/Search/UnAssociateAttributesFromProfile</manageactionurl>      <manageparamfield>searchProfileAttributeMappingId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearchAttributes' ,'ZnodeSearchAttributes' ,'ZnodeSearchAttributes' ,'0' ,null,null,null,null )  ,
 (  285,'Table' ,'ZnodeSearchProfileAttribute' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>SearchProfileId</name>      <headertext>Search Profile Id</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>ProfileName</name>      <headertext>Search Profile Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>ProfileNameColumn</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearchProfileAttribute' ,'ZnodeSearchProfileAttribute' ,'ZnodeSearchProfileAttribute' ,'0' ,null,null,null,null )  ,
 (  286,'Table' ,'ZnodeUnAssociatedSearchAttributes' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>AttributeCode</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>AttributeName</name>      <headertext>Attribute Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>IsFacets</name>      <headertext>Is Facets</headertext>      <width>30</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>IsUseInSearch</name>      <headertext>Is Use In Search</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>BoostValue</name>      <headertext>Boost Value</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SearchProfileId</name>      <headertext>Search Profile Id</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Search/Search/UnAssociatedSearchAttribute</manageactionurl>      <manageparamfield>SerachProfilesAttributeMappingId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeUnAssociatedSearchAttributes' ,'ZnodeUnAssociatedSearchAttributes' ,'ZnodeUnAssociatedSearchAttributes' ,'0' ,null,null,null,null )  ,
 (  289,'Table' ,'ZnodeSearchProfileTriggers' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>SearchProfileTriggerId</name>      <headertext>Checkbox</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Keyword</name>      <headertext>Keyword</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>50</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>UserProfile</name>      <headertext>User Profile</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>DropDown</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>UserProfileId</name>      <headertext>User Profile Id</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>SearchProfileTriggerId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Search/Search/EditSearchProfileTrigger|/Search/Search/DeleteSearchTriggers</manageactionurl>      <manageparamfield>searchProfileTriggerId,searchProfileId|searchProfileTriggerId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>grid-action</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearchProfileTriggers' ,'ZnodeSearchProfileTriggers' ,'ZnodeSearchProfileTriggers' ,'0' ,null,null,null,null )  ,
 (  291,'Table' ,'ZnodeFormSubmissionList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>FormBuilderSubmitId</name>      <headertext>Form Builder Submit ID</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>FormBuilderId</name>      <headertext>ID</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>FormCode</name>      <headertext>Form Code</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/FormSubmission/View</islinkactionurl>      <islinkparamfield>FormBuilderSubmitId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>StoreName</name>      <headertext>Store Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>UserName</name>      <headertext>User Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>FullName</name>      <headertext>Full Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>View</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>View</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/FormSubmission/View</manageactionurl>      <manageparamfield>FormBuilderSubmitId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeFormSubmissionList' ,'ZnodeFormSubmissionList' ,'ZnodeFormSubmissionList' ,'0' ,null,null,null,null )  ,
 (  293,'Table' ,'ZnodeSearchPortalProfile' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PortalSearchProfileId</name>      <headertext>Checkbox</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>ProfileName</name>      <headertext>Search Profile Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>PortalId</name>      <headertext>Portal Id</headertext>      <width>0</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>PortalName</name>      <headertext>Store</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Delete</format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Search/Search/UnAssociatePortalToSearchProfile</manageactionurl>      <manageparamfield>PortalSearchProfileId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearcPortalProfile' ,'ZnodeSearcPortalProfile' ,'ZnodeSearcPortalProfile' ,'0' ,null,null,null,null )  ,
 (  295,'Table' ,'ZnodeSearchProfilePortal' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PortalId</name>      <headertext>Checkbox</headertext>      <width>40</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>StoreName</name>      <headertext>Store Name</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PortalId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>storecolumn</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>CompanyName</name>      <headertext>Brand</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>PortalId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>PortalId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Brand</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeSearchProfilePortal' ,'ZnodeSearchProfilePortal' ,'ZnodeSearchProfilePortal' ,'0' ,null,null,null,null )  ,
 (  296,'Table' ,'ZnodeFormBuilderList' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>FormBuilderId</name>      <headertext>Checkbox</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>FormCode</name>      <headertext>Form Code</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/FormBuilder/Edit</islinkactionurl>      <islinkparamfield>FormBuilderId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/FormBuilder/Edit|/FormBuilder/Delete</manageactionurl>      <manageparamfield>FormBuilderId|FormBuilderId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodeFormBuilderList' ,'ZnodeFormBuilderList' ,'ZnodeFormBuilderList' ,'0' ,null,null,null,null )  ,
 (  297,'Table' ,'ZnodePimDownloadableProductKeyForInventory' ,'<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimDownloadableProductKeyId</name>      <headertext>Checkbox</headertext>      <width>40</width>      <datatype>String</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>ID</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>ProductId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Code</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>DownloadableProductKey</name>      <headertext>Product Key</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>150</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>ProductId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>DownloadableProductURL</name>      <headertext>Download URL</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>150</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>ProductId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>IsUsed</name>      <headertext>Is Used</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>LocaleId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>50</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Delete</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>productId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>Id</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Delete</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Inventory/UpdateDownloadableProductKey|/Inventory/DeleteDownloadableProductKeys</manageactionurl>      <manageparamfield>PimDownloadableProductKeyId|PimDownloadableProductKeyId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' ,'ZnodePimDownloadableProductKeyForInventory' ,'ZnodePimDownloadableProductKeyForInventory' ,'ZnodePimDownloadableProductKeyForInventory' ,'0' ,null,null,null,null )  
insert into _TempZnodeApplicationCache ( ApplicationCacheId,ApplicationType,IsActive,StartDate,Duration) 
values
 (  1,'ApiCache' ,'1' ,'Dec  7 2017 11:53AM' , 0 )  ,
 (  2,'FullPageCache' ,'1' ,'Dec  7 2017 12:03PM' , 6333 )  
insert into _TempZnodeGlobalEntity ( GlobalEntityId,EntityName,IsActive,TableName) 
values
 (  1,'Store' ,'1' ,'ZnodePortalGlobalAttributeValue'  )  ,
 (  2,'User' ,'1' ,'ZnodeUserGlobalAttributeValue'  )  ,
 (  3,'Account' ,'1' ,'ZnodeAccountGlobalAttributeValue'  )  
insert into _TempZnodePimFrontEndProperties ( ZnodePimFrontendPropertiesId,IsComparable,IsUseInSearch,IsHtmlTags,IsFacets,AttributeCode) 
values
 (  77,'0' ,'0' ,'0' ,'0' ,'PackagingType'  )  ,
 (  78,'0' ,'0' ,'0' ,'0' ,'IsDownloadable'  )  
insert into _TempZnodeSearchFeature ( SearchFeatureId,ParentSearchFeatureId,FeatureCode,FeatureName,IsAdvanceFeature,ControlType,HelpDescription,ParentFeatureName) 
values
 (  1, null,'AutoCorrect' ,'Auto Correct' ,'0' ,'Yes/No' ,'' ,null )  ,
 (  10, null,'MinimumShouldMatch' ,'Minimum Should Match' ,'0' ,'Text' ,null,null )  
insert into _TempZnodeSearchQueryType ( SearchQueryTypeId,ParentSearchQueryTypeId,QueryTypeName,QueryBuilderClassName,HelpDescription,ParentQueryTypeName) 
values
 (  1, null,'Match' ,'MatchQueryBuilder' ,'Query the text in one searchable field.' ,null )  ,
 (  2, null,'Match Phrase' ,'MatchPhraseQueryBuilder' ,'Matches if the terms are present consecutively in the same order.' ,null )  ,
 (  4, null,'Match Phrase Prefix' ,'MatchPhrasePrefixQueryBuilder' ,'Adds different suffixes to the last term in the text similar to auto-completion.' ,null )  ,
 (  5, null,'Multi Match' ,'MultiMatchQueryBuilder' ,'Query the text in more than one searchable field.' ,null )  ,
 (  6, 5,'Best' ,null,'Used when text must appear in same searchable field.' ,'Multi Match'  )  ,
 (  7, 5,'Cross' ,null,'Used when text can be spread across multiple searchable fields.' ,'Multi Match'  )  
insert into _TempZnodeSearchQueryTypeFeature ( SearchQueryTypeFeatureId,FeatureName,QueryTypeName) 
values
 (  1,'Auto Correct' ,'Match'  )  ,
 (  2,'Auto Correct' ,'Match Phrase'  )  ,
 (  3,'Auto Correct' ,'Match Phrase Prefix'  )  ,
 (  4,'Auto Correct' ,'Multi Match'  )  ,
 (  6,'Minimum Should Match' ,'Match'  )  ,
 (  8,'Minimum Should Match' ,'Multi Match'  )  
insert into _TempZnodeImportAttributeValidation ( ImportAttributeValidationId,AttributeTypeName,AttributeCode,IsRequired,ControlName,ValidationName,SubValidationName,ValidationValue                   ,RegExp,DisplayOrder,SequenceNumber,Name) 
values
 (  164,'Text' ,'RedirectFrom' ,'1' ,'Text' ,'RegularExpression' ,null,'' ,'' , null, 10,'SEODetails'  )  ,
 (  165,'Text' ,'RedirectTo' ,'1' ,'Text' ,'RegularExpression' ,null,'' ,'' , null, 11,'SEODetails'  )  ,
 (  166,'Number' ,'EnableRedirection' ,'1' ,'Yes/No' ,'AllowNegative' ,null,'false' ,'' , null, 12,'SEODetails'  )  ,
 (  167,'Number' ,'EnableRedirection' ,'1' ,'Yes/No' ,'AllowDecimals' ,null,'false' ,'' , null, 12,'SEODetails'  )  ,
 (  168,'Number' ,'EnableRedirection' ,'1' ,'Number' ,'MinNumber' ,null,'0' ,'' , null, 12,'SEODetails'  )  ,
 (  169,'Number' ,'EnableRedirection' ,'1' ,'Number' ,'MaxNumber' ,null,'999999' ,'' , null, 12,'SEODetails'  )  ,
 (  170,'Text' ,'CompanyName' ,'0' ,'Text' ,'RegularExpression' ,null,'' ,'' , null, 19,'CustomerAddress'  )  
insert into _TempZnodeImportTemplateMapping ( ImportTemplateMappingId,SourceColumnName,TargetColumnName,DisplayOrder,IsActive,IsAllowNull,TemplateName) 
values
 (  150,'RedirectFrom' ,'RedirectFrom' , 0,'1' ,'1' ,'SEODetailsTemplate'  ) ,
 (  151,'RedirectTo' ,'RedirectTo' , 0,'1' ,'1' ,'SEODetailsTemplate'  ) ,
 (  152,'EnableRedirection' ,'EnableRedirection' , 0,'1' ,'1' ,'SEODetailsTemplate'  ) ,
 (  154,'CompanyName' ,'CompanyName' , 0,'1' ,'1' ,'CustomerAddressTemplate'  ) 
insert into _TempZnodeSearchProfile ( SearchProfileId,ProfileName,SearchSubQueryTypeId,Operator,IsDefault,QueryTypeName) 
values
  (  1,'ZnodeSearchProfile' , null,'OR' ,'1' ,'Multi Match'  )  
insert into _TempZnodeSearchProfileAttributeMapping ( SearchProfileAttributeMappingId,AttributeCode,IsFacets,IsUseInSearch,BoostValue,ProfileName) 
values
  (  1,'PriceRange' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  2,'ShortDescription' ,'0' ,'1' , null,'ZnodeSearchProfile'  )  ,
  (  3,'ProductName' ,'0' ,'1' , null,'ZnodeSearchProfile'  )  ,
  (  4,'FeatureDescription' ,'0' ,'1' , null,'ZnodeSearchProfile'  )  ,
  (  5,'ProductSpecification' ,'0' ,'1' , null,'ZnodeSearchProfile'  )  ,
  (  6,'SpecialFeatures' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  7,'Shelled' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  8,'Season' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  9,'Salted' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  10,'Specials' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  11,'Mild' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  12,'Brand' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  13,'Color' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  14,'Family' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  ,
  (  15,'Calories' ,'1' ,'0' , null,'ZnodeSearchProfile'  )  
insert into _TempZnodeCMSPortalMessage ( CMSPortalMessageId,StoreName,MessageKey,Message) 
values
 (  66,'Fine Foods' ,'CheckoutAsAGuestMessage' ,'<p>You don''t need to create account to order.</p>'  ) ,
 (  70,'Nut Wholesaler' ,'FooterCopyrightText' ,'<p>Copyright &copy; 2018 Maxwell''s Inc. All Rights Reserved.</p>'  ) 
insert into _TempZnodeCMSPortalMessageKeyTag ( [CMSPortalMessageKeyTagId] , [PortalId], [CMSMessageKeyId] ,[TagXML], [CreatedBy] , [CreatedDate] , [ModifiedBy] , [ModifiedDate],[MessageKey],[StoreName]  ) 
values
(  22, 1, 17,null, 2,'Jan 10 2018 11:30AM' , 2,'Jan 10 2018 11:30AM' ,'CheckoutAsAGuestMessage' ,'Fine Foods'  )  

insert into _TempZnodeEmailTemplateAreas ( EmailTemplateAreasId,Name,Code) 
values
 (  29,'CancelledOrderReceipt' ,'CancelledOrderReceipt'  )  ,
 (  30,'ProductKeyOrderReceipt' ,'ProductKeyOrderReceipt'  )  ,
 (  31,'OrderLineItemReceipt' ,'OrderLineItemReceipt'  )  
insert into _TempZnodeEmailTemplateLocale ( EmailTemplateLocaleId,[Subject],Descriptions,Content,TemplateName,Code) 
values
  (  52,'CancelledOrderReceipt' ,'CancelledOrderReceipt' ,'<p>&nbsp;</p>  <div>  <div style="font-family: Arial, Helvetica; font-size: 10px; text-align: left; color: #292a2a; border: solid 1px #c3c3c3; margin-top: 10px;">  <div style="background-color: #eff3fb; color: #292a2a; font-size: 1.5em; font-weight: bold; padding: .5em; border-bottom: solid 1px #c3c3c3;">  <div style="display: inline-block; vertical-align: middle;">#StoreLogo#&nbsp;</div>  <div style="display: inline-block; vertical-align: middle;">#SiteName# Cancelled Order&nbsp; Notification</div>  </div>  <div style="padding: 1em;">  <div>Dear #BillingFirstName# #BillingLastName#,</div>  <br />  <div>We would like to inform you dat you''re order TEMPhas&nbsp;cancelled.</div>  </div>  <div style="padding: 10px;">  <table style="font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" border="0" width="100%" cellspacing="3" cellpadding="0">  <tbody>  <tr>  <td colspan="5"><hr /></td>  </tr>  <tr>  <td colspan="2" align="left" nowrap="nowrap" width="25%">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Order Information</div>  </td>  <td colspan="2" align="left" nowrap="nowrap">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Customer Service</div>  </td>  </tr>  <tr>  <td align="left" nowrap="nowrap" width="10%"><strong>Order Number:</strong></td>  <td align="left" nowrap="nowrap" width="30%">#OrderId#</td>  <td align="left" nowrap="nowrap" width="4%"><strong>E-Mail:</strong></td>  <td align="left" nowrap="nowrap">#CustomerServiceEmail#</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>Order Date:</strong></td>  <td align="left" nowrap="nowrap">#OrderDate#</td>  <td align="left" nowrap="nowrap"><strong>Phone:</strong></td>  <td align="left" nowrap="nowrap">#CustomerServicePhoneNumber#</td>  </tr>  <tr>  <td style="vertical-align: top;" align="left" nowrap="nowrap"><strong>Promotion Code:</strong></td>  <td align="left" nowrap="nowrap">#PromotionCode#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>Payment Method:</strong></td>  <td align="left" nowrap="nowrap">#PaymentName#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>#PurchaseNumberLabel#</strong></td>  <td align="left" nowrap="nowrap">#PONumber#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>#CardTransactionLabel#</strong></td>  <td align="left" nowrap="nowrap">#CardTransactionID#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td colspan="4"><hr /></td>  </tr>  <tr>  <td style="font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" colspan="2" align="left" nowrap="nowrap" width="45%">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Billing Address</div>  </td>  <td colspan="2" align="left">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Shipping Address</div>  </td>  </tr>  <tr>  <td colspan="2" align="Left" nowrap="nowrap">#BillingAddress#</td>  <td colspan="3" valign="top">#ShippingAddress#</td>  </tr>  <tr>  <td colspan="7">&nbsp;</td>  </tr>  </tbody>  </table>  <div data-info="#AddressItems#">  <table width="100%" cellspacing="0" cellpadding="3">  <tbody>  <tr style="background-color: #eff3fb;">  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>Item</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>SKU</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" align="center"><strong>Qty</strong></td>  </tr>  <tr data-info="#LineItems#OmsOrderShipmentID##">  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="left" width="25%">#Name#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="left" width="10%">#SKU#&nbsp;</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="center" width="5%">#Quantity#</td>  </tr>  </tbody>  </table>  </div>  </div>  <div style="background-color: #eff3fb; color: #292a2a; font-weight: bold; padding: .5em; border: solid 1px #c3c3c3; text-align: center; border-top: 0;">  <div style="display: inline-block; vertical-align: middle; font-size: 15px; color: #292a2a;">TEMPTEMPThank you</div>  </div>  </div>  </div>' ,'CancelledOrderReceipt' ,'en-US'  )  ,
  (  53,'ProductKeyOrderReceipt' ,'ProductKeyOrderReceipt' ,'<div style="padding: 10px;"><br />  <p>&nbsp;</p>  <div>  <div style="font-family: Arial, Helvetica; font-size: 10px; text-align: left; color: #292a2a; border: solid 1px #c3c3c3; margin-top: 10px;">  <div style="background-color: #eff3fb; color: #292a2a; font-size: 1.5em; font-weight: bold; padding: .5em; border-bottom: solid 1px #c3c3c3;">#StoreLogo# #SiteName#&nbsp;</div>  <div style="padding: 10px;">  <div style="font-family: Verdana; color: #333333; font-size: 11px;">#ReceiptText#</div>  <table style="font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; width: 100.512%;" border="0" cellspacing="3" cellpadding="0">  <tbody>  <tr style="height: 13px;">  <td style="width: 105%; height: 13px;" colspan="4"><hr /></td>  </tr>  <tr style="height: 18px;">  <td style="width: 55%; height: 18px;" colspan="2" align="left" nowrap="nowrap">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Order Information</div>  </td>  <td style="width: 40%; height: 18px;" align="left" nowrap="nowrap">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Customer Service</div>  </td>  </tr>  <tr style="height: 13px;">  <td style="width: 27%; height: 13px;" align="left" nowrap="nowrap"><strong>Order Number:</strong></td>  <td style="width: 28%; height: 13px;" align="left" nowrap="nowrap">#OrderId#</td>  <td style="width: 40%; height: 13px;" align="left" nowrap="nowrap">#CustomerServiceEmail#</td>  </tr>  <tr style="height: 13px;">  <td style="width: 27%; height: 13px;" align="left" nowrap="nowrap"><strong>Order Date:</strong></td>  <td style="width: 28%; height: 13px;" align="left" nowrap="nowrap">#OrderDate#</td>  <td style="width: 40%; height: 13px;" align="left" nowrap="nowrap">#CustomerServicePhoneNumber#</td>  </tr>  <tr style="height: 13px;">  <td style="vertical-align: top; width: 27%; height: 13px;" align="left" nowrap="nowrap"><strong>Promotion Code:</strong></td>  <td style="width: 28%; height: 13px;" align="left" nowrap="nowrap">#PromotionCode#</td>  <td style="width: 40%; height: 13px;">&nbsp;</td>  </tr>  <tr style="height: 13px;">  <td style="width: 27%; height: 13px;" align="left" nowrap="nowrap"><strong>Payment Method:</strong></td>  <td style="width: 28%; height: 13px;" align="left" nowrap="nowrap">#PaymentName#</td>  <td style="width: 40%; height: 13px;">&nbsp;</td>  </tr>  <tr style="height: 13px;">  <td style="width: 27%; height: 13px;" align="left" nowrap="nowrap"><strong>#CardTransactionLabel#</strong></td>  <td style="width: 28%; height: 13px;" align="left" nowrap="nowrap">#CardTransactionID#</td>  <td style="width: 40%; height: 13px;">&nbsp;</td>  </tr>  <tr style="height: 13px;">  <td style="width: 27%; height: 13px;" align="left" nowrap="nowrap"><strong>#PurchaseNumberLabel#</strong></td>  <td style="width: 28%; height: 13px;" align="left" nowrap="nowrap">#PONumber#</td>  <td style="width: 40%; height: 13px;">&nbsp;</td>  </tr>  <tr style="height: 13px;">  <td style="width: 95%; height: 13px;" colspan="3"><hr /></td>  </tr>  <tr style="height: 18px;">  <td style="font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; width: 55%; height: 18px;" colspan="2" align="left" nowrap="nowrap">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Billing Address</div>  </td>  <td style="width: 40%; height: 18px;" align="left">&nbsp;</td>  </tr>  <tr style="height: 13px;">  <td style="width: 55%; height: 13px;" colspan="2" align="Left" nowrap="nowrap">#BillingAddress#</td>  <td style="width: 50%; height: 13px;" colspan="2" valign="top">&nbsp;</td>  </tr>  <tr style="height: 13px;">  <td style="width: 126.203%; height: 13px;" colspan="6">&nbsp;</td>  </tr>  </tbody>  </table>  <div data-info="#AddressItems#">  <table width="100%" cellspacing="0" cellpadding="3">  <tbody>  <tr style="height: 13px;">  <td style="height: 13px; color: #292a2a; padding-bottom: 5px; font-size: 11px; font-weight: bold;" colspan="3">#ShipmentNo#</td>  </tr>  <tr style="height: 12px;">  <td style="height: 12px; color: black; font-size: 10px;" colspan="3">#ShipTo#</td>  </tr>  <tr style="height: 12px; background-color: #eff3fb;">  <td style="padding: 0px 5px; border: 1px solid silver; height: 12px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;"><strong>SKU</strong></td>  <td style="padding: 0px 5px; border: 1px solid silver; height: 12px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;"><strong>Item</strong></td>  <td style="padding: 0px 5px; border: 1px solid silver; height: 12px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;"><strong>Key</strong></td>  </tr>  <tr style="height: 12.63px;" data-info="#LineItems#OmsOrderShipmentID##">  <td style="padding: 0px 5px; border: 1px solid silver; height: 12.63px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;" align="left" width="10%">#SKU#&nbsp;</td>  <td style="padding: 0px 5px; border: 1px solid silver; height: 12.63px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;" align="left" width="25%">#Name#</td>  <td style="padding: 0px 5px; border: 1px solid silver; height: 12.63px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;" align="left" width="25%">#Keys#&nbsp;</td>  </tr>  </tbody>  </table>  </div>  </div>  </div>  </div>  </div>' ,'ProductKeyOrderReceipt' ,'en-US'  )  ,
  (  54,'Order Line Item Receipt' ,'Order Line Item Receipt' ,'<p>&nbsp;</p>  <p>Customer Receipt</p>  <div>  <div style="font-family: Arial, Helvetica; font-size: 10px; text-align: left; color: #292a2a; border: solid 1px #c3c3c3; margin-top: 10px;">  <div style="background-color: #eff3fb; color: #292a2a; font-size: 1.5em; font-weight: bold; padding: .5em; border-bottom: solid 1px #c3c3c3;">#StoreLogo# #SiteName#&nbsp;Customer Receipt</div>  <div style="padding: 10px;">  <div style="font-family: Verdana; color: #333333; font-size: 11px;">#ReceiptText#</div>  <table style="font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" border="0" width="100%" cellspacing="3" cellpadding="0">  <tbody>  <tr>  <td colspan="5"><hr /></td>  </tr>  <tr>  <td colspan="2" align="left" nowrap="nowrap" width="25%">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Order Information</div>  </td>  <td colspan="2" align="left" nowrap="nowrap">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Customer Service</div>  </td>  </tr>  <tr>  <td align="left" nowrap="nowrap" width="10%"><strong>Order Number:</strong></td>  <td align="left" nowrap="nowrap" width="30%">#OrderId#</td>  <td align="left" nowrap="nowrap" width="4%"><strong>E-Mail:</strong></td>  <td align="left" nowrap="nowrap">#CustomerServiceEmail#</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>Order Date:</strong></td>  <td align="left" nowrap="nowrap">#OrderDate#</td>  <td align="left" nowrap="nowrap"><strong>Phone:</strong></td>  <td align="left" nowrap="nowrap">#CustomerServicePhoneNumber#</td>  </tr>  <tr>  <td style="vertical-align: top;" align="left" nowrap="nowrap"><strong>Promotion Code:</strong></td>  <td align="left" nowrap="nowrap">#PromotionCode#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>Payment Method:</strong></td>  <td align="left" nowrap="nowrap">#PaymentName#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>#CardTransactionLabel#</strong></td>  <td align="left" nowrap="nowrap">#CardTransactionID#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td align="left" nowrap="nowrap"><strong>#PurchaseNumberLabel#</strong></td>  <td align="left" nowrap="nowrap">#PONumber#</td>  <td>&nbsp;</td>  <td>&nbsp;</td>  </tr>  <tr>  <td colspan="4"><hr /></td>  </tr>  <tr>  <td style="font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" colspan="2" align="left" nowrap="nowrap" width="45%">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Billing Address</div>  </td>  <td colspan="2" align="left">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">Shipping Address</div>  </td>  </tr>  <tr>  <td colspan="2" align="Left" nowrap="nowrap">#BillingAddress#</td>  <td colspan="3" valign="top">#ShippingAddress#</td>  </tr>  <tr>  <td colspan="7">&nbsp;</td>  </tr>  </tbody>  </table>  <div data-info="#AddressItems#">  <table width="100%" cellspacing="0" cellpadding="3">  <tbody>  <tr>  <td style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;" colspan="6">#ShipmentNo#</td>  </tr>  <tr>  <td style="color: black; font-size: 10px;" colspan="6">#ShipTo#</td>  </tr>  <tr style="background-color: #eff3fb;">  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>SKU</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>Item</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>Description</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" align="center"><strong>Qty</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" align="center"><strong>Item State</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" align="center"><strong>Tracking Number</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>Price</strong></td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;"><strong>Total</strong></td>  </tr>  <tr data-info="#LineItems#OmsOrderShipmentID##">  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="left" width="10%">#SKU#&nbsp;</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="left" width="25%">#Name#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="left" width="25%">#Description#&nbsp;  <p>#ShortDescription#</p>  #UOMDescription#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="center" width="5%">#Quantity#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="center" width="5%">#OrderLineItemState#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="center" width="5%">#TrackingNumber#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; padding: 0 5px;" align="left" width="20%">#Price#</td>  <td style="border: silver 1px solid; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px; min-width: 170px; padding: 0 5px;" align="right" width="20%">#ExtendedPrice#</td>  </tr>  </tbody>  </table>  </div>  <table style="width: 100%; padding: 10px; display: inline-block;" cellspacing="0" cellpadding="3">  <tbody>  <tr>  <td style="border: none; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" colspan="2" align="left" nowrap="nowrap">  <div style="color: #292a2a; font-weight: bold; font-size: 11px; padding-bottom: 5px;">#AdditionalInstructLabel#</div>  </td>  </tr>  <tr>  <td style="border: none; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" colspan="2">  <div style="width: 675px;" align="justify">#AdditionalInstructions#</div>  </td>  </tr>  <tr>  <td style="border: none; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" colspan="2">  <div style="margin-bottom: 5px;">&nbsp;</div>  </td>  </tr>  <tr>  <td style="border: none; font-family: Verdana, Helvetica, sans-serif; color: #333333; font-size: 10px;" colspan="2" align="left" nowrap="nowrap">#FeedBack#</td>  </tr>  </tbody>  </table>  </div>  </div>  </div>' ,'OrderLineItemReceipt' ,'en-US'  )  
insert into _TempZnodeEmailTemplateMapper ( EmailTemplateMapperId,IsActive,StoreName,TemplateName,Name) 
values
 (  65,'1' ,'Fine Foods' ,'NewUserAccountWebstore' ,'NewUserAccountWebstore'  )   ,
 (  66,'1' ,'Fine Foods' ,'CancelledOrderReceipt' ,'CancelledOrderReceipt'  )   ,
 (  67,'1' ,'Fine Foods' ,'ProductKeyOrderReceipt' ,'ProductKeyOrderReceipt'  ),
(  68,'1' ,'Fine Foods' ,'OrderLineItemReceipt' ,'OrderLineItemReceipt'  ) 
    
    Alter table _TempZnodeActionMenu add NewCreateId  int  
 
    Alter table _TempZnodeActions add NewCreateId  int  
 
    Alter table _TempZnodeMenu add NewCreateId  int ,IsNewParentMenu int 
 
    Alter table _TempZnodeMenuActionsPermission add NewCreateId  int  
 
    Alter table _TempZnodeCMSMessage add NewCreateId  int  
 
    Alter table _TempZnodeCMSMessageKey add NewCreateId  int  
 
    Alter table _TempZnodeEmailTemplate add NewCreateId  int  
 
    Alter table _TempZnodePimAttribute add NewCreateId  int 
 
    Alter table _TempZnodePimAttributeDefaultValue add NewCreateId  int 
 
    Alter table _TempZnodePimAttributeDefaultValueLocale add NewCreateId  int 
 
    --Alter table _TempZnodePimAttributeGroup add NewCreateId  int 
 
    --Alter table _TempZnodePimAttributeGroupLocale add NewCreateId  int 
 
    Alter table _TempZnodePimAttributeGroupMapper add NewCreateId  int 
 
    Alter table _TempZnodePimAttributeLocale add NewCreateId  int 
 
    Alter table _TempZnodePimFamilyGroupMapper add NewCreateId  int 
 
    Alter table _TempZnodePortalPixelTracking add NewCreateId  int 
 
    Alter table _TempZnodePriceList add NewCreateId  int 
 
    Alter table _TempZnodePromotionType add NewCreateId  int 
 
    Alter table _TempZnodeTaxRuleTypes add NewCreateId  int 
 
    Alter table _TempZnodeApplicationSetting add NewCreateId  int 
 
    Alter table _TempZnodeApplicationCache add NewCreateId  int 
 
    --Alter table _TempZnodeCMSTheme add NewCreateId  int 
 
    --Alter table _TempZnodeCMSThemeCSS add NewCreateId  int 
 
    Alter table _TempZnodeGlobalEntity add NewCreateId  int 
 
    Alter table _TempZnodePimFrontEndProperties add NewCreateId  int 
     
    Alter table _TempZnodeSearchFeature add NewCreateId  int ,IsNewParentSearchFeature int 
 
    Alter table _TempZnodeSearchQueryType add NewCreateId  int ,IsNewParentSearchQueryType int 
 
    Alter table _TempZnodeSearchQueryTypeFeature add NewCreateId  int 
 
    Alter table _TempZnodeImportAttributeValidation add NewCreateId  int 
 
    Alter table _TempZnodeImportTemplateMapping add NewCreateId  int 
 
    Alter table _TempZnodeSearchProfile add NewCreateId  int 
 
    Alter table _TempZnodeSearchProfileAttributeMapping add NewCreateId  int 
 
    Alter table _TempZnodeCMSPortalMessage add NewCreateId  int 
 
    
    Alter table _TempZnodeCMSPortalMessageKeyTag add NewCreateId  int  
 
    
    Alter table _TempZnodeEmailTemplateAreas add NewCreateId  int 
    Alter table _TempZnodeEmailTemplateLocale add NewCreateId  int 
    Alter table _TempZnodeEmailTemplateMapper add NewCreateId  int 
    Go  
    
  
 
       UPDATE a   SET AreaName = b.AreaName  ,a.IsGlobalAccess= b.IsGlobalAccess   
    FROM ZnodeActions a    
    INNER JOIN _TempZnodeActions b ON (b.ControllerName = a.ControllerName AND b.ActionName = a.ActionName and isnull(a.AreaName,'') = isnull(b.AreaName,'') )   
 
       INSERT INTO ZnodeActions (AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)    
    SELECT AreaName,ControllerName,ActionName,IsGlobalAccess,CreatedBy,getdate(),ModifiedBy,getdate()   
    FROM _TempZnodeActions a   
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeActions tr WHERE tr.ControllerName = a.ControllerName   AND a.ActionName = tr.ActionName 
    and isnull(a.AreaName,'') = isnull(tr.AreaName,'') )  
 
    Update B 
    sET NewCreateId =A.ActionId 
    FROM ZnodeActions a    
    INNER JOIN _TempZnodeActions b ON (b.ControllerName = a.ControllerName AND b.ActionName = a.ActionName and isnull(a.AreaName,'') = isnull(b.AreaName,'') )      
   
    GO   
    update _TempZnodeMenu set ParentMenuId =null  
 
    update _TempZnodeMenu set ParentMenuId =zmp.MenuId  
    FROM _TempZnodeMenu TZM      
    INNER JOIN  ZnodeMenu zmp on  TZM.ParentMenuName = zmp.MenuName 
 
    update _TempZnodeMenu set IsNewParentMenu=1 
    FROM _TempZnodeMenu TZM 
    WHere  TZM.ParentMenuName  is not null  
    and ParentMenuId is null  
         
    update ZM  set MenuSequence=TZM.MenuSequence,AreaName=TZM.AreaName,     
    ControllerName=TZM.ControllerName,ActionName=TZM.ActionName,CSSClassName=TZM.CSSClassName,IsActive=TZM.IsActive,   
    ModifiedBy=TZM.ModifiedBy,ModifiedDate = TZM.ModifiedDate   
    FROM _TempZnodeMenu TZM      
    INNER JOIN ZnodeMenu ZM  ON (ZM.MenuName = TZM.MenuName )   
    left  join  ZnodeMenu zmp on zmp.MenuId=zm.ParentMenuId 
    where isnull(tzm.ParentMenuName,'') = isnull(zmp.MenuName,'') 
 
    INSERT INTO ZnodeMenu (ParentMenuId,MenuName,MenuSequence,AreaName,ControllerName,ActionName,CSSClassName,IsActive, 
    CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)    
      SELECT TZM.ParentMenuId, 
      case When IsNewParentMenu =1 then tzm.ParentMenuName+'~~'+TZM.MenuName   else TZM.MenuName end , 
      TZM.MenuSequence,TZM.AreaName,TZM.ControllerName,TZM.ActionName,  
     TZM.CSSClassName,TZM.IsActive,TZM.CreatedBy,getdate() ,TZM.ModifiedBy,getdate()     
    FROM _TempZnodeMenu TZM   
    left  join  ZnodeMenu zmp on isnull(tzm.ParentMenuName,'') = isnull(zmp.MenuName,'') 
    WHERE NOT EXISTS  
    (SELECT TOP 1 1 FROM ZnodeMenu ZM  
    left  join  ZnodeMenu zmp on zmp.MenuId=zm.ParentMenuId 
    WHERE  ZM.MenuName = TZM.MenuName 
    and  isnull(tzm.ParentMenuName,'') = isnull(zmp.MenuName,'') )    
 
    update ZM  set ParentMenuId=zmp.MenuId,  
    ZM.MenuName=TZM.MenuName  
    FROM _TempZnodeMenu TZM       
    INNER JOIN ZnodeMenu ZM  ON (ZM.MenuName =  tzm.ParentMenuName+'~~'+TZM.MenuName )    
    inner   join  ZnodeMenu zmp on tzm.ParentMenuName = zmp.MenuName 
    where TZM.IsNewParentMenu =1  
                 
    Update TZM 
    sET NewCreateId =zm.MenuId 
    FROM _TempZnodeMenu TZM      
    INNER JOIN ZnodeMenu ZM  ON (ZM.MenuName = TZM.MenuName )   
    left  join  ZnodeMenu zmp on zmp.MenuId=zm.ParentMenuId 
    where isnull(tzm.ParentMenuName,'') = isnull(zmp.MenuName,'') 
         
    
    
    GO 
      
    INSERT INTO ZnodeActionMenu (MenuId,ActionId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate )   
    SELECT d.MenuId,f.ActionId,d.CreatedBy,getdate(),d.ModifiedBy,getdate() 
    FROM _tempZnodeActionMenu a          
    INNER JOIN ZnodeActions f ON (f.ControllerName = a.ControllerName AND f.ActionName = a.ActionName)   
    INNER JOIN ZnodeMenu d On (d.Menuname = a.MenuNAme ) 
    left  join  ZnodeMenu zmp on zmp.MenuId=d.ParentMenuId 
    WHERE isnull(a.ParentMenuName,'') = isnull(zmp.MenuName,'') and 
    NOT EXISTS (SELECT TOP 1 1 FROM ZnodeActionMenu rtr WHERE rtr.MenuId = d.MenuId AND rtr.ActionId = f.ActionId )  
     
    Update a 
    sET NewCreateId =rtr.ActionMenuId 
    FROM _tempZnodeActionMenu a    
    INNER JOIN ZnodeActions f ON (f.ControllerName = a.ControllerName AND f.ActionName = a.ActionName)      
    INNER JOIN ZnodeMenu d On (d.Menuname = a.MenuNAme ) 
    left  join  ZnodeMenu zmp on zmp.MenuId=d.ParentMenuId 
    inner join ZnodeActionMenu rtr on rtr.MenuId = d.MenuId AND rtr.ActionId = f.ActionId 
    WHERE isnull(a.ParentMenuName,'') = isnull(zmp.MenuName,'')  
        
       GO      
    INSERT INTO ZnodeMenuActionsPermission (MenuId  ,ActionId  ,AccessPermissionId  ,CreatedBy  ,CreatedDate  ,ModifiedBy  ,ModifiedDate  )   
    SELECT d.MenuId  ,f.ActionId  ,g.AccessPermissionId  ,g.CreatedBy  ,getdate()  ,d.ModifiedBy  ,getdate() 
    FROM _tempZnodeMenuActionsPermission a    
    INNER JOIN ZnodeActions f ON (f.ControllerName = a.ControllerName AND f.ActionName = a.ActionName)   
    INNER JOIN ZnodeAccessPermission g ON (g.PermissionsName = a.PermissionsName )   
    INNER JOIN ZnodeMenu d On (d.Menuname = a.MenuNAme ) 
    left  join  ZnodeMenu zmp on zmp.MenuId=d.ParentMenuId 
    WHERE isnull(a.ParentMenuName,'') = isnull(zmp.MenuName,'')   
    and NOT EXISTS (SELECT TOP 1 1 FROM ZnodeMenuActionsPermission rtr WHERE rtr.MenuId = d.MenuId AND rtr.ActionId = f.ActionId AND rtr.AccessPermissionId = g.AccessPermissionId )    
                 
    Update a 
    sET NewCreateId =rtr.MenuActionsPermissionId 
    FROM _tempZnodeMenuActionsPermission a    
    INNER JOIN ZnodeActions f ON (f.ControllerName = a.ControllerName AND f.ActionName = a.ActionName)   
    INNER JOIN ZnodeAccessPermission g ON (g.PermissionsName = a.PermissionsName )   
    INNER JOIN ZnodeMenu d On (d.Menuname = a.MenuNAme ) 
    left  join  ZnodeMenu zmp on zmp.MenuId=d.ParentMenuId 
    INNER JOIN ZnodeMenuActionsPermission rtr on rtr.MenuId = d.MenuId AND rtr.ActionId = f.ActionId AND rtr.AccessPermissionId = g.AccessPermissionId 
    WHERE isnull(a.ParentMenuName,'') = isnull(zmp.MenuName,'')   
     
    GO 
    --UPDATE a    
    --SET CreatedBy=b.CreatedBy,CreatedDate= b.CreatedDate,ModifiedBy= b.ModifiedBy,ModifiedDate= b.ModifiedDate  
    --FROM ZnodeCMSMessage a    
    --INNER JOIN _TempZnodeCMSMessage b ON  (a.Message = b.Message ) 
 
    INSERT INTO ZnodeCMSMessage(LocaleId,Message,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT LocaleId,Message,CreatedBy,CreatedDate,ModifiedBy,getdate() 
    FROM _TempZnodeCMSMessage tcm 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeCMSMessage ZCM WHERE ZCM.Message = tcm.Message) 
 
    Update B 
    sET NewCreateId =A.CMSMessageId 
    FROM ZnodeCMSMessage a    
    INNER JOIN _TempZnodeCMSMessage b ON (a.Message = b.Message )      
   
    GO 
    UPDATE a   SET MessageTag =b.MessageTag 
    FROM ZnodeCMSMessageKey a    
    INNER JOIN _TempZnodeCMSMessageKey b ON  (a.MessageKey = b.MessageKey ) 
 
    INSERT INTO ZnodeCMSMessageKey(MessageKey,MessageTag,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT MessageKey,MessageTag,CreatedBy,getdate() ,ModifiedBy,getdate() 
    FROM _TempZnodeCMSMessageKey tcm 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeCMSMessageKey ZCM WHERE ZCM.MessageKey = tcm.MessageKey) 
 
    Update B 
    sET NewCreateId =A.CMSMessageKeyId 
    FROM ZnodeCMSMessageKey a    
    INNER JOIN _TempZnodeCMSMessageKey b ON (a.MessageKey = b.MessageKey )  
 
    GO 
     
 
    INSERT INTO ZnodeEmailTemplate(TemplateName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT TemplateName,CreatedBy,getdate() ,ModifiedBy,getdate() 
    FROM _TempZnodeEmailTemplate tcm 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeEmailTemplate ZCM WHERE ZCM.TemplateName = tcm.TemplateName) 
 
    Update B 
    sET NewCreateId =A.EmailTemplateId 
    FROM ZnodeEmailTemplate a    
    INNER JOIN _TempZnodeEmailTemplate b ON (a.TemplateName = b.TemplateName ) 
    
       GO 
 
    UPDATE a   SET IsCategory = b.IsCategory , 
        a.DisplayOrder = b.DisplayOrder, 
        a.HelpDescription = b.HelpDescription 
    FROM ZnodePimAttribute a    
    INNER JOIN _TempZnodePimAttribute b ON (a.AttributeCode = b.AttributeCode ) 
    INNER JOIN ZnodeAttributeType zat ON (zat.AttributeTypeName = b.AttributeTypeName  and zat.AttributeTypeId = a.AttributeTypeId) 
 
    INSERT INTO ZnodePimAttribute(ParentPimAttributeId,AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined,IsConfigurable,IsPersonalizable,IsShowOnGrid,DisplayOrder 
             ,HelpDescription,IsCategory,IsHidden,IsSwatch,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT NULL,zat.AttributeTypeId,tpa.AttributeCode,tpa.IsRequired,tpa.IsLocalizable,tpa.IsFilterable,tpa.IsSystemDefined,tpa.IsConfigurable,tpa.IsPersonalizable,tpa.IsShowOnGrid,tpa.DisplayOrder 
             ,tpa.HelpDescription,tpa.IsCategory,tpa.IsHidden,tpa.IsSwatch,2,getdate(),2,getdate() 
    FROM _TempZnodePimAttribute tpa 
    INNER JOIN ZnodeAttributeType zat ON (zat.AttributeTypeName = tpa.AttributeTypeName)  
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttribute Zpa WHERE zpa.AttributeTypeId=zat.AttributeTypeId AND zpa.AttributeCode = tpa.AttributeCode) 
 
    Update B 
    sET b.NewCreateId =A.PimAttributeId 
    FROM _TempZnodePimAttribute b 
    INNER JOIN ZnodeAttributeType zat ON (zat.AttributeTypeName = b.AttributeTypeName) 
    INNER JOIN ZnodePimAttribute a ON (a.AttributeTypeId=zat.AttributeTypeId AND a.AttributeCode = b.AttributeCode) 
     
    
    
    GO 
    INSERT INTO ZnodePimAttributeDefaultValue (PimAttributeId,AttributeDefaultValueCode,IsEditable,DisplayOrder,IsDefault,SwatchText,MediaId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT PA.PimAttributeId,TPADV.AttributeDefaultValueCode,TPADV.IsEditable,TPADV.DisplayOrder,TPADV.IsDefault,TPADV.SwatchText,TPADV.MediaId,2,getdate(),2,getdate() 
    FROM _TempZnodePimAttributeDefaultValue TPADV  
    INNER JOIN ZnodePimAttribute PA ON (PA.AttributeCode = TPADV.AttributeCode) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeDefaultValue PDV WHERE PDV.PimAttributeId = PA.PimAttributeId AND PDV.AttributeDefaultValueCode = TPADV.AttributeDefaultValueCode) 
 
    UPDATE B 
    SET B.NewCreateId =PDV.PimAttributeDefaultValueId 
    FROM _TempZnodePimAttributeDefaultValue B 
    INNER JOIN ZnodePimAttribute A ON (A.AttributeCode = B.AttributeCode) 
    INNER JOIN ZnodePimAttributeDefaultValue PDV ON (PDV.PimAttributeId = A.PimAttributeId AND PDV.AttributeDefaultValueCode = B.AttributeDefaultValueCode) 
 
    GO 
 
    INSERT INTO ZnodePimAttributeDefaultValueLocale (LocaleId,PimAttributeDefaultValueId,AttributeDefaultValue,[Description],CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT TPADV.LocaleId,PA.PimAttributeDefaultValueId,TPADV.AttributeDefaultValue,TPADV.[Description],2,getdate(),2,getdate()  
    FROM _TempZnodePimAttributeDefaultValueLocale TPADV  
    INNER JOIN ZnodePimAttributeDefaultValue PA ON (PA.AttributeDefaultValueCode = TPADV.AttributeDefaultValueCode) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeDefaultValueLocale PDV WHERE PDV.PimAttributeDefaultValueId = PA.PimAttributeDefaultValueId  
          AND PDV.AttributeDefaultValue = TPADV.AttributeDefaultValue) 
 
    UPDATE B 
    SET B.NewCreateId =PDV.PimAttributeDefaultValueLocaleId 
    FROM _TempZnodePimAttributeDefaultValueLocale B 
    INNER JOIN ZnodePimAttributeDefaultValue A ON (A.AttributeDefaultValueCode = B.AttributeDefaultValueCode) 
    INNER JOIN ZnodePimAttributeDefaultValueLocale PDV ON (PDV.PimAttributeDefaultValueId = A.PimAttributeDefaultValueId AND PDV.AttributeDefaultValue = B.AttributeDefaultValue) 
 
  
 
    GO 
    INSERT INTO ZnodePimAttributeGroupMapper (PimAttributeGroupId,PimAttributeId,AttributeDisplayOrder,IsSystemDefined,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT pag.PimAttributeGroupId,pa.PimAttributeId,tpgm.AttributeDisplayOrder,tpgm.IsSystemDefined,2,getdate(),2,getdate() 
    FROM _TempZnodePimAttributeGroupMapper tpgm 
    INNER JOIN ZnodePimAttributeGroup pag ON (pag.GroupCode = tpgm.GroupCode) 
    INNER JOIN ZnodePimAttribute pa ON (pa.AttributeCode = tpgm.AttributeCode) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeGroupMapper pagm WHERE pagm.PimAttributeGroupId = pag.PimAttributeGroupId AND pagm.PimAttributeId = pa.PimAttributeId) 
 
    UPDATE tpgm 
    set tpgm.NewCreateId = pagm.PimAttributeGroupMapperId 
    FROM _TempZnodePimAttributeGroupMapper tpgm 
    INNER JOIN ZnodePimAttributeGroup pag ON (pag.GroupCode = tpgm.GroupCode) 
    INNER JOIN ZnodePimAttribute pa ON (pa.AttributeCode = tpgm.AttributeCode) 
    INNER JOIN ZnodePimAttributeGroupMapper pagm ON (pagm.PimAttributeGroupId = pag.PimAttributeGroupId AND pagm.PimAttributeId = pa.PimAttributeId) 
 
    GO 
 
    update PDV 
    set PDV.AttributeName = B.AttributeName 
    FROM _TempZnodePimAttributeLocale B 
    INNER JOIN ZnodePimAttribute A ON (A.AttributeCode = B.AttributeCode) 
    INNER JOIN ZnodePimAttributeLocale PDV ON (PDV.PimAttributeId = A.PimAttributeId) 
 
    INSERT INTO ZnodePimAttributeLocale(LocaleId,PimAttributeId,AttributeName,[Description],CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT TPGL.LocaleId,PA.PimAttributeId,TPGL.AttributeName,TPGL.[Description],2,getdate(),2,getdate()  
    FROM _TempZnodePimAttributeLocale TPGL 
    INNER JOIN ZnodePimAttribute PA ON (PA.AttributeCode = TPGL.AttributeCode) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeLocale PAGL WHERE PAGL.PimAttributeId = PA.PimAttributeId 
         AND PAGL.AttributeName = TPGL.AttributeName) 
 
    UPDATE B 
    SET B.NewCreateId =PDV.PimAttributeLocaleId 
    FROM _TempZnodePimAttributeLocale B 
    INNER JOIN ZnodePimAttribute A ON (A.AttributeCode = B.AttributeCode) 
    INNER JOIN ZnodePimAttributeLocale PDV ON (PDV.PimAttributeId = A.PimAttributeId AND PDV.AttributeName = B.AttributeName) 
     
    
    
 
    GO 
    INSERT INTO ZnodePimFamilyGroupMapper (PimAttributeFamilyId,PimAttributeGroupId,PimAttributeId,GroupDisplayOrder,IsSystemDefined,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT paf.PimAttributeFamilyId,pag.PimAttributeGroupId, pa.PimAttributeId,tpgm.GroupDisplayOrder,tpgm.IsSystemDefined,2,getdate(),2,getdate() 
    FROM _TempZnodePimFamilyGroupMapper tpgm 
    INNER JOIN ZnodePimAttributeGroup pag ON (pag.GroupCode = tpgm.GroupCode) 
    left JOIN ZnodePimAttribute pa ON (pa.AttributeCode = tpgm.AttributeCode) 
    INNER JOIN ZnodePimAttributeFamily paf ON (paf.FamilyCode = tpgm.FamilyCode) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimFamilyGroupMapper pagm WHERE pagm.PimAttributeGroupId = pag.PimAttributeGroupId AND isnull(pagm.PimAttributeId,'') = isnull(pa.PimAttributeId,'') 
         AND pagm.PimAttributeFamilyId = paf.PimAttributeFamilyId) 
 
    UPDATE tpgm 
    set tpgm.NewCreateId = pagm.PimFamilyGroupMapperId 
    FROM _TempZnodePimFamilyGroupMapper tpgm 
    INNER JOIN ZnodePimAttributeGroup pag ON (pag.GroupCode = tpgm.GroupCode) 
    left JOIN ZnodePimAttribute pa ON (pa.AttributeCode = tpgm.AttributeCode) 
    INNER JOIN ZnodePimAttributeFamily paf ON (paf.FamilyCode = tpgm.FamilyCode) 
    INNER JOIN ZnodePimFamilyGroupMapper pagm ON (pagm.PimAttributeGroupId = pag.PimAttributeGroupId AND isnull(pagm.PimAttributeId,'') = isnull(pa.PimAttributeId,'') AND pagm.PimAttributeFamilyId = paf.PimAttributeFamilyId) 
 
    GO 
    UPDATE zpp 
    set zpp.PixelId1 = tpp.PixelId1, 
     zpp.CodePixel1 = tpp.CodePixel1, 
     zpp.DisplayName1 = tpp.DisplayName1, 
     zpp.HelpTextPixel1 = tpp.HelpTextPixel1, 
     zpp.PixelId2 = tpp.PixelId2, 
     zpp.CodePixel2 = tpp.CodePixel2, 
     zpp.DisplayName2 = tpp.DisplayName2, 
     zpp.HelpTextPixel2 = tpp.HelpTextPixel2, 
     zpp.PixelId3 = tpp.PixelId3, 
     zpp.CodePixel3 = tpp.CodePixel3, 
     zpp.DisplayName3 =tpp.DisplayName3, 
     zpp.HelpTextPixel3 = tpp.HelpTextPixel3, 
     zpp.PixelId4 = tpp.PixelId4, 
     zpp.CodePixel4 = tpp.CodePixel4, 
     zpp.DisplayName4 = tpp.DisplayName4, 
     zpp.HelpTextPixel4 = tpp.HelpTextPixel4, 
     zpp.PixelId5 = tpp.PixelId5, 
     zpp.CodePixel5 = tpp.CodePixel5, 
     zpp.DisplayName5 = tpp.DisplayName5, 
     zpp.HelpTextPixel5 = tpp.HelpTextPixel5 
    from _TempZnodePortalPixelTracking tpp 
    inner join ZnodePortal zp on (tpp.StoreName = zp.StoreName) 
    inner join ZnodePortalPixelTracking zpp on (zpp.Portalid = zp.Portalid) 
 
    UPDATE tpp 
    set tpp.NewCreateId = zpp.PortalPixelTrackingId 
    from _TempZnodePortalPixelTracking tpp 
    inner join ZnodePortal zp on (tpp.StoreName = zp.StoreName) 
    inner join ZnodePortalPixelTracking zpp on (zpp.Portalid = zp.Portalid) 
 
    GO 
 
    UPDATE pl 
    set pl.ListCode = tpl.ListCode 
    from _TempZnodePriceList tpl 
    inner join ZnodeCurrency zc on (tpl.CurrencyCode = zc.CurrencyCode) 
    inner join ZnodePriceList pl on (pl.CurrencyId = zc .CurrencyId and pl.ListName = tpl.ListName) 
 
    UPDATE tpl 
    set tpl.NewCreateId = pl.PriceListId 
    from _TempZnodePriceList tpl 
    inner join ZnodeCurrency zc on (tpl.CurrencyCode = zc.CurrencyCode) 
    inner join ZnodePriceList pl on (pl.CurrencyId = zc .CurrencyId and pl.ListName = tpl.ListName) 
 
    GO 
     INSERT INTO ZnodePromotionType (ClassType,ClassName,Name,[Description],IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
     SELECT TPT.ClassType,TPT.ClassName,TPT.Name,TPT.[Description],TPT.IsActive, 2,getdate(),2,getdate()  
     FROM _TempZnodePromotionType TPT 
     WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodePromotionType PAG WHERE PAG.ClassType = TPT.ClassType AND PAG.ClassName = TPT.ClassName AND PAG.Name = TPT.Name) 
 
    Update B 
    sET b.NewCreateId =A.PromotionTypeId 
    FROM ZnodePromotionType a    
    INNER JOIN _TempZnodePromotionType b ON (a.ClassType = b.ClassType AND a.ClassName = b.ClassName AND a.Name = b.Name) 
 
    GO 
    INSERT INTO ZnodeTaxRuleTypes(PortalId,ClassName,Name,[Description],IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT PAG.PortalId,TPGL.ClassName,TPGL.Name,TPGL.[Description],TPGL.IsActive, 2,getdate(),2,getdate()  
    FROM _TempZnodeTaxRuleTypes TPGL 
    LEFT JOIN ZnodePortal PAG ON (isnull(PAG.StoreName,'') = isnull(TPGL.StoreName,'')) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeTaxRuleTypes PAGL WHERE PAGL.ClassName = TPGL.ClassName 
         AND PAGL.Name = TPGL.Name) 
 
    UPDATE B 
    SET B.NewCreateId =PDV.TaxRuleTypeId 
    FROM _TempZnodeTaxRuleTypes B 
    LEFT JOIN ZnodePortal A ON (isnull(B.StoreName,'') = isnull(A.StoreName,'')) 
    INNER JOIN ZnodeTaxRuleTypes PDV ON (PDV.ClassName = B.ClassName AND PDV.Name = B.Name) 
 
    
        
    GO 
    update zas 
    set zas.Setting = tas.Setting 
    from _TempZnodeApplicationSetting tas 
    inner join ZnodeApplicationSetting zas on (zas.ItemName = tas.ItemName) 
 
 
    INSERT INTO ZnodeApplicationSetting(GroupName,ItemName,Setting,ViewOptions,FrontPageName,FrontObjectName,IsCompressed,OrderByFields,ItemNameWithoutCurrency 
             ,CreatedByName,ModifiedByName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT tas.GroupName,tas.ItemName,tas.Setting,tas.ViewOptions,tas.FrontPageName,tas.FrontObjectName,tas.IsCompressed,tas.OrderByFields,tas.ItemNameWithoutCurrency 
             ,tas.CreatedByName,tas.ModifiedByName,2,getdate(),2,getdate() 
    FROM _TempZnodeApplicationSetting tas 
    WHERE  NOT EXISTS (SELECT TOP 1 1 FROM ZnodeApplicationSetting zas WHERE zas.ItemName = tas.ItemName) 
 
    update tas 
    set tas.NewCreateId = zas.ApplicationSettingId 
    from _TempZnodeApplicationSetting tas 
    inner join ZnodeApplicationSetting zas on (zas.ItemName = tas.ItemName) 
 
    GO 
 
    INSERT INTO ZnodeApplicationCache(ApplicationType,IsActive,StartDate,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,Duration) 
    SELECT tac.ApplicationType,tac.IsActive,tac.StartDate,2,getdate(),2,getdate(),tac.Duration 
    FROM _TempZnodeApplicationCache tac 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeApplicationCache zac WHERE zac.ApplicationType = tac.ApplicationType) 
 
    UPDATE tac 
    set tac.NewCreateId = zac.ApplicationCacheId 
    from _TempZnodeApplicationCache tac 
    inner join ZnodeApplicationCache zac on (zac.ApplicationType = tac.ApplicationType) 
 
    GO 
   
 
    INSERT INTO ZnodeGlobalEntity (EntityName,IsActive,TableName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT tge.EntityName,tge.IsActive,tge.TableName,2,getdate(),2,getdate() 
    FROM _TempZnodeGlobalEntity tge 
    WHERE NOT EXISTS (select top 1 1 from ZnodeGlobalEntity zge where zge.EntityName = tge.EntityName AND zge.TableName = tge.TableName) 
 
    UPDATE tge 
    set tge.NewCreateId = zge.GlobalEntityId 
    from _TempZnodeGlobalEntity tge 
    inner join ZnodeGlobalEntity zge on (zge.EntityName = tge.EntityName AND zge.TableName = tge.TableName) 
 
    GO 
 
    insert into ZnodePimFrontEndProperties(PimAttributeId,IsComparable,IsUseInSearch,IsHtmlTags,IsFacets,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select pa.PimAttributeId,pfa.IsComparable,pfa.IsUseInSearch,pfa.IsHtmlTags,pfa.IsFacets,2,getdate(),2,getdate() 
    from _TempZnodePimFrontEndProperties pfa 
    inner join ZnodePimAttribute pa On (pfa.AttributeCode = pa.AttributeCode) 
    where not exists (select top 1 1 from ZnodePimFrontEndProperties fep where fep.PimAttributeId = pa.PimAttributeId) 
 
    update pfa 
    set pfa.NewCreateId = fep.ZnodePimFrontendPropertiesId 
    from _TempZnodePimFrontEndProperties pfa 
    inner join ZnodePimAttribute pa On (pfa.AttributeCode = pa.AttributeCode) 
    inner join  ZnodePimFrontEndProperties fep on (fep.PimAttributeId = pa.PimAttributeId) 
    
 
    
        
    GO     
    update _TempZnodeSearchFeature set ParentSearchFeatureId =null  
    
    update _TempZnodeSearchFeature 
    set ParentSearchFeatureId = sf.SearchFeatureId 
    from _TempZnodeSearchFeature tsf 
    inner join ZnodeSearchFeature sf on (tsf.ParentFeatureName = sf.FeatureName) 
 
    update _TempZnodeSearchFeature 
    set IsNewParentSearchFeature=1 
    from _TempZnodeSearchFeature tsf 
    where tsf.ParentFeatureName is not null  and ParentSearchFeatureId is null 
 
    INSERT INTO ZnodeSearchFeature(ParentSearchFeatureId,FeatureCode,FeatureName,IsAdvanceFeature,ControlType,HelpDescription,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT tsf.ParentSearchFeatureId,tsf.FeatureCode,case When IsNewParentSearchFeature =1 then tsf.ParentFeatureName+'~~'+tsf.FeatureName  else tsf.FeatureName end,tsf.IsAdvanceFeature,tsf.ControlType,tsf.HelpDescription,2,getdate(),2,getdate() 
    FROM _TempZnodeSearchFeature tsf 
    left join ZnodeSearchFeature sf on isnull(tsf.ParentFeatureName,'') = isnull(sf.FeatureName,'') 
    where not exists (select top 1 1 from ZnodeSearchFeature sff 
          left join ZnodeSearchFeature psf on psf.SearchFeatureId = sff.ParentSearchFeatureId 
          where sff.FeatureName = tsf.FeatureName and isnull(tsf.ParentFeatureName,'') = isnull(psf.FeatureName,'') ) 
 
    update sf 
    set sf.ParentSearchFeatureId = sff.SearchFeatureId, sf.FeatureName = tsf.FeatureName 
    from _TempZnodeSearchFeature tsf 
    inner join ZnodeSearchFeature sf on (sf.FeatureName = tsf.ParentFeatureName+'~~'+tsf.FeatureName) 
    inner join ZnodeSearchFeature sff on (tsf.ParentFeatureName = sff.FeatureName) 
    where tsf.IsNewParentSearchFeature =1  
 
       update tsf 
    set tsf.NewCreateId = sf.SearchFeatureId 
    from _TempZnodeSearchFeature tsf 
    inner join ZnodeSearchFeature sf on (sf.FeatureName = tsf.FeatureName) 
    left join ZnodeSearchFeature sff on (sff.SearchFeatureId = sf.ParentSearchFeatureId) 
    where isnull(tsf.ParentFeatureName,'') = isnull(sff.FeatureName,'') 
                 
    GO 
 
    update _TempZnodeSearchQueryType set ParentSearchQueryTypeId = null 
 
    update _TempZnodeSearchQueryType 
    set ParentSearchQueryTypeId = sqt.SearchQueryTypeId 
    from _TempZnodeSearchQueryType tsqt 
    inner join ZnodeSearchQueryType sqt on (tsqt.ParentQueryTypeName = sqt.QueryTypeName) 
 
    update _TempZnodeSearchQueryType 
    set  IsNewParentSearchQueryType = 1 
    from _TempZnodeSearchQueryType tsqt 
    where tsqt.ParentQueryTypeName is not null and ParentSearchQueryTypeId is null   
 
 
    INSERT INTO ZnodeSearchQueryType (ParentSearchQueryTypeId,QueryTypeName,QueryBuilderClassName,HelpDescription,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT tsqt.ParentSearchQueryTypeId,case When IsNewParentSearchQueryType =1 then tsqt.ParentQueryTypeName+'~~'+ tsqt.QueryTypeName  else tsqt.QueryTypeName end,tsqt.QueryBuilderClassName,tsqt.HelpDescription,2,getdate(),2,getdate() 
    FROM _TempZnodeSearchQueryType tsqt 
    left join ZnodeSearchQueryType sqt on isnull(tsqt.ParentQueryTypeName,'') = isnull(sqt.QueryTypeName,'') 
    where not exists (select top 1 1 from ZnodeSearchQueryType sqtt 
         left join ZnodeSearchQueryType psqt on (psqt.SearchQueryTypeId = sqtt.ParentSearchQueryTypeId)  
         where  sqtt.QueryTypeName = tsqt.QueryTypeName and isnull(tsqt.ParentQueryTypeName,'') = isnull(psqt.QueryTypeName,'') ) 
 
    update sqt 
    set sqt.ParentSearchQueryTypeId = sqtt.SearchQueryTypeId , sqt.QueryTypeName = tsqt.QueryTypeName 
    from _TempZnodeSearchQueryType tsqt 
    inner join ZnodeSearchQueryType sqt on (sqt.QueryTypeName = tsqt.ParentQueryTypeName+'~~'+tsqt.QueryTypeName) 
    inner join ZnodeSearchQueryType sqtt on (tsqt.ParentQueryTypeName = sqtt.QueryTypeName) 
    where tsqt.IsNewParentSearchQueryType =1  
 
    update tsqt 
    set tsqt.NewCreateId = sqt.SearchQueryTypeId 
    from _TempZnodeSearchQueryType tsqt 
    inner join ZnodeSearchQueryType sqt on (sqt.QueryTypeName = tsqt.QueryTypeName) 
    left join ZnodeSearchQueryType sqtt on (sqtt.SearchQueryTypeId = sqt.ParentSearchQueryTypeId) 
    where isnull(tsqt.ParentQueryTypeName,'') = isnull(sqtt.QueryTypeName,'') 
 
    GO 
 
    insert into ZnodeSearchQueryTypeFeature (SearchFeatureId,SearchQueryTypeId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select sf.SearchFeatureId, sqt.SearchQueryTypeId, 2,getdate(),2,getdate() 
    from _TempZnodeSearchQueryTypeFeature tsf 
    inner join ZnodeSearchFeature sf on (sf.FeatureName = tsf.FeatureName) 
    inner join ZnodeSearchQueryType sqt on (sqt.QueryTypeName = tsf.QueryTypeName) 
    where not exists (select top 1 1 from ZnodeSearchQueryTypeFeature psq where psq.SearchFeatureId = sf.SearchFeatureId and psq.SearchQueryTypeId = sqt.SearchQueryTypeId) 
 
 
    UPDATE tsf 
    set tsf.NewCreateId = psq.SearchQueryTypeFeatureId 
    from _TempZnodeSearchQueryTypeFeature tsf 
    inner join ZnodeSearchFeature sf on (sf.FeatureName = tsf.FeatureName) 
    inner join ZnodeSearchQueryType sqt on (sqt.QueryTypeName = tsf.QueryTypeName) 
    INNER JOIN ZnodeSearchQueryTypeFeature psq on (psq.SearchFeatureId = sf.SearchFeatureId and psq.SearchQueryTypeId = sqt.SearchQueryTypeId) 
 
     
    
  
    GO 
    INSERT INTO ZnodeImportAttributeValidation (AttributeTypeName,AttributeCode,ImportHeadId,IsRequired,ControlName,ValidationName,SubValidationName,ValidationValue 
               ,RegExp,DisplayOrder,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate,SequenceNumber) 
    select tav.AttributeTypeName,tav.AttributeCode,ih.ImportHeadId,tav.IsRequired,tav.ControlName,tav.ValidationName,tav.SubValidationName,tav.ValidationValue 
               ,tav.RegExp,tav.DisplayOrder,2,getdate(),2,getdate(),tav.SequenceNumber 
    FROM _TempZnodeImportAttributeValidation tav 
    inner join znodeImporthead ih on (tav.Name = ih.Name) 
    where not exists (select top 1 1 from ZnodeImportAttributeValidation iav  where  iav.ImportHeadId = ih.ImportHeadId 
         and iav.AttributeTypeName = tav.AttributeTypeName and iav.AttributeCode = tav.AttributeCode and iav.ValidationName = tav.ValidationName) 
     
 
    UPDATE tav 
    SET tav.NewCreateId =iav.ImportAttributeValidationId 
    FROM _TempZnodeImportAttributeValidation tav 
    inner join znodeImporthead ih on (tav.Name = ih.Name) 
    INNER JOIN ZnodeImportAttributeValidation iav  on  (iav.ImportHeadId = ih.ImportHeadId 
         and iav.AttributeTypeName = tav.AttributeTypeName and iav.AttributeCode = tav.AttributeCode and iav.ValidationName = tav.ValidationName) 
        
    GO 
 
    insert into ZnodeImportTemplateMapping(ImportTemplateId,SourceColumnName,TargetColumnName,DisplayOrder,IsActive,IsAllowNull,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select it.ImportTemplateId,tit.SourceColumnName,tit.TargetColumnName,tit.DisplayOrder,tit.IsActive,tit.IsAllowNull, 2,getdate(),2,getdate() 
    from _TempZnodeImportTemplateMapping tit 
    inner join ZnodeImportTemplate it on (tit.TemplateName = it.TemplateName) 
    where not exists (select top 1 1 from ZnodeImportTemplateMapping itm where itm.ImportTemplateId =  it.ImportTemplateId 
         and itm.SourceColumnName = tit.SourceColumnName and itm.TargetColumnName = tit.TargetColumnName) 
 
    update tit 
    set tit.NewCreateId = itm.ImportTemplateMappingId 
    from _TempZnodeImportTemplateMapping tit 
    inner join ZnodeImportTemplate it on (tit.TemplateName = it.TemplateName) 
    inner join ZnodeImportTemplateMapping itm on (itm.ImportTemplateId =  it.ImportTemplateId 
         and itm.SourceColumnName = tit.SourceColumnName and itm.TargetColumnName = tit.TargetColumnName) 
 
    GO 
 
    INSERT INTO ZnodeSearchProfile (ProfileName,SearchQueryTypeId,SearchSubQueryTypeId,Operator,IsDefault,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select tsp.ProfileName,sqt.SearchQueryTypeId,tsp.SearchSubQueryTypeId,tsp.Operator,tsp.IsDefault, 2,getdate(),2,getdate() 
    from _TempZnodeSearchProfile tsp 
    inner join ZnodeSearchQueryType sqt on (tsp.QueryTypeName = sqt.QueryTypeName) 
    where not exists (select top 1 1 from ZnodeSearchProfile sp where  sp.SearchQueryTypeId = sqt.SearchQueryTypeId 
          and sp.ProfileName = tsp.ProfileName) 
 
    update tsp 
    set tsp.NewCreateId = sp.SearchProfileId 
    from _TempZnodeSearchProfile tsp 
    inner join ZnodeSearchQueryType sqt on (tsp.QueryTypeName = sqt.QueryTypeName) 
    inner join ZnodeSearchProfile sp on  (sp.SearchQueryTypeId = sqt.SearchQueryTypeId 
          and sp.ProfileName = tsp.ProfileName) 
 
    GO 
    insert into ZnodeSearchProfileAttributeMapping (SearchProfileId,AttributeCode,IsFacets,IsUseInSearch,BoostValue,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select sp.SearchProfileId,tspm.AttributeCode,tspm.IsFacets,tspm.IsUseInSearch,tspm.BoostValue,2,getdate(),2,getdate() 
    from _TempZnodeSearchProfileAttributeMapping tspm 
    inner join ZnodeSearchProfile sp on (sp.ProfileName = tspm.ProfileName) 
    where not exists (select top 1 1 from ZnodeSearchProfileAttributeMapping spa where spa.SearchProfileId = sp.SearchProfileId 
         and spa.AttributeCode = tspm.AttributeCode) 
 
    update tspm 
    set tspm.NewCreateId = spa.SearchProfileAttributeMappingId 
    from _TempZnodeSearchProfileAttributeMapping tspm 
    inner join ZnodeSearchProfile sp on (sp.ProfileName = tspm.ProfileName) 
    inner join ZnodeSearchProfileAttributeMapping spa on (spa.SearchProfileId = sp.SearchProfileId 
         and spa.AttributeCode = tspm.AttributeCode) 
     
    
  
    GO 
   INSERT INTO ZnodeCMSPortalMessage (PortalId,CMSMessageKeyId,CMSMessageId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
		select zp.PortalId,cmk.CMSMessageKeyId,zcm.CMSMessageId,2,getdate(),2,getdate() 
		from ZnodePortal zp
		cross join _TempZnodeCMSMessageKey k
		inner join _TempZnodeCMSPortalMessage tcm on (k.MessageKey = tcm.MessageKey)    
		inner join ZnodeCMSMessageKey cmk on (cmk.MessageKey = tcm.MessageKey) 
		inner join ZnodeCMSMessage zcm on (zcm.[Message] = tcm.[Message]) 
		where not exists (select top 1 1 from ZnodeCMSPortalMessage cpm where cpm.PortalId = zp.PortalId 
		and cpm.CMSMessageKeyId = cmk.CMSMessageKeyId  and cpm.CMSMessageId = zcm.CMSMessageId  
		) 
 
   update tcm 
		set tcm.NewCreateId = cpm.CMSPortalMessageId 
		from ZnodePortal zp
		cross join _TempZnodeCMSMessageKey k
		inner join _TempZnodeCMSPortalMessage tcm on (k.MessageKey = tcm.MessageKey)    
		inner join ZnodeCMSMessageKey cmk on (cmk.MessageKey = tcm.MessageKey) 
		inner join ZnodeCMSMessage zcm on (zcm.[Message] = tcm.[Message])  
		inner join ZnodeCMSPortalMessage cpm on (cpm.PortalId = zp.PortalId 
		and cpm.CMSMessageKeyId = cmk.CMSMessageKeyId  and cpm.CMSMessageId = zcm.CMSMessageId)  
 
    GO 
     
 
      INSERT INTO ZnodeCMSPortalMessageKeyTag(PortalId,CMSMessageKeyId,TagXML,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    SELECT   zp.PortalId,cmk.CMSMessageKeyId,tcm.TagXML,tcm.CreatedBy,getdate(),tcm.ModifiedBy,getdate() 
    FROM ZnodePortal zp
	cross join _TempZnodeCMSMessageKey k
	inner join _TempZnodeCMSPortalMessageKeyTag tcm on (k.MessageKey = tcm.MessageKey)   
    inner join ZnodeCMSMessageKey cmk ON (cmk.MessageKey = tcm.MessageKey) 
    WHERE NOT EXISTS (SELECT TOP 1 1 FROM ZnodeCMSPortalMessageKeyTag ZCM WHERE zcm.PortalId=zp.PortalId and zcm.CMSMessageKeyId = cmk.CMSMessageKeyId) 

	 Update tcm 
    sET tcm.NewCreateId =ZCM.CMSPortalMessageKeyTagId 
    FROM  ZnodePortal zp
	cross join _TempZnodeCMSMessageKey k
	inner join _TempZnodeCMSPortalMessageKeyTag tcm on (k.MessageKey = tcm.MessageKey)   
    inner join ZnodeCMSMessageKey cmk ON (cmk.MessageKey = tcm.MessageKey)
    inner join ZnodeCMSPortalMessageKeyTag ZCM ON ( zcm.PortalId=zp.PortalId and zcm.CMSMessageKeyId = cmk.CMSMessageKeyId)  
 
   
    GO 
    insert into ZnodeEmailTemplateAreas (Name,Code,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select tea.Name,tea.Code,2,getdate(),2,getdate() 
    from _TempZnodeEmailTemplateAreas tea 
    where not exists (select top 1 1 from ZnodeEmailTemplateAreas spa where spa.Name = tea.Name) 
 
    update tea 
    set tea.NewCreateId = spa.EmailTemplateAreasId 
    from _TempZnodeEmailTemplateAreas tea 
    inner join ZnodeEmailTemplateAreas spa on (spa.Name = tea.Name) 
 
    GO 
    insert into ZnodeEmailTemplateLocale(EmailTemplateId,Subject,Descriptions,Content,LocaleId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select et.EmailTemplateId,tel.Subject,tel.Descriptions,tel.Content,l.LocaleId,2,getdate(),2,getdate() 
    from _TempZnodeEmailTemplateLocale tel 
    inner join ZnodeEmailTemplate et on (et.TemplateName = tel.TemplateName) 
    inner join ZnodeLocale l on (l.Code = tel.Code)  
    where not exists (select top 1 1 from ZnodeEmailTemplateLocale spa where spa.EmailTemplateId = et.EmailTemplateId 
          and spa.LocaleId = l.LocaleId and spa.Subject = tel.Subject) 
 
    update  tel 
    set tel.NewCreateId = spa.EmailTemplateLocaleId 
    from _TempZnodeEmailTemplateLocale tel 
    inner join ZnodeEmailTemplate et on (et.TemplateName = tel.TemplateName) 
    inner join ZnodeLocale l on (l.Code = tel.Code)  
    inner join ZnodeEmailTemplateLocale spa on (spa.EmailTemplateId = et.EmailTemplateId 
          and spa.LocaleId = l.LocaleId and spa.Subject = tel.Subject) 
    GO 
     insert into ZnodeEmailTemplateMapper (EmailTemplateId,PortalId,EmailTemplateAreasId,IsActive,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
    select  et.EmailTemplateId,zp.PortalId,ea.EmailTemplateAreasId,tem.IsActive,2,getdate(),2,getdate() 
    from ZnodePortal zp
	cross join _TempZnodeEmailTemplate e
    inner join  _TempZnodeEmailTemplateMapper tem  on (e.TemplateName = tem.TemplateName) 
     inner join ZnodeEmailTemplate et on (et.TemplateName = tem.TemplateName) 
     inner join ZnodeEmailTemplateAreas ea on (ea.Name = tem.Name) 
     where not exists (select top 1 1 from ZnodeEmailTemplateMapper spa where spa.EmailTemplateId = et.EmailTemplateId 
          and spa.PortalId = zp.PortalId and spa.EmailTemplateAreasId = ea.EmailTemplateAreasId) 
 
 
   		   update tem 
    set tem.NewCreateId = spa.EmailTemplateMapperId 
    from ZnodePortal zp
	cross join _TempZnodeEmailTemplate e
    inner join  _TempZnodeEmailTemplateMapper tem  on (e.TemplateName = tem.TemplateName) 
     inner join ZnodeEmailTemplate et on (et.TemplateName = tem.TemplateName) 
     inner join ZnodeEmailTemplateAreas ea on (ea.Name = tem.Name) 
     inner join ZnodeEmailTemplateMapper spa on (spa.EmailTemplateId = et.EmailTemplateId 
          and spa.PortalId = zp.PortalId and spa.EmailTemplateAreasId = ea.EmailTemplateAreasId) 
    GO 
   
   	
 UPDATE ZnodeDomain 
 SET DomainName = 'winewebstore.multifront904.localhost.com'
 WHERE DomainName = 'winewebstore.multifront903.localhost.com'
 UPDATE ZnodeDomain 
 SET DomainName = 'webstore.multifront904.localhost.com'
 WHERE DomainName = 'webstore.multifront903.localhost.com'
 UPDATE ZnodeDomain 
 SET DomainName = 'admin.multifront904.localhost.com'
 WHERE DomainName = 'admin.multifront903.localhost.com'
 UPDATE ZnodeDomain 
 SET DomainName = 'api.multifront904.localhost.com'
 WHERE DomainName = 'api.multifront903.localhost.com'
 UPDATE ZnodeDomain 
 SET DomainName = 'nutswebstore.multifront904.localhost.com'
 WHERE DomainName = 'nutswebstore.multifront903.localhost.com'
 GO
update a
set a.changeId = 24
from AspNet_SqlCacheTablesForChangeNotification a
where a.tableName = 'ZNodeDomain'

GO

update a
set a.changeId = 0
from AspNet_SqlCacheTablesForChangeNotification a
where a.tableName = 'ZnodeMediaConfiguration'

GO
insert into ZnodeMessage(MessageCode,MessageType,MessageName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select 50,'Text','Data should be alphanumeric',2,getdate(),2,getdate()
where not exists (select top 1 1 from ZnodeMessage zm where zm.MessageCode = 50)
go
insert into ZnodeMessage(MessageCode,MessageType,MessageName,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
select 52,'Text','Only alphanumeric characters allowed and must starts with alphabets',2,getdate(),2,getdate()
where not exists (select top 1 1 from ZnodeMessage zm where zm.MessageCode = 52)

GO
update ZnodeApplicationSetting SET Setting
 ='<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>PimProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>/PIM/Products/Edit</islinkactionurl>      <islinkparamfield>PimProductId</islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>PublishStatus</name>      <headertext>Publish Status</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>IsActive</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>true</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit|Copy|Delete|Publish</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit|Copy|Delete|Publish</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/PIM/Products/Edit|/PIM/Products/Copy|/PIM/Products/Delete|/PIM/Products/PublishProduct</manageactionurl>      <manageparamfield>PimProductId|PimProductId|PimProductId|PimProductId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' where ItemName = 'View_ManageProductList'
  GO
  update ZnodeCMSMessage SET Message = '<p>Copyright &copy; 2018 Maxwell''s Inc. All Rights Reserved.</p>'
where  Message = '<p>Copyright &copy; 2017 Maxwell''s Inc. All Rights Reserved.</p>'
    
  GO
update ZnodeApplicationCache set IsActive = 0 where ApplicationType = 'FullPageCache'

  GO
  Declare @PimattributeId int  
select @PimattributeId  = PimattributeId   from ZnodePimattribute  where AttributeCode = 'PackageSizeFromRequest'
update ZnodePimAttributeLocale  SET AttributeName  = 'Package Size From Request' ,
Description = 'Package Size From Request'  where PimAttributeId = @PimattributeId 
GO
Begin 
	DEclare @MenuId int 
	INSERT INTO ZnodeActions ( AreaName	,ControllerName,	ActionName	,IsGlobalAccess,CreatedBy,	CreatedDate,	ModifiedBy	,ModifiedDate)
	SELECT NULL,	'Promotion',	'GetPromotionShippingList',	0,2,GETDATE(),2,GETDATE()
	WHERE NOT EXISTS(SELECT * FROM ZnodeActions  WHERE ControllerName= 'Promotion' AND ActionName = 'GetPromotionShippingList')

	DECLARE @ActionId INT = (select ActionId from ZnodeActions where  ControllerName= 'Promotion' and ActionName = 'GetPromotionShippingList')

	SELECT @MenuId = MenuId from ZnodeMenu where MenuName = 'Marketing'

	INSERT  ZnodeMenuActionsPermission (MenuId,ActionId,AccessPermissionId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
	SELECT @MenuId,@ActionId,1,2,GETDATE(),2,GETDATE()
	WHERE NOT EXISTS(SELECT * FROM ZnodeMenuActionsPermission WHERE ActionId = @ActionId AND MenuId = @MenuId)
END

GO 

Begin 
	DEclare @MenuId int 
	INSERT INTO ZnodeActions ( AreaName	,ControllerName,	ActionName	,IsGlobalAccess,CreatedBy,	CreatedDate,	ModifiedBy	,ModifiedDate)
	SELECT NULL,	'Promotion',	'AssociateShippingToPromotion',	0,2,GETDATE(),2,GETDATE()
	WHERE NOT EXISTS(SELECT * FROM ZnodeActions  WHERE ControllerName= 'Promotion' AND ActionName = 'AssociateShippingToPromotion')

	DECLARE @ActionId INT = (select ActionId from ZnodeActions where  ControllerName= 'Promotion' and ActionName = 'AssociateShippingToPromotion')

	SELECT @MenuId = MenuId from ZnodeMenu where MenuName = 'Marketing'

	INSERT  ZnodeMenuActionsPermission (MenuId,ActionId,AccessPermissionId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
	SELECT @MenuId,@ActionId,2,2,GETDATE(),2,GETDATE()
	WHERE NOT EXISTS(SELECT * FROM ZnodeMenuActionsPermission WHERE ActionId = @ActionId AND MenuId = @MenuId)
END

  
  
 
 
    go
	
	
if exists( select * from sys.procedures where name = 'Znode_GetOrderByPagingProduct')
	drop procedure Znode_GetOrderByPagingProduct

go
/****** Object:  StoredProcedure [dbo].[Znode_GetOrderByPagingProduct]    Script Date: 1/10/2018 11:21:43 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[Znode_GetOrderByPagingProduct]
(
 @Order_by  Nvarchar(max)
 ,@Rows     INT =10 
 ,@PageNo   INT =1 
 ,@PimProductId TransferId Readonly 
 ,@AttributeCode VARCHAR(max)= ''
 ,@localeId INT  
)
AS 
BEGIN 
 SET NOCOUNT ON 
 SET @AttributeCode = CASE WHEN @AttributeCode = '' OR  @AttributeCode IS NULL THEN REPLACE(REPLACE (@Order_by , ' DESC',''),' ASC','')

  ELSE @AttributeCode END 
 DECLARE @StartId INT =  CASE WHEN @PageNo = 1 OR @PageNo = 0 THEN 1 ELSE ((@PageNo-1)*@Rows)+1 END 
 DECLARE @EndId INT = CASE WHEN @PageNo = 0 THEN @Rows ELSE @PageNo*@Rows END
 ,@DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleID()   
 DECLARE @AttributeTypeName NVARCHAR(2000)= ''
 SELECT TOP 1 @AttributeTypeName = AttributeTypeName 
 FROM ZnodePimAttribute ZPA 
 INNER JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)
 WHERE ZPA.AttributeCode = @AttributeCode
 
 IF  @Order_by = '' 
 BEGIN 
  
  ;WIth Cte_getData AS ( 
  
  SELECT Id , ROW_NUMBER()Over(Order by ZPP.ModifiedDate DESC,ZPP.PimProductId) RowId  
  FROM @PimProductId TBLP
  INNER JOIN ZnodePimProduct ZPP ON (TBLP.Id= ZPP.PimProductId)
  
  ) 
  
  SELECT ID PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
 
 END 
 IF  @Order_by LIKE 'PimProductId%'  OR @Order_by LIKE 'DisplayOrder%'
 BEGIN 
  ;WIth Cte_getData AS (
  SELECT Id , CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by ZPP.PimProductId DESC) ELSE 
	  ROW_NUMBER()Over(Order by ZPP.PimProductId ASC) END  RowId 
  FROM @PimProductId TBLP
  INNER JOIN ZnodePimProduct ZPP ON (TBLP.Id= ZPP.PimProductId)
  ) 
  SELECT ID PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
 END 
 ELSE IF  @Order_by LIKE  'ModifiedDate%' 
 BEGIN 
  ;with Cte_GetData AS
  (
  SELECT Id , CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by ZPAV.ModifiedDate DESC ,ZPAV.PimProductId) ELSE 
	  ROW_NUMBER()Over(Order by ZPAV.ModifiedDate ASC ,ZPAV.PimProductId) END  RowId 
  FROM  @PimProductId TBLP
  INNER JOIN ZnodePimAttributeValue ZPAV ON (TBLP.Id = ZPAV.PimProductId)
  INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId) 
  WHERE ZPA.AttributeCode = CASE WHEN @AttributeCode = '' OR @AttributeCode = 'ModifiedDate'  THEN 'SKU' ELSE @AttributeCode END 
  )
  SELECT ID PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
 END
 ELSE IF @AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
 BEGIN 
  IF @DefaultLocaleId = @LocaleID 
  BEGIN 
  ;With Cte_getData AS ( 
  SELECT VPP.PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,VPP.PimProductId) ELSE  
	  ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,VPP.PimProductId) END RowId 
  FROM @PimProductId TBLP 
  INNER JOIN View_PimProducttextValue VPP ON (TBLP.Id = VPP.PimProductId ) 
  WHERE AttributeCode = @AttributeCode 
  AND LocaleId = @LocaleID
  ) 
  SELECT PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
  END 
  ELSE 
  BEGIN 
   ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.ID PimProductId,ZPAVL.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId,COUNT(*)Over(Partition By TBLAV.ID,ZPAVL.AttributeCode ORDER BY TBLAV.ID,ZPAVL.AttributeCode  ) RowIdIn
	 FROM @PimProductId   TBLAV 
	 INNER JOIN View_PimProducttextValue ZPAVL ON (ZPAVL.PimProductId = TBLAV.id )
	 WHERE (LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId  )
	 AND AttributeCode = @AttributeCode
	 ) 
	 ,Cte_DataLocale AS 
	 (
	 SELECT  TBLAV.PimProductId ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by TBLAV.AttributeValue DESC ,TBLAV.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by TBLAV.AttributeValue ASC ,TBLAV.PimProductId) END RowId
  	 FROM Cte_AttributeDetails TBLAV 
	 WHERE LocaleId = CASE WHEN RowIdIn =2 THEN @localeId ELSE @DefaultLocaleId END 
	 ) 
	 SELECT PimProductId ,RowId
	 FROM Cte_DataLocale 
	 WHERE RowId BETWEEN @StartId AND @EndId
  END 
 END
 ELSE IF @AttributeTypeName IN ('Simple Select','Multi Select') 
  BEGIN 
 DECLARE @PimAttributeId TransferId 

 INSERT INTO @PimAttributeId 
 SELECT PimAttributeId
 FROM  ZnodePimAttribute 
 WHERE AttributeCode = @AttributeCode  
 CREATE TABLE #TBL_AttributeDefaultValue ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  ) 
  --DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId();
			 -- here collect the both locale data 
             SELECT   VIPDV.PimAttributeId,VIPDV.AttributeDefaultValueCode,VIPDV.IsEditable,VIPDVL.AttributeDefaultValue,VIPDVL.LocaleId,VIPDV.PimAttributeDefaultValueId,VIPDV.DisplayOrder
             
			 INTO #Cte_DefaultValueLocale
			 FROM [dbo].[ZnodePimAttributeDefaultValue] VIPDV
			 INNER JOIN [dbo].[ZnodePimAttributeDefaultValueLocale] VIPDVL ON (VIPDVL.PimAttributeDefaultValueId = VIPDV.PimAttributeDefaultValueId) 
             WHERE VIPDVL.LocaleId IN(@DefaultLocaleId, @LocaleId) 
             AND EXISTS
             (
                SELECT TOP 1 1
                FROM @PimAttributeId SP
                WHERE SP.id = VIPDV.PimAttributeId
             )

			 -- filter for first locale
             ;with Cte_DefaultValueFirstLocale
             AS (SELECT CTDVL.PimAttributeId,CTDVL.AttributeDefaultValueCode,CTDVL.IsEditable,CTDVL.AttributeDefaultValue,CTDVL.PimAttributeDefaultValueId,CTDVL.DisplayOrder
                 FROM #Cte_DefaultValueLocale CTDVL
                 WHERE LocaleId = @LocaleId	 
                ),

			 -- get data for second locale if not exists for firts locale 
             Cte_DefaultValueSecondLocale
             AS (SELECT CTDVFL.PimAttributeId,CTDVFL.AttributeDefaultValueCode,CTDVFL.IsEditable,CTDVFL.AttributeDefaultValue,CTDVFL.PimAttributeDefaultValueId,CTDVFL.DisplayOrder
                 FROM Cte_DefaultValueFirstLocale CTDVFL
                 UNION ALL
                 SELECT CTDVL.PimAttributeId,CTDVL.AttributeDefaultValueCode,CTDVL.IsEditable,CTDVL.AttributeDefaultValue,CTDVL.PimAttributeDefaultValueId,CTDVL.DisplayOrder
                 FROM #Cte_DefaultValueLocale CTDVL
                 WHERE LocaleId = @DefaultLocaleId 
                 AND NOT EXISTS
                  (
                      SELECT TOP 1 1
                      FROM Cte_DefaultValueFirstLocale CTDVFL
                      WHERE CTDVFL.PimAttributeDefaultValueId = CTDVL.PimAttributeDefaultValueId
                  ))

                 

    
 INSERT INTO #TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
  SELECT PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId
                  FROM Cte_DefaultValueSecondLocale;


  IF @DefaultLocaleId = @LocaleID 
  BEGIN
    
      ;with Cte_AttributeValue AS 
	  (
	  SELECT  PimProductId , SUBSTRING((SELECT ','+AttributeDefaultValue 
											FROM #TBL_AttributeDefaultValue TTR 
											INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
											WHERE ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId  
											AND ZPAVL.LocaleId = @localeId 
											FOR XML PATH('') ),2,4000) AttributeValue
	  FROM @PimProductId TBLP  
	  INNER JOIN ZnodePimAttributeValue ZPAV  ON (TBLP.ID = ZPAV.PimProductId )
	  INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
	  WHERE AttributeCode = @AttributeCode
	 ) 
	 ,CTe_GetDataIn AS 
	 (
	 SELECT PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,VPP.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,VPP.PimProductId) END RowId
	 FROM  Cte_AttributeValue  VPP
     ) 
	 SELECT PimProductId ,RowId
	 FROM CTe_GetDataIn 
	 WHERE RowId BETWEEN @StartId AND @EndId 
   END 
   ELSE 
   BEGIN
    SELECT ZPAV.PimAttributeValueId,ZPAVL.PimAttributeDefaultValueId , ZPAVL.LocaleId ,COUNT(*)Over(Partition By ZPAV.PimAttributeValueId ,ZPAV.PimProductId ORDER BY ZPAV.PimAttributeValueId ,ZPAV.PimProductId  ) RowId
			   INTO #temp_Table 
			   FROM @PimProductId TBLP  
	           INNER JOIN ZnodePimAttributeValue ZPAV  ON (TBLP.ID = ZPAV.PimProductId )
			   INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId)
			   WHERE (ZPAVL.LocaleId = @localeId  OR ZPAVL.LocaleId = @DefaultlocaleId )

   ;with Cte_AttributeValue AS 
	  (
	  SELECT  PimProductId ,SUBSTRING((SELECT ','+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN #temp_Table  ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = CASE WHEN ZPAVL.RowId = 2 THEN @LocaleId  ELSE @DefaultLocaleId  END  
				FOR XML PATH('') ),2,4000) AttributeValue
	  FROM @PimProductId TBLP  
	  INNER JOIN ZnodePimAttributeValue ZPAV  ON (TBLP.ID = ZPAV.PimProductId )
	  INNER JOIN ZnodePimAttribute ZPA ON (ZPA.PimAttributeId = ZPAV.PimAttributeId)
	  WHERE AttributeCode = @AttributeCode
	 ) 
	 ,CTe_GetDataIn AS 
	 (
	 SELECT PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,VPP.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,VPP.PimProductId) END RowId
	 FROM  Cte_AttributeValue  VPP
     ) 
	 SELECT PimProductId ,RowId
	 FROM CTe_GetDataIn 
	 WHERE RowId BETWEEN @StartId AND @EndId 
   
   END 
    DROP TABLE #TBL_AttributeDefaultValue
  END 
  ELSE IF @AttributeTypeName IN ('Text Area') 
  BEGIN 
   IF @DefaultLocaleId = @LocaleID 
   BEGIN 
   ;With Cte_getData AS ( 
    SELECT VPP.PimProductId  ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
    ROW_NUMBER()Over(Order by VPP.AttributeValue DESC ,VPP.PimProductId) ELSE  
	  ROW_NUMBER()Over(Order by VPP.AttributeValue ASC ,VPP.PimProductId) END RowId 
  FROM @PimProductId TBLP 
  INNER JOIN View_PimProductTextAreaValue VPP ON (TBLP.Id = VPP.PimProductId ) 
  WHERE AttributeCode = @AttributeCode 
  AND LocaleId = @LocaleID
  ) 
  SELECT PimProductId ,RowId
  FROM Cte_GetData CTE
  WHERE RowId BETWEEN @StartId AND @EndId
   END 
   ELSE 
   BEGIN 
   ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.ID PimProductId,ZPAVL.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId,COUNT(*)Over(Partition By ZPAVL.PimProductId,ZPAVL.AttributeCode ORDER BY ZPAVL.PimProductId,ZPAVL.AttributeCode  ) RowIdIn
	 FROM @PimProductId   TBLAV 
	 INNER JOIN View_PimProductTextAreaValue ZPAVL ON (ZPAVL.PimProductId = TBLAV.id )
	 WHERE (LocaleId = @DefaultLocaleId OR LocaleId = @LocaleId  )
	 AND AttributeCode = @AttributeCode
	 ) 
	 ,Cte_DataLocale AS 
	 (
	 SELECT  TBLAV.PimProductId ,CASE WHEN @Order_by LIKE  '% DESC' THEN 
       ROW_NUMBER()Over(Order by TBLAV.AttributeValue DESC ,TBLAV.PimProductId) ELSE  
	    ROW_NUMBER()Over(Order by TBLAV.AttributeValue ASC ,TBLAV.PimProductId) END RowId
  	 FROM Cte_AttributeDetails TBLAV 
	 WHERE LocaleId = CASE WHEN RowIdIn = 2 THEN @localeId ELSE @DefaultLocaleId END 
	 ) 
	 SELECT PimProductId ,RowId
	 FROM Cte_DataLocale 
	 WHERE RowId BETWEEN @StartId AND @EndId
   END 
END 
END

go

if exists( select * from sys.procedures where name = 'Znode_ImportPimProductData')
	drop procedure Znode_ImportPimProductData

go

/****** Object:  StoredProcedure [dbo].[Znode_ImportPimProductData]    Script Date: 1/10/2018 11:23:55 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create PROCEDURE [dbo].[Znode_ImportPimProductData]
(   @TableName          VARCHAR(200),
    @NewGUID            NVARCHAR(200),
    @TemplateId         NVARCHAR(200),
    @ImportProcessLogId INT,
    @UserId             INT,
    @LocaleId           INT,
    @DefaultFamilyId    INT)
AS
    
	/*
      Summary : Finally Import data into ZnodePimProduct, ZnodePimAttributeValue and ZnodePimAttributeValueLocale Table 
      Process : Flat global temporary table will split into cloumn wise and associted with Znode Attributecodes,
    		      Create group of product with their attribute code and values and inserted one by one products. 	   
    
      SourceColumnName : CSV file column headers
      TargetColumnName : Attributecode from ZnodePimAttribute Table 

	 ***  Need to log error if transaction failed during insertion of records into table.
    */

     BEGIN
		 SET NOCOUNT ON
         BEGIN TRY
             --BEGIN TRAN ImportProducts;
             DECLARE @SQLQuery NVARCHAR(MAX);
			 DECLARE @GetDate DATETIME = dbo.Fn_GetDate();
             DECLARE @AttributeTypeName NVARCHAR(10), @AttributeCode NVARCHAR(300), @AttributeId INT, @IsRequired BIT, @SourceColumnName NVARCHAR(600), @PimAttributeFamilyId INT, @NewProductId INT, @PimAttributeValueId INT, @status BIT= 0; 
             --Declare error Log Table 


			 DECLARE @FamilyAttributeDetail TABLE
			 ( 
				PimAttributeId int, AttributeTypeName varchar(300), AttributeCode varchar(300), SourceColumnName nvarchar(600), IsRequired bit, PimAttributeFamilyId int
			 );
             IF @DefaultFamilyId = 0
                 BEGIN
					INSERT INTO @FamilyAttributeDetail( PimAttributeId, AttributeTypeName, AttributeCode, SourceColumnName, IsRequired, PimAttributeFamilyId )
					--Call Process to insert data of defeult family with cource column name and target column name 
					EXEC Znode_ImportGetTemplateDetails @TemplateId = @TemplateId, @IsValidationRules = 0, @IsIncludeRespectiveFamily = 1,@DefaultFamilyId = @DefaultFamilyId;
                    UPDATE @FamilyAttributeDetail SET PimAttributeFamilyId = DBO.Fn_GetCategoryDefaultFamilyId();
                 END;
             ELSE
                 BEGIN
                     INSERT INTO @FamilyAttributeDetail(PimAttributeId,AttributeTypeName,AttributeCode,SourceColumnName,IsRequired,PimAttributeFamilyId)
                     --Call Process to insert data of defeult family with cource column name and target column name 
                     EXEC Znode_ImportGetTemplateDetails @TemplateId = @TemplateId,@IsValidationRules = 0,@IsIncludeRespectiveFamily = 1,@DefaultFamilyId = @DefaultFamilyId;
                 END;  

            -- Retrive PimProductId on the basis of SKU for update product 
			SET @SQLQuery = 'UPDATE tlb SET tlb.PimProductId = ZPAV.PimProductId 
							FROM ZnodePimAttributeValue AS ZPAV INNER JOIN ZnodePimAttributeValueLocale AS ZPAVL ON 
							(ZPAVL.PimAttributeValueId = ZPAV.PimAttributeValueId) 
							INNER JOIN [dbo].[ZnodePimAttribute] ZPA on ZPAV.PimAttributeId = ZPA.PimAttributeId AND ZPA.AttributeCode= ''SKU'' 
							INNER JOIN '+@TableName+' tlb ON ZPAVL.AttributeValue = ltrim(rtrim(tlb.SKU)) ';
			EXEC sys.sp_sqlexec	@SQLQuery	 	
				 	
					
             --Read all attribute details with their datatype 
			 IF NOT EXISTS(SELECT TOP 1 1 FROM INFORMATION_SCHEMA.TABLES WHERE INFORMATION_SCHEMA.TABLES.TABLE_NAME = '#DefaultAttributeValue')
				BEGIN
					   CREATE TABLE #DefaultAttributeValue (AttributeTypeName  VARCHAR(300),PimAttributeDefaultValueId INT,PimAttributeId INT,
					   AttributeDefaultValueCode  VARCHAR(100));
					   -- ELSE 
					   -- CREATE TABLE #DefaultAttributeValue (AttributeTypeName  VARCHAR(300),PimAttributeDefaultValueId INT,PimAttributeId INT,
					   -- AttributeDefaultValueCode  VARCHAR(100)
					   -- Index Ix_Default (PimAttributeId, AttributeDefaultValueCode));
					   --IF @@VERSION LIKE '%Azure%' OR @@VERSION LIKE '%Express Edition%'
					   --Begin
						  --Select 'Without Index'
					   --END
					   --Else
						  --Alter TABLE #DefaultAttributeValue ADD Index Ix_Default (PimAttributeId, AttributeDefaultValueCode);
					


					INSERT INTO #DefaultAttributeValue(AttributeTypeName,PimAttributeDefaultValueId,PimAttributeId,AttributeDefaultValueCode)
					--Call Process to insert default data value 
					EXEC Znode_ImportGetPimAttributeDefaultValue;
				END;
             ELSE
                BEGIN
                    DROP TABLE #DefaultAttributeValue;
                END;
             EXEC sys.sp_sqlexec
                  @SQLQuery;
          
             -- Split horizontal table into verticle table by column name and attribute Value with their 
             -- corresponding AttributeId, Default family , Default AttributeValue Id  
    --         DECLARE @PimProductDetail TABLE 
			 --(
			      
				-- PimAttributeId INT, PimAttributeFamilyId INT,ProductAttributeCode VARCHAR(300) NULL,
				--  ProductAttributeDefaultValueId INT NULL,PimAttributeValueId  INT NULL,LocaleId INT,
				--  PimProductId INT NULL,AttributeValue NVARCHAR(MAX) NULL,AssociatedProducts NVARCHAR(4000) NULL,ConfigureAttributeIds VARCHAR(2000) NULL,
				--  ConfigureFamilyIds VARCHAR(2000) NULL,RowNumber INT  INDEX Ix CLUSTERED (RowNumber) 
    --            );

			DECLARE @PimProductDetail TABLE 
			 (
			      
				  PimAttributeId INT, PimAttributeFamilyId INT,ProductAttributeCode VARCHAR(300) NULL,
				  ProductAttributeDefaultValueId INT NULL,PimAttributeValueId  INT NULL,LocaleId INT,
				  PimProductId INT NULL,AttributeValue NVARCHAR(MAX) NULL,AssociatedProducts NVARCHAR(4000) NULL,ConfigureAttributeIds VARCHAR(2000) NULL,
				  ConfigureFamilyIds VARCHAR(2000) NULL,RowNumber INT  
                );

		-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		SET @SQLQuery = ' Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM '+ @TableName ;
		EXEC	sp_executesql @SQLQuery, N'@SuccessRecordCount BIGINT out' , @SuccessRecordCount=@SuccessRecordCount
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End

			
             -- Column wise split data from source table ( global temporary table ) and inserted into temporary table variable @PimProductDetail
             -- Add PimAttributeDefaultValue 
             DECLARE Cr_AttributeDetails CURSOR LOCAL FAST_FORWARD
             FOR SELECT PimAttributeId,AttributeTypeName,AttributeCode,IsRequired,SourceColumnName,PimAttributeFamilyId FROM @FamilyAttributeDetail  WHERE ISNULL(SourceColumnName, '') <> '';
             OPEN Cr_AttributeDetails;
             FETCH NEXT FROM Cr_AttributeDetails INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @PimAttributeFamilyId;
             WHILE @@FETCH_STATUS = 0
                 BEGIN
                    SET @NewProductId = 0;
                    SET @SQLQuery = ' SELECT '''+CONVERT(VARCHAR(100), @PimAttributeFamilyId)+''' PimAttributeFamilyId , PimProductId PimProductId ,'''+CONVERT(VARCHAR(100), @AttributeId)+''' AttributeId ,
									(SELECT TOP 1  PimAttributeDefaultValueId FROM #DefaultAttributeValue Where PimAttributeId =  '
									+ CONVERT(VARCHAR(100), @AttributeId)+'AND  AttributeDefaultValueCode = TN.'+@SourceColumnName+' ) PimAttributeDefaultValueId ,'
									+ @SourceColumnName+','+CONVERT(VARCHAR(100), @LocaleId)+'LocaleId
									
									, RowNumber FROM '+@TableName+' TN';
                    INSERT INTO @PimProductDetail( PimAttributeFamilyId, PimProductId, PimAttributeId, ProductAttributeDefaultValueId, AttributeValue, LocaleId, RowNumber )
					EXEC sys.sp_sqlexec @SQLQuery;
                    FETCH NEXT FROM Cr_AttributeDetails INTO @AttributeId, @AttributeTypeName, @AttributeCode, @IsRequired, @SourceColumnName, @PimAttributeFamilyId;
                 END;
             CLOSE Cr_AttributeDetails;
             DEALLOCATE Cr_AttributeDetails;
			 Select * into #PimProductDetail from @PimProductDetail
			 UPDATE a 
			 SET ConfigureAttributeIds =  SUBSTRING((SELECT ','+CAST(c.PimAttributeId As VARCHAR(100)) 
			 FROM #PimProductDetail c 
			 INNER JOIN ZnodePimAttribute b ON (b.PimAttributeId = c.PimAttributeId)
			 WHERE IsConfigurable =1  AND c.RowNumber = a.RowNumber  FOR XML PATH('')),2,4000) 
			 FROM #PimProductDetail a 
		
             -- In case of Yes/No : If value is not TRUE OR  1 then it will be  False else True
			 --If default Value set not need of hard code for IsActive
			 UPDATE ppdti SET ppdti.AttributeValue = CASE WHEN Upper(ISNULL(ppdti.AttributeValue, '')) in ( 'TRUE','1')  THEN 'true'  ELSE 'false' END FROM #PimProductDetail ppdti
                INNER JOIN #DefaultAttributeValue dav ON ppdti.PimAttributeId = dav.PimAttributeId WHERE   dav.AttributeTypeName = 'Yes/No';
             -- Pass product records one by one 
             DECLARE @IncrementalId INT= 1;
             DECLARE @SequenceId INT=
             (
                 SELECT MAX(RowNumber) FROM #PimProductDetail
             );
             DECLARE @PimProductDetailToInsert PIMPRODUCTDETAIL;  --User define table type to pass multiple records of product in single step

             WHILE @IncrementalId <= @SequenceId
                 BEGIN
					   	INSERT INTO @PimProductDetailToInsert(PimAttributeId,PimAttributeFamilyId,ProductAttributeCode,ProductAttributeDefaultValueId,
						PimAttributeValueId,LocaleId,PimProductId,AttributeValue,AssociatedProducts,ConfigureAttributeIds,ConfigureFamilyIds)
						SELECT PimAttributeId,PimAttributeFamilyId,ProductAttributeCode,ProductAttributeDefaultValueId,PimAttributeValueId,LocaleId,
						PimProductId,AttributeValue,AssociatedProducts,ConfigureAttributeIds,ConfigureFamilyIds FROM #PimProductDetail
						WHERE [#PimProductDetail].RowNumber = @IncrementalId; --AND RTRIM(LTRIM(AttributeValue)) <> '';

						Delete from @PimProductDetailToInsert where RTRIM(LTRIM(AttributeValue)) = '';
	                    --ORDER BY [@PimProductDetail].RowNumber;
                        ----Call process to finally insert data into 
                        ----------------------------------------------------------
						--1. [dbo].[ZnodePimProduct]
						--2. [dbo].[ZnodePimAttributeValue]
						--3. [dbo].[ZnodePimAttributeValueLocale]
						if Exists (select TOP 1 1 from @PimProductDetailToInsert)
							EXEC [Znode_ImportInsertUpdatePimProduct] @PimProductDetail = @PimProductDetailToInsert,@UserID = @UserID,@status = @status OUT,@IsNotReturnOutput = 1;
						DELETE FROM @PimProductDetailToInsert;
						SET @IncrementalId = @IncrementalId + 1;
						
                 END;
             UPDATE ZnodeImportProcessLog SET Status = dbo.Fn_GetImportStatus(2), ProcessCompletedDate = @GetDate WHERE ImportProcessLogId = @ImportProcessLogId;
            -- COMMIT TRAN ImportProducts;
         END TRY
         BEGIN CATCH
             SELECT ERROR_MESSAGE(),ERROR_LINE(),ERROR_PROCEDURE();
             UPDATE ZnodeImportProcessLog SET Status = dbo.Fn_GetImportStatus(3), ProcessCompletedDate = @GetDate WHERE ImportProcessLogId = @ImportProcessLogId;
            -- ROLLBACK TRAN ImportProducts;
         END CATCH;
     END;

	 go
	 if exists( select * from sys.procedures where name = 'Znode_ManageProductList_XML')
		drop procedure Znode_ManageProductList_XML

go

	 /****** Object:  StoredProcedure [dbo].[Znode_ManageProductList_XML]    Script Date: 1/10/2018 11:25:30 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[Znode_ManageProductList_XML]
(   @WhereClause						 XML,
    @Rows								 INT           = 100,
    @PageNo								 INT           = 1,
    @Order_BY			 VARCHAR(1000) = '',
    @LocaleId			 INT           = 1,
    @PimProductId		 VARCHAR(2000) = 0,
    @IsProductNotIn	 BIT           = 0,
	@IsCallForAttribute BIT		   = 0,
	@AttributeCode      VARCHAR(max ) = '' ,
	@IsDebug            Bit		   = 0 )
AS
    
/*
		  Summary:-   This Procedure is used for get product List  
				    Procedure will pivot verticle table(ZnodePimattributeValues) into horizontal table with columns 
				    ProductId,ProductName,ProductType,AttributeFamily,SKU,Price,Quantity,IsActive,ImagePath,Assortment,LocaleId,DisplayOrder
        
		  Unit Testing
		  
exec Znode_ManageProductList_XML @WhereClause=N'',@Rows=50,@PageNo=1,@Order_By=N'',@LocaleId=1,@PimProductId=N'',@IsProductNotIn=1,@IsCallForAttribute=0,@AttributeCode=''
          select * from ZnodeAttributeType  WHERE AttributeValue LIKE '%&%'
		  UPDATE VieW_lOADMANAGEpRODUCT SET  AttributeValue = 'A & B'  WHERE AttributeValue LIKE '% and %' AND PimProductId = 158
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @PimProductIds TransferId, --VARCHAR(MAX), 
					 @FirstWhereClause NVARCHAR(MAX)= '', 
					 @SQL NVARCHAR(MAX)= '' ,
					 @OutPimProductIds VARCHAR(max),
					 @ProductXML NVARCHAR(max) ;

             DECLARE @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId()
					 ,@RowsCount INT =0 ;
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
			  ,PimAttributedefaultValueId INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
			   DECLARE @TBL_AttributeDetailsLocale AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
			 DECLARE @TBL_MultiSelectAttribute TABLE (PimAttributeId INT , AttributeCode VARCHAR(600))
			
			 DECLARE @TBL_MediaAttribute TABLE (Id INT ,PimAttributeId INT ,AttributeCode VARCHAR(600) )

			 DECLARE @TBL_ProductIds TABLE 
			 (
			  PimProductId INT,
			  ModifiedDate DATETIME  
			 )

			 DECLARE @FamilyDetails TABLE
             (
			  PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(Max)
             );
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
             DECLARE @ProductIdTable TABLE
             (PimProductId INT,
              CountId      INT,
              RowId        INT IDENTITY(1,1)
             );
          		
             IF EXISTS ( SELECT TOP 1 1 FROM @WhereClause.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
			 WHERE dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Brand'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  = 'Vendor'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'ShippingCostRules'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Highlights') and @IsCallForAttribute=1
                 BEGIN
                DECLARE @AttributeCodeValue TABLE (AttributeValue NVARCHAr(max),AttributeCode NVARCHAR(max))

				INSERT INTO @AttributeCodeValue(AttributeValue,AttributeCode)
				SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
						 ,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeCode
				FROM @WhereClause.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
				WHERE dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Brand'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  = 'Vendor'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'ShippingCostRules'
                OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''',''))  =  'Highlights'
				
				SET @SQL =   
				           ';WIth Cte_DefaultValue AS (
										  SELECT AttributeDefaultValueCode , ZPDF.PimAttributeId ,FNPA.AttributeCode
										  FROM ZnodePImAttributeDefaultValue ZPDF
										  INNER JOIN [dbo].[Fn_GetProductDefaultFilterAttributes] () FNPA ON ( FNPA.PimAttributeId = ZPDF.PimAttributeId) 
										)
										, Cte_productIds AS 
										(
										  SELECT a.PimProductId, c.AttributeCode , CTDV.AttributeDefaultValueCode AttributeValue,b.ModifiedDate 
										  FROM  ZnodePimAttributeValue a
										  LEFT JOIN ZnodePimAttribute c ON(c.PimAttributeId = a.PimAttributeId)
										  LEFT JOIN ZnodePimAttributeValueLocale b ON(b.PimAttributeValueId = a.PimAttributeValueId)  
										  INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode 
										  AND EXISTS (SELECT TOP 1 1 FROM dbo.split(b.AttributeValue,'','') SP WHERE SP.Item = CTDV.AttributeDefaultValueCode) )
										  Union all 
										  
											SELECT a.PimProductId,c.AttributeCode,ZPADV.AttributeDefaultValueCode AttributeValue ,a.ModifiedDate 
											FROM ZnodePimProductAttributeDefaultValue ZPPADV
											INNER JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPPADV.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
											LEFT JOIN ZnodePimAttributeValue a ON (a.PimAttributeValueId = ZPPADV.PimAttributeValueId )
											LEFT JOIN ZnodePimAttribute c ON ( c.PimAttributeId=a.PimAttributeId )
											INNER JOIN Cte_DefaultValue CTDV ON (CTDV.AttributeCode = c.AttributeCode )
										)										
										SELECT PimProductId ,ModifiedDate
										FROM Cte_productIds WHERE  AttributeCode '+(SELECT TOP 1 AttributeCode  FROM @AttributeCodeValue )+' AND 
										AttributeValue '+(SELECT TOP 1 AttributeValue  FROM @AttributeCodeValue )+' GROUP BY PimProductId,ModifiedDate Order By ModifiedDate DESC ';

					 SET @Order_BY = CASE WHEN @Order_BY = '' THEN 'ModifiedDate DESC' ELSE @Order_BY END 
					 	
					 SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(max)),'<WhereClauseModel><attributecode>'+(SELECT TOP 1 AttributeCode  FROM @AttributeCodeValue )+'</attributecode><attributevalue>'+(SELECT TOP 1 AttributeValue   FROM @AttributeCodeValue )+'</attributevalue></WhereClauseModel>','') AS XML )
					
				     INSERT INTO @TBL_ProductIds ( PimProductId, ModifiedDate )
					 EXEC (@SQL);

                     INSERT INTO @ProductIdTable( PimProductId )
                     SELECT PimProductId 
					 FROM @TBL_ProductIds

                     INSERT INTO @TransferPimProductId
					 SELECT PimProductId
                     FROM @ProductIdTable
                   
				   			  -- SELECT * FROM @TransferPimProductId
     DELETE FROM @ProductIdTable;
   --  SET @WhereClause = CAST(REPLACE(CAST(@WhereClause AS NVARCHAR(MAX)), @FirstWhereClause, ' 1 = 1') AS XML);
                 END
	            ELSE IF @PimProductId <> ''
			    BEGIN 
		
				 INSERT INTO @TransferPimProductId(id)
				 SELECT Item 
				 FROM dbo.split(@PimProductId,',')
			    END 


	 DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 	IF @PimProductId <> ''  OR   @IsCallForAttribute=1 --OR (CAST(@WhereClause AS NVARCHAR(max))= N'' AND @Order_by <> N'' AND @AttributeCode = N'')
		BEGIN 
	 SET @IsProductNotIn = CASE WHEN @IsProductNotIn = 0 THEN 1  
					 WHEN @IsProductNotIn = 1 THEN 0 END 
		END 
	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  @IsProductNotIn,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 
	 
	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	      
	 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
	 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
	 INSERT INTO @TBL_MainList(id,RowId)
	 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 
             


  			 INSERT INTO @PimProductIds ( Id  )
			 SELECT id FROM @TBL_MainList

			 DECLARE @TBL_PimProductIds transferId 
			 INSERT INTO @TBL_PimProductIds
			 SELECT id 
             FROM @PimProductIds
			 			 	
			 DECLARE @PimAttributeIds TransferId  
			 INSERT INTO @PimAttributeIds
			 SELECT PimAttributeId  
			 FROM [dbo].[Fn_GetProductGridAttributes]()
			 
			 INSERT INTO @TBL_AttributeDetails
             (PimProductId,
              AttributeValue,
              AttributeCode,
              PimAttributeId
             )
             EXEC Znode_GetProductsAttributeValue_newTesting
                  @TBL_PimProductIds,
                  @PimAttributeIds,
                  @localeId;
			
			UPDATE @TBL_AttributeDetails
			SET AttributeValue = ISNULL(AttributeValue,'')
			WHERE AttributeValue IS NULL 
			 INSERT INTO @FamilyDetails
             (PimAttributeFamilyId,
              PimProductId
             )
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId]
                  @PimProductIds,
                  1;
             
		 UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @LocaleId);
             UPDATE a
               SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
                  INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                       AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
           	
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT PimProductId ,FamilyName, 'AttributeFamily',NULL
			FROM @FamilyDetails 
			
			INSERT INTO @TBL_AttributeDetails             (PimProductId,              AttributeValue,              AttributeCode,              PimAttributeId             )
			SELECT a.ID PimProductId ,CASE WHEN IsProductPublish = 1 THEN   'Published' WHEN IsProductPublish = 0 THEN 'Draft'  ELSE 'Not Published' END, 'PublishStatus',NULL
			FROM @PimProductIds a 
			INNER JOIN ZnodePimProduct b ON (b.PimProductId = a.ID)

	  INSERT INTO @TBL_AttributeDetailsLocale (PimProductId ,PimAttributeId,AttributeCode )
			SELECT  TBLAD.PimProductId ,TBLAD.PimAttributeId,TBLAD.AttributeCode 
			FROM @TBL_AttributeDetails TBLAD 
			GROUP BY  TBLAD.PimProductId ,TBLAD.PimAttributeId,TBLAD.AttributeCode 

					
	    UPDATE TBLPP 
		SET AttributeValue = CTDD.AttributeValue 
		FROM  @TBL_AttributeDetails CTDD 
		INNER JOIN @TBL_AttributeDetailsLocale TBLPP ON (TBLPP.PimProductId = CTDD.PimProductId AND TBLPP.AttributeCode  = CTDD.AttributeCode)
		WHERE TBLPP.AttributeValue IS NULL 

    	SET @ProductXML =  '<MainProduct>'+ STUFF( (  SELECT '<Product>'+'<PimProductId>'+CAST(TBAD.PimProductId AS VARCHAR(50))+'</PimProductId>'+ STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST( (SELECT ''+TBADI.AttributeValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
															FROM @TBL_AttributeDetailsLocale TBADI      
															 WHERE TBADI.PimProductId = TBAD.PimProductId 
															 ORDER BY TBADI.PimProductId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Product>'	   

		FROM @TBL_AttributeDetailsLocale TBAD
		INNER JOIN @TBL_MainList TBPI ON (TBAD.PimProductid = TBPI.id )
		LEFT JOIN @TBL_ProductIds TPT ON TBAD.PimProductId = TPT.PimProductId
		GROUP BY TBAD.pimProductid, TPT.ModifiedDate,TBPI.RowId
		ORDER BY TBPI.RowId 
		FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainProduct>'
			--FOR XML PATH ('MainProduct'))


			SELECT  @ProductXML  ProductXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1  
			 AND  IsCategory = 0 
			 AND ZPA.IsShowOnGrid = 1  
			 UNION ALL 
			 SELECT 'PublishStatus','Publish Status'

     IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT (SELECT COUNT(1) FROM @TAb) AS RowsCount   
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT (SELECT COUNT(1) FROM @ProductListIdRTR) AS RowsCount   
	 END 
		;

             -- find the all locale values 
         END TRY
         BEGIN CATCH
		    SELECT ERROR_MESSAGE()
                DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_ManageProductList_XML @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimProductId='+@PimProductId+',@IsProductNotIn='+CAST(@IsProductNotIn AS VARCHAR(50))+',@IsCallForAttribute='+CAST(@IsCallForAttribute AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_ManageProductList_XML',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;

         END CATCH;

     END;

	 GO
 ----mENUID FOR INVENTORY
 DECLARE @ActionId1 INT,@MenuId1 INT
 SELECT @ActionId1 = ActionId FROM ZnodeActions WHERE ActionName = 'GetDownloadableProductKeys' 
SELECT @MenuId1 = MenuId FROM ZnodeMenu WHERE MenuName = 'Inventory'
 Insert into ZnodeActionMenu (MenuId,ActionId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
 SELECT @MenuId1,@ActionId1,2,GETDATE(),2,GETDATE()
   WHERE NOT EXISTS(SELECT * FROM ZnodeActionMenu WHERE ActionId = @ActionId1 AND MenuId = @MenuId1 )

   GO

   
if exists( select * from sys.procedures where name = 'Znode_UpdateProductAttributeValue')
	drop procedure Znode_UpdateProductAttributeValue

go

   /****** Object:  StoredProcedure [dbo].[Znode_UpdateProductAttributeValue]    Script Date: 1/10/2018 11:36:35 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROCEDURE [dbo].[Znode_UpdateProductAttributeValue]
(
	@SKU				 NVARCHAR(MAX),
	@LocaleCode			 nvarchar(100),
	@AttributeCodeValues XML,
	@UserId				 INT = 0,
	@Status				 BIT OUT,
	@IsUnAssociated		 BIT = 0
)
AS    
/* ---------------------------------------------------------------------------------------------------------------
    --Summary : Update AttributeValue for specific product 
    --          Input parameter : @LocaleId , @PimAttributeCode,  @ProductId,@AttributeValue,@UserId
    --Unit Testing : 

     BEGIN TRANSACTION 
    DECLARE @Status bit 
    EXEC [Znode_UpdateProductAttributeValue]
    @SKU        = 10637,
    @LocaleCode         = 'en-US',
    @AttributeCodeValues   = 'Tropicana',
    @UserId           =2,
    @Status           =@Status OUT
    SELECT @Status 
    --SELECT zpa.AttributeCode ,ZpAVL .AttributeValue  FROM ZnodePimAttributeValueLocale ZpAVL INNER JOIN ZnodePimAttributeValue zpav ON ZpAVL.PimAttributeValueId = zpav.PimAttributeValueId
    --INNER JOIN dbo.ZnodePimAttribute zpa ON zpav.PimAttributeId = zpa.PimAttributeId
    --WHERE zpav.PimProductId =12 AND ZpAVL.LocaleId = 1 AND zpa.AttributeCode = 'ProductName' 
    ROLLBACK Transaction 
    ---------------------------------------------------------------------------------------------------------------
	*/

     BEGIN
         BEGIN TRAN UpdateAttributeValue;
         BEGIN TRY
             DECLARE @GetDate DATETIME= dbo.Fn_GetDate();
             DECLARE @PimDefaultFamily INT= dbo.Fn_GetDefaultPimProductFamilyId();
			 DECLARE @ProductId INT, @LocaleId INT
			 
             DECLARE @TBL_PimProductId TABLE
             ( RowId INT IDENTITY(1,1),
				PimProductId INT,
				PimAttributeId INT,
                AttributeCode VARCHAR(300),
                AttributeValue NVARCHAR(MAX),
                PimAttributeDefaultValueId INT
             ); -- table holds the PimProductId 

			  DECLARE @TBL_DefaultAttributeId TABLE 
			  ( 
				PimAttributeId INT PRIMARY KEY , 
				AttributeCode VARCHAR(600)
			  )
			 SELECT TOP 1 @LocaleId  =  LocaleId  from ZnodeLocale where Code = @LocaleCode
			 If @LocaleId is null 
			 Begin
				SET @Status = 0 
				 Rollback TRAN UpdateAttributeValue;
				Return 0
			 End
		     INSERT INTO @TBL_DefaultAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  ZnodePimAttribute a 
			 INNER JOIN ZnodeAttributeType r ON (r.AttributeTypeId = a.AttributeTypeId)
			 WHERE AttributeTypeName IN ('Simple Select', 'Multi Select')
			 		 AND IsCategory = 0 

			  DECLARE @TBL_TextAreaAttributeId TABLE 
			  ( 
				PimAttributeId INT PRIMARY KEY , 
				AttributeCode VARCHAR(600)
			  )

		     INSERT INTO @TBL_TextAreaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM  ZnodePimAttribute a 
			 INNER JOIN ZnodeAttributeType r ON (r.AttributeTypeId = a.AttributeTypeId)
			 WHERE AttributeTypeName IN ('Text Area')
			 AND IsCategory = 0 


             DECLARE @TBL_PimAttributeValueId TABLE
             (
				
				PimAttributeValueId INT,
				PimAttributeId      INT,
				PimProductId        INT,
				PimAttributeDefaultValueId int 
             );


			 SELECT @ProductId = PAV.PimProductId FROM ZnodePimAttributeValueLocale PAVL 
			 INNER JOIN ZnodePimAttributeValue PAV ON PAVL.PimAttributeValueId = PAV.PimAttributeValueId
			 INNER JOIN ZnodePimAttribute PA ON PA.PimAttributeId = PAV.PimAttributeId
			 WHERE PA.AttributeCode = 'SKU' AND PAVL.AttributeValue = @SKU

			 INSERT INTO @TBL_PimProductId ( PimProductId, AttributeCode, AttributeValue )
			 SELECT @ProductId, Tbl.Col.value( 'AttributeCode[1]', 'NVARCHAR(max)' ) AS AttributeCode, DV.Item
			 FROM @AttributeCodeValues.nodes( '//ArrayOfPIMAttributeCodeValueModel/PIMAttributeCodeValueModel' ) AS Tbl(Col)
			 CROSS APPLY dbo.split( Tbl.Col.value( 'AttributeValues[1]', 'NVARCHAR(max)' ),',') DV			

			 UPDATE @TBL_PimProductId
			 SET PimAttributeId = ZPA.PimAttributeId, PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId
			 FROM @TBL_PimProductId Tbl
			 inner JOIN ZnodePimAttribute AS ZPA ON( ZPA.AttributeCode = Tbl.AttributeCode )
			 LEFT JOIN ZnodePimAttributeDefaultValue ZPADV ON (ZPA.PimAttributeId = ZPADV.PimAttributeId and ZPADV.AttributeDefaultValueCode = Tbl.AttributeValue )
			 where ZPA.IsCategory <> 1

			
			 ;WITH Cte_DeleteDuplicate As
			 (
			   SELECT  Row_Number()over(Partition By PimProductId, PimAttributeId, PimAttributeDefaultValueId order by PimProductId, PimAttributeId, PimAttributeDefaultValueId, rowid )SRNO ,*
			   FROM @TBL_PimProductId 		 
			 ),
			 CTE_Last_Dataset as
			 (
				SELECT MAX(SRNO)SRNO, PimProductId, PimAttributeId, PimAttributeDefaultValueId from Cte_DeleteDuplicate
				GROUP BY PimProductId, PimAttributeId, PimAttributeDefaultValueId
			 )
			 DELETE A FROM Cte_DeleteDuplicate a
			 WHERE NOT EXISTS ( SELECT * FROM CTE_Last_Dataset b WHERE a.SRNO = b.SRNO and ISNULL(a.PimProductId,0) = ISNULL(B.PimProductId,0)  and ISNULL(a.PimAttributeId,0) = ISNULL(B.PimAttributeId,0) )
			 AND PimAttributeId IS NOT NULL

	
             IF @IsUnAssociated = 1
                 BEGIN
                     INSERT INTO @TBL_PimAttributeValueId ( PimAttributeValueId, PimAttributeId, PimProductId, PimAttributeDefaultValueId )
                     SELECT PimAttributeValueId, ZPAV.PimAttributeId, ZPAV.PimProductId, TBLP.PimAttributeDefaultValueId
                     FROM ZnodePimAttributeValue ZPAV
                     INNER JOIN @TBL_PimProductId TBLP ON(TBLP.PimProductId = ZPAV.PimProductId AND TBLP.PimAttributeId = ZPAV.PimAttributeId );

			
                     DELETE FROM ZnodePimProductAttributeDefaultValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimAttributeValueId TBLAP
                         WHERE TBLAP.PimAttributeValueId = ZnodePimProductAttributeDefaultValue.PimAttributeValueId
                               AND ZnodePimProductAttributeDefaultValue.PimAttributeDefaultValueId = TBLAP.PimAttributeDefaultValueId --@PimAttributeDefaultValueId
                     )
                     AND LocaleId = @LocaleId;
					 

                     DELETE FROM ZnodePimAttributeValue
                     WHERE EXISTS
                     (
                         SELECT TOP 1 1
                         FROM @TBL_PimAttributeValueId TBLAP
                         WHERE TBLAP.PimAttributeValueId = ZnodePimAttributeValue.PimAttributeValueId
                               AND ZnodePimAttributeValue.PimAttributeDefaultValueId =TBLAP.PimAttributeDefaultValueId -- @PimAttributeDefaultValueId
                     );
                     --AND LocaleId = @LocaleId 					

                 END;

             INSERT INTO ZnodePimAttributeValue ( PimProductId, PimAttributeId, PimAttributeDefaultValueId, AttributeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, PimAttributeFamilyId )
             OUTPUT INSERTED.PimAttributeValueId, INSERTED.PimAttributeId, INSERTED.PimProductId, INSERTED.PimAttributeDefaultValueId INTO @TBL_PimAttributeValueId
             SELECT DISTINCT TBPP.PimProductId, TBPP.PimAttributeId, NULL,NULL, @UserId, @GetDate, @UserId, @GetDate, @PimDefaultFamily
             FROM @TBL_PimProductId TBPP
             WHERE NOT EXISTS
             (
                SELECT TOP 1 1
                FROM ZnodePimAttributeValue ZAV
                WHERE ZAV.PimProductId = TBPP.PimProductId
                        AND ZAV.PimAttributeId = TBPP.PimAttributeId
             )
             AND @IsUnAssociated = 0 AND TBPP.PimProductId IS NOT NULL;
              
			 UPDATE ZnodePimAttributeValue 
			 SET  ModifiedBy = @UserId , 
				  ModifiedDate = @GetDate,
				  PimAttributeDefaultValueId = ZAV.PimAttributeDefaultValueId
			 OUTPUT INSERTED.PimAttributeValueId,
                    INSERTED.PimAttributeId,
                    INSERTED.PimProductId,
				    INSERTED.PimAttributeDefaultValueId
             INTO @TBL_PimAttributeValueId
			 FROM ZnodePimAttributeValue  
			 INNER JOIN @TBL_PimProductId ZAV ON ( ZAV.PimProductId = ZnodePimAttributeValue.PimProductId AND ZAV.PimAttributeId = ZnodePimAttributeValue.PimAttributeId) 
			 WHERE @IsUnAssociated = 0
			  
             UPDATE A
             SET PimAttributeDefaultValueId = C.PimAttributeDefaultValueId,
				 ModifiedBy = @UserId ,
			     ModifiedDate = @GetDate
             FROM ZnodePimProductAttributeDefaultValue A
             INNER JOIN ZnodePimAttributeValue B ON(B.PimAttributeValueId = A.PimAttributeValueId)
             INNER JOIN @TBL_PimProductId C ON(B.PimAttributeId = C.PimAttributeId AND B.PimProductId = C.PimProductId);
			
             UPDATE A
             SET AttributeValue = C.AttributeValue,
				 ModifiedBy = @UserId ,
			     ModifiedDate = @GetDate
             FROM ZnodePimAttributeValueLocale A
             INNER JOIN ZnodePimAttributeValue B ON(B.PimAttributeValueId = A.PimAttributeValueId)
             INNER JOIN @TBL_PimProductId C ON(B.PimAttributeId = C.PimAttributeId AND B.PimProductId = C.PimProductId)
			 WHERE LocaleId = @LocaleId;

             INSERT INTO ZnodePimProductAttributeDefaultValue ( PimAttributeValueId, LocaleId, PimAttributeDefaultValueId, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
             SELECT TBPAV.PimAttributeValueId, @LocaleId, TBPP.PimAttributeDefaultValueId, @UserId, @GetDate, @UserId, @GetDate
             FROM @TBL_PimProductId TBPP 
			 INNER JOIN @TBL_PimAttributeValueId TBPAV ON(TBPAV.PimProductId = TBPP.PimProductId AND TBPAV.PimAttributeId = TBPP.PimAttributeId)
             WHERE @IsUnAssociated = 0
			 AND EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			 AND NOT EXISTS ( SELECT * FROM ZnodePimProductAttributeDefaultValue Z WHERE Z.PimAttributeValueId = TBPAV.PimAttributeValueId AND Z.PimAttributeDefaultValueId = TBPP.PimAttributeDefaultValueId ) ;
			 

			  UPDATE ZPAVL
			  SET AttributeValue = PP.AttributeValue			      
			  FROM ZnodePimAttributeValueLocale ZPAVL 
			  INNER JOIN @TBL_PimAttributeValueId TBPAV ON( TBPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId AND  ZPAVL.LocaleId = @localeId )  AND @IsUnAssociated = 0
			  INNER JOIN @TBL_PimProductId PP ON ( TBPAV.PimProductId = PP.PimProductId AND TBPAV.PimAttributeId = PP.PimAttributeId ) 
																	-- AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)

             
			 INSERT INTO ZnodePimAttributeValueLocale ( PimAttributeValueId, LocaleId, AttributeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
             SELECT DISTINCT TBPAV.PimAttributeValueId, @LocaleId, TBPP.AttributeValue, @UserId, @GetDate, @UserId, @GetDate
             FROM @TBL_PimProductId TBPP
             INNER JOIN @TBL_PimAttributeValueId TBPAV ON(TBPAV.PimProductId = TBPP.PimProductId AND TBPAV.PimAttributeId = TBPP.PimAttributeId)
             WHERE @IsUnAssociated = 0
			 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimAttributeValueLocale TBH WHERE TBH.PimAttributeValueId = TBPAV.PimAttributeValueId AND TBH.LocaleId = @LocaleId )
			 AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			
			  UPDATE ZPAVL
			  SET AttributeValue = PP.AttributeValue			      
			  FROM ZnodePimProductAttributeTextAreaValue ZPAVL 
			  INNER JOIN @TBL_PimAttributeValueId TBPAV ON( TBPAV.PimAttributeValueId = ZPAVL.PimAttributeValueId AND  ZPAVL.LocaleId = @localeId )  AND @IsUnAssociated = 0
			  INNER JOIN @TBL_PimProductId PP ON ( TBPAV.PimProductId = PP.PimProductId AND TBPAV.PimAttributeId = PP.PimAttributeId ) 
																	-- AND NOT EXISTS (SELECT TOP 1 1 FROM @TBL_DefaultAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
             
			 INSERT INTO ZnodePimProductAttributeTextAreaValue ( PimAttributeValueId, LocaleId, AttributeValue, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate )
             SELECT DISTINCT TBPAV.PimAttributeValueId, @LocaleId, TBPP.AttributeValue, @UserId, @GetDate, @UserId, @GetDate
             FROM @TBL_PimProductId TBPP
             INNER JOIN @TBL_PimAttributeValueId TBPAV ON(TBPAV.PimProductId = TBPP.PimProductId AND TBPAV.PimAttributeId = TBPP.PimAttributeId)
             WHERE @IsUnAssociated = 0
			 AND  EXISTS (SELECT TOP 1 1 FROM @TBL_TextAreaAttributeId TBL WHERE TBL.PimAttributeId = TBPP.PimAttributeId)
			 AND NOT EXISTS (SELECT TOP 1 1 FROM ZnodePimProductAttributeTextAreaValue TBH WHERE TBH.PimAttributeValueId = TBPAV.PimAttributeValueId AND TBH.LocaleId = @LocaleId );

			 
			 SELECT @SKU SKU, AttributeCode, AttributeValue --PimProductId ,
			 FROM @TBL_PimProductId a
			 WHERE NOT EXISTS ( SELECT * FROM @TBL_PimAttributeValueId b WHERE isnull(a.PimProductId,0) = isnull(b.PimProductId,0) and a.PimAttributeId = b.PimAttributeId )--and a.PimAttributeDefaultValueId = b.PimAttributeDefaultValueId )

			 IF NOT EXISTS ( SELECT PimProductId , AttributeCode, AttributeValue
							 FROM @TBL_PimProductId a
							 WHERE NOT EXISTS ( SELECT * FROM @TBL_PimAttributeValueId b WHERE a.PimProductId = b.PimProductId and a.PimAttributeId = b.PimAttributeId ))--and a.PimAttributeDefaultValueId = b.PimAttributeDefaultValueId ) )
			 BEGIN
				SET @Status = 1;
				--SELECT 1 AS ID, CAST(1 AS BIT) AS [Status];
			 END
			 ELSE 
			 BEGIN
				SET @Status = 0;
				--SELECT 1 AS ID, CAST(0 AS BIT) AS [Status];
			 END

             --SELECT 1 AS ID, CAST(1 AS BIT) AS [Status];
			 --SELECT @Status

             COMMIT TRAN UpdateAttributeValue;
         END TRY
         BEGIN CATCH

			 SELECT @SKU SKU, AttributeCode, AttributeValue --PimProductId ,
			 FROM @TBL_PimProductId a
			 WHERE NOT EXISTS ( SELECT * FROM @TBL_PimAttributeValueId b WHERE a.PimProductId = b.PimProductId and a.PimAttributeId = b.PimAttributeId )

		  --SELECT ERROR_MESSAGE ()
             DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			         @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_UpdateProductAttributeValue @ProductId = '+ @ProductId+',@Status='+CAST(@Status AS VARCHAR(50))+
		             ',@LocaleId='+CAST(@LocaleId AS VARCHAR(50))+',@AttributeCodeValues='+CAST(@AttributeCodeValues AS NVARCHAR(MAX))+',@UserId='+CAST(@UserId AS NVARCHAR(50));
             SET @Status = 0;
             SELECT 1 AS ID,
                    CAST(0 AS BIT) AS [Status],
                    @ErrorMessage;
             ROLLBACK TRAN UpdateAttributeValue;
             EXEC Znode_InsertProcedureErrorLog
                  @ProcedureName = 'Znode_UpdateProductAttributeValue',
                  @ErrorInProcedure = @Error_procedure,
                  @ErrorMessage = @ErrorMessage,
                  @ErrorLine = @ErrorLine,
                  @ErrorCall = @ErrorCall;
         END CATCH;
     END;

	 go

INSERT [dbo].[ZnodeSearchProfileAttributeMapping] ( [SearchProfileId], [AttributeCode], [IsFacets], [IsUseInSearch], [BoostValue], [CreatedBy], [CreatedDate], [ModifiedBy], [ModifiedDate]) 
SELECT (SELECT SearchProfileId FROM ZnodeSearchProfile WHERE ProfileName = 'ZnodeSearchProfile'), N'SKU', 0, 1, NULL, 2, GETDATE(), 2, GETDATE()
WHERE NOT EXISTS( SELECT * FROM [ZnodeSearchProfileAttributeMapping] WHERE [SearchProfileId] =
(SELECT SearchProfileId FROM ZnodeSearchProfile WHERE ProfileName = 'ZnodeSearchProfile') AND [AttributeCode] = 'SKU' )
and exists (SELECT SearchProfileId FROM ZnodeSearchProfile WHERE ProfileName = 'ZnodeSearchProfile')   


GO
    
delete  from ZnodeImportAttributeValidation where ImportHeadId  in (select ImportHeadId from ZnodeImportHead where  Name  = 'Customer')  and  AttributeCode = 'MiddleName'

delete from ZnodeImportTemplateMapping where ImportTemplateId in (Select ImportTemplateId from ZnodeImportTemplate where  TemplateName = 'CustomerTemplate' ) 
and SourceColumnName = 'MiddleName'

Go
Update ZnodeSearchFeature SET HelpDescription = 'Edit the characters in a word to make it same as another word. Number of edits is calculated basis the character count.' where FeatureCode = 'AutoCorrect'
Update ZnodeSearchFeature SET HelpDescription = 'Minimum number of words that must match the content in searchable field.' where FeatureCode = 'MinimumShouldMatch'

GO


IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetCatalogCategoryProducts')
BEGIN 
	DROP PROCEDURE Znode_GetCatalogCategoryProducts
END 
GO
CREATE  PROCEDURE [dbo].[Znode_GetCatalogCategoryProducts]
( @WhereClause      XML,
  @Rows             INT           = 100,
  @PageNo           INT           = 1,
  @Order_BY         VARCHAR(1000) = '',
  @RowsCount        INT OUT,
  @LocaleId         INT           = 1,
  @PimCategoryId    INT,
  @PimCatalogId     INT           = 0,
  @IsAssociated     BIT           = 0,
  @ProfileCatalogId INT           = 0
  ,@AttributeCode   VARCHAR(max) = ''
  )
AS
   
/*
	   Summary:  Get product List  Catalog / category / respective product list   		   
	   Unit Testing   
	   begin tran
	   declare @p7 int = 0  
	   EXEC Znode_GetCatalogCategoryProducts @WhereClause=N'',@Rows=10,@PageNo=1,@Order_By=N'',
	   @RowsCount=@p7 output,@PimCategoryId=11,@PimCatalogId = 1 ,@LocaleId=1 ,@ProfileCatalogId = 1 
	   rollback tran
	  
    */

     BEGIN
         SET NOCOUNT ON;
         BEGIN TRY
             DECLARE @DefaultAttributeFamily INT= dbo.Fn_GetDefaultPimProductFamilyId(), @DefaultLocaleId INT= dbo.Fn_GetDefaultLocaleId(), @OrderId INT= 0;
             DECLARE @SQL VARCHAR(MAX), 
					 @PimProductId TransferId,--VARCHAR(MAX)= '', 
					 @PimAttributeId VARCHAR(MAX),
					 @OutPimProductIds VARCHAR(max);
             DECLARE @TransferPimProductId TransferId 
			 DECLARE @TBL_PimMediaAttributeId TABLE (PimAttributeId INT ,AttributeCode VARCHAR(600))
			 INSERT INTO @TBL_PimMediaAttributeId (PimAttributeId,AttributeCode)
			 SELECT PimAttributeId,AttributeCode FROM Dbo.Fn_GetProductMediaAttributeId ()

			 DECLARE @TBL_ProfileCatalogCategory TABLE
             (ProfileCatalogId     INT,
              PimProductId         INT,
              PimCategoryId        INT,
              PimCatalogCategoryId INT
             );
             DECLARE @TBL_AttributeDefaultValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(100),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder INT 
             );
             DECLARE @TBL_AttributeDetails AS TABLE
             (PimProductId   INT,
              AttributeValue NVARCHAR(MAX),
              AttributeCode  VARCHAR(600),
              PimAttributeId INT
             );
             DECLARE @FamilyDetails TABLE
             (PimProductId         INT,
              PimAttributeFamilyId INT,
              FamilyName           NVARCHAR(3000)
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             IF @Order_By LIKE ''
                 BEGIN
                     SET @OrderId = 1;
                 END;
             IF @ProfileCatalogId > 0
                 BEGIN
                     INSERT INTO @TBL_ProfileCatalogCategory (ProfileCatalogId,PimProductId,PimCategoryId,PimCatalogCategoryId)
                     SELECT ZPC.ProfileCatalogId,PimProductId,PimCategoryId,ZCC.PimCatalogCategoryId
                     FROM ZnodePimCatalogCategory AS ZCC
                     INNER JOIN ZnodeProfileCatalog AS ZPC ON(ZPC.PimCatalogId = ZCC.PimCatalogId)
                     WHERE ZPC.ProfileCatalogId = @ProfileCatalogId
                     AND NOT EXISTS
                         (
                            SELECT TOP 1 1
                            FROM ZnodeProfileCatalogCategory AS ZPCC
                            WHERE ZPCC.PimCatalogCategoryId = ZCC.PimCatalogCategoryId
                         );
                 END;
             IF @PimCatalogId = 0
                 BEGIN
					INSERT INTO @TransferPimProductId 
                    SELECT PimProductId 
                    FROM ZnodePimCategoryProduct AS ZCP
					WHERE ZCP.PimCategoryId = @PimCategoryId
					AND PimProductId IS NOT NULL 
                                                   
                 END;
             ELSE
                 BEGIN
                     IF @IsAssociated = 0
                        AND @ProfileCatalogId > 0
                         BEGIN
				INSERT INTO @TransferPimProductId 
                SELECT Distinct PimProductId 
                FROM ZnodePimCatalogCategory AS ZCP
                WHERE ZCP.PimCatalogId = @PimCatalogId
                AND ZCP.PimCategoryId = @PimCategoryId
                AND NOT EXISTS
                (
                    SELECT TOP 1 1
                    FROM ZnodeProfileCatalogCategory AS TBPCC
                    WHERE TBPCC.PimCatalogCategoryId = ZCP.PimCatalogCategoryId
                        AND TBPCC.ProfileCatalogId = @ProfileCatalogId
                )
               	AND PimProductId IS NOT NULL                                         
                        END;
                     ELSE
                         BEGIN
                             IF @IsAssociated = 1
                                AND @ProfileCatalogId > 0
                                 BEGIN
						INSERT INTO @TransferPimProductId 
                        SELECT PimProductId
                        FROM ZnodePimCatalogCategory AS ZCP
                        WHERE ZCP.PimCatalogId = @PimCatalogId
                            AND ZCP.PimCategoryId = @PimCategoryId
                            AND EXISTS
                        (
                            SELECT TOP 1 1
                            FROM ZnodeProfileCatalogCategory AS TBPCC
                            WHERE TBPCC.PimCatalogCategoryId = ZCP.PimCatalogCategoryId
                                AND TBPCC.ProfileCatalogId = @ProfileCatalogId
                        )
                       AND PimProductId IS NOT NULL                                             
                                     SET @IsAssociated = 0;
                                 END;
                             ELSE
                                 BEGIN
					INSERT INTO @TransferPimProductId 
                    SELECT PimProductId 
                    FROM ZnodePimCatalogCategory AS ZCP
                    WHERE ZCP.PimCatalogId = @PimCatalogId
                    AND ZCP.PimCategoryId = @PimCategoryId
				    AND PimProductId IS NOT NULL    
                    ORDER BY CASE
                                WHEN @OrderId = 0
                                THEN 1
                                ELSE ZCP.PimCatalogCategoryId
                            END DESC
                                   
                                 END;
                         END;
                 END;
				 
				 IF NOT EXISTS (SELECT TOP 1 1 FROM @TransferPimProductId)
				 BEGIN 
                  INSERT INTO @TransferPimProductId
				  SELECT '0'

				 END 


             DECLARE @ProductIdTable TABLE
             ([PimProductId] INT,
              [CountId]      INT,
              PimCategoryId  INT,
              RowId          INT IDENTITY(1,1)
             );
            DECLARE  @ProductListIdRTR TransferId
	 DECLARE @TAb Transferid 
	 DECLARE @tBL_mainList TABLE (Id INT,RowId INT)
	 --	IF @PimProductId <> ''  OR   @IsCallForAttribute=1
		--BEGIN 
	 SET @IsAssociated = CASE WHEN @IsAssociated = 0 THEN 1  
					 WHEN @IsAssociated = 1 THEN 0 END 
		--END 

	

	 INSERT INTO @ProductListIdRTR
	 EXEC Znode_GetProductList  @IsAssociated,@TransferPimProductId
	 
	 IF CAST(@WhereClause AS NVARCHAR(max))<> N''
	 BEGIN 
	 
	  SET @SQL = 'SELECT PimProductId FROM ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))

	  EXEC Znode_GetFilterPimProductId @WhereClause,@ProductListIdRTR,@localeId
	  
      INSERT INTO @TAB 
	  EXEC (@SQL)
	 
	 END 

	 IF EXISTS (SELECT Top 1 1 FROM @TAb ) OR CAST(@WhereClause AS NVARCHAR(max)) <> N''
	 BEGIN 
	 
		 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
		 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
		 INSERT INTO @TBL_MainList(id,RowId)
		 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @TAb ,@AttributeCode,@localeId
	 
	 END 
	 ELSE 
	 BEGIN
	       
		 SET @AttributeCode = REPLACE(dbo.FN_TRIM(REPLACE(REPLACE(@order_by,' DESC',''),' ASC','')),'DisplayOrder','ProductName')
		 SET @order_by = REPLACE(@order_by,'DisplayOrder','ProductName')
		 INSERT INTO @TBL_MainList(id,RowId)
		 EXEC Znode_GetOrderByPagingProduct @order_by,@rows,@PageNo, @ProductListIdRTR ,@AttributeCode,@localeId 
	 END 
			 INSERT INTO @ProductIdTable
             (PimProductId) 
			 SELECT id 
			 FROM @TBL_MainList 
            
			 UPDATE @ProductIdTable
               SET
                   PimCategoryId = @PimCategoryId;
             --SET @PimProductId = SUBSTRING(
             --                             (
             --                                 SELECT ','+CAST(PimProductId AS VARCHAR(100))
             --                                 FROM @ProductIdTable
             --                                 FOR XML PATH('')
             --                             ), 2, 4000);

			 INSERT INTO @PimProductId  ( Id )
			 SELECT PimProductId FROM @ProductIdTable

             SET @PimAttributeId = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(50)) FROM [dbo].[Fn_GetGridPimAttributes]() FOR XML PATH('')), 2, 4000);
             INSERT INTO @TBL_AttributeDefaultValue (PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder )
            
			 EXEC Znode_GetAttributeDefaultValueLocale @PimAttributeId,@LocaleId;
            
			 INSERT INTO @TBL_AttributeDetails (PimProductId,AttributeValue,AttributeCode,PimAttributeId)

             EXEC Znode_GetProductsAttributeValue @PimProductId,@PimAttributeId,@localeId;
             SET @PimAttributeId = [dbo].[Fn_GetCategoryNameAttributeId]();

             INSERT INTO @TBL_AttributeValue (PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)

             EXEC [dbo].[Znode_GetCategoryAttributeValue] @PimCategoryId,@PimAttributeId,@LocaleId;
          
		    ;WITH Cte_ProductMedia
               AS (SELECT TBA.PimProductId , TBA.PimAttributeId 
			   , SUBSTRING( ( SELECT ','+URL+ZMSM.ThumbnailFolderName+'/'+ zm.PATH 
			   FROM ZnodeMedia AS ZM
               INNER JOIN ZnodeMediaConfiguration ZMC  ON (ZM.MediaConfigurationId = ZMC.MediaConfigurationId)
			   INNER JOIN ZnodeMediaServerMaster ZMSM ON (ZMSM.MediaServerMasterId = ZMC.MediaServerMasterId)
			   INNER JOIN @TBL_AttributeDetails AS TBAI ON (TBAI.AttributeValue  = CAST(ZM.MediaId AS VARCHAR(50)) )
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBAI.PimATtributeId)
			   WHERE TBAI.PimProductId = TBA.PimProductId AND TBAI.PimAttributeId = TBA.PimAttributeId 
			   FOR XML PATH('') ), 2 , 4000) AS AttributeValue 
			   FROM @TBL_AttributeDetails AS TBA 
			   INNER JOIN  @TBL_PimMediaAttributeId AS FNMA ON (FNMA.PImAttributeId = TBA.PimATtributeId ))
                          
		      UPDATE TBAV SET AttributeValue = CTPM.AttributeVALue
			  FROM @TBL_AttributeDetails TBAV 
			  INNER JOIN Cte_ProductMedia CTPM ON CTPM.PimProductId = TBAV.PimProductId  AND CTPM.PimAttributeId = TBAV.PimAttributeId 
			  AND CTPM.PimAttributeId = TBAV.PimAttributeId;

		  
		     --WITH Cte_UpdateDefaultAttributeValue
             --     AS (SELECT PimProductId,
             --                AttributeCode,
             --                AttributeValue,
             --                SUBSTRING(
             --                         (
             --                             SELECT ','+TBADV.AttributeDefaultValue
             --         FROM @TBL_AttributeDefaultValue AS TBADV
             --                             INNER JOIN ZnodePimAttribute AS TBAC ON(TBADV.PimAttributeId = TBAC.PimAttributeId)
             --                             WHERE TBAC.AttributeCode = TBAD.AttributeCode
             --                                   AND EXISTS
             --                             (
             --                                 SELECT TOP 1 1
             --                                 FROM dbo.split(TBAD.AttributeValue, ',') AS SP
             --                                 WHERE Sp.item = TBADV.AttributeDefaultValueCode
             --                             )
             --                             FOR XML PATH('')
             --                         ), 2, 4000) AS AttributeDefaultValue
             --         FROM @TBL_AttributeDetails AS TBAD)
             --UPDATE TBAD
             --SET
             --   AttributeValue = CTUDAV.AttributeDefaultValue
             --FROM @TBL_AttributeDetails TBAD
             --INNER JOIN Cte_UpdateDefaultAttributeValue CTUDAV ON(CTUDAV.PimProductId = TBAD.PimProductId
             --                                                     AND CTUDAV.AttributeCode = TBAD.AttributeCode)
             --WHERE AttributeDefaultValue IS NOT NULL;
             INSERT INTO @FamilyDetails (PimAttributeFamilyId,PimProductId)
             EXEC [dbo].[Znode_GetPimProductAttributeFamilyId] @PimProductId,1;
             UPDATE a
             SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
             INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                  AND LocaleId = @LocaleId);
             UPDATE a
             SET
                   FamilyName = b.AttributeFamilyName
             FROM @FamilyDetails a
             INNER JOIN ZnodePimFamilyLocale b ON(a.PimAttributeFamilyId = b.PimAttributeFamilyId
                                                  AND LocaleId = @DefaultLocaleId)
             WHERE a.FamilyName IS NULL
                   OR a.FamilyName = '';
             SELECT zpp.PimProductid AS ProductId,zpp.PimProductId,@PimCatalogId AS PimCatalogId,zpp.PimCategoryId,[ProductName],ProductType,ISNULL(zf.FamilyName, '') AS AttributeFamily,[SKU],[Price],[Quantity],
                    CASE
                        WHEN Piv.[IsActive] IS NULL
                        THEN CAST(0 AS BIT)
                        ELSE CAST(Piv.[IsActive] AS BIT)
                    END AS [IsActive],
                    piv.[ProductImage] ImagePath,
                    [Assortment],
                    TBAV.CategoryValue AS [CategoryName],
                    @LocaleId AS LocaleId,
                    ZCC.[DisplayOrder],
                    ZPCC.ProfileCatalogCategoryId,
                    RowId
             FROM @ProductIdTable AS zpp
                  LEFT JOIN @FamilyDetails AS zf ON(zf.PimProductId = zpp.PimProductId)
                  INNER JOIN
             (
                 SELECT PimProductId,
                        AttributeValue,
                        AttributeCode
                 FROM @TBL_AttributeDetails
             ) TB PIVOT(MAX(AttributeValue) FOR AttributeCode IN([ProductName],
                                                                 [SKU],
                                                                 [Price],
                                                                 [Quantity],
                                                                 [IsActive],
                                                                 [ProductType],
                                                                 [ProductImage],
                                                                 [Assortment],
                                                                 [DisplayOrder])) AS Piv ON(Piv.PimProductId = zpp.PimProductid)
                  LEFT JOIN @TBL_AttributeValue AS TBAV ON(TBAV.PimCategoryId = ZPP.PimCategoryId)
                  LEFT JOIN ZnodePimCategoryProduct AS ZPCP ON(ZPCP.PimProductId = Zpp.PimProductId
                                                               AND ZPCP.PimCategoryId = Zpp.PimCategoryId)
                  LEFT JOIN ZnodePimCatalogCategory AS ZCC ON(ZCC.PimProductId = Zpp.PimProductId
                                                              AND ZCC.PimCategoryId = Zpp.PimCategoryId
                                                              AND ZCC.PimCatalogId = @PimCatalogId)
                  LEFT JOIN ZnodeProfileCatalogCategory AS ZPCC ON(ZPCC.PimCatalogCategoryId = ZCC.PimCatalogCategoryId
                                                                   AND ZPCC.ProfileCatalogId = @ProfileCatalogId)
                  --LEFT JOIN ZnodeMedia AS zm ON(zm.MediaId = piv.[ProductImage])
             ORDER BY CASE
                          WHEN @OrderId = 0
                          THEN 1
                          ELSE ZCC.PimCatalogCategoryId
                      END DESC,
                      zpp.RowId;

					  
     IF EXISTS (SELECT Top 1 1 FROM @TAb )
	 BEGIN 

		  SELECT @RowsCount = (SELECT COUNT(1) FROM @TAb) 
	 END 
	 ELSE 
	 BEGIN
	 		  SELECT @RowsCount =(SELECT COUNT(1) FROM @ProductListIdRTR)   
	 END 


         END TRY
         BEGIN CATCH
		    SELECT ERROR_message()
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(), 
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetCatalogCategoryProducts @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimCategoryId='+CAST(@PimCategoryId AS VARCHAR(50))+',@PimCatalogId='+CAST(@PimCatalogId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@ProfileCatalogId='+CAST(@ProfileCatalogId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetCatalogCategoryProducts',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO


IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_ImportAttributes')
BEGIN 
	DROP PROCEDURE Znode_ImportAttributes
END 
GO

CREATE PROCEDURE [dbo].[Znode_ImportAttributes](
	  @TableName nvarchar(100), @Status bit OUT, @UserId int, @ImportProcessLogId int, @NewGUId nvarchar(200), @PimCatalogId int= 0)
AS
	--------------------------------------------------------------------------------------
	-- Summary :  Import Attribute Code Name and their default input validation rule other 
	--			  flag will be inserted as default we need to modify front end
	
	-- Unit Testing: 

	--------------------------------------------------------------------------------------
BEGIN
	BEGIN TRAN A;
	BEGIN TRY
		DECLARE @MessageDisplay nvarchar(100), @SSQL nvarchar(max);
		DECLARE @GetDate datetime= dbo.Fn_GetDate(), @LocaleId int  ;
		SELECT @LocaleId = DBO.Fn_GetDefaultLocaleId();
		-- Retrive RoundOff Value from global setting 
		DECLARE @InsertPimAtrribute TABLE
		( 
			RowId int IDENTITY(1, 1) PRIMARY KEY, RowNumber int, AttributeName varchar(300), AttributeCode varchar(300), AttributeType varchar(300), DisplayOrder int, GUID nvarchar(400)
		
		);
		DECLARE @InsertedPimAttributeIds TABLE (PimAttributeId int ,AttributeTypeId int,AttributeCode nvarchar(300))
		
		SET @SSQL = 'Select RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID FROM '+@TableName;
		INSERT INTO @InsertPimAtrribute( RowNumber,AttributeName,AttributeCode,AttributeType,DisplayOrder ,GUID)
		EXEC sys.sp_sqlexec @SSQL;


		--@MessageDisplay will use to display validate message for input inventory value  
		DECLARE @AttributeCode TABLE
		( 
		   AttributeCode nvarchar(300)
		);
		INSERT INTO @AttributeCode
			   SELECT AttributeCode
			   FROM ZnodePimAttribute 

		-- Start Functional Validation 
		-----------------------------------------------
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '10', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeCode in 
			   (
				   SELECT AttributeCode FROM @AttributeCode  where AttributeCode is not null 
			   );
		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '10', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeCode in 
			   (
				   select AttributeCode  FROM @InsertPimAtrribute  Group BY AttributeCode  having count(*) > 1 
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '19', 'AttributeType', AttributeType, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ii.AttributeType NOT in 
			   (
				   SELECT AttributeTypeName  FROM ZnodeAttributeType  where IsPimAttributeType = 1 
			   );

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '50', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ltrim(rtrim(isnull(ii.AttributeCode,''))) like '%[^0-9A-Za-z]%'

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '50', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE Isnumeric(ltrim(rtrim(isnull(ii.AttributeCode,'')))) =1

		INSERT INTO ZnodeImportLog( ErrorDescription, ColumnName, Data, GUID, RowNumber, CreatedBy, CreatedDate, ModifiedBy, ModifiedDate, ImportProcessLogId )
			   SELECT '51', 'AttributeCode', AttributeCode, @NewGUId, RowNumber, 2, @GetDate, 2, @GetDate, @ImportProcessLogId
			   FROM @InsertPimAtrribute AS ii
			   WHERE ltrim(rtrim(isnull(ii.AttributeCode,''))) like '% %' -----space not allowed


		-- End Function Validation 	
		-----------------------------------------------
		-- Delete Invalid Data after functional validatin  
		DELETE FROM @InsertPimAtrribute
		WHERE RowNumber IN
		(
			SELECT DISTINCT 
				   RowNumber
			FROM ZnodeImportLog
			WHERE ImportProcessLogId = @ImportProcessLogId  and RowNumber is not null 
		);
		
		-- Update Record count in log 
        DECLARE @FailedRecordCount BIGINT
		DECLARE @SuccessRecordCount BIGINT
		SELECT @FailedRecordCount = COUNT(DISTINCT RowNumber) FROM ZnodeImportLog WHERE RowNumber IS NOT NULL AND  ImportProcessLogId = @ImportProcessLogId;
		Select @SuccessRecordCount = count(DISTINCT RowNumber) FROM @InsertPimAtrribute
		UPDATE ZnodeImportProcessLog SET FailedRecordcount = @FailedRecordCount , SuccessRecordCount = @SuccessRecordCount 
		WHERE ImportProcessLogId = @ImportProcessLogId;
		-- End


		--- Insert data into base table ZnodePimatrribute with their validation 

		INSERT INTO ZnodePimAttribute (AttributeTypeId,AttributeCode,IsRequired,IsLocalizable,IsFilterable,IsSystemDefined
			,IsConfigurable,IsPersonalizable,IsShowOnGrid,DisplayOrder,HelpDescription,IsCategory,IsHidden,IsSwatch,
			CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		
		OUTPUT Inserted.PimAttributeId,Inserted.AttributeTypeId,Inserted.AttributeCode INTO @InsertedPimAttributeIds  
		
		SELECT ZAT.AttributeTypeId,AttributeCode, 0 IsRequired , 1 IsLocalizable,1 IsFilterable, 0 IsSystemDefined, 0 IsConfigurable,
		0 IsPersonalizable,  0 IsShowOnGrid , DisplayOrder, '' HelpDescription ,0  IsCategory , 0 IsHidden , 0 IsSwatch,
		@UserId , @GetDate ,@UserId , @GetDate from @InsertPimAtrribute IPA INNER JOIN ZnodeAttributeType ZAT 
		ON IPA.AttributeType = ZAT.AttributeTypeName  
		
		
		INSERT INTO ZnodePimAttributeLocale (LocaleId,PimAttributeId,AttributeName,Description,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select @LocaleId ,IPAS.PimAttributeId, IPA.AttributeName, '', @UserId , @GetDate ,@UserId , @GetDate   
		 FROM @InsertedPimAttributeIds IPAS INNER JOIN @InsertPimAtrribute IPA ON IPAS.AttributeCode= IPA.AttributeCode 
		
		INSERT INTO ZnodePimAttributeValidation
		(PimAttributeId,InputValidationId,InputValidationRuleId,Name,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		SELECT IPA.PimAttributeId,ZAIV.InputValidationId,NULL,null , @UserId , @GetDate ,@UserId , @GetDate  
		FROM @InsertedPimAttributeIds IPA INNER JOIN ZnodeAttributeInputValidation ZAIV ON IPA.AttributeTypeId = ZAIV.AttributeTypeId


		insert into ZnodePimFrontendProperties (PimAttributeId,IsComparable,IsUseInSearch,IsHtmlTags,IsFacets,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate)
		Select PimAttributeId, 0 IsComparable, 0 IsUseInSearch,0 IsHtmlTags,0 IsFacets, @UserId CreatedBy,@GetDate CreatedDate, @UserId ModifiedBy, @GetDate ModifiedDate
		from  @InsertedPimAttributeIds
		--      SET @Status = 1;

		UPDATE ZnodeImportProcessLog
		  SET STATUS = dbo.Fn_GetImportStatus( 2 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;
		COMMIT TRAN A;
	END TRY
	BEGIN CATCH

		UPDATE ZnodeImportProcessLog
		  SET Status = dbo.Fn_GetImportStatus( 3 ), ProcessCompletedDate = @GetDate
		WHERE ImportProcessLogId = @ImportProcessLogId;

		SET @Status = 0;
		SELECT ERROR_LINE(), ERROR_MESSAGE(), ERROR_PROCEDURE();
		ROLLBACK TRAN A;
	END CATCH;
END;
GO

GO
IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetFilterPimProductId')
BEGIN 
	DROP PROCEDURE Znode_GetFilterPimProductId
END 
GO 
CREATE  PROCEDURE [dbo].[Znode_GetFilterPimProductId]
(
  @WhereClause XML 
 ,@PimProductId TransferId Readonly 
 ,@LocaleId   INT 
)
AS 
BEGIN 
SET NOCOUNT ON 

DECLARE  @DefaultLocaleId INT = dbo.Fn_GetDefaultLocaleID()
		,@SQL NVARCHAR(max)
		,@InternalProductWhereClause NVARCHAR(max)

DECLARE @WorkingProcess INT = 0 

DECLARE @TBL_FilterClause TABLE (ID INT IDENTITY(1,1),AttributeValue NVARCHAR(max),AttributeCode NVARCHAr(max),PimAttributeId INT ,AttributeTypeName VARCHAR(300),AttributeCodeOrg VARCHAR(600))

DECLARE @WhereClauseXML XML = @WhereClause 


IF EXISTS (SELECT TOP 1 1 FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col) 
WHERE Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)')  LIKE  '% in (%')
BEGIN 
 SET @WorkingProcess = 1
 INSERT INTO @TBL_FilterClause (AttributeValue,AttributeCode,AttributeTypeName,PimAttributeId,AttributeCodeOrg)
SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeValue,ZTY.AttributeTypeName,ZPA.PimAttributeId,AttributeCode AttributeCodeOrg
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
LEFT JOIN  ZnodePimAttribute ZPA  ON ((Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)')  LIKE '%in (%' OR dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''','')) 
									= ZPA.AttributeCode ) AND IsCategory = 0 
AND IsShowOnGrid = 1   )
LEFT JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)

END 
ELSE 
BEGIN 

INSERT INTO @TBL_FilterClause (AttributeValue,AttributeCode,AttributeTypeName,PimAttributeId,AttributeCodeOrg)
SELECT  Tbl.Col.value ( 'attributevalue[1]' , 'NVARCHAR(max)') AS AttributeValue
,Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)') AS AttributeValue,ZTY.AttributeTypeName,ZPA.PimAttributeId,AttributeCode AttributeCodeOrg
FROM @WhereClauseXml.nodes ( '//ArrayOfWhereClauseModel/WhereClauseModel'  ) AS Tbl(Col)
INNER JOIN ZnodePimAttribute ZPA  ON (dbo.Fn_Trim(REPLACE(REPLACE(Tbl.Col.value ( 'attributecode[1]' , 'NVARCHAR(max)'),' = ',''),'''','')) 
									= ZPA.AttributeCode )
INNER JOIN ZnodeAttributeType ZTY ON (ZTY.AttributeTypeId = ZPA.AttributeTypeId)
WHERE IsCategory = 0 
AND ( IsShowOnGrid = 1 OR IsConfigurable =1  ) 

END 



CREATE TABLE #TBL_PimProductId (PimProductId INT)
CREATE TABLE #TBL_PimProductIdDelete (PimProductId INT )

  INSERT INTO #TBL_PimProductId (PimProductId )
  SELECT Id 
  FROM @PimProductId

  SELECT ZPAV.PimProductId ,PimAttributeValueId 
			,ZPAV.CreatedDate,ZPAV.ModifiedDate,TBLA.AttributeCodeOrg AttributeCode
  INTO #TBL_AttributeValueId 
  FROM  ZnodePimAttributeValue ZPAV 
  INNER JOIN @TBL_FilterClause TBLA ON (TBLA.PimAttributeId = ZPAV.PimAttributeId)
  INNER JOIN #TBL_PimProductId YT ON (YT.PimProductId = ZPAV.PimProductId OR NOT EXISTS (SELECT TOP 1 1 #TBL_PimProductId))
IF @WorkingProcess =1 
BEGIN 
 DECLARE @PimAttributeId_in TransferId 

 INSERT INTO @PimAttributeId_in 
 SELECT PimAttributeId
 FROM  @TBL_FilterClause 
 WHERE AttributeTypeName IN ('Simple Select','Multi Select') 
 AND AttributeCode LIKE '%in (%'


 CREATE TABLE #TBL_AttributeDefaultValue_in ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue_in(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId_in, @LocaleId;
 
 DECLARE @WhereClauseInCom NVARCHAR(max) = (SELECT TOP 1 AttributeValue FROM @TBL_FilterClause WHERE AttributeCode LIKE '%in (%') 

SET @SQL = '
   ;With Cte_AttributeValue AS 
   (
   SELECT PimAttributeValueId 
   FROM ZnodePimAttributeValueLocale 
   WHERE AttributeValue '+@WhereClauseInCom+'
   UNION ALL 
   SELECT PimAttributeValueId 
   FROM ZnodePimProductAttributeTextAreaValue   
   WHERE AttributeValue '+@WhereClauseInCom+'
   UNION ALL 
   SELECT ZPADV.PimAttributeValueID 
   FROM ZnodePimProductAttributeDefaultValue ZPADV 
   INNER JOIN #TBL_AttributeDefaultValue_in TBL ON (TBL.PimAttributeDefaultValueId = ZPADV.PimAttributeDefaultValueId)
   WHERE TBL.AttributeDefaultValue '+@WhereClauseInCom+'
   )
   
   SELECT PimProductId 
   FROM #TBL_AttributeValueId ZPAV 
   INNER JOIN  Cte_AttributeValue CTAC ON (CTAC.PimAttributeValueId = ZPAV.PimAttributeVaLueId )
   GROUP BY PimProductId
   '
   -- PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
   BEGIN
    INSERT INTO  #TBL_PimProductId (PimProductId)
	SELECT 0 
   END 
  DELETE  FROM @TBL_FilterClause WHERE AttributeCode LIKE '% in (%'

   DROP TABLE #TBL_AttributeDefaultValue_in
   SET @WorkingProcess  = 0 
END 



  IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeCode <> '' AND ISNULL(AttributeValue,'') = '')
  BEGIN 

   SET  @InternalProductWhereClause = STUFF( (  SELECT ' INNER JOIN #TBL_AttributeValueId AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' )'				
							FROM @TBL_FilterClause
							WHERE ISNULL(AttributeValue,'') = ''
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
   
   SET @SQL = ' 
				SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV '+@InternalProductWhereClause+' '+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimProductId 
			'
   PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   DELETE FROM @TBL_FilterClause WHERE ISNULL(AttributeValue,'') = ''
   IF NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) AND EXISTS (SELECT TOP 1 1  FROM @PimProductId Having Max (ID) = 0 )
   BEGIN
    INSERT INTO  #TBL_PimProductId (PimProductId)
	SELECT 0 
   END 
  END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Simple Select','Multi Select') )
BEGIN
 DECLARE @PimAttributeId TransferId 

 INSERT INTO @PimAttributeId 
 SELECT PimAttributeId
 FROM  @TBL_FilterClause WHERE AttributeTypeName IN ('Simple Select','Multi Select') 

 CREATE TABLE #TBL_AttributeDefaultValue ( PimAttributeId INT ,
              AttributeDefaultValueCode VARCHAR(max),IsEditable INT,AttributeDefaultValue NVARCHAR(max),DisplayOrder INT,PimAttributeDefaultValueId INT  )    
 INSERT INTO #TBL_AttributeDefaultValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder,PimAttributeDefaultValueId)
 EXEC Znode_GetAttributeDefaultValueLocaleNew_TansferId @PimAttributeId, @LocaleId;
 
  IF @DefaultLocaleId = @LocaleID AND  @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = STUFF( (  SELECT ' INNER JOIN Cte_AttributeValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Simple Select','Multi Select')
							AND AttributeValue <> ''
							AND AttributeValue IS NOT NULL
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')

  SET @SQL = ' ;With Cte_AttributeValue AS 
			   (
	            SELECT TBLAV.PimAttributeValueId ,SUBSTRING((SELECT '',''+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = '+Cast(@localeId AS VARCHAR(200))+'
				FOR XML PATH('''') ),2,4000) AttributeValue
				    ,  '+Cast(@localeId AS VARCHAR(200))+' LocaleId,TBLAV.AttributeCode,TBLAV.PimProductId
				FROM #TBL_AttributeValueId TBLAV
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimAttributeValueId,TBLAV.AttributeCode,TBLAV.PimProductId
			   )
  
				SELECT  TBLAV.PimProductId
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'	GROUP BY TBLAV.PimProductId '
				
  END 
  ELSE IF  @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+'  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Simple Select','Multi Select')
							AND AttributeValue <> ''
							AND AttributeValue IS NOT NULL
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = '  			 
			   SELECT TBLAV.PimAttributeValueId,ZPAVL.PimAttributeDefaultValueId , ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimAttributeValueId ,TBLAV.PimProductId ORDER BY TBLAV.PimAttributeValueId ,TBLAV.PimProductId  ) RowId
			   INTO #temp_Table 
			   FROM #TBL_AttributeValueId TBLAV 
			   INNER JOIN ZnodePimProductAttributeDefaultValue ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId)
			   WHERE (ZPAVL.LocaleId = '+Cast(@localeId AS VARCHAR(200))+' OR ZPAVL.LocaleId = '+Cast(@DefaultlocaleId AS VARCHAR(200))+')
				
				;with Cte_AttributeValue AS 
			   (
	            SELECT TBLAV.PimAttributeValueId ,SUBSTRING((SELECT '',''+AttributeDefaultValue FROM #TBL_AttributeDefaultValue TTR 
				INNER JOIN #temp_Table  ZPAVL ON (TTR.PimAttributeDefaultValueId = ZPAVL.PimAttributeDefaultValueId )
				WHERE ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId  
				AND ZPAVL.LocaleId = CASE WHEN ZPAVL.RowId = 2 THEN '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  
				FOR XML PATH('''') ),2,4000) AttributeValue,TBLAV.AttributeCode ,TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END+'
				GROUP BY TBLAV.PimAttributeValueId,TBLAV.AttributeCode ,TBLAV.PimProductId 
			   )
  
				SELECT   TBLAV.PimProductId
				FROM  #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'	GROUP BY TBLAV.PimProductId '

  END 
   PRINT @SQL 
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete
   DROP TABLE #TBL_AttributeDefaultValue
END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No') )
BEGIN  
   
  IF @DefaultLocaleId = @LocaleID AND @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN View_PimProducttextValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
 
  SET @SQL = '	SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+'
				'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId   ) ' END 
				+' GROUP BY TBLAV.PimProductId '

  END 
  ELSE IF @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeDetails AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId = CASE WHEN ZPAVL'+CAST(ID AS VARCHAR(200))+'.RowId = 2 THEN  '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text','Number','Datetime','Yes/No')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = ' 
     ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.PimProductId,ZPAVL.AttributeValue,TBLAV.AttributeCode,ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimProductId,TBLAV.AttributeCode ORDER BY TBLAV.PimProductId,TBLAV.AttributeCode  ) RowId
	 FROM #TBL_AttributeValueId TBLAV 
	 INNER JOIN ZnodePimAttributeValueLocale ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId )
	 WHERE (LocaleId = '+Cast(@DefaultLocaleId AS Varchar(300))+' OR LocaleId = '+CAST(@LocaleId AS Varchar(300))+' )'+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' AND EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END +'
	 ) 
	 SELECT  TBLAV.PimProductId 
  	 FROM #TBL_AttributeValueId TBLAV
	 '+@InternalProductWhereClause+'
	 GROUP BY TBLAV.PimProductId 
	 '
	 

  END 
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 

IF EXISTS (SELECT TOP 1 1 FROM @TBL_FilterClause WHERE AttributeTypeName IN ('Text Area') )
BEGIN    
  IF @DefaultLocaleId = @LocaleID AND @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
								STUFF( (  SELECT ' INNER JOIN View_PimProductTextAreaValue AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId='+CAST(@LocaleID AS VARCHAR(200))+' )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text Area')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
 
  SET @SQL = '
              SELECT  TBLAV.PimProductId 
				FROM #TBL_AttributeValueId TBLAV
				'+@InternalProductWhereClause+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' GROUP BY TBLAV.PimProductId '
  END 
  ELSE IF @WorkingProcess = 0 
  BEGIN 
  SET  @InternalProductWhereClause = 
							STUFF( (  SELECT ' INNER JOIN Cte_AttributeDetails AS ZPAVL'+CAST(ID AS VARCHAR(200))+
									' ON ( TBLAV.PimProductId = ZPAVL'+CAST(ID AS VARCHAR(200))+'.PimProductId AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeCode '+AttributeCode+
									' AND ZPAVL'+CAST(ID AS VARCHAR(200))+'.AttributeValue '+AttributeValue+' AND ZPAVL'+CAST(ID AS VARCHAR(200))+
									'.LocaleId = CASE WHEN ZPAVL'+CAST(ID AS VARCHAR(200))+'.RowId = 2 THEN  '+CAST(@LocaleId AS Varchar(300))+' ELSE '+Cast(@DefaultLocaleId AS Varchar(300))+' END  )'				
							FROM @TBL_FilterClause
							WHERE AttributeTypeName IN ('Text Area')
							FOR XML PATH (''), TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')
  SET @SQL = ' 
     ;With Cte_AttributeDetails AS 
	 (
	 SELECT TBLAV.PimProductId,TBLAV.AttributeCode,ZPAVL.AttributeValue,ZPAVL.LocaleId ,COUNT(*)Over(Partition By TBLAV.PimProductId,TBLAV.AttributeCode ORDER BY TBLAV.PimProductId,TBLAV.AttributeCode  ) RowId
	 FROM #TBL_AttributeValueId TBLAV 
	 INNER JOIN ZnodePimProductAttributeTextAreaValue ZPAVL ON (ZPAVL.PimAttributeValueId = TBLAV.PimAttributeValueId )
	 WHERE (LocaleId = '+Cast(@DefaultLocaleId AS Varchar(300))+' OR LocaleId = '+CAST(@LocaleId AS Varchar(300))+' )
	 
	 ) 
	 SELECT  TBLAV.PimProductId 
  	 FROM #TBL_AttributeValueId TBLAV
	 '+@InternalProductWhereClause+CASE WHEN NOT EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId ) THEN '' 
							ELSE ' WHERE EXISTS (SELECT TOP 1 1 FROM #TBL_PimProductId TBLP WHERE TBLP.PimProductId = TBLAV.PimProductId ) ' END 
							+' 
							GROUP BY TBLAV.PimProductId 	
							'
   END 
   PRINT @SQL
   DELETE FROM #TBL_PimProductIdDelete 
   INSERT INTO #TBL_PimProductIdDelete  (PimProductId)
   EXEC (@SQL)
   DELETE FROM #TBL_PimProductId
   INSERT INTO #TBL_PimProductId
   SELECT PimProductId FROM #TBL_PimProductIdDelete

END 
SET @SQL = '
 IF EXISTS ( SELECT TOP 1 1 FROM tempdb..sysobjects WHERE name = ''##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+''' )
  BEGIN 
   DROP TABLE ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+'
  END 
 CREATE TABLE ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+' (PimProductId INT )
 INSERT INTO  ##Temp_PimProductId'+CAST(@@SPID AS VARCHAR(500))+'
 SELECT PimProductId 
 FROM #TBL_PimProductId
'
   EXEC (@SQL)
   DROP TABLE #TBL_PimProductId
   DROP TABLE #TBL_AttributeValueId
   DROP TABLE #TBL_PimProductIdDelete
 END

GO

IF EXISTS (SELECT TOP 1 1 FROM SYS.procedures WHERE name = 'Znode_GetPimCatalogAssociatedCategory')
BEGIN 
	DROP PROCEDURE Znode_GetPimCatalogAssociatedCategory
END 
GO 



CREATE PROCEDURE [dbo].[Znode_GetPimCatalogAssociatedCategory]
(	@WhereClause      XML,
	@Rows             INT           = 100,
	@PageNo           INT           = 1,
	@Order_BY         VARCHAR(1000) = '',
	@RowsCount        INT OUT,
	@LocaleId         INT           = 1,
	@PimCatalogId     INT           = 0,
	@IsAssociated     BIT           = 0,
	@ProfileCatalogId INT           = 0,
	@PimCategoryId    INT           = -1)
AS
/*
     Summary :- This procedure is used to get the attribute values as per changes 
     Unit Testing 
	 begin tran
     EXEC [dbo].[Znode_GetPimCatalogAssociatedCategory_new] @WhereClause = '',@RowsCount = 0 ,@PimCatalogId = 4 ,@ProfileCatalogId= 0,@IsAssociated = 1,@PimCategoryId = 0
     rollback tran
	 SELECT * FROM ZnodePimCategoryHierarchy
*/
     BEGIN
         BEGIN TRY
             SET NOCOUNT ON;
             DECLARE @TBL_PimcategoryDetails TABLE
             (PimCategoryId INT,
              CountId       INT,
              RowId         INT
             );
             DECLARE @TBL_CategoryIds TABLE
             (PimCategoryId       INT,
              ParentPimcategoryId INT
             );
             DECLARE @TBL_AttributeValue TABLE
             (PimCategoryAttributeValueId INT,
              PimCategoryId               INT,
              CategoryValue               NVARCHAR(MAX),
              AttributeCode               VARCHAR(300),
              PimAttributeId              INT
             );
             DECLARE @TBL_FamilyDetails TABLE
             (PimCategoryId        INT,
              PimAttributeFamilyId INT,
              AttributeFamilyName  NVARCHAR(MAX)
             );
             DECLARE @TBL_DefaultAttributeValue TABLE
             (PimAttributeId            INT,
              AttributeDefaultValueCode VARCHAR(600),
              IsEditable                BIT,
              AttributeDefaultValue     NVARCHAR(MAX)
			  ,DisplayOrder             INT 
             );
             DECLARE @TBL_ProfileCatalogCategory TABLE
             (ProfileCatalogId       INT,
              PimCategoryHierarchyId INT,
              PimCategoryId          INT,
              PimParentCategoryId    INT
             );
             DECLARE @PimCategoryIds VARCHAR(MAX), @PimAttributeIds VARCHAR(MAX);
             IF @ProfileCatalogId > 0
                 BEGIN
						INSERT INTO @TBL_ProfileCatalogCategory(ProfileCatalogId,PimCategoryHierarchyId,PimCategoryId,PimParentCategoryId)
						SELECT ZPCC.ProfileCatalogId,ZPCC.PimCategoryHierarchyId,PimCategoryId,PimParentCategoryId
						FROM ZnodePimCategoryHierarchy AS ZCC
						INNER JOIN ZnodeProfileCategoryHierarchy AS ZPCC ON(ZPCC.PimCategoryHierarchyId = ZCC.PimCategoryHierarchyId)
						WHERE ZPCC.ProfileCatalogId = @ProfileCatalogId AND (ZCC.PimParentCategoryId = @PimCategoryId OR @PimCategoryId = -1);								
									
                     IF @IsAssociated = 1
                     BEGIN
						INSERT INTO @TBL_CategoryIds(PimCategoryId,ParentPimcategoryId)
						SELECT PimCategoryId, ParentPimcategoryId  FROM [dbo].[Fn_GetRecurciveCategoryIds]('', @PimCatalogId) AS FNGTRCT                                      							
						WHERE EXISTS
						(SELECT TOP 1 1 FROM @TBL_ProfileCatalogCategory AS TBPCC WHERE TBPCC.PimCategoryId = FNGTRCT.PimCategoryId OR TBPCC.PimParentCategoryId = FNGTRCT.ParentPimcategoryId);
																																								
                     END;
                     ELSE
					 BEGIN
						INSERT INTO @TBL_CategoryIds(PimCategoryId, ParentPimcategoryId)                                                                                    
						SELECT PimCategoryId,ParentPimcategoryId  FROM [dbo].[Fn_GetRecurciveCategoryIds]('', @PimCatalogId) AS FNGTRCT
						WHERE NOT EXISTS(SELECT TOP 1 1 FROM @TBL_ProfileCatalogCategory AS TBPCC WHERE TBPCC.PimCategoryId = FNGTRCT.PimCategoryId                
						AND ISNULL(TBPCC.PimParentCategoryId, 0) = ISNULL(FNGTRCT.ParentPimcategoryId, 0) ) AND (ISNULL(FNGTRCT.ParentPimcategoryId, 0) = @PimCategoryId
						OR @PimCategoryId = -1);           
                                                                                                                                                                                                                                                                                                                                 
					 IF @PimCategoryId = -1
						BEGIN
						DELETE FROM @TBL_CategoryIds  WHERE PimCategoryId IN (SELECT PimCategoryId FROM @TBL_CategoryIds WHERE ParentPimcategoryId IS NOT NULL );                                                                                                                                                                                                                                     
						END;
					 SET @IsAssociated = 1;
					 END;
                   
                     IF NOT EXISTS (SELECT TOP 1 1 FROM @TBL_CategoryIds)                                                                                           
                        BEGIN
                        INSERT INTO @TBL_CategoryIds(PimCategoryId,ParentPimcategoryId)
                        SELECT -1,0;                                                                                                                                        
                        END;
                 END;
					 ELSE
						BEGIN
						INSERT INTO @TBL_CategoryIds(PimCategoryId,ParentPimcategoryId )
						SELECT PimCategoryId,ParentPimcategoryId 
						FROM [dbo].[Fn_GetRecurciveCategoryIds]('', @PimCatalogId) AS FNGTRCT; 
						
						 SET @IsAssociated = 0                                                                                                                               
						
						END;
						
						SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(100)) 
						FROM @TBL_CategoryIds  FOR XML PATH('') ), 2, 4000);
                   
                        INSERT INTO @TBL_PimcategoryDetails(PimCategoryId, CountId,RowId  )                      
                        EXEC Znode_GetCategoryIdForPaging @WhereClause,@Rows,@PageNo,@Order_BY,@RowsCount,@LocaleId,'',@PimCategoryIds,@IsAssociated;
						
						SET @RowsCount = ISNULL((SELECT TOP 1 CountId FROM @TBL_PimcategoryDetails), 0);
																																														
						SET @PimCategoryIds = SUBSTRING((SELECT ','+CAST(PimCategoryId AS VARCHAR(100)) FROM @TBL_PimcategoryDetails FOR XML PATH('') ), 2, 4000);
																																																																				
						SET @PimAttributeIds = SUBSTRING((SELECT ','+CAST(PimAttributeId AS VARCHAR(100)) FROM [dbo].[Fn_GetCategoryGridAttributeDetails]()
											   FOR XML PATH('')	), 2, 4000);	
						DECLARE @TBL_MediaAttribute TABLE (Id INT ,PimAttributeId INT ,AttributeCode VARCHAR(600) )

						 INSERT INTO @TBL_MediaAttribute (Id,PimAttributeId,AttributeCode )
						 SELECT Id,PimAttributeId,AttributeCode 
						 FROM [dbo].[Fn_GetProductMediaAttributeId]()
																																																															
						INSERT INTO @TBL_AttributeValue(PimCategoryAttributeValueId,PimCategoryId,CategoryValue,AttributeCode,PimAttributeId)
						EXEC [dbo].[Znode_GetCategoryAttributeValue]@PimCategoryIds,@PimAttributeIds,@LocaleId;

						INSERT INTO @TBL_FamilyDetails(PimAttributeFamilyId,AttributeFamilyName,PimCategoryId)
						EXEC Znode_GetCategoryFamilyDetails @PimCategoryIds,@LocaleId;
							
							
						INSERT INTO @TBL_DefaultAttributeValue(PimAttributeId,AttributeDefaultValueCode,IsEditable,AttributeDefaultValue,DisplayOrder )
						EXEC [dbo].[Znode_GetAttributeDefaultValueLocale] @PimAttributeIds,@LocaleId;
						
						INSERT INTO @TBL_AttributeValue ( PimCategoryId , CategoryValue , AttributeCode )

						SELECT PimCategoryId,AttributeFamilyName , 'AttributeFamily'
						FROM @TBL_FamilyDetails 		

						UPDATE  TBAV
						SET CategoryValue  = SUBSTRING ((SELECT ','+[dbo].FN_GetMediaThumbnailMediaPath(zm.Path) FROM ZnodeMedia ZM  WHERE EXISTS (SELECT TOP 1 1 FROM dbo.split(TBAV.CategoryValue ,',') SP  WHERE SP.Item = CAST(ZM.MediaId AS VARCHAR(50)) ) FOR XML PATH('')),2,4000)
						FROM @TBL_AttributeValue TBAV 
						INNER JOIN @TBL_MediaAttribute TBMA ON (TBMA.PimAttributeId = TBAV.PimAttributeId)	

						DECLARE @CategoryXML XML 

						SET @CategoryXML =  '<MainCategory>'+ STUFF( ( SELECT '<Category>'+'<PimCategoryId>'+CAST(TBAD.PimCategoryId AS VARCHAR(50))+'</PimCategoryId>'+ STUFF(    (  SELECT '<'+TBADI.AttributeCode+'>'+CAST((SELECT ''+TBADI.CategoryValue FOR XML PATH('')) AS NVARCHAR(max))+'</'+TBADI.AttributeCode+'>'   
						 									 FROM @TBL_AttributeValue TBADI      
															 WHERE TBADI.PimCategoryId = TBAD.PimCategoryId 
															 ORDER BY TBADI.PimCategoryId DESC
															 FOR XML PATH (''), TYPE
																).value('.', ' Nvarchar(max)'), 1, 0, '')+'</Category>'	   

			FROM @TBL_AttributeValue TBAD
			INNER JOIN @TBL_PimcategoryDetails TBPI ON (TBAD.PimCategoryId = TBPI.PimCategoryId )
			GROUP BY TBAD.PimCategoryId,TBPI.RowId 
			ORDER BY TBPI.RowId 
			FOR XML PATH (''),TYPE).value('.', ' Nvarchar(max)'), 1, 0, '')+'</MainCategory>'


			SELECT  @CategoryXML  CategoryXMl
		   
		     SELECT AttributeCode ,  ZPAL.AttributeName
			 FROM ZnodePimAttribute ZPA 
			 LEFT JOIN ZnodePiMAttributeLOcale ZPAL ON (ZPAL.PimAttributeId = ZPA.PimAttributeId )
             WHERE LocaleId = 1 
			 AND IsCategory = 1  
			 AND ZPA.IsShowOnGrid = 1  

		    SELECT ISNULL(@RowsCount,0) AS RowsCount;
						
						
						
						
						
						--WITH Cte_DefaultCategoryValue	
						--AS (SELECT PimCategoryId,PimAttributeId,
						--	SUBSTRING((SELECT ','+AttributeDefaultValue FROM @TBL_DefaultAttributeValue AS TBDAV WHERE TBDAV.PimAttributeId = TBAV.PimAttributeId
						--	AND EXISTS(SELECT TOP 1 1 FROM dbo.Split(TBAV.CategoryValue, ',') AS SP WHERE sp.Item = TBDAV.AttributeDefaultValueCode)
						--	FOR XML PATH('')), 2, 4000) AS AttributeValue FROM @TBL_AttributeValue AS TBAV
						--	WHERE EXISTS(SELECT TOP 1 1	FROM [dbo].[Fn_GetCategoryDefaultValueAttribute]() AS SP WHERE SP.PimAttributeId = TBAV.PimAttributeId))
																																																			
						--UPDATE TBAV SET TBAV.CategoryValue = CTDCV.AttributeValue FROM @TBL_AttributeValue TBAV
						--INNER JOIN Cte_DefaultCategoryValue CTDCV ON(CTDCV.PimCategoryId = TBAV.PimCategoryId AND CTDCV.PimAttributeId = TBAV.PimAttributeId);
																																										
						--SELECT TBCD.PimCategoryId,Piv.CategoryName,ZPC.IsActive AS [Status],dbo.FN_GetMediaThumbnailMediaPath(Zm.Path) AS CategoryImage,
						--ISNULL(TBFD.AttributeFamilyName, '') AS AttributeFamilyName FROM @TBL_PimcategoryDetails AS TBCD
						--INNER JOIN(SELECT PimCategoryId,CategoryValue,AttributeCode FROM @TBL_AttributeValue)
					 --   AS TBAV PIVOT(MAX(CategoryValue) FOR AttributeCode IN([CategoryName],[CategoryImage])) PIV ON(Piv.PimCategoryId = TBCD.PimCategoryId)																				
						--LEFT JOIN @TBL_FamilyDetails AS TBFD ON(TBFD.PimCategoryId = PIV.PimCategoryId)
						--LEFT JOIN ZnodeMedia AS ZM ON(CAST(ZM.MediaId AS VARCHAR(50)) = PIV.[CategoryImage])
						--LEFT JOIN ZnodePimCategory AS ZPC ON(ZPC.PimCategoryId = Piv.PimCategoryId)
						--ORDER BY RowId;
         END TRY
         BEGIN CATCH
             DECLARE @Status BIT ;
		     SET @Status = 0;
		     DECLARE @Error_procedure VARCHAR(1000)= ERROR_PROCEDURE(), @ErrorMessage NVARCHAR(MAX)= ERROR_MESSAGE(), @ErrorLine VARCHAR(100)= ERROR_LINE(),
			 @ErrorCall NVARCHAR(MAX)= 'EXEC Znode_GetPimCatalogAssociatedCategory @WhereClause = '+CAST(@WhereClause AS VARCHAR(max))+',@Rows='+CAST(@Rows AS VARCHAR(50))+',@PageNo='+CAST(@PageNo AS VARCHAR(50))+',@Order_BY='+@Order_BY+',@LocaleId = '+CAST(@LocaleId AS VARCHAR(50))+',@PimCatalogId='+CAST(@PimCatalogId AS VARCHAR(50))+',@IsAssociated='+CAST(@IsAssociated AS VARCHAR(50))+',@ProfileCatalogId='+CAST(@ProfileCatalogId AS VARCHAR(50))+',@PimCategoryId='+CAST(@PimCategoryId AS VARCHAR(50))+',@RowsCount='+CAST(@RowsCount AS VARCHAR(50))+',@Status='+CAST(@Status AS VARCHAR(10));
              			 
             SELECT 0 AS ID,CAST(0 AS BIT) AS Status;                    
		  
             EXEC Znode_InsertProcedureErrorLog
				@ProcedureName = 'Znode_GetPimCatalogAssociatedCategory',
				@ErrorInProcedure = @Error_procedure,
				@ErrorMessage = @ErrorMessage,
				@ErrorLine = @ErrorLine,
				@ErrorCall = @ErrorCall;
         END CATCH;
     END;
GO
update ZnodeShippingPortal SET UPSDropoffType = 'Regular Daily Pickup' , UPSPackagingType = '01'
GO 
update ZnodeApplicationSetting SET SEtting  = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>ProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Product Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>ProductId</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ImagePath,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>60</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>CategoryName</name>      <headertext>Category Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>DisplayOrder</name>      <headertext>Display Order</headertext>      <width>30</width>      <datatype>Int32</datatype>      <columntype>Int32</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>3</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>y</iscontrol>      <controltype>Text</controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>Manage</name>      <headertext>Action</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>Edit</format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Edit</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>/Catalog/UpdateCatalogCategoryProduct</manageactionurl>      <manageparamfield>ProductId,PimCatalogId,PimCategoryId</manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' where ItemName ='ZnodeGetCatalogAssociatedProduct'
GO
update ZnodeApplicationSetting SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>Checkbox</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>y</ischeckbox>      <checkboxparamfield>SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>Image</name>      <headertext>Product Image</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>SKU</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>8</id>      <name>Assortment</name>      <headertext>Assortment</headertext>      <width>30</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>9</id>      <name>IsActive</name>      <headertext>Status</headertext>      <width>0</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>Status</displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' where ItemName = 'AssociatedTaxClassProductList'
GO
 
 UPDATE [dbo].[ZnodeEmailTemplateLocale] 
SET Content ='<div style="padding: 10px;"><br />
<p>&nbsp;</p>
<div>
<div style="font-family: Arial, Helvetica; font-size: 10px; text-align: left; color: #292a2a; border: solid 1px #c3c3c3; margin-top: 10px;">
<div style="background-color: #eff3fb; color: #292a2a; font-size: 1.5em; font-weight: bold; padding: .5em; border-bottom: solid 1px #c3c3c3;"><strong><span style="color: #263238; font-family: Roboto, Arial, sans-serif; font-size: 13px;">Please use following keys to activate the product</span></strong></div>
<div style="padding: 10px;">
<div style="font-family: Verdana; color: #333333; font-size: 11px;">&nbsp;</div>
<div data-info="#AddressItems#">
<table width="100%" cellspacing="0" cellpadding="3">
<tbody>
<tr style="height: 12px; background-color: #eff3fb;">
<td style="padding: 0px 5px; border: 1px solid silver; height: 12px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;"><strong>SKU</strong></td>
<td style="padding: 0px 5px; border: 1px solid silver; height: 12px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;"><strong>Item</strong></td>
<td style="padding: 0px 5px; border: 1px solid silver; height: 12px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;"><strong>Key</strong></td>
</tr>
<tr id="#DownloadableProductKey#" style="height: 12.63px;">
<td style="padding: 0px 5px; border: 1px solid silver; height: 12.63px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;" align="left" width="10%">#SKU#&nbsp;</td>
<td style="padding: 0px 5px; border: 1px solid silver; height: 12.63px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;" align="left" width="25%">#Name#</td>
<td style="padding: 0px 5px; border: 1px solid silver; height: 12.63px; color: #333333; font-family: Verdana, Helvetica, sans-serif; font-size: 10px;" align="left" width="25%">#Keys#&nbsp;</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
</div>
</div>'
WHERE LocaleId = 1 and EmailTemplateId in (select EmailTemplateId from [dbo].[ZnodeEmailTemplate] where TemplateName = 'ProductKeyOrderReceipt') 
Go
update ZnodeApplicationSetting SET Setting = '<?xml version="1.0" encoding="utf-16"?>  <columns>    <column>      <id>1</id>      <name>PimProductId</name>      <headertext>ID</headertext>      <width>20</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>y</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>IsDownloadable</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>2</id>      <name>Image</name>      <headertext>Product Image</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>n</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>ProductImage,ProductName</imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>imageicon</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>3</id>      <name>SKU</name>      <headertext>SKU</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>y</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>SKU</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>skucolumn</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>4</id>      <name>ProductName</name>      <headertext>Product Name</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>y</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>5</id>      <name>ProductType</name>      <headertext>Product Type</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>6</id>      <name>AttributeFamily</name>      <headertext>Attribute Family</headertext>      <width>0</width>      <datatype>String</datatype>      <columntype>String</columntype>      <allowsorting>true</allowsorting>      <allowpaging>true</allowpaging>      <format>      </format>      <isvisible>n</isvisible>      <mustshow>n</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>      </checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>      </Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>    <column>      <id>7</id>      <name>IsDownloadable</name>      <headertext>Is Downloadable</headertext>      <width>40</width>      <datatype>Boolean</datatype>      <columntype>Boolean</columntype>      <allowsorting>false</allowsorting>      <allowpaging>false</allowpaging>      <format>      </format>      <isvisible>y</isvisible>      <mustshow>y</mustshow>      <musthide>n</musthide>      <maxlength>0</maxlength>      <isallowsearch>y</isallowsearch>      <isconditional>n</isconditional>      <isallowlink>n</isallowlink>      <islinkactionurl>      </islinkactionurl>      <islinkparamfield>      </islinkparamfield>      <ischeckbox>n</ischeckbox>      <checkboxparamfield>IsDownloadable</checkboxparamfield>      <iscontrol>n</iscontrol>      <controltype>      </controltype>      <controlparamfield>      </controlparamfield>      <displaytext>      </displaytext>      <editactionurl>      </editactionurl>      <editparamfield>      </editparamfield>      <deleteactionurl>      </deleteactionurl>      <deleteparamfield>      </deleteparamfield>      <viewactionurl>      </viewactionurl>      <viewparamfield>      </viewparamfield>      <imageactionurl>      </imageactionurl>      <imageparamfield>      </imageparamfield>      <manageactionurl>      </manageactionurl>      <manageparamfield>      </manageparamfield>      <copyactionurl>      </copyactionurl>      <copyparamfield>      </copyparamfield>      <xaxis>n</xaxis>      <yaxis>n</yaxis>      <isadvancesearch>n</isadvancesearch>      <Class>isDownloadable</Class>      <SearchControlType>--Select--</SearchControlType>      <SearchControlParameters>      </SearchControlParameters>      <DbParamField>      </DbParamField>      <useMode>DataBase</useMode>      <IsGraph>n</IsGraph>      <allowdetailview>n</allowdetailview>    </column>  </columns>' where ItemName = 'SKUList'
GO
Go

Begin 
	declare @MenuId int 
	Select @MenuId = MenuId from ZnodeMenu where  MenuName = 'Global Attributes'
	insert into ZnodeRoleMenu (RoleId,MenuId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
	select 'c120e647-4cdd-48a8-8113-6fe0eae87b3d',@MenuId,2,GETDATE(),2,GETDATE()  where Not exists 
	(Select TOP 1 1 from ZnodeRoleMenu where  RoleId = 'c120e647-4cdd-48a8-8113-6fe0eae87b3d' and  MenuId = @MenuId)

	SET  @MenuId  = 0 
	Select @MenuId = MenuId from ZnodeMenu where  MenuName = 'Blogs & News'
	insert into ZnodeRoleMenu (RoleId,MenuId,CreatedBy,CreatedDate,ModifiedBy,ModifiedDate) 
	select 'c120e647-4cdd-48a8-8113-6fe0eae87b3d',@MenuId,2,GETDATE(),2,GETDATE()  where Not exists 
	(Select TOP 1 1 from ZnodeRoleMenu where  RoleId = 'c120e647-4cdd-48a8-8113-6fe0eae87b3d' and  MenuId = @MenuId)
END 

GO
Go

    IF EXISTS (Select 1 from  _TempZnodeActionMenu where NewCreateId is null ) 
    or EXISTS (Select 1 from  _TempZnodeActions where NewCreateId is null ) 
    or EXISTS (Select 1 from  _TempZnodeMenu where NewCreateId is null ) 
    or EXISTS (Select 1 from  _TempZnodeMenuActionsPermission where NewCreateId is null ) 
    or EXISTS (Select 1 from _TempZnodeCMSMessage  where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeCMSMessageKey where NewCreateId is null)     
    or EXISTS (Select 1 from _TempZnodeEmailTemplate  where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimAttribute where  NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimAttributeDefaultValue where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimAttributeDefaultValueLocale where NewCreateId is null) 
    --or EXISTS (Select 1 from _TempZnodePimAttributeGroup where NewCreateId is null) 
    --or EXISTS (Select 1 from _TempZnodePimAttributeGroupLocale where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimAttributeGroupMapper where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimAttributeLocale where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimFamilyGroupMapper where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePortalPixelTracking where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePriceList where NewCreateId is null ) 
    or EXISTS (Select 1 from _TempZnodePromotionType where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeTaxRuleTypes where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeApplicationSetting where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeApplicationCache where NewCreateId is null) 
    --or EXISTS (Select 1 from _TempZnodeCMSTheme where NewCreateId is null) 
    --or EXISTS (Select 1 from _TempZnodeCMSThemeCSS where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeGlobalEntity where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodePimFrontEndProperties where NewCreateId is null ) 
    or EXISTS (Select 1 from _TempZnodeSearchFeature where NewCreateId is null ) 
    or EXISTS (Select 1 from _TempZnodeSearchQueryType where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeSearchQueryTypeFeature where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeImportAttributeValidation where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeImportTemplateMapping where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeSearchProfile where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeSearchProfileAttributeMapping where NewCreateId is null) 
    or EXISTS (Select 1 from _TempZnodeCMSPortalMessage where NewCreateId is null) 
    
    or EXISTS (Select 1 from _TempZnodeCMSPortalMessageKeyTag where NewCreateId is null) 
    
    or EXISTS (Select 1 from _TempZnodeEmailTemplateAreas where NewCreateId is null) 
    or EXISTS (Select 1 from  _TempZnodeEmailTemplateLocale where NewCreateId is null) 
    or EXISTS (Select 1 from  _TempZnodeEmailTemplateMapper where NewCreateId is null) 
    Begin 
     Select 'Upgrade successfully' 
    End 
    Else 
    IF EXISTS (SELECT TOP 1 1 FROM SYS.TABLES WHERE Name IN ( '_TempZnodeActionMenu','_TempZnodeActions','_TempZnodeMenu','_TempZnodeMenuActionsPermission', 
                    '_TempZnodeCMSMessage','_TempZnodeCMSMessageKey','_TempZnodeEmailTemplate','_TempZnodePimAttribute', 
                    '_TempZnodePimAttributeDefaultValue','_TempZnodePimAttributeDefaultValueLocale','_TempZnodePimAttributeGroup','_TempZnodePimAttributeGroupLocale', 
                    '_TempZnodePimAttributeGroupMapper','_TempZnodePimAttributeLocale','_TempZnodePimFamilyGroupMapper','_TempZnodePortalPixelTracking', 
                    '_TempZnodePriceList','_TempZnodePromotionType','_TempZnodeTaxRuleTypes','_TempZnodeApplicationSetting','_TempZnodeApplicationCache', 
                    '_TempZnodeCMSTheme','_TempZnodeCMSThemeCSS','_TempZnodeGlobalEntity','_TempZnodePimFrontEndProperties','_TempZnodeSearchFeature', 
                    '_TempZnodeSearchQueryType','_TempZnodeSearchQueryTypeFeature','_TempZnodeImportAttributeValidation','_TempZnodeImportTemplateMapping', 
                    '_TempZnodeSearchProfile','_TempZnodeSearchProfileAttributeMapping','_TempZnodeCMSPortalMessage', 
                    '_TempZnodeCMSContentPageGroup','_TempZnodePortal','_TempZnodeCMSPortalMessageKeyTag','_TempZnodePortalCatalog', 
                    '_TempZnodePortalCountry','_TempZnodePortalFeatureMapper','_TempZnodePortalLocale','_TempznodePortalProfile', 
                    '_TempZnodePortalsmtpSetting','_TempZnodeEmailTemplateAreas','_TempZnodeEmailTemplateLocale','_TempZnodeEmailTemplateMapper')) 
    BEGIN  
    DROP TABLE _TempZnodeActionMenu  
    DROP TABLE _TempZnodeActions  
    DROP TABLE _TempZnodeMenu  
    DROP TABLE _TempZnodeMenuActionsPermission 
    DROP TABLE _TempZnodeCMSMessage  
    DROP TABLE _TempZnodeCMSMessageKey     
    DROP TABLE _TempZnodeEmailTemplate 
    DROP TABLE _TempZnodePimAttribute 
    DROP TABLE _TempZnodePimAttributeDefaultValue 
    DROP TABLE _TempZnodePimAttributeDefaultValueLocale 
    --DROP TABLE _TempZnodePimAttributeGroup 
    --DROP TABLE _TempZnodePimAttributeGroupLocale 
    DROP TABLE _TempZnodePimAttributeGroupMapper 
    DROP TABLE _TempZnodePimAttributeLocale 
    DROP TABLE _TempZnodePimFamilyGroupMapper 
    DROP TABLE _TempZnodePortalPixelTracking 
    DROP TABLE _TempZnodePriceList 
    DROP TABLE _TempZnodePromotionType 
    DROP TABLE _TempZnodeTaxRuleTypes 
    DROP TABLE _TempZnodeApplicationSetting 
    DROP TABLE _TempZnodeApplicationCache 
    --DROP TABLE _TempZnodeCMSTheme 
    --DROP TABLE _TempZnodeCMSThemeCSS 
    DROP TABLE _TempZnodeGlobalEntity 
    DROP TABLE _TempZnodePimFrontEndProperties 
    DROP TABLE _TempZnodeSearchFeature 
    DROP TABLE _TempZnodeSearchQueryType 
    DROP TABLE _TempZnodeSearchQueryTypeFeature 
    DROP TABLE _TempZnodeImportAttributeValidation 
    DROP TABLE _TempZnodeImportTemplateMapping 
    DROP TABLE _TempZnodeSearchProfile 
    DROP TABLE _TempZnodeSearchProfileAttributeMapping 
    DROP TABLE _TempZnodeCMSPortalMessage 
    
    DROP TABLE _TempZnodeCMSPortalMessageKeyTag    
    DROP TABLE _TempZnodeEmailTemplateAreas 
    DROP TABLE _TempZnodeEmailTemplateLocale 
    DROP TABLE _TempZnodeEmailTemplateMapper 
    END      

